{
  "packages": [
    {
      "package_name": "BODY",
      "routines": [
        {
          "type": "PROCEDURE",
          "name": "WR",
          "parameters": "s VARCHAR2",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "SET_IN",
          "parameters": "members BINARY_INTEGER, setM BINARY_INTEGER",
          "return_type": "BOOLEAN",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "MOVETXT",
          "parameters": " trk PL_PIG_CHESS_ENGINE.TRKDATA, piece VARCHAR2 DEFAULT NULL, english BOOLEAN DEFAULT TRUE",
          "return_type": "RETURN varchar2",
          "category": "move_generation"
        },
        {
          "type": "FUNCTION",
          "name": "SHORT",
          "parameters": "mvtxt VARCHAR2, Multiple BOOLEAN DEFAULT FALSE",
          "return_type": "RETURN VARCHAR2",
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "OUTPUT_POSITION",
          "parameters": "english BOOLEAN DEFAULT TRUE",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "FUNCTION",
          "name": "EPD_STR",
          "parameters": "operationlist  VARCHAR2 DEFAULT NULL",
          "return_type": "RETURN varchar2",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "INV_EPD",
          "parameters": "epdfenstr VARCHAR2",
          "return_type": "RETURN VARCHAR2",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "POSITION_STR",
          "parameters": "english BOOLEAN DEFAULT TRUE",
          "return_type": "RETURN varchar2",
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "NEW_GAME",
          "parameters": "\n  White INTEGER  DEFAULT 2,                -- 0=human, 2=low,  4=medium, 6=high (engine strength/timeuse",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "DO_BOTMOVE",
          "parameters": "OverruleLevel SIMPLE_INTEGER DEFAULT 0",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "DO_BOTGAME",
          "parameters": "maxmoves SIMPLE_INTEGER DEFAULT 200",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "DO_MOVE",
          "parameters": "fromto VARCHAR2",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "SET_White",
          "parameters": "White INTEGER  DEFAULT 0",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "SET_Black",
          "parameters": "Black INTEGER  DEFAULT 0",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "TAKEBACK_MOVE",
          "parameters": "",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "TAKEBACK_MOVES",
          "parameters": "",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "test1",
          "parameters": "",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test2",
          "parameters": "",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "WRMOVES",
          "parameters": "",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "CLCPOINTS",
          "parameters": "p_points  in out INTEGER",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_BKtest",
          "parameters": "lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 24",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_MSquickTest",
          "parameters": "lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 24",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_THmyPosTest",
          "parameters": "lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 16",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_SLendgameTest",
          "parameters": "lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 20",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_CCRTest",
          "parameters": "lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 25",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_ColditzTest",
          "parameters": "lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 30",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_BBCTest",
          "parameters": "lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 42",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_ReinfeldTest",
          "parameters": "lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 300",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_LCTIITest",
          "parameters": "lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 35",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_SBDTest",
          "parameters": "lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 134",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_STSTest",
          "parameters": "suite NUMBER, lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 100",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_PIG",
          "parameters": "lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 4",
          "return_type": null,
          "category": "general"
        }
      ],
      "content": "DROP PACKAGE BODY PL_PIG_CHESS_INTERFACE;\n\nCREATE OR REPLACE PACKAGE BODY PL_PIG_CHESS_INTERFACE AS\n--\n-- PL_PIG_CHESS_INTERFACE v 0.92\n--\n-- Interface for play with PL_PIG_CHESS_ENGINE using DBMS_OUTPUT\n--\nposition          PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE := PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE();\nInitializedStatic BOOLEAN := FALSE; -- any call will make the static initializations and set this flag.\nWhiteSide         INTEGER;          -- 0=human, 2=low,  4=medium, 6=high (engine strength/timeusage, 8 and 10 is possible, but not recommended)\nBlackSide         INTEGER;          -- 0=human, 2=low,  4=medium, 6=high (engine strength/timeusage, 8 and 10 is possible, but not recommended)\nBlackToMove       BOOLEAN;          -- FALSE = WhiteToMove\nInteractionMode   INTEGER:=1;       -- 0+1 =dbms_output, 2=table, 3=tables(asyncronous)\nTheoryMode        INTEGER;          -- 0= no theory, 1=internal theory (random play 2 ply, 30 lines), 2= Mini-book  178 x (2->8)\nEvTot             INTEGER:=0;       -- Total count of evals\nBoard             BOOLEAN := TRUE;  -- Show Board in output\ntrk               PL_PIG_CHESS_ENGINE.TRKDATA;   -- last move\nMOVETEXT          VARCHAR2(20);     -- last move in full-text\n\nPROCEDURE WR(s VARCHAR2) IS\nBEGIN\n  IF InteractionMode in (0,1) THEN\n    dbms_output.put_line(s);\n  ELSIF   InteractionMode=2 THEN\n    NULL;\n  ELSIF  InteractionMode=3 THEN\n    NULL;\n  END IF;\nEND WR;\n\nFUNCTION SET_IN(members BINARY_INTEGER, setM BINARY_INTEGER) return BOOLEAN IS\nBEGIN -- IN: member of set (M n N)\nRETURN UTL_RAW.CAST_TO_BINARY_INTEGER(UTL_RAW.bit_and(UTL_RAW.CAST_FROM_BINARY_INTEGER(members),UTL_RAW.CAST_FROM_BINARY_INTEGER(setM)))=members;\nEND;\n\nFUNCTION MOVETXT( trk PL_PIG_CHESS_ENGINE.TRKDATA, piece VARCHAR2 DEFAULT NULL, english BOOLEAN DEFAULT TRUE) RETURN varchar2 IS\n-- converts internal format for a move to a text-format\n  res VARCHAR2(20);\n  x SIMPLE_INTEGER:=0;\n  y SIMPLE_INTEGER:=0;\nBEGIN\n  IF english THEN\n    CASE upper(piece)\n      WHEN 'T' THEN res := 'R';\n      WHEN 'S' THEN res := 'N';\n      WHEN 'L' THEN res := 'B';\n      WHEN 'B' THEN res := '';--'P' but don't show\n      WHEN 'E' THEN res := '';--'P' but don't show\n      WHEN 'D' THEN res := 'Q';\n      WHEN 'M' THEN res := 'K';\n      ELSE          res := upper(piece);\n    END CASE;\n  ELSE\n    IF    upper(piece) = 'M' then res := 'K';\n    ELSIF upper(piece) = 'B' then res := '';--'B' but don't show\n    ELSIF upper(piece) = 'E' then res := '';--'B' but don't show\n    ELSE                          res := upper(piece);\n    END IF;\n  END IF;\n  x := MOD(Trk.Fra,10);\n  y := FLOOR(Trk.Fra/10);\n  res := res||chr(x+96)||y;\n  IF SET_IN(PL_PIG_CHESS_ENGINE.MOVEslag,Trk.Typ) THEN\n    res := res||'x';\n  ELSE\n    res := res||'-';\n  END IF;\n  x := MOD(Trk.Til,10);\n  y := FLOOR(Trk.Til/10);\n  res := res||chr(x+96)||y;\n  IF SET_IN(PL_PIG_CHESS_ENGINE.MOVErokade,Trk.Typ) THEN  \n    IF x=7 THEN res :='o-o'; else res := 'o-o-o'; END IF;\n  END IF;\n  IF SET_IN(PL_PIG_CHESS_ENGINE.MOVEmat,Trk.Typ) THEN\n    res := res||'++';  \n  ELSIF SET_IN(PL_PIG_CHESS_ENGINE.MOVEpat,Trk.Typ) THEN  \n    IF english THEN\n      res := res||'(pat)';  \n    ELSE\n      res := res||'(stalemate)';  \n    END IF;\n  ELSIF SET_IN(PL_PIG_CHESS_ENGINE.MOVEskak,Trk.Typ) THEN  \n    res := res||'+';  \n  ELSIF SET_IN(PL_PIG_CHESS_ENGINE.MOVEpromotion,Trk.Typ) THEN  \n    IF english THEN\n      res := res||'(d)';   \n    ELSE\n      res := res||'(q)';   \n    END IF;\n  END IF;\n  return res;\nEND MOVETXT;  \n\nFUNCTION SHORT(mvtxt VARCHAR2, Multiple BOOLEAN DEFAULT FALSE) RETURN VARCHAR2 IS\n--Makes a short-version of a movetext so it can be compared to test-suites.\n hj_mvtxt VARCHAR2(20);\nBEGIN\n   hj_mvtxt := replace(replace(replace(mvtxt,'+'),'(d)'),'(q)');\n   IF length(hj_mvtxt)=6 THEN \n     IF INSTR(hj_mvtxt,'x')=4 THEN\n       hj_mvtxt := substr(hj_mvtxt,1,1)||substr(hj_mvtxt,4);\n     ELSE\n       hj_mvtxt := substr(hj_mvtxt,1,1)||substr(hj_mvtxt,5);\n     END IF;\n   ELSIF length(hj_mvtxt)=5 AND INSTR(hj_mvtxt,'-')=3 THEN \n     hj_mvtxt := substr(hj_mvtxt,4);\n   ELSIF length(hj_mvtxt)=5 AND INSTR(hj_mvtxt,'x')=3 THEN \n     hj_mvtxt := substr(hj_mvtxt,1,1)||substr(hj_mvtxt,3);\n   END IF;\n   RETURN hj_mvtxt;\nEND SHORT;\n\nPROCEDURE OUTPUT_POSITION(english BOOLEAN DEFAULT TRUE) IS\n  s VARCHAR2(80);\n  ch CHAR(1);\nBEGIN\n  IF BOARD THEN\n    WR('.  _______________________________');\n    FOR yy IN 1..8 LOOP\n      s :=' '||to_char(9-yy)||' | ';\n      FOR xx IN 1..8 LOOP\n        s := s||chr(position(PL_PIG_CHESS_ENGINE.stOff+ xx+10*(9-yy)))||' | ';\n      END LOOP;\n      IF english THEN --english version will not show castling-rights and en-passant.\n        s := TRANSLATE(s,'BbEeLlSsDdTt',\n                         'PpPpBbNnQqRr');\n      END IF;\n      WR(s);\n      WR('.  -------------------------------');\n    END LOOP;\n    ch := chr(position(PL_PIG_CHESS_ENGINE.stOff+ PL_PIG_CHESS_ENGINE_EVAL.HvisTur ));\n    WR('.   A   B   C   D   E   F   G   H   '''||CASE WHEN english THEN CASE when ch='S' THEN 'B' ELSE 'W' END ELSE ch END||'''');\n  END IF;\nEND OUTPUT_POSITION;\n\n\nFUNCTION EPD_STR(operationlist  VARCHAR2 DEFAULT NULL) RETURN varchar2 IS\n-- returns the current position in EPD (or FEN) format:\n-- EPD_STR('co \"comment\";')\n-- or in FEN format:\n-- EPD_STR('0 1')\n  hj_list VARCHAR2(200):=operationlist;\nBEGIN \n  IF hj_list IS NULL THEN\n    hj_list := ' bm '||SHORT(MOVETEXT)||'; id \"'||Trk.vlu||'\"; c0 \"'||PL_PIG_CHESS_ENGINE_EVAL.Evals||'\";'; \n  END IF;\n  RETURN PL_PIG_CHESS_ENGINE.STILLING_TO_EPD(position, hj_list);\nEND; \n\nFUNCTION INV_EPD(epdfenstr VARCHAR2) RETURN VARCHAR2 IS\n-- returns a  EPD (or FEN) position reversed\nrev varchar2(256);\nreo varchar2(256);\nrmv varchar2(256):='';\nrtx varchar2(256):='';\nP integer;\nG integer;\nBEGIN\n  P := instr(epdfenstr,' ');\n  rev := TRANSLATE(substr(epdfenstr,1,p),'012345678RNBQKPrnbqkp/ ',\n                                         '012345678rnbqkpRNBQKP//');\n  FOR n IN 1..8 LOOP\n    G := instr(rev,'/');\n    IF n=1 THEN\n      reo := substr(rev,1,G-1)||' ';\n    ELSE\n      reo := substr(rev,1,G)||reo;\n    END IF;\n    rev := substr(rev,G+1);\n  END LOOP;\n  --\n  IF UPPER(substr(epdfenstr,P+1,1))='B' THEN\n    reo:= reo||'w ';\n  ELSE\n    reo:= reo||'b ';\n  END IF;\n  G := instr(epdfenstr,'\"');\n  IF G=0 THEN\n    rmv := substr(epdfenstr,P+3);\n  ELSE\n    rtx := substr(epdfenstr, G-1);\n    rmv := substr(epdfenstr,P+3, G-(P+3)-1);\n  END IF;\n  rmv :=  TRANSLATE(rmv,'12345678',\n                        '87654321');\n  RETURN reo||rmv||rtx;\nEND;\n--\n--\nFUNCTION POSITION_STR(english BOOLEAN DEFAULT TRUE) RETURN varchar2 IS \n-- makes the internal position array format to the internal string format for a position\n  s VARCHAR2(80):='';--str65\n  ch CHAR(1);\nBEGIN\n  FOR yy IN 1..8 LOOP\n    FOR xx IN 1..8 LOOP\n      s := s||chr(position(PL_PIG_CHESS_ENGINE.stOff+ xx+10*(9-yy)));\n    END LOOP;\n  END LOOP;\n  ch := chr(position(PL_PIG_CHESS_ENGINE.stOff+ PL_PIG_CHESS_ENGINE.HvisTur ));\n  IF english THEN\n    s := TRANSLATE(SUBSTR(s,1,64),'BbLlSsDdTtRr',\n                                  'PpBbNnQqRrCc')||case when ch='S' THEN 'B' else 'W' end;\n    return s;\n  ELSE\n    return s||ch;\n  END IF;\nEND POSITION_STR;\n--\n--\nPROCEDURE NEW_GAME(\n  White INTEGER  DEFAULT 2,                -- 0=human, 2=low,  4=medium, 6=high (engine strength/timeuse)\n  Black INTEGER  DEFAULT 0,                -- 0=human, 2=low,  4=medium, 6=high (engine strength/timeuse)\n  STARTPOSITION      VARCHAR2 DEFAULT NULL,  -- NULL= chess startposition. A position in FEN, EPD or the internal POSITIONSTR format (english version supported).\n  p_TheoryMode       INTEGER  DEFAULT 0,     -- 0= no theory, 1=internal theory (random play 2 ply, 16 lines), 2= internal opening book (random play of about 3000 opening-lines)   \n  p_InteractionMode  INTEGER  DEFAULT 1      -- 0=dbms_output (moves only) 1=dbms_output (with positions), 2=table, 3=tables(asyncronous)\n  ) IS\nBEGIN\n  IF White > 10 then\n    WhiteSide       := 10;--internal limit\n  ELSE\n    WhiteSide       := White;\n  END IF;\n  IF Black > 10 then\n    BlackSide       := 10;--internal limit\n  ELSE \n    BlackSide       := Black;\n  END IF;\n  TheoryMode      := p_TheoryMode;\n  InteractionMode := p_InteractionMode;\n  IF InteractionMode = 1 THEN\n    Board := TRUE;\n  ELSIF InteractionMode = 0 THEN\n    Board := FALSE;\n  END IF;\n  WR('Game started '||to_char(sysdate,'dd/mm-yyyy hh24:mi:ss'));\n  PL_PIG_CHESS_ENGINE.Initialize;\n  IF NOT InitializedStatic THEN\n    position.extend(121);--(121) OF CHAR(1); /* i PL/SQL er offset 11               -10..HvisTur: A1-H8=11-88, HvidSort='H' | 'S' */\n    FOR n IN 1..121 LOOP\n      position(n) := ASCII('.');\n    END LOOP;\n    --\n    InitializedStatic := TRUE;\n    --WR('Initialize S2');\n  ELSE\n    NULL;\n    --WR('Initialize S2 SKIP');\n  END IF;\n  PL_PIG_CHESS_ENGINE.STILL(position,STARTPOSITION);\n  OUTPUT_POSITION;\n  --IF PL_PIG_CHESS_ENGINE.EPD_BESTMOVE      IS NOT NULL THEN WR('EPD best move:       '||PL_PIG_CHESS_ENGINE.EPD_BESTMOVE);      END IF;\n  --IF PL_PIG_CHESS_ENGINE.EPD_SECONDARYMOVE IS NOT NULL THEN WR('EPD secondary move:  '||PL_PIG_CHESS_ENGINE.EPD_SECONDARYMOVE); END IF;\n  --IF PL_PIG_CHESS_ENGINE.EPD_AVOIDMOVE     IS NOT NULL THEN WR('EPD avoid move:      '||PL_PIG_CHESS_ENGINE.EPD_AVOIDMOVE);     END IF;\n  --IF PL_PIG_CHESS_ENGINE.EPD_id            IS NOT NULL THEN WR('EPD id:              '||PL_PIG_CHESS_ENGINE.EPD_ID);            END IF;\n  --IF PL_PIG_CHESS_ENGINE.EPD_COMMENT0      IS NOT NULL THEN WR('EPD primary comment: '||PL_PIG_CHESS_ENGINE.EPD_COMMENT0);      END IF;\n  BlackToMove := position(PL_PIG_CHESS_ENGINE.stOff+ PL_PIG_CHESS_ENGINE_EVAL.Hvistur) = ASCII('S');\n  IF NOT BlackToMove AND WhiteSide > 0 OR BlackToMove AND BlackSide > 0 THEN\n    DO_BOTMOVE;\n  END IF;\nEND NEW_GAME;\n\nPROCEDURE DO_BOTMOVE(OverruleLevel SIMPLE_INTEGER DEFAULT 0) IS\n  LV INTEGER;\nBEGIN\n    IF NOT InitializedStatic THEN\n      NEW_GAME(2,0);\n    END IF;\n    IF BlackToMove THEN\n      LV := FLOOR(BlackSide * 3 / 2) - 2;\n    ELSE\n      LV := FLOOR(WhiteSide * 3 / 2) - 2;\n    END IF;\n    IF LV < 1 OR OverruleLevel > 0 THEN\n      LV := FLOOR(OverruleLevel * 3 / 2) - 2 ;\n      IF LV < 1 THEN \n        LV :=1;\n      END IF;\n    END IF;\n    --WR('lv='||LV||' WhiteSide='||WhiteSide||' BlackSide='||BlackSide);\n    PL_PIG_CHESS_ENGINE.FindTrk(position, \n          Lv,--dybde SIMPLE_INTEGER, ---- depth: 0-9 (0,1,4,7,10,13) \n          0,-- ekstra SIMPLE_INTEGER, p.t. UNUSED\n          Trk-- in out TRKDATA \n          );\n    EvTot := EvTot + PL_PIG_CHESS_ENGINE_EVAL.Evals;\n    --WR('tr\u00e6k='||MOVETXT(Trk,chr(position(PL_PIG_CHESS_ENGINE.stOff +Trk.Fra)))||' vlu='||Trk.vlu||' evals='||PL_PIG_CHESS_ENGINE_EVAL.Evals);      \n    MOVETEXT := MOVETXT(Trk,chr(position(PL_PIG_CHESS_ENGINE.stOff+ Trk.Fra)));\n    WR('lv='||LV||' move='||MOVETEXT||'  '||Trk.Fra ||Trk.Til||' vlu='||Trk.vlu||' typ='||Trk.Typ||' evals='||PL_PIG_CHESS_ENGINE_EVAL.Evals||' tot='||EvTot);      \n    IF SET_IN(PL_PIG_CHESS_ENGINE.MOVEmat,Trk.Typ) OR SET_IN(PL_PIG_CHESS_ENGINE.MOVEpat,Trk.Typ) THEN\n      WR('Game ended '||to_char(sysdate,'dd/mm-yyyy hh24:mi:ss'));\n    ELSE\n      IF PL_PIG_CHESS_ENGINE.DoMoveOK(position, Trk.Fra, Trk.Til, Trk.Typ) THEN\n        BlackToMove := position(PL_PIG_CHESS_ENGINE.stOff+ PL_PIG_CHESS_ENGINE_EVAL.Hvistur)=ASCII('S');\n      ELSE\n        WR('Illegal move by engine ('||Trk.Fra||'-'||Trk.Til||')!');\n      END IF;  \n    END IF;\n    --WR(POSITION_STR);\n    OUTPUT_POSITION;\nEND DO_BOTMOVE;\n\nPROCEDURE DO_BOTGAME(maxmoves SIMPLE_INTEGER DEFAULT 200) IS\n -- play a game bot vs bot\nBEGIN\n  FOR n in 1..maxmoves LOOP\n    DO_BOTMOVE;\n    IF SET_IN(PL_PIG_CHESS_ENGINE.MOVEmat,Trk.Typ) OR SET_IN(PL_PIG_CHESS_ENGINE.MOVEpat,Trk.Typ) THEN\n      exit;\n    END IF;\n  END LOOP;\nEND DO_BOTGAME;  \n\n\nPROCEDURE DO_MOVE(fromto VARCHAR2) IS -- move in the form 'e2e4' or 'g1f3' as black 'e7e5' or 'g8f6'\n-- human move\n  mvtyp PL_PIG_CHESS_ENGINE.MOVETYPE := 0;\n  Ffrom varchar2(5);\n  Fto   varchar2(5);\nBEGIN\n  IF NOT InitializedStatic THEN\n    NEW_GAME(0,2);\n  END IF;\n  Ffrom :=substr(fromto,-4,2);\n  Fto   :=substr(fromto,-2);\n  IF Ffrom > '9' THEN\n    Ffrom := substr(Ffrom,2)||CHR(ASCII(UPPER(substr(Ffrom,1,1)))-16);\n  END IF;\n  IF Fto > '9' THEN\n    Fto := substr(Fto,2)||CHR(ASCII(UPPER(substr(Fto,1,1)))-16);\n    WR(Ffrom||Fto);\n  END IF;\n  IF PL_PIG_CHESS_ENGINE.DoMoveOk(position,TO_NUMBER(Ffrom),TO_NUMBER(Fto), mvtyp) THEN\n    OUTPUT_POSITION;\n    BlackToMove := position(PL_PIG_CHESS_ENGINE.stOff+ PL_PIG_CHESS_ENGINE_EVAL.Hvistur)=ASCII('S');\n    IF NOT BlackToMove AND WhiteSide > 0 OR BlackToMove AND BlackSide > 0 THEN\n      DO_BOTMOVE;\n    END IF;\n  ELSE\n    WR('Illegal move ('||fromto||')!');\n  END IF;\nEND DO_MOVE;\n\n\nPROCEDURE SET_White(White INTEGER  DEFAULT 0) IS -- alter engine/player-selection for White\nBEGIN\n  WhiteSide := White;\n  IF WhiteSide > 0 AND NOT BlackToMove THEN\n    DO_BOTMOVE; -- get engine move\n  END IF;\nEND SET_White; \n\nPROCEDURE SET_Black(Black INTEGER  DEFAULT 0) IS -- alter engine/player-selection for Black\nBEGIN\n  BlackSide := Black;\n  IF BlackSide > 0 AND BlackToMove THEN\n    DO_BOTMOVE; -- get engine move\n  END IF;\nEND SET_Black;\n\nPROCEDURE TAKEBACK_MOVE IS--takes back the last move (if engine, it will move again, possibly the same move)\nBEGIN--(not yet implemented!)\n  NULL;\nEND TAKEBACK_MOVE;\n\nPROCEDURE TAKEBACK_MOVES IS--takes back the last two moves (Player can retry another move)\nBEGIN--(not yet implemented!)\n  NULL;\nEND TAKEBACK_MOVES;\n\n  \nPROCEDURE test1 IS\n  --st PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE := PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE();\n  --s VARCHAR2(80);\n  --n INTEGER;m INTEGER;\n  --c_n INTEGER; c CHAR(1);\n  --\n  pos1 VARCHAR2(89) :=\n    'RSLDMLSR'\n  ||'BBBBBBBB'\n  ||'        '\n  ||'        '\n  ||'        '\n  ||'        '\n  ||'bbbbbbbb'\n  ||'rsldmlsr'\n  ||'H';\n  --\n  pos2 VARCHAR2(89) :=\n    'R LDM SR'\n  ||' BB LBB '\n  ||'B SB   B'\n  ||'    B   '\n  ||'  l b   '\n  ||'     s  '\n  ||'bbbb bbb'\n  ||'rsld rk '\n  ||'H';\n  --\n  pos3 VARCHAR2(89) :=\n    'RSLDMLSR'\n  ||'BBBBBBBB'\n  ||'        '\n  ||'        '\n  ||'        '\n  ||'        '\n  ||'bbbbbbbb'\n  ||'rsldmlsr'\n  ||'H';\n  --\n  pos4 VARCHAR2(89) :='R  DML RBBB  BBB  S BS   l B  l    b      s bd  bbb  bbbr   m  rS';\n  res SIMPLE_INTEGER := 0;\n  --trk PL_PIG_CHESS_ENGINE.TRKDATA;\n  Lv INTEGER:=4;\nBEGIN\n  WR('START');--TOAD: Options -> Oracle -> General. About halfway down is a box titled \"DBMS Output\" Choose Courier font\n  NEW_GAME(0, 0, pos4);\n  OUTPUT_POSITION;\n  --res := PL_PIG_CHESS_ENGINE_EVAL.Eval(position, 0, FALSE, -9999, 9999);\n  --WR('Eval='||res);\n  PL_PIG_CHESS_ENGINE.FindTrk(position, \n          Lv,--dybde SIMPLE_INTEGER, ---- dybde: 0-9 (0,1,4,7) \n          0,-- ekstra SIMPLE_INTEGER, p.t. UNUSED\n          Trk-- in out TRKDATA \n          );\n  EvTot := EvTot + PL_PIG_CHESS_ENGINE_EVAL.Evals;\n  WR('tr\u00e6k='||MOVETXT(Trk,chr(position(PL_PIG_CHESS_ENGINE.stOff+ Trk.Fra)))||'  '||Trk.Fra ||Trk.Til||' vlu='||Trk.vlu||' typ='||Trk.Typ||' evals='||PL_PIG_CHESS_ENGINE_EVAL.Evals||' tot='||EvTot);      \n  PL_PIG_CHESS_ENGINE.DoMove(position, Trk.Fra, Trk.Til, Trk.Typ);\n  OUTPUT_POSITION;\n  FOR n in 1..2 LOOP\n    PL_PIG_CHESS_ENGINE.FindTrk(position, \n          Lv,--dybde SIMPLE_INTEGER, ---- dybde: 0-9 (0,1,4,7) \n          0,-- ekstra SIMPLE_INTEGER, p.t. UNUSED\n          Trk-- in out TRKDATA \n          );\n    EvTot := EvTot + PL_PIG_CHESS_ENGINE_EVAL.Evals;\n    WR('tr\u00e6k='||MOVETXT(Trk,chr(position(PL_PIG_CHESS_ENGINE.stOff+ Trk.Fra)))||'  '||Trk.Fra ||Trk.Til||' vlu='||Trk.vlu||' typ='||Trk.Typ||' evals='||PL_PIG_CHESS_ENGINE_EVAL.Evals||' tot='||EvTot);      \n    PL_PIG_CHESS_ENGINE.DoMove(position, Trk.Fra, Trk.Til, Trk.Typ);\n    WR(POSITION_STR(FALSE));\n  END LOOP;\n  OUTPUT_POSITION;\n  WR('FindCnt='||PL_PIG_CHESS_ENGINE.FindCnt||' QFindCnt='||PL_PIG_CHESS_ENGINE.QFindCnt);\n\nEND test1;\n\nPROCEDURE test2 IS\n  s VARCHAR2(80);\n  --n INTEGER;m INTEGER;\n  c_n INTEGER; c CHAR(1);\nBEGIN\n  WR('Preproc test');\n  NEW_GAME(0);\n  PL_PIG_CHESS_ENGINE_EVAL.PreProcessor(position);\n  FOR c_n IN ASCII('B')..ASCII('t') LOOP\n    c := chr(c_n);\n    IF c IN ('B','b','l','L','K','k','S','s','T','t') THEN\n      dbms_output.put_line('pdw for '||c);\n      FOR yy in 1..8 LOOP  \n        s:='. ';\n        FOR xx in 1..8 LOOP \n            s := s||to_char(PL_PIG_CHESS_ENGINE_EVAL.pdw(PL_PIG_CHESS_ENGINE_EVAL.pdX(c,xx+10*(9-yy))),'099')||' ';  \n        END LOOP; \n        WR(s);\n      END LOOP;\n    END IF;\n  END LOOP;\nEND test2;\n\nPROCEDURE WRMOVES IS\nBEGIN\n  WR('Engine='||SHORT(MOVETEXT)||' bm='||SHORT(PL_PIG_CHESS_ENGINE.EPD_BESTMOVE)\n     ||CASE WHEN PL_PIG_CHESS_ENGINE.EPD_SECONDARYMOVE IS NOT NULL THEN ' sm='||SHORT(PL_PIG_CHESS_ENGINE.EPD_SECONDARYMOVE) END\n     ||CASE WHEN PL_PIG_CHESS_ENGINE.EPD_AVOIDMOVE IS NOT NULL THEN ' am='||SHORT(PL_PIG_CHESS_ENGINE.EPD_AVOIDMOVE) END);\nEND WRMOVES;\n\nPROCEDURE CLCPOINTS(p_points  in out INTEGER) IS      \n-- calculate points by matching engine move vs test-suite best/worst move\n bm1 varchar2(80):=PL_PIG_CHESS_ENGINE.EPD_BESTMOVE;\n sm1 varchar2(80):=PL_PIG_CHESS_ENGINE.EPD_SECONDARYMOVE;\n am1 varchar2(80):=PL_PIG_CHESS_ENGINE.EPD_AVOIDMOVE;\n bm2 varchar2(80):='';\n sm2 varchar2(80):='';\n am2 varchar2(80):='';\n bm3 varchar2(80):='';\n bm4 varchar2(80):='';\n bmR varchar2(80):='';\n p INTEGER;\nBEGIN\n  p:=instr(bm1,' ');\n  IF p > 1 THEN -- use first 4 moves only\n    bm2 := substr(bm1,p+1);\n    bm1 := substr(bm1,1,p-1);\n    p:=instr(bm2,' ');\n    IF p > 1 THEN \n      bm3 := substr(bm2,p+1);\n      bm2 := substr(bm2,1,p-1);\n      p:=instr(bm3,' ');\n      IF p > 1 THEN \n        bm4 := substr(bm3,p+1);\n        bm3 := substr(bm3,1,p-1);\n        p:=instr(bm4,' ');\n        IF p > 1 THEN \n          bmR := substr(bm4,p+1);\n          bm4 := substr(bm4,1,p-1);\n        END IF;  \n      END IF;\n    END IF;\n  END IF;\n  p:=instr(sm1,' ');\n  IF p > 1 THEN -- use first 2 moves only\n    sm2 := substr(sm1,p+1);\n    sm1 := substr(sm1,1,p-1);\n  END IF;\n  p:=instr(am1,' ');\n  IF p > 1 THEN -- use first 2 moves only\n    am2 := substr(am1,p+1);\n    am1 := substr(am1,1,p-1);\n  END IF;\n  IF SHORT(MOVETEXT)=SHORT(bm1) \n  OR SHORT(MOVETEXT)=SHORT(bm2) \n  OR SHORT(MOVETEXT)=SHORT(bm3) \n  OR SHORT(MOVETEXT)=SHORT(bm4) \n  OR SHORT(MOVETEXT)=SHORT(sm1) \n  OR SHORT(MOVETEXT)=SHORT(sm2) THEN \n    p_points := p_points + 1;\n    WR('*** OK ***');\n  ELSIF \n    SHORT(MOVETEXT) = SHORT(am1) OR SHORT(MOVETEXT) = SHORT(am2) THEN\n    p_points := p_points - 1;\n    WR('*** MISTAKE ***');\n  END IF;\nEND CLCPOINTS;\n    \nPROCEDURE test_BKtest(lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 24) IS\n  positions  INTEGER:=0;\n  points INTEGER:=0;\n  bkRating INTEGER;\nBEGIN\n  EvTot:=0;\n  WR('Level: '||lvl||' The B-K test (henceforth BKT) Bratko-Kopec 24 Testpositions');\n  FOR tstpos IN poslow..poshigh LOOP\n    positions := positions + 1;\n    NEW_GAME(lvl,lvl,PL_PIG_CHESS_DATA.bkTest(tstpos),0,0);\n    WRMOVES;\n    CLCPOINTS(points);        \n  END LOOP;\n  bkRating := 1100 + points*100  - CASE WHEN points < 1 THEN 100*(1-points) ELSE 0 END - CASE WHEN points > 9 THEN  50*(points-9) ELSE 0 END;\n  WR(points||' points out of '||positions||' positions. BKT rating='||bkRating);\nEND;\n\nPROCEDURE test_MSquickTest(lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 24) IS\n  positions  INTEGER:=0;\n  points INTEGER:=0;\nBEGIN\n  EvTot:=0;\n  WR('Level: '||lvl||' The Quicktest by Michael Scheidl. 24 Testpositions');\n  FOR tstpos IN poslow..poshigh LOOP\n    positions := positions + 1;\n    NEW_GAME(lvl,lvl,PL_PIG_CHESS_DATA.MSquickTest(tstpos),0,0);\n    WRMOVES;\n    CLCPOINTS(points);        \n  END LOOP;\n  WR(points||' points out of '||positions||' positions.');\nEND;\n\nPROCEDURE test_THmyPosTest(lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 16) IS\n  positions  INTEGER:=0;\n  points INTEGER:=0;\nBEGIN\n  EvTot:=0;\n  WR('Level: '||lvl||' MY POSITIONAL TEST SUITE by Tony Hedlund. 16 Testpositions');\n  FOR tstpos IN poslow..poshigh LOOP\n    positions := positions + 1;\n    NEW_GAME(lvl,lvl,PL_PIG_CHESS_DATA.THmyPosTest(tstpos),0,0);\n    WRMOVES;\n    CLCPOINTS(points);        \n  END LOOP;\n  WR(points||' points out of '||positions||' positions.');\nEND;\n\nPROCEDURE test_SLendgameTest(lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 20) IS\n  positions  INTEGER:=0;\n  points INTEGER:=0;\nBEGIN\n  EvTot:=0;\n  WR('Level: '||lvl||' Endgame testsuite Sune Larsson 2006 / John Nunn. 20 Testpositions');\n  FOR tstpos IN poslow..poshigh LOOP\n    positions := positions + 1;\n    NEW_GAME(lvl,lvl,PL_PIG_CHESS_DATA.SLendgameTest(tstpos),0,0);\n    WRMOVES;\n    CLCPOINTS(points);        \n  END LOOP;\n  WR(points||' points out of '||positions||' positions.');\nEND;\n\nPROCEDURE test_CCRTest(lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 25) IS\n  positions  INTEGER:=0;\n  points INTEGER:=0;\nBEGIN\n  EvTot:=0;\n  WR('Level: '||lvl||' One Hour Test by Larry Kaufman, published 1994 (Kaufman Test). 25 Testpositions');\n  FOR tstpos IN poslow..poshigh LOOP\n    positions := positions + 1;\n    NEW_GAME(lvl,lvl,PL_PIG_CHESS_DATA.CCRTest(tstpos),0,0);\n    WRMOVES;\n    CLCPOINTS(points);        \n  END LOOP;\n  WR(points||' points out of '||positions||' positions.');\nEND;\n\nPROCEDURE test_ColditzTest(lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 30) IS\n  positions  INTEGER:=0;\n  points_old INTEGER;\n  points INTEGER:=0;\n  Score INTEGER:=0;\n  cRating INTEGER;\nBEGIN\n  EvTot:=0;\n  --https://www.schach-computer.info/wiki/index.php/Colditz_En\n  WR('Level: '||lvl||' Colditz test suite by Ferdinand Mosca, CCC, December 30, 2016. 30 Testpositions');\n  FOR tstpos IN poslow..poshigh LOOP\n    positions := positions + 1;\n    NEW_GAME(lvl,lvl,PL_PIG_CHESS_DATA.ColditzTest(tstpos),0,0);\n    WRMOVES;\n    points_old :=points;\n    CLCPOINTS(points); \n    IF points > points_old THEN \n      IF TRANSLATE(PL_PIG_CHESS_ENGINE.EPD_COMMENT0,'0123456789#',\n                                       '########## ') IN ('#','##','###') THEN\n        Score := Score + TO_NUMBER(PL_PIG_CHESS_ENGINE.EPD_COMMENT0);\n      END IF;  \n    END IF;\n  END LOOP;\n  -- Calculate Colditz-rating (approximated):\n  CASE WHEN Score <=1515 THEN\n           cRating := 1700-round((1515-score)*0.55);\n       WHEN  Score >=1788 THEN\n           cRating := 2000+round((score-1788)*2,093);\n       ELSE \n           cRating := 1700+round((score-1515)*1.1);\n  END CASE;\n  WR(points||' points out of '||positions||' positions. Colditz-score='||Score||' Colditz ELO rating='||cRating);\nEND;\n\nPROCEDURE test_BBCTest(lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 42) IS\n  positions  INTEGER:=0;\n  points INTEGER:=0;\nBEGIN\n  EvTot:=0;\n  WR('Level: '||lvl||' Big Book Of Combinations. 42 Testpositions');\n  FOR tstpos IN poslow..poshigh LOOP\n    positions := positions + 1;\n    NEW_GAME(lvl,lvl,PL_PIG_CHESS_DATA.BBCTest(tstpos),0,0);\n    WRMOVES;\n    CLCPOINTS(points);        \n  END LOOP;\n  WR(points||' points out of '||positions||' positions.');\nEND;\n \nPROCEDURE test_ReinfeldTest(lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 300) IS\n  positions  INTEGER:=0;\n  points INTEGER:=0;\nBEGIN\n  EvTot:=0;\n  WR('Level: '||lvl||' Reinfeld''s (1945) 300 (tactical) positions');\n  FOR tstpos IN poslow..poshigh LOOP\n    positions := positions + 1;\n    NEW_GAME(lvl,lvl,PL_PIG_CHESS_DATA.ReinfeldTest(tstpos),0,0);\n    WRMOVES;\n    CLCPOINTS(points);        \n  END LOOP;\n  WR(points||' points out of '||positions||' positions.');\nEND;\n\nPROCEDURE test_LCTIITest(lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 35) IS\n  positions  INTEGER:=0;\n  points INTEGER:=0;\nBEGIN\n  EvTot:=0;\n  WR('Level: '||lvl||' LCT II (Louguet Chess Test II by Frdric Louguet in 1994). 35 Testpositions (1-14=positional, 15-26=tactical, 27-35=endgame');\n  --points= 30 if found on level 4, 20 on level 6, 10 on level 8\n  --rating= 1900 + points\n  FOR tstpos IN poslow..poshigh LOOP\n    positions := positions + 1;\n    NEW_GAME(lvl,lvl,PL_PIG_CHESS_DATA.LCTIITest(tstpos),0,0);\n    WRMOVES;\n    CLCPOINTS(points);        \n  END LOOP;\n  WR(points||' points out of '||positions||' positions.');\nEND;\n\nPROCEDURE test_SBDTest(lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 134) IS\n  positions  INTEGER:=0;\n  points INTEGER:=0;\nBEGIN\n  EvTot:=0;\n  WR('Level: '||lvl||' Silent but Deadly (sbd). 134 Testpositions');\n  FOR tstpos IN poslow..poshigh LOOP\n    positions := positions + 1;\n    NEW_GAME(lvl,lvl,PL_PIG_CHESS_DATA.SBDTest(tstpos),0,0);\n    WRMOVES;\n    CLCPOINTS(points);        \n  END LOOP;\n  WR(points||' points out of '||positions||' positions.');\nEND;\n\nPROCEDURE test_STSTest(suite NUMBER, lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 100) IS\n  positions  INTEGER:=0;\n  points INTEGER:=0;\nBEGIN\n  EvTot:=0;\n  WR('Level: '||lvl||' Strategic Test Suite, (STS) 15 suites x 100 positions. Suite '||suite||':');\n  WR(PL_PIG_CHESS_DATA.STSsuitesTest(suite));\n  FOR tstpos IN poslow..poshigh LOOP\n    positions := positions + 1;\n    NEW_GAME(lvl,lvl,PL_PIG_CHESS_DATA.STSTest((suite-1)*100+tstpos),0,0);\n    WRMOVES;\n    CLCPOINTS(points);        \n  END LOOP;\n  WR(points||' points out of '||positions||' positions.');\nEND;\n\nPROCEDURE test_PIG(lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 4) IS\n  positions  INTEGER:=0;\n  points INTEGER:=0;\nBEGIN\n  EvTot:=0;\n  WR('Level: '||lvl||' Pig-chess found errors. 4 Testpositions');\n  FOR tstpos IN poslow..poshigh LOOP\n    positions := positions + 1;\n    NEW_GAME(lvl,lvl,PL_PIG_CHESS_DATA.PigTest(tstpos),0,1);\n    WRMOVES;\n    CLCPOINTS(points);        \n  END LOOP;\n  WR(points||' points out of '||positions||' positions.');\nEND;\n\nEND;\n/",
      "dependencies": []
    },
    {
      "package_name": "PL_PIG_CHESS_ENGINE",
      "routines": [
        {
          "type": "FUNCTION",
          "name": "STILLING_TO_EPD",
          "parameters": "stilling PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, operationlist VARCHAR2 DEFAULT NULL",
          "return_type": "RETURN VARCHAR2",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "FEN_EPD_TO_STR",
          "parameters": "FEN_EPD VARCHAR2",
          "return_type": "RETURN VARCHAR2",
          "category": "notation"
        },
        {
          "type": "PROCEDURE",
          "name": "still",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                p_st char DEFAULT ''",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "DoMoveOk",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                  fra SIMPLE_INTEGER,--from (ll-88",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "DoMoveC",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                  fra SIMPLE_INTEGER, --from (ll-88",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "DoMove",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                 fra SIMPLE_INTEGER,--from (ll-88",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "GetNext",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                  fra in out SIMPLE_INTEGER,--from (ll-88",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "Mirror",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "FindTrk",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                  dybde SIMPLE_INTEGER, --Depth  (0,1,4,7,10,13",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "GetMove",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                  t in out TRKDATA, \n                  MoveNr SIMPLE_INTEGER, \n                  Quick BOOLEAN",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "GetMoveNr",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                    p_fra SIMPLE_INTEGER,--from (ll-88",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "ClearHistory",
          "parameters": "cnt SIMPLE_INTEGER, \n--                       black BOOLEAN",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "AddHistory",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n--                     fra SIMPLE_INTEGER,\n--                     til SIMPLE_INTEGER,\n--                     vlu SIMPLE_INTEGER",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "Initialize",
          "parameters": "",
          "return_type": null,
          "category": "general"
        }
      ],
      "content": "DROP PACKAGE PL_PIG_CHESS_ENGINE;\n\nCREATE OR REPLACE PACKAGE PL_PIG_CHESS_ENGINE AS\n--\n--\n\n-- LICENSE\n--\n-- PL_PIG_CHESS_ENGINE v 0.92,                  (c) Egon Von Bech Madsen, Denmark (ema@adm.ku.dk) \n--\n-- This software is Diceware. Diceware is defined as Freware with one restriction:\n--\n--   For non-commercial use:\n--      roll one dice until you get 6, then take a picture. That picture is your 10 year free license.\n--\n--   For commercial use of small or medium sized companies (Yearly revenue less than US$ 60 billion), like Oracle:\n--      roll two dices until you get 6 6, then take a picture. That picture is your 10 year free license.\n--\n--   For commercial use of large sized companies (Yearly revenue more than US$ 60 billion), like Microsoft:\n--      roll three dices until you get 6 6 6, then take a picture. That picture is your 10 year free license.\n--\n-- It is allowed to modify and share the code as long as this LICENSE-text is unmodified.\n--\n-- ****************************************************************************************\n-- * Disclaimer (use at your own risk):                                               \n-- * Any use of this software is strictly at your own risk, and I will not be liable for \n-- * any losses and damages in connection with the use of this software.\n-- ****************************************************************************************\n-- LICENSE <end>\n\n-- PL_PIG_CHESS_ENGINE is a Chess Engine written in Oracle PL/SQL.\n--\n-- HISTORY\n-- Migrated from the Engine of PIGbase4 v2.8, coded with M2Amiga Modula-2 v4.2 \n--\n-- The Engine is 3 packages:\n-- PL_PIG_CHESS_ENGINE\n-- PL_PIG_CHESS_ENGINE_EVAL\n-- PL_PIG_CHESS_DATA\n--\n-- Also included is a package:\n-- PL_PIG_CHESS_INTERFACE \n-- making it possible to play with the Engine and run some test-suites using DBMS_OUTPUT.\n\n-- TECHNICAL (PL/SQL)\n-- PL/SQL is a quite restricted and slow language, not the perfect choice for a Chess Engine.\n-- If You want top strength, don't use PIG-Chess, but install a Stockfish Engine at Your HOST OS.\n--\n-- Fair Performance is reached by intensive use of VARRAYS, SIMPLE_INTEGER and INLINE'able SET operators. \n-- And by NOT using SQL features. The many initiations of arrays happens only one time pr session/game.\n--\n-- TECHNICAL (CHESS)\n-- Opening book\n-- Static evaluation\n-- quiescence deepening minimax algorithm with alpha/beta cut-off and sort for better pruning\n-- Q-search (deeper selective search on killer-moves like check)\n-- Leaf evaluation\n-- Single CPU only\n-- Supports 5 levels (from few seconds to several minutes pr move).\n-- Rating: up to 1600\n-- FEN and EPD is supported.\n--\n-- INSTALLATION\n-- Install the 4 packages on a Oracle database:\n-- 1. PL_PIG_CHESS_DATA\n-- 2. PL_PIG_CHESS_ENGINE_EVAL\n-- 3. PL_PIG_CHESS_ENGINE\n-- 4. PL_PIG_CHESS_INTERFACE\n--\n-- USE:\n-- 1. Use SQL*PLUS or Toad/SQL-Developer with DBMS_OUTPUT activated\n-- 2. Use examples seen in PL_PIG_CHESS_INTERFACE\n--\n-- OR:\n-- Make your own graphical (APEX?) interface...\n\n  SkakBrainDefCompilation CONSTANT VARCHAR2(8) := '51';\n  MaxHalvTraek            CONSTANT SIMPLE_INTEGER :=  600; -- 180,200? max moves\n\n-- results from last loaded EPD position, a loaded FEN position will clear them\nEPD_BESTMOVE        VARCHAR2(80); --bm -- here we can expect several moves\nEPD_SECONDARYMOVE   VARCHAR2(80); --sm -- here we can expect several moves\nEPD_AVOIDMOVE       VARCHAR2(80); --am -- here we can expect several moves\nEPD_ID              VARCHAR2(30); --id\nEPD_COMMENT0        VARCHAR2(255);--c0: primary comment\n\nSUBTYPE MOVETYPE IS SIMPLE_INTEGER;\nMOVEnormal    CONSTANT MOVETYPE := 0;\nMOVEenpassant CONSTANT  MOVETYPE := 1;\nMOVErokade    CONSTANT  MOVETYPE := 2;\nMOVEpat       CONSTANT  MOVETYPE := 4;\nMOVEmat       CONSTANT  MOVETYPE := 8;\nMOVEslag      CONSTANT  MOVETYPE := 16;\nMOVEskak      CONSTANT  MOVETYPE := 32;\nMOVEpromotion CONSTANT  MOVETYPE := 64;\nMOVEx7        CONSTANT  MOVETYPE := 128;\n\nSUBTYPE ATTRTYPE IS SIMPLE_INTEGER;\nATTRman    CONSTANT  ATTRTYPE := 1;\nATTRe1     CONSTANT  ATTRTYPE := 2;\nATTRe2     CONSTANT  ATTRTYPE := 4;\nATTRe4     CONSTANT  ATTRTYPE := 8;\nATTRa4     CONSTANT  ATTRTYPE := 16;\nATTRa5     CONSTANT  ATTRTYPE := 32;\nATTRa6     CONSTANT  ATTRTYPE := 64;\nATTRa7     CONSTANT  ATTRTYPE := 128;\n\n  -- {mat}=skakmat (checkmate), {x7}=draw on repetition \n --TYPE MOVETYPES IS (enpassant,rokade,pat,mat,slag,skak,promotion,x7); rokade=castling, pat=stalemate, slag=take, skak=check\n --TYPE  MOVETYPE IS SET OF MOVETYPES;\n --TYPE  ATTRTYPES IS (man,e1,e2,e4,a4,a5,a6,a7); -- lv1={e1} lv4={e4} lv7={e1,e2,e4} \n --TYPE  ATTRTYPE IS SET OF ATTRTYPES;            -- a4 should be e8, to get lv 1-15  \n\t\t\t\t\t-- so use a5-a7 for xtras *)\n\n  TYPE Xtyp IS VARRAY(3) of SIMPLE_INTEGER;\n  TYPE XYtyp IS VARRAY(121) of Xtyp;\n  tst XYtyp := XYtyp(Xtyp(1,23,0),Xtyp(2,3,4),Xtyp(2,3,3),Xtyp(2,3,4),Xtyp(2,3,5));\n\n  TeoMaxPos    CONSTANT SIMPLE_INTEGER := 15000; -- max positions (in openingbook)       DYNAMIC\n  TeoMaxTrk    SIMPLE_INTEGER          :=     0; -- max variant length                   CALCULATED\n  TeoMaxVar    CONSTANT SIMPLE_INTEGER :=    20; -- max replies in a position            DYNAMIC\n  TeoBook      SIMPLE_INTEGER          :=     2; \n      -- 0 = none, \n      -- 1 = Micro-book  30 x 2\n      -- 2 = Mini-book  178 x (2->8)\n  \n  --TeoMax       CONSTANT SIMPLE_INTEGER :=    9; -- max positions (in micro-openingbook) 5 (now 9)\n  --TeoMaxTrk    CONSTANT SIMPLE_INTEGER :=    5; -- max variant length                   5 (now 3)\n  --TeoMaxVar    CONSTANT SIMPLE_INTEGER :=    6; -- max replies in the position          4 (now 6)\n\n  stOff     CONSTANT SIMPLE_INTEGER  := 11; --offset for arrays Stilling\n  vcxOff    CONSTANT SIMPLE_INTEGER  :=-64; --offset for arrays Stilling ASCII('A')..ASCII('T')\n  vcyOff    CONSTANT SIMPLE_INTEGER  :=-31; --offset for arrays Stilling ASCII(' ')..ASCII('T')\n\n  HvisTur   CONSTANT SIMPLE_INTEGER  := 110; -- Stilling[HvisTur] indikates if White ('H') or black ('S') to move \n\n  --TYPE STILLINGTYPE is VARRAY(121) OF CHAR(1); -- pl/sql offset=11                  -10..HvisTur: A1-H8 =11-88, HvidSort='H' | 'S' \n  TYPE STRINGG IS VARRAY(2000) OF CHAR(1);--ARRAY(0..2000)\n  SUBTYPE STRINGptr is STRINGG;\n\n  TYPE TRKDATA IS RECORD (\n            Fra SIMPLE_INTEGER := 0,--from (ll-88)\n            Til SIMPLE_INTEGER := 0,--to   (11-88)\n            Typ MOVETYPE := 0,\n            Vlu SIMPLE_INTEGER := 0 --evaluation value (100= a pawn)\n            );\n  TYPE TRAEKDATA IS  VARRAY(116) OF TRKDATA; -- max  116 possible moves  in a position\n\n  TYPE STIL IS RECORD (\n    DomOn SIMPLE_INTEGER := 0, -- -128 | 0 | 1  -- -128=don't change \t\t\n    StyOv SIMPLE_INTEGER := 0, -- -128 | StyO   --    0=man, 1-9=machine (1,4,7) \t\n    StyUn SIMPLE_INTEGER := 0, -- -128 | StyU   -- store for StyU \t\t\n    Opad  SIMPLE_INTEGER := 0, -- -128 | 0 | 1  -- store for OpAd (BOOLEAN) norm=T (if board is reversed)\n    TrkNr SIMPLE_INTEGER := 0,                    -- store for TraekNr (mivenumber)           \t\n    Late1 SIMPLE_INTEGER := 0,\n    Late2 SIMPLE_INTEGER := 0,\n    Late3 SIMPLE_INTEGER := 0,\n    Still PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE\n    );\n\n  TYPE STILLREC IS RECORD (\n             Fra       SIMPLE_INTEGER := 0,\n             Til       SIMPLE_INTEGER := 0, -- [0] uses start --to   (11-88)\n             Tekst     STRINGptr          , -- more linies, split using \\ or LF \n             Secs      SIMPLE_INTEGER := 0, -- Seconds used for this move \n             Attribs   ATTRTYPE       := 0, -- who did it? \n             Xtra      SIMPLE_INTEGER := 0  -- future \n           );\n  TYPE SPIL IS VARRAY(500) OF STILLREC; -- [0]=start-position  0..!!!!!MaxHalvTraek\n\n  TYPE retnTypeY IS VARRAY(63) OF SIMPLE_INTEGER;--ARRAY[-31..31] pl/sql offset=32\n  TYPE retnType IS VARRAY(58) OF retnTypeY;      --ARRAY['B'..'t'] pl/sql offset=-65 CHR()\n\n  TYPE TeoType IS VARRAY(1+ TeoMaxPos) OF PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE;\n  \n  TYPE TeoTTypeY IS VARRAY(TeoMaxVar) OF TRKDATA; \n  TYPE TeoTType IS VARRAY(1+ TeoMaxPos) OF TeoTTypeY;\n\n  ryOff     CONSTANT SIMPLE_INTEGER  :=  32; --offset for arrays retnTypeY\n  rxOff     CONSTANT SIMPLE_INTEGER  := -65; --offset for arrays retnTypeX (char)\n  \n  FindCnt   SIMPLE_INTEGER :=0;\n  QFindCnt  SIMPLE_INTEGER :=0;\n    \n    \n  GameStartSeconds  SIMPLE_INTEGER :=0; \n  GameStartMicros   SIMPLE_INTEGER :=0;\n  MoveStartSeconds  SIMPLE_INTEGER :=0;\n  MoveStartMicros   SIMPLE_INTEGER :=0;\n  stVsum   SIMPLE_INTEGER :=0;--: CARDINAL; \n  --Evals    SIMPLE_INTEGER :=0;--: LONGCARD; -- not used, use SkakBrainEval.Evals \n  Push     BOOLEAN;\n  stilling  PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE;\n  startt    STIL;\n  EatChar   CHAR(1);\n  --\n  retn  retnType := retnType();  --ARRAY['B'..'t'] OF ARRAY[-31..31] OF INTEGER; -- direction lookup table\n  Teo   TeoType  := TeoType();   --ARRAY[0..TeoMaxPos] OF STILLINGTYPE; (TeoMax=5) OFFSET=1\n  TeoT  TeoTType := TeoTType();  --ARRAY[0..TeoMaxPos],[1..TeoMaxVar] (TeoMaxVar=4) OF TRKDATA;OFFSET=1\n  DefStill  PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE;-- := PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE();\n\n  MaxTeori   SIMPLE_INTEGER :=0; -- MaxTeori (openingbook)\n  TraekNr    SIMPLE_INTEGER :=0; -- 0..MaxTraek\n  \n  TFra  SIMPLE_INTEGER :=0;-- The top (recommended) move (from) by theory tree \n  TTil  SIMPLE_INTEGER :=0;-- The top (recommended) move (to) by theory tree \n\nFUNCTION STILLING_TO_EPD(stilling PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, operationlist VARCHAR2 DEFAULT NULL) RETURN VARCHAR2;\n--Converts a position from internal array format to a string in EPD format\n--Possible to add EPD operations. Example: 'bm Nf3; id \"test1\";'\n\nFUNCTION FEN_EPD_TO_STR(FEN_EPD VARCHAR2) RETURN VARCHAR2;\n-- converts a position in FEN or EPD format to POSITIONSTR format.\n\nPROCEDURE still(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                p_st char DEFAULT ''); --str65\n-- setup a position from a string in POSITIONSTR format (st='' gives start-position). \n-- Converts to internal format if standard FEN or EPD format detected.\n-- Internal format, but english will be OK, translated:'PpBbNnQqRrCc' to 'BbLlSsDdTtRr' and Color WB to HS (note: 'c' stands for rook with castling right)\n-- example Internal english format (after 1.b4): 'CNBQMBNCPPPPPPPP                 e              p ppppppcnbqmbncW'\n-- example EPD format:                           '7k/p7/1R5K/6r1/6p1/6P1/8/8 w - - bm Rb7; id \"WAC.006\";'\n\nFUNCTION DoMoveOk(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                  fra SIMPLE_INTEGER,--from (ll-88)\n                  til SIMPLE_INTEGER,--to   (11-88)  \n                  MoveTyp in out MOVETYPE) RETURN BOOLEAN;\n-- complete check if move is ok, generates black/white moves using DoMove \n-- IF not DoMoveOk() then error.. -> generates a move if it's legal\n\nPROCEDURE DoMoveC(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                  fra SIMPLE_INTEGER, --from (ll-88)\n                  til SIMPLE_INTEGER);--to   (11-88)\n-- As DoMove, but NO MoveTyp information is required\n-- Faster than DoMoveOK, used when the move is alread validated OK \n\nPROCEDURE DoMove(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                 fra SIMPLE_INTEGER,--from (ll-88)\n                 til SIMPLE_INTEGER,--to   (11-88) \n                 MoveTyp MOVETYPE);\n-- Do (white/black) move, already validated OK (by GetNext) \n-- pawn-promotions: 20 less then Rook, 30 then kNight, 40 bishop\n-- MoveTyp MUST be set to enpassant and castling (rokade) when relevant!!! (use DoMoveC) \n\nPROCEDURE GetNext(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                  fra in out SIMPLE_INTEGER,--from (ll-88)\n                  til in out SIMPLE_INTEGER,--to   (11-88)\n                  retning in out SIMPLE_INTEGER,\n                  MoveTyp in out MOVETYPE);\n-- finds next legal (white/black) move in the position, fra=89 when no more\n-- fra=fra-1 and til=89 for l\u00e6sning af en briks muligheder; \n\nPROCEDURE Mirror(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE);\n-- Spejler stilling sort/hvid *)\n\nPROCEDURE FindTrk(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                  dybde SIMPLE_INTEGER, --Depth  (0,1,4,7,10,13)   \n                  ekstra SIMPLE_INTEGER,--Depth-extra (not used)\n                  Traek in out TRKDATA);--The move\n\nPROCEDURE GetMove(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                  t in out TRKDATA, \n                  MoveNr SIMPLE_INTEGER, \n                  Quick BOOLEAN);\n-- Make a Move out of MoveNr, evt take is placed in EatChar (blstrdBLSTRD) else ' ' \n-- 1'st move =1, do the move if a OK move for MoveNr is found (fra<89) \n-- Quick, so drop check for checks *)\n\nPROCEDURE GetMoveNr(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                    p_fra SIMPLE_INTEGER,--from (ll-88)\n                    p_til SIMPLE_INTEGER,--to   (11-88)  \n                    MoveNr  in out SIMPLE_INTEGER, \n                    Quick BOOLEAN);\n-- Make a MoveNr out of Move \n\n--PROCEDURE ClearHistory(cnt SIMPLE_INTEGER, \n--                       black BOOLEAN);\n-- clears engine history data 3* array: cnt=1-999 (4) moves back ,black=colour \n\n--PROCEDURE AddHistory(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n--                     fra SIMPLE_INTEGER,\n--                     til SIMPLE_INTEGER,\n--                     vlu SIMPLE_INTEGER);\n-- to add moves not made by engine to history used by engine \n\nPROCEDURE Initialize;\n\nEND;\n/",
      "description": "Main chess engine implementation",
      "type": "package_spec_and_body",
      "dependencies": [
        "pl_pig_chess_data",
        "pl_pig_chess_engine_eval"
      ],
      "owner": "Chess Engine Team",
      "version": "1.0",
      "last_modified": "2024-03-15",
      "purpose": "Handles core chess logic, move generation, and game state management"
    },
    {
      "package_name": "BODY",
      "routines": [
        {
          "type": "FUNCTION",
          "name": "pdX",
          "parameters": "brik SIMPLE_INTEGER, felt SIMPLE_INTEGER",
          "return_type": "RETURN SIMPLE_INTEGER",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "UPPER_n",
          "parameters": "n SIMPLE_INTEGER",
          "return_type": "RETURN SIMPLE_INTEGER",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "pdN",
          "parameters": "brik_n SIMPLE_INTEGER, felt SIMPLE_INTEGER",
          "return_type": "RETURN SIMPLE_INTEGER",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "pdX",
          "parameters": "brik CHAR, felt SIMPLE_INTEGER",
          "return_type": "RETURN SIMPLE_INTEGER",
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "WRT",
          "parameters": "s VARCHAR2",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "PreProcess",
          "parameters": "",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "PreProcessor",
          "parameters": "stilling STILLINGTYPE",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "KingAdj",
          "parameters": "k SIMPLE_INTEGER",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "PieceAdjust",
          "parameters": "",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "SetP",
          "parameters": "brik SIMPLE_INTEGER, distance SIMPLE_INTEGER, valuee SIMPLE_INTEGER",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "Eval",
          "parameters": "stilling STILLINGTYPE, Activity SIMPLE_INTEGER,\n              Black BOOLEAN, alpha SIMPLE_INTEGER, beta SIMPLE_INTEGER",
          "return_type": "RETURN SIMPLE_INTEGER",
          "category": "evaluation"
        },
        {
          "type": "PROCEDURE",
          "name": "Initialize",
          "parameters": "",
          "return_type": null,
          "category": "general"
        }
      ],
      "content": "DROP PACKAGE BODY PL_PIG_CHESS_ENGINE_EVAL;\n\nCREATE OR REPLACE PACKAGE BODY PL_PIG_CHESS_ENGINE_EVAL AS\n--\n--\n\n-- LICENSE\n--\n-- PL_PIG_CHESS_ENGINE v 0.92,                  (c) Egon Von Bech Madsen, Denmark (ema@adm.ku.dk) \n--\n-- This software is Diceware. Diceware is defined as Freware with one restriction:\n--\n--   For non-commercial use:\n--      roll one dice until you get 6, then take a picture. That picture is your 10 year free license.\n--\n--   For commercial use of small or medium sized companies (Yearly revenue less than US$ 60 billion), like Oracle:\n--      roll two dices until you get 6 6, then take a picture. That picture is your 10 year free license.\n--\n--   For commercial use of large sized companies (Yearly revenue more than US$ 60 billion), like Microsoft:\n--      roll three dices until you get 6 6 6, then take a picture. That picture is your 10 year free license.\n--\n-- It is allowed to modify and share the code as long as this LICENSE-text is unmodified.\n--\n-- ****************************************************************************************\n-- * Disclaimer (use at your own risk):                                               \n-- * Any use of this software is strictly at your own risk, and I will not be liable for \n-- * any losses and damages in connection with the use of this software.\n-- ****************************************************************************************\n-- LICENSE <end>\n\n-- PL_PIG_CHESS_ENGINE is a Chess Engine written in Oracle PL/SQL.\n--\n-- HISTORY\n-- Migrated from the Engine of PIGbase4 v2.8, coded with M2Amiga Modula-2 v4.2 \n--\n-- The Engine is 3 packages:\n-- PL_PIG_CHESS_ENGINE\n-- PL_PIG_CHESS_ENGINE_EVAL\n-- PL_PIG_CHESS_DATA\n--\n-- Also included is a package:\n-- PL_PIG_CHESS_INTERFACE \n-- making it possible to play with the Engine and run some test-suites using DBMS_OUTPUT.\n\n-- TECHNICAL (PL/SQL)\n-- PL/SQL is a quite restricted and slow language, not the perfect choice for a Chess Engine.\n-- If You want top strength, don't use PIG-Chess, but install a Stockfish Engine at Your HOST OS.\n--\n-- Fair Performance is reached by intensive use of VARRAYS, SIMPLE_INTEGER and INLINE'able SET operators. \n-- And by NOT using SQL features. The many initiations of arrays happens only one time pr session/game.\n--\n-- TECHNICAL (CHESS)\n-- Opening book\n-- Static evaluation\n-- quiescence deepening minimax algorithm with alpha/beta cut-off and sort for better pruning\n-- Q-search (deeper selective search on killer-moves like check)\n-- Leaf evaluation\n-- Single CPU only\n-- Supports 5 levels (from few seconds to several minutes pr move).\n-- Rating: up to 1600\n-- FEN and EPD is supported.\n--\n-- INSTALLATION\n-- Install the 4 packages on a Oracle database:\n-- 1. PL_PIG_CHESS_DATA\n-- 2. PL_PIG_CHESS_ENGINE_EVAL\n-- 3. PL_PIG_CHESS_ENGINE\n-- 4. PL_PIG_CHESS_INTERFACE\n--\n-- USE:\n-- 1. Use SQL*PLUS or Toad/SQL-Developer with DBMS_OUTPUT activated\n-- 2. Use examples seen in PL_PIG_CHESS_INTERFACE\n--\n-- OR:\n-- Make your own graphical (APEX?) interface...\n\n\n  ClosedE4 BOOLEAN;ClosedD4 BOOLEAN;ClosedE3 BOOLEAN;\n  ClosedE5 BOOLEAN;ClosedD3 BOOLEAN;ClosedD5 BOOLEAN;\n  LatePart BOOLEAN; --* LatePart of OpenGame or EndGame\n  FirstW   BOOLEAN := FALSE; \n\n /* PreProcess (static evaluation part 1, defaults): */\n  RokeretBonus CONSTANT  SIMPLE_INTEGER  := 20; /* bonus for safe king */\n  pd1080   CONSTANT  SIMPLE_INTEGER  := -9; /* edge */\n  pd2070   CONSTANT  SIMPLE_INTEGER  := -2; /* near edge */\n  pd3060   CONSTANT  SIMPLE_INTEGER  :=  3; /* large center */\n  pd4050   CONSTANT  SIMPLE_INTEGER  :=  8; /* center*/\n  pd1080qb CONSTANT  SIMPLE_INTEGER  :=  3; /* for queen and bishops */\n  pd3060qb CONSTANT  SIMPLE_INTEGER  := -2; \n  pd3060qe CONSTANT  SIMPLE_INTEGER  :=  8; /* for queen in endgame */  \n  pd1080k  CONSTANT  SIMPLE_INTEGER  :=  8; /* for king, edge*/\n  pd2070k  CONSTANT  SIMPLE_INTEGER  := -5; /* for king, near edge*/\n  pd3060k  CONSTANT  SIMPLE_INTEGER  :=-20; /* for king, large center */\n  pd7R                  CONSTANT SIMPLE_INTEGER  := 20; /* rook on 7'th rank */ \n  pd8R                  CONSTANT SIMPLE_INTEGER  := 5;  /* rook on 8'th rank */ \n  pd6Q                  CONSTANT SIMPLE_INTEGER  :=  5;\n  pd7Q                  CONSTANT SIMPLE_INTEGER  := 12; /* queen on 7'th rank */ \n  pd8Q                  CONSTANT SIMPLE_INTEGER  :=  5;\n  pdkc12                CONSTANT SIMPLE_INTEGER  :=  9; /* penalty for king in centre */\n  /*pdkc9                 CONSTANT SIMPLE_INTEGER  :=  7; */ /* penalty for king in centre */\n  pdPcf                 CONSTANT SIMPLE_INTEGER  :=  9; /* Pawn center (c+f) bonus  */\n  pdPde                 CONSTANT SIMPLE_INTEGER  := 17; /* Pawn center (d+e) bonus  */\n  pdP                   CONSTANT SIMPLE_INTEGER  :=  8; /* pawn rank bonus :  6  7  8  9 start for below:   */\n  pdPend                CONSTANT SIMPLE_INTEGER  := 11; /* pawn -\"- endgame : 1, 3, 5, 7, 9, 11, 13, 15, 17 */\n  PenalUndev            CONSTANT SIMPLE_INTEGER  := 12; /* Penalty for undelevoped pieces */\n\n  /* PreProcessor (static evaluation part 2, adjustments according to position): */\n  BishopPenalty         CONSTANT SIMPLE_INTEGER  :=  3; /* behind own pawns penalty */\n  OpenGameValue         CONSTANT SIMPLE_INTEGER  :=  6; /* if FirstLineCount > 7*/\n  EndGameValue          CONSTANT SIMPLE_INTEGER  := 10; /* if q*4+Q*4+r*2+R*2+n+N+b+B < */\n  pdB5                  CONSTANT SIMPLE_INTEGER  :=  6; /* Bishop b5,g5 bonus/penalty */\n  KingArea30            CONSTANT SIMPLE_INTEGER  := 30;\n  KingArea20            CONSTANT SIMPLE_INTEGER  := 20;\n  KingArea16            CONSTANT SIMPLE_INTEGER  := 16;\n  KingArea12            CONSTANT SIMPLE_INTEGER  := 12;\n  KingArea8             CONSTANT SIMPLE_INTEGER  :=  8;\n  AroundKingBonus       CONSTANT SIMPLE_INTEGER  :=  5; /* by KingAdj: *1 *2 or *3 */\n  PawnStrateg20         CONSTANT SIMPLE_INTEGER  := 15; /* strategical pawn moves when closed center */\n  PawnStrateg10         CONSTANT SIMPLE_INTEGER  :=  8;\n  BishopClosed          CONSTANT SIMPLE_INTEGER  := 15; /* penalty */\n  BishopOpen            CONSTANT SIMPLE_INTEGER  :=  7;\n  KnightClosed          CONSTANT SIMPLE_INTEGER  :=  7;\n  RookFullOpenLine      CONSTANT SIMPLE_INTEGER  := 12;\n  RookHalfOpenLine      CONSTANT SIMPLE_INTEGER  :=  8;\n  EarlyKnight           CONSTANT SIMPLE_INTEGER  := 12; -- penalty \n  LateBishop            CONSTANT SIMPLE_INTEGER  :=  3; -- penalty \n  pawnh3a3attack        CONSTANT SIMPLE_INTEGER  :=  5;\n  AvoidCastling         CONSTANT SIMPLE_INTEGER  :=  6; -- penalty \n  CastleBonus           CONSTANT SIMPLE_INTEGER  := 28;\n\n-- Eval (dynamic evaluation):\n  InMoveBonus                  CONSTANT SIMPLE_INTEGER := 10;\n  --ActivityWeight               CONSTANT SIMPLE_INTEGER :=  0; --!!!!!!!!!!!!!!!!!!!!!! 1-5 (not used) !!!!!!*)\n  TwoOnRow7                    CONSTANT SIMPLE_INTEGER :=350; --bonus for 2 advanced side by side pawns!\n  TwoOnRow6                    CONSTANT SIMPLE_INTEGER :=150;\n  TwoOnRow5                    CONSTANT SIMPLE_INTEGER := 50;\n  RookFirstRowBehindPawn       CONSTANT SIMPLE_INTEGER :=  8; -- Penalty, \n  RookCornerNextToKing         CONSTANT SIMPLE_INTEGER := 30; -- Penalty, \n  RookCornerNextToPiece        CONSTANT SIMPLE_INTEGER :=  4; -- Penalty, \n  KingCloseRook                CONSTANT SIMPLE_INTEGER := 22; -- Penalty, (NOT endgame) king on c1 or f1 with rook behind \n  KingBehindPawns              CONSTANT SIMPLE_INTEGER := 12; --          (NOT endgame)\n  QueenDeveloped               CONSTANT SIMPLE_INTEGER := 12; -- Penalty, (OpenGame)\n  QueenBeforePawn              CONSTANT SIMPLE_INTEGER := 20; -- Penalty, (OpenGame)\n  QueenBeforePawnBlockedBishop CONSTANT SIMPLE_INTEGER := 30; -- Penalty, (OpenGame)\n  QueenBeforeBishop            CONSTANT SIMPLE_INTEGER := 15; -- Penalty, (OpenGame)\n  BishopBeforePawn             CONSTANT SIMPLE_INTEGER := 13; -- Penalty, \n  BishopBehindPawn             CONSTANT SIMPLE_INTEGER :=  8; -- Penalty, \n  BishopProtectedByPawn        CONSTANT SIMPLE_INTEGER :=  8;\n  kNightBeforePawn             CONSTANT SIMPLE_INTEGER := 10; -- Penalty, \n  kNightProtectedByPawn        CONSTANT SIMPLE_INTEGER :=  8;\n  kNightpPawnInFront           CONSTANT SIMPLE_INTEGER := 12; -- blocks a opponent-pawn\n  PawnNextToPawn               CONSTANT SIMPLE_INTEGER :=  8;\n  PawnGuardsPawn               CONSTANT SIMPLE_INTEGER :=  5;\n  PawnF3                       CONSTANT SIMPLE_INTEGER := 15; -- Penalty, (OpenGame)\n  PawnDoubbledPawn             CONSTANT SIMPLE_INTEGER := 40; -- Penalty, (KingEndgame)\n  knEndGamePrio                CONSTANT SIMPLE_INTEGER :=  6; --          (KingEndgame)\n  knEndGameBprio               CONSTANT SIMPLE_INTEGER :=  6; --          (KingEndgame)\n  SupportedPawnPenalty         CONSTANT SIMPLE_INTEGER := 50; -- penalty, (KingEndgame)\n  SupportedPawn0911            CONSTANT SIMPLE_INTEGER := 50; --          (KingEndgame)\n  SupportedPawn1020            CONSTANT SIMPLE_INTEGER := 20; --          (KingEndgame)\n  SupportedPawn1921            CONSTANT SIMPLE_INTEGER := 80; --          (KingEndgame)\n  BadDevelPenalty              CONSTANT SIMPLE_INTEGER := 17; -- penalty, (KingEndgame)\n  BadDevelBishop               CONSTANT SIMPLE_INTEGER :=  6; -- penalty, (KingEndgame)\n  BishopPairBonus              CONSTANT SIMPLE_INTEGER := 30; -- if half-open center, if full-open center then 2*\n-- stuff:\n  kOut     BOOLEAN;\n  K_Out    BOOLEAN;\n  stOff    CONSTANT SIMPLE_INTEGER  := 11; --offset for arrays Stilling\n  p      SIMPLE_INTEGER:=0;\n--\n--FUNCTION pdX(brik SIMPLE_INTEGER, felt SIMPLE_INTEGER) RETURN SIMPLE_INTEGER IS\n--BEGIN -- two-dimensional array ('B'..'t', 11..88) -> 1..3979\n--  RETURN (brik - 66) * 78 + felt - 10; -- ASCII('B')=66\n--END pdX;\n--\n--\n--compare with simple_integer is double speed than compare with char(1).\n--Numeric representation of pieces to get best possible speed:\n\nwN CONSTANT SIMPLE_INTEGER  := 115;--ASCII('s');--White kNight\nbN CONSTANT SIMPLE_INTEGER  :=  83;--ASCII('S');--Black kNight\nwB CONSTANT SIMPLE_INTEGER  := 108;--ASCII('l');--White Bishop\nbB CONSTANT SIMPLE_INTEGER  :=  76;--ASCII('L');--Black Bishop\nwR CONSTANT SIMPLE_INTEGER  := 116;--ASCII('t');--White Rook\nbR CONSTANT SIMPLE_INTEGER  :=  84;--ASCII('T');--Black Rook\nwC CONSTANT SIMPLE_INTEGER  := 114;--ASCII('r');--White rook with Castling\nbC CONSTANT SIMPLE_INTEGER  :=  82;--ASCII('R');--Black rook with Castling\nwQ CONSTANT SIMPLE_INTEGER  := 100;--ASCII('d');--White Queen\nbQ CONSTANT SIMPLE_INTEGER  :=  68;--ASCII('D');--Black Queen\nwP CONSTANT SIMPLE_INTEGER  :=  98;--ASCII('b');--White Pawn\nbP CONSTANT SIMPLE_INTEGER  :=  66;--ASCII('B');--Black Pawn\nwE CONSTANT SIMPLE_INTEGER  := 101;--ASCII('e');--White pawn En-passant\nbE CONSTANT SIMPLE_INTEGER  :=  69;--ASCII('E');--Black pawn En-passant\nwK CONSTANT SIMPLE_INTEGER  := 107;--ASCII('k');--White King\nbK CONSTANT SIMPLE_INTEGER  :=  75;--ASCII('K');--Black King\nwM CONSTANT SIMPLE_INTEGER  := 109;--ASCII('m');--White Majesty (king w castling)\nbM CONSTANT SIMPLE_INTEGER  :=  77;--ASCII('M');--Black Majesty (king w castling)\nwA CONSTANT SIMPLE_INTEGER  :=  97;--ASCII('a');--White pieces all bigger than this\nbA CONSTANT SIMPLE_INTEGER  :=  65;--ASCII('A');--Pieces all bigger than this + reference index\nwT CONSTANT SIMPLE_INTEGER  :=  72;--ASCII('H');--Whites Turn (index hvistur)\nbT CONSTANT SIMPLE_INTEGER  :=  83;--ASCII('S');--Blacks Turn (index hvistur)\nspc CONSTANT SIMPLE_INTEGER :=  32;--ASCII(' ');--Space\nedge CONSTANT SIMPLE_INTEGER:=  46;--ASCII('.');--Edge-marker\n\nFUNCTION UPPER_n(n SIMPLE_INTEGER) RETURN SIMPLE_INTEGER IS\nBEGIN\n  IF n<wA THEN\n    RETURN n;\n  ELSE \n    RETURN n - 32;\n  END IF;\nEND UPPER_n;\n--\nFUNCTION pdN(brik_n SIMPLE_INTEGER, felt SIMPLE_INTEGER) RETURN SIMPLE_INTEGER IS\nBEGIN -- two-dimensional array (bP..wR, 11..88) -> 1..3978. Here index is calculated out of Numeric repr\u00e6sentation (ascii value) of pieces.\n  --RETURN (brik - 66) * 78 + felt - 10; -- ASCII(bP)=66  ASCII(wR)=116\n  RETURN brik_n * 78 -5158 + felt; -- ASCII(bP)=66\nEND pdN;\n\nFUNCTION pdX(brik CHAR, felt SIMPLE_INTEGER) RETURN SIMPLE_INTEGER IS\nBEGIN -- two-dimensional array ('B'..'t', 11..88) -> 1..3978\n  RETURN (ASCII(brik) - 66) * 78 + felt - 10; -- ASCII('B')=66\nEND pdX;\n\nPROCEDURE WRT(s VARCHAR2) IS\nBEGIN\n  dbms_output.put_line(s);\nEND WRT;\n--\n\n\nPROCEDURE PreProcess IS\n  n SIMPLE_INTEGER := 0;\n  ix SIMPLE_INTEGER:= 0;\n  m SIMPLE_INTEGER:= 0;\n  t SIMPLE_INTEGER:= 0;\n  v SIMPLE_INTEGER:= 0;\n  f SIMPLE_INTEGER:= 0;\n  --ch CHAR(1);\n  ch_n SIMPLE_INTEGER:= 0; -- ASCII(CHAR);\nBEGIN\n  --pdw.extend(4000);\n  p := 600;\n  FOR ch_n IN bP..wR  LOOP  --clear all\n    IF ch_n in (bP,bE,bR,bC,bN,bK,bM,bB,bQ, wP,wE,wR,wC,wN,wK,wM,wB,wQ) THEN\n      ix := pdn(ch_n,0);\n      FOR n in 1..8 LOOP  FOR m in 1..8 LOOP \n         pdw(ix + n*10+m) := 0;\n         pdb(ix + n*10+m) := 0;\n      END LOOP; END LOOP;\n    END IF;\n  END LOOP;\n  --\n  p := 601;\n  FOR ch_n IN bP..bR  LOOP        /* positionel data, centrum bedst */\n     p := 602;\n     --ch := chr(ch_n);\n     p := 604;\n     CASE \n     WHEN ch_n in ( bP,bE,bR,bC,bN ) THEN\n          p := 605;\n          FOR n in 1..8 LOOP  FOR m in 1..8 LOOP \n            --p := 6052;\n            --p := 6053;\n            --WRT(chr(ch_n)||': '||to_char(n*10+m)||' '||pdN(ch_n,n*10+m));\n            --p := 6054;\n            --WRT(chr(ch_n)||n||m||' '||pdN(ch_,n*10+m));\n            pdw(pdN(ch_n,n*10+m)):=pd1080;  \n          END LOOP; END LOOP;\n          p := 606;\n          FOR n in 2..7 LOOP  FOR m in 2..7 LOOP pdw(pdN(ch_n,n*10+m)):=pd2070;  END LOOP; END LOOP;\n          p := 607;\n          IF ch_n in ( bP,bE,bN ) THEN -- Rooks not in center\n            FOR n in 3..6 LOOP  FOR m in 3..6 LOOP pdw(pdN(ch_n,n*10+m)):=pd3060;  END LOOP; END LOOP;\n            p := 610;\n            FOR n in 4..5 LOOP  FOR m in 4..5 LOOP pdw(pdN(ch_n,n*10+m)):=pd4050;  END LOOP; END LOOP;\n          END IF;\n     WHEN ch_n in (bK,bM) THEN\n          p := 620;\n          IF Endgame THEN\n            IF LatePart THEN\n              FOR n in 1..8 LOOP  FOR m in 1..8 LOOP pdw(ix + n*10+m):=floor(-pd1080k/2);  END LOOP; END LOOP;\n              FOR n in 2..7 LOOP  FOR m in 2..7 LOOP pdw(ix + n*10+m):=floor(-pd2070k/2);  END LOOP; END LOOP;\n              FOR n in 3..6 LOOP  FOR m in 3..6 LOOP pdw(ix + n*10+m):=floor(-pd3060k/2);  END LOOP; END LOOP;\n            END IF;\n          ELSE\n            FOR n in 1..8 LOOP  FOR m in 1..8 LOOP pdw(pdN(ch_n,n*10+m)):=pd1080k;  END LOOP; END LOOP;\n            FOR n in 2..7 LOOP  FOR m in 2..7 LOOP pdw(pdN(ch_n,n*10+m)):=pd2070k;  END LOOP; END LOOP;\n            FOR n in 3..6 LOOP  FOR m in 3..6 LOOP pdw(pdN(ch_n,n*10+m)):=pd3060k;  END LOOP; END LOOP;\n          END IF;\n      WHEN ch_n in (bB,bQ) THEN  /* l\u00f8ber,D ikke specielt i centrum, men fianciettering */\n          p := 630;\n          IF EndGame AND (ch_n=bQ) THEN t:=pd3060qe; ELSE t:=pd3060qb; END IF;\n          FOR n in 1..8 LOOP  FOR m in 1..8 LOOP pdw(pdN(ch_n,n*10+m)):=pd1080qb;  END LOOP; END LOOP;\n          FOR n in 3..6 LOOP  FOR m in 3..6 LOOP pdw(pdN(ch_n,n*10+m)):=t;  END LOOP; END LOOP;\n      ELSE\n          NULL;      \n      END CASE;\n  END LOOP;\n  p := 639;\n  IF OpenGame THEN\n    p := 640;\n    /* bonus to move pawns into the center */\n    ix := pdN(bP,56); pdw(ix) := pdw(ix) + pdPcf;\n    ix := pdN(bP,55); pdw(ix) := pdw(ix) + pdPde;\n    ix := pdN(bP,54); pdw(ix) := pdw(ix) + pdPde;\n    ix := pdN(bP,53); pdw(ix) := pdw(ix) + pdPcf;\n    ix := pdN(bE,56); pdw(ix) := pdw(ix) + pdPcf;\n    ix := pdN(bE,55); pdw(ix) := pdw(ix) + pdPde;\n    ix := pdN(bE,54); pdw(ix) := pdw(ix) + pdPde;\n    ix := pdN(bE,53); pdw(ix) := pdw(ix) + pdPcf;\n    /* penalty to undeveloped pieces */\n    ix := pdN(bN,82); pdw(ix) := pdw(ix) - PenalUndev;\n    ix := pdN(bB,83); pdw(ix) := pdw(ix) - PenalUndev;\n    ix := pdN(bQ,84); pdw(ix) := pdw(ix) - PenalUndev;\n    ix := pdN(bB,86); pdw(ix) := pdw(ix) - PenalUndev;\n    ix := pdN(bN,87); pdw(ix) := pdw(ix) - PenalUndev;\n    ix := pdN(bP,74); pdw(ix) := pdw(ix) - PenalUndev;\n    ix := pdN(bP,75); pdw(ix) := pdw(ix) - PenalUndev;\n  ELSE\n    p := 650;\n  /* t\u00e5rne (rook) + Dronning (queen) p\u00e5 (at) 7+8 r\u00e6kke (row) bonus */\n    FOR n IN 1..8 LOOP\n      pdw(pdN(bR,20+n)):=pd7R;   \n      pdw(pdN(bR,10+n)):=pd8R;\n      pdw(pdN(bQ,30+n)):=pd6Q;\n      pdw(pdN(bQ,20+n)):=pd7Q;\n      pdw(pdN(bQ,10+n)):=pd8Q;\n    END LOOP;\n    p := 660;\n\n    /* b\u00f8nder (pawns) mere v\u00e6rd jo t\u00e6ttere de er p\u00e5 forvandling (promotion) 7, 9 */\n    IF EndGame THEN t := pdPend; ELSE t := pdP; END IF;\n    FOR n IN 2..7 LOOP\n      v := (t-n)*(t-n);\n      FOR m IN 1..8 LOOP\n           f :=10*n+m;\n           ix := pdN(bP,f); pdw(ix) := pdw(ix) + v;\n           ix := pdN(bE,f); pdw(ix) := pdw(ix) + v;\n       END LOOP;\n    END LOOP;\n  END IF;\n  p := 670;\n\n  /* Knights worth a bit less */\n  IF EndGame THEN\n    FOR n IN 1..8 LOOP\n      FOR m IN 1..8 LOOP\n        ix := pdN(bN,10*n+m); pdw(ix) := pdw(ix) -12;\n      END LOOP;\n    END LOOP;\n  END IF;\n  \n  /* spejl af sort til hvid*/\n  FOR ch_n IN wP..wR LOOP \n     --ch := chr(ch_n);\n    CASE WHEN ch_n IN (wP,wE,wR,wC,wK,wM,wQ,wN,wB ) THEN\n        FOR n in 1..8 LOOP\n          FOR m in 1..8 LOOP\n              pdw(pdN(ch_n,n+10*m)) :=pdw(pdN(UPPER_n(ch_n),99-n-10*m));\n          END LOOP;\n        END LOOP;\n    ELSE\n      NULL;\n    END CASE;\n  END LOOP;\n\n  p := 680;\n\n\n  /* konge (king) mere v\u00e6rd hvis i sikkerhed (secure) */\n  IF not EndGame THEN\n    p := 690;\n    FOR m IN 1..2 LOOP\n      FOR n IN 2..3 LOOP\n         ix := pdN(wK,m*10+5-n);    pdw(ix) := RokeretBonus;-- castlingbonus\n         ix := pdN(wK,m*10+5+n);    pdw(ix) := RokeretBonus;\n         ix := pdN(bK,90-m*10+5-n); pdw(ix) := RokeretBonus;\n         ix := pdN(bK,90-m*10+5+n); pdw(ix) := RokeretBonus;\n      END LOOP;\n      FOR n IN 4..6 LOOP\n         ix := pdN(wK,m*10+n);      pdw(ix) := pdw(ix) - pdkc12;\n         ix := pdN(bK,90-m*10+n);   pdw(ix) := pdw(ix) -pdkc12;\n      END LOOP;\n    END LOOP;\n    /* 5-98: develop king-side bishops */\n     ix := pdN(wB,16);      pdw(ix) := pdw(ix) - 3;\n     ix := pdN(wB,86);      pdw(ix) := pdw(ix) - 3;\n  END IF;\n  p := 699;\n\n  /*pd:=pdw;*/\n  EXCEPTION\n    WHEN OTHERS THEN\n      dbms_output.put_line('Preprocess p='||p||': '||sqlerrm);\n  END PreProcess;\n  \n  PROCEDURE PreProcessor(stilling STILLINGTYPE) IS\n/* adjusts the pd-array+OpenGame+EngGame according..the actual position. */\n/* Is called one time for each engine call */\n    dd SIMPLE_INTEGER := 0; -- PL/SQL is not case sensitive\n    tt SIMPLE_INTEGER := 0;\n    ll SIMPLE_INTEGER := 0; \n    ss SIMPLE_INTEGER := 0;\n    bbb SIMPLE_INTEGER := 0;\n    defenders SIMPLE_INTEGER := 0;\n    D SIMPLE_INTEGER := 0;\n    T SIMPLE_INTEGER := 0;\n    L SIMPLE_INTEGER := 0;\n    S SIMPLE_INTEGER := 0;\n    B SIMPLE_INTEGER := 0; \n    n SIMPLE_INTEGER := 0;\n    m SIMPLE_INTEGER := 0;\n    n_n SIMPLE_INTEGER := 0;-- BY 10 helper\n    m_n SIMPLE_INTEGER := 0;-- BY 10 helper\n    f SIMPLE_INTEGER := 0;\n    FirstLineCount SIMPLE_INTEGER := 0; \n    wkk SIMPLE_INTEGER := 0;\n    bkk SIMPLE_INTEGER := 0;\n    kx SIMPLE_INTEGER := 0;\n    ky SIMPLE_INTEGER := 0;\n   \n    x SIMPLE_INTEGER := 0;\n    y SIMPLE_INTEGER := 0;\n    y_n SIMPLE_INTEGER := 0;-- BY 10 helper\n    v SIMPLE_INTEGER := 0;\n    nm SIMPLE_INTEGER := 0;\n    om SIMPLE_INTEGER := 0;\n    sw SIMPLE_INTEGER := 0;\n    ch_n SIMPLE_INTEGER := 0;\n    nbb SIMPLE_INTEGER := 0;\n    nB SIMPLE_INTEGER := 0;\n    TYPE Rtyp is VARRAY(8)OF BOOLEAN;\n    R  Rtyp := Rtyp(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE); -- stores TRUE if line open for (Black) rooks\n    rr Rtyp := Rtyp(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE);\n    NoWoffs BOOLEAN;--None White Officers\n    NoBoffs BOOLEAN;\n    ix SIMPLE_INTEGER:= 0;\nPROCEDURE KingAdj(k SIMPLE_INTEGER) IS\n  WpieceCnt SIMPLE_INTEGER := 0;\n  BpieceCnt SIMPLE_INTEGER := 0;\n  fc CHAR(1);\nBEGIN p := 100;\n  x:=MOD(k,10);\n  y:=FLOOR(k/10);\n  WpieceCnt:=0;\n  BpieceCnt:=0;\n  FOR n IN x-2..x+2 LOOP\n    FOR m IN y-2..y+2 LOOP\n      IF (n>0) AND (n<9) AND (m>0) AND (m<9) THEN \n        f:=n+10*m;\n        IF stilling(stOff+ f)>spc THEN\n          IF stilling(stOff+ f) = UPPER_n(stilling(stOff+ f)) THEN BpieceCnt:=BpieceCnt+1; ELSE WpieceCnt:= WpieceCnt+1; END IF;\n        END IF;\n      END IF;\n    END LOOP;\n  END LOOP;\n  IF stilling(stOff+ k)=UPPER_n(stilling(stOff+ k)) THEN -- black king, then swap\n    n:=BpieceCnt;\n    BpieceCnt:=WpieceCnt;\n    WpieceCnt:=n;\n  END IF;\n  IF WpieceCnt+BpieceCnt<10 THEN\n    WpieceCnt := WpieceCnt+3;\n  ELSIF WpieceCnt+BpieceCnt<13 THEN\n    WpieceCnt := WpieceCnt+2;\n  ELSIF WpieceCnt+BpieceCnt<17 THEN\n    WpieceCnt := WpieceCnt+1;\n  END IF;\n  IF WpieceCnt-BpieceCnt>7 THEN\n    ll:=0;\n  ELSIF WpieceCnt-BpieceCnt>5 THEN\n    ll:=AroundKingBonus;\n  ELSIF WpieceCnt-BpieceCnt>4 THEN\n    ll:=AroundKingBonus*2;\n  ELSE\n    ll:=AroundKingBonus*3;\n  END IF;\n  FOR n IN x-2..x+2 LOOP\n    FOR m  IN y-2..y+2 LOOP\n      IF (n>0) AND (n<9) AND (m>0) AND (m<9) THEN \n        f:=n+10*m;\n        --WRT('KingAdj: '||f||' + '||ll);\n        ix := pdN(bQ,f); Pdw(ix) := Pdw(ix) + ll;\n        ix := pdN(bR,f); Pdw(ix) := Pdw(ix) + ll;\n        ix := pdN(bB,f); Pdw(ix) := Pdw(ix) + ll;\n        ix := pdN(bN,f); Pdw(ix) := Pdw(ix) + ll;\n        ix := pdN(bP,f); Pdw(ix) := Pdw(ix) + ll;\n        ix := pdN(wQ,f); Pdw(ix) := Pdw(ix) + ll;\n        ix := pdN(wR,f); Pdw(ix) := Pdw(ix) + ll;\n        ix := pdN(wB,f); Pdw(ix) := Pdw(ix) + ll;\n        ix := pdN(wN,f); Pdw(ix) := Pdw(ix) + ll;\n        ix := pdN(wP,f); Pdw(ix) := Pdw(ix) + ll;--rettet 'n' -> wP\n      END IF;\n    END LOOP;\n  END LOOP;\n   p := 199;\nEND KingAdj;--in PreProcessor\nPROCEDURE PieceAdjust IS\nBEGIN p := 200;\n  IF PieceClear THEN\n    FOR x IN 1..8 LOOP\n      FOR y IN 1..8 LOOP\n        v:=x+10*y;\n        pdw(pdN(wK,v)):=0; --pdw(pdN(wK,v] DIV 2;\n        pdw(pdN(bK,v)):=0; --pdw(pdN(bK,v] DIV 2;\n      END LOOP;\n    END LOOP;\n  END IF;\n  FOR x IN 1..8 LOOP\n    FOR y IN 1..8 LOOP\n      v:=x+10*y;\n      IF stilling(stOff+ v)>spc THEN\n        FOR n IN x-4..x+4 LOOP\n          FOR m IN y-4..y+4 LOOP\n            IF (n>0) AND (n<9) AND (m>0) AND (m<9) AND ((n<>x) OR (m<>y)) THEN \n              f:=n+10*m;\n              ll:=FLOOR((26-ABS(y-m)*ABS(x-n)) /  2); -- 12,11,8,5\n              IF stilling(stOff+ v)<>wK THEN ix := pdN(wK,f); Pdw(ix) := Pdw(ix) + ll; END IF; \n              IF stilling(stOff+ v)<>bK THEN ix := pdN(bK,f); Pdw(ix) := Pdw(ix) + ll; END IF; \n            END IF;\n          END LOOP;\n        END LOOP;\n      END IF;\n    END LOOP;\n  END LOOP;\n  IF PieceDecr THEN\n    FOR x IN 1..8 LOOP \n      FOR y IN 1..8 LOOP \n        ix := pdN(wK,x+10*y); Pdw(ix) := Pdw(ix) - 50; --DEC(pdw(pdN(wK,x+10*y],50); \n        ix := pdN(bK,x+10*y); Pdw(ix) := Pdw(ix) - 50; --DEC(pdw(pdN(bK,x+10*y],50); \n      END LOOP; \n    END LOOP;\n  END IF;\n  p := 299;\nEND PieceAdjust;--in PreProcessor\nPROCEDURE SetP(brik SIMPLE_INTEGER, distance SIMPLE_INTEGER, valuee SIMPLE_INTEGER) IS\n  kx SIMPLE_INTEGER := 0;\n  ky SIMPLE_INTEGER := 0;\n  x SIMPLE_INTEGER := 0;\n  y SIMPLE_INTEGER := 0;\nBEGIN  p := 300;                 -- brik=white piece (adjusts for black too)\n  kx:=MOD(bkk,  10);\n  ky:=FLOOR(bkk / 10);\n  FOR x IN kx-distance..kx+distance LOOP\n    FOR y IN ky-distance..ky+distance LOOP\n      IF (x>0) AND (x<9) AND (y>0) AND (y<9)\n      AND ((ABS(x-kx)=distance) OR (ABS(y-ky)=distance)) THEN\n        ix := pdN(brik,x+10*y); Pdw(ix) := Pdw(ix) + valuee;\n      END IF;\n    END LOOP;\n  END LOOP;\n  kx:=MOD (wkk, 10);\n  ky:=FLOOR(wkk / 10);\n  FOR x IN kx-distance..kx+distance LOOP\n    FOR y IN ky-distance..ky+distance LOOP\n      IF (x>0) AND (x<9) AND (y>0) AND (y<9)\n      AND ((ABS(x-kx)=distance) OR (ABS(y-ky)=distance)) THEN\n        ix := pdN(UPPER_n(brik),x+10*y); Pdw(ix) := Pdw(ix) + valuee;\n      END IF;\n    END LOOP;\n  END LOOP;\n  p := 399;\nEND SetP;-- in PreProcessor\nBEGIN  p := 400;--PreProcessor\n  --WRT('PREPROCESSOR');\n  IF not FirstW THEN --one-time initialization (allocation+initial-values) of varray variables.\n    Initialize;\n  END IF;\n--(*$ IF Test0 WRITELNF(s('PreProcessor...')); --(*$ ENDIF\n\n  -- init variables\n  dd:=0; tt:=0; ll:=0; ss:=0; bbb:=0; D:=0; T:=0; L:=0; S:=0; B:=0;\n  ClosedE4:=FALSE; ClosedD4:=FALSE; ClosedE3:=FALSE;\n  ClosedE5:=FALSE; ClosedD5:=FALSE; ClosedD3:=FALSE;\n\n  FirstLineCount:=16; -- 16 pieces minus empty fields\n\n  -- count pieces\n  FOR n IN 11..88 LOOP\n    CASE stilling(stOff+ n) \n    WHEN  wQ THEN  dd := dd + 1; -- white queen\n    WHEN  bQ THEN  D  := D + 1;  -- black queen\n    WHEN  wR THEN  tt := tt + 1; -- white rook\n    WHEN  wC THEN  tt := tt + 1; -- white rook, castleable\n    WHEN  bR THEN  T  := T + 1;  -- black rook\n    WHEN  bC THEN  T  := T + 1;  -- black rook, castleable\n    WHEN  wB THEN  ll := ll + 1; -- white bishop\n    WHEN  bB THEN  L  := L +1;   -- black bishop\n    WHEN  wN THEN  ss := ss + 1; -- white knight\n    WHEN  bN THEN  S  := S + 1;  -- black knight\n    WHEN  wP THEN  bbb:= bbb + 1; -- white pawn\n    WHEN  wE THEN  bbb:= bbb + 1; -- white pawn, enpassantable \n    WHEN  bP THEN  B  := B + 1;  -- black pawn\n    WHEN  bE THEN  B  := B + 1;  -- black pawn, enpassantable \n    WHEN  wK THEN  kOut  := n=15;-- white king \n    WHEN  wM THEN  kOut  := n=15;-- white king, castleable \n    WHEN  bK THEN  K_Out := n=85;-- black king \n    WHEN  bM THEN  K_Out := n=85;-- black king, castleable\n    ELSE\n      IF (n<19) OR (n>80) THEN FirstLineCount := FirstLineCount - 1; END IF;\n    END CASE;\n  END LOOP;\n  NoBoffs :=  (S=0) AND (L=0) AND (D=0) AND (T=0);    --none black officers\n  NoWoffs := (ss=0) AND (ll=0) AND (dd=0) AND (tt=0); --none white officers\n  p := 410;\n  -- set global flags (5 combinations):\n  --  1. opengame, NOT latepart\n  --  2. opengame, latepart\n  --  3. NOT opengame, NOT endgame, latepart\n  --  4. endgame, NOT latepart\n  --  5. endgame, latepart\n  OpenGame :=FirstLineCount>OpenGameValue;\n  IF OpenGame THEN\n    LatePart:=FirstLineCount<OpenGameValue+3;\n    EndGame :=FALSE;\n  ELSE\n    EndGame  :=dd*3+D*3+tt*2+T*2+ss+S+ll+L < EndGameValue;\n    IF EndGame THEN\n      LatePart:=dd*3+D*3+tt*2+T*2+ss+S+ll+L < EndGameValue-4;\n    END IF;\n  END IF;\n\n  IF EndGame and PieceClearEarly  THEN\n    FOR x IN 1..8 LOOP\n      FOR y IN 1..8 LOOP\n        v:=x+10*y;\n        pdw(pdN(wK,v)):=0; --pdw(pdN(wK,v] DIV 2;\n        pdw(pdN(bK,v)):=0; --pdw(pdN(bK,v] DIV 2;\n      END LOOP;\n    END LOOP;\n  END IF;\n  \n  -- set default positional values (in pd)\n  PreProcess;\n \n  -- White king positions calc\n  IF stilling(stOff+ 15)=wM THEN \n    wkk:=15;\n    IF NOT EndGame THEN\n      ix := pdN(wK,17); pdw(ix) := pdw(ix) + CastleBonus+9;\n      ix := pdN(wK,13); pdw(ix) := pdw(ix) + CastleBonus-9;\n    END IF;\n  ELSE\n    wkk:=11;\n    WHILE (stilling(stOff+ wkk)<>wK) AND (wkk<88) LOOP \n      wkk := wkk + 1; \n    END LOOP;\n  END IF;\n  --WRT('wkk='||wkk);\n  \n  \n  -- Black king positions calc  \n  IF stilling(stOff+ 85)=bM THEN\n    p := 1441;\n    bkk:=85;\n    IF NOT EndGame THEN\n      p := 1442;\n      ix := pdN(bK,87); pdw(ix) := pdw(ix) + CastleBonus+9;\n      ix := pdN(bK,83); pdw(ix) := pdw(ix) + CastleBonus-9;\n    END IF;\n  ELSE\n    bkk:=88;\n    p := 1444;\n    WHILE (stilling(stOff+ bkk)<>bK) AND (bkk>11) LOOP \n      bkk := bkk -1; \n    END LOOP;\n    p := 1448;\n  END IF;\n  --WRT('bkk='||bkk);\n  \n \n  -- Mating, 4-Double value of pawns to try to promote or Added value to\n  -- get lonely king to the edge\n  IF NoBoffs AND (B=0) THEN\n    FOR x IN 1..8 LOOP\n      FOR y IN 1..8 LOOP\n        n:=x+10*y;\n        IF bbb=0 THEN\n          IF Follow THEN\n            ix := pdn(bK,n);\n            IF (y=1) OR (y=8) THEN -- on Y edge\n               pdw(ix) := pdw(ix) -100;--WRT('B100');\n            END IF;\n            IF (x=1) OR (x=8) THEN -- on X edge\n               pdw(ix) := pdw(ix) -100;--WRT('B100');\n            END IF;\n            IF (y=2) OR (y=7) THEN -- next to Y edge\n               pdw(ix) := pdw(ix) -50;--WRT('B50');\n            END IF;\n            IF (x=2) OR (x=7) THEN -- next to X edge\n               pdw(ix) := pdw(ix) -50;--WRT('B50');\n            END IF;\n            IF (y=3) OR (y=6)   THEN -- not in Y center\n               pdw(ix) := pdw(ix) -25;--WRT('B25');\n            END IF;\n            IF (x=3) OR (x=6)  THEN -- not in X center\n               pdw(ix) := pdw(ix) -25;--WRT('B25');\n            END IF;\n          ELSE\n            IF (n<19) OR (n>70) OR (x=1) OR (x=8) THEN\n              ix := pdX('K',n); pdw(ix) := pdw(ix) -60;\n            ELSIF (n<29) OR (n>60) OR (x=2) OR (x=7) THEN\n              ix := pdX('K',n); pdw(ix) := pdw(ix) -30;\n            END IF;\n          END IF;\n        ELSE\n          ix := pdN(wP,n); pdw(ix) := pdw(ix)*4;--WRT('B*4');\n        END IF;\n      END LOOP;\n    END LOOP;\n    IF Follow THEN\n      kx:=MOD(bkk,  10);-- bonus for moving king towards the king to mate\n      ky:=FLOOR(bkk / 10);    \n      FOR x IN kx-2..kx+2 LOOP\n        IF x>0 and x<9 THEN\n          FOR y IN ky-2..ky+2 LOOP\n            IF y>0 and y<9 THEN\n              IF (y between ky-2 and ky+2) and (x between kx-2 and kx+2) THEN\n                ix := pdn(wK,x+10*y);\n                IF (y = ky-2 or y = ky+2) and (x = kx-2 or x = kx+2) THEN\n                  pdw(ix) := pdw(ix) + 15;                 \n                ELSE\n                  pdw(ix) := pdw(ix) + 30;\n                END IF;\n--                WRT('bonus for moving king towards the black king to mate yx='||y||x);\n              END IF;\n            END IF;\n          END LOOP;\n        END IF;\n      END LOOP;     \n    END IF; \n    --\n  END IF;\n--\n--  IF NoBoffs AND (B>0) AND (bbb>0) THEN\n--    FOR x IN 1..8 LOOP\n--      FOR y IN 1..8 LOOP\n--        n:=x+10*y;\n--        ix := pdN(wP,n); pdw(ix) := pdw(ix)*4;\n--      END LOOP;\n--    END LOOP;\n--  END IF;\n\n  IF NoWoffs AND (bbb=0) THEN\n    FOR x in 1..8 LOOP\n      FOR y in 1..8 LOOP\n        n:=x+10*y;\n        IF B=0 THEN\n          IF Follow THEN\n            ix := pdn(wK,n);\n            IF (y=1) OR (y=8) THEN -- on Y edge\n               pdw(ix) := pdw(ix) -100;--WRT('W100');\n            END IF;\n            IF (x=1) OR (x=8) THEN -- on X edge\n               pdw(ix) := pdw(ix) -100;--WRT('W100');\n            END IF;\n            IF (y=2) OR (y=7) THEN -- next to Y edge\n               pdw(ix) := pdw(ix) -50;--WRT('W50');\n            END IF;\n            IF (x=2) OR (x=7) THEN -- next to X edge\n               pdw(ix) := pdw(ix) -50;--WRT('W50');\n            END IF;\n            IF (y=3) OR (y=6)   THEN -- not in Y center\n               pdw(ix) := pdw(ix) -25;--WRT('W25');\n            END IF;\n            IF (x=3) OR (x=6)  THEN -- not in X center\n               pdw(ix) := pdw(ix) -25;--WRT('W25');\n            END IF;\n          ELSE\n            IF (n<19) OR (n>70) OR (x=1) OR (x=8) THEN\n              ix := pdX('k',n); pdw(ix) := pdw(ix) -60;\n            ELSIF (n<29) OR (n>60) OR (x=2) OR (x=7) THEN\n              ix := pdX('k',n); pdw(ix) := pdw(ix) -30;\n            END IF;\n          END IF;\n        ELSE\n          ix := pdN(bP,n); pdw(ix) := pdw(ix)*4;--WRT('W*4');\n        END IF;\n      END LOOP;\n    END LOOP;\n    --\n    IF Follow THEN\n      kx:=MOD(wkk,  10);-- bonus for moving king towards the king to mate\n      ky:=FLOOR(wkk / 10);    \n      FOR x IN kx-2..kx+2 LOOP\n        IF x>0 and x<9 THEN\n          FOR y IN ky-2..ky+2 LOOP\n            IF y>0 and y<9 THEN\n              IF (y between ky-2 and ky+2) and (x between kx-2 and kx+2) THEN\n                ix := pdn(bK,x+10*y);\n                IF (y = ky-2 or y = ky+2) and (x = kx-2 or x = kx+2) THEN\n                  pdw(ix) := pdw(ix) + 15;                 \n                ELSE\n                  pdw(ix) := pdw(ix) + 30;\n                END IF;\n--                WRT('bonus for moving king towards the white king to mate yx='||y||x);\n              END IF;\n            END IF;\n          END LOOP;\n        END IF;\n      END LOOP;   \n    END IF;   \n    --\n  END IF;\n  p := 420;\n  --\n -- IF NoWoffs AND (bbb>0) AND (B>0) THEN\n --   FOR x IN 1..8 LOOP\n --     FOR y IN 1..8 LOOP\n --       n:=x+10*y;\n --       ix := pdN(bP,n); pdw(ix) := pdw(ix)*4;\n --     END LOOP;\n --   END LOOP;\n -- END IF;\n\n  -- calc pawn center type\n  IF (stilling(stOff+ 44)=wP) AND (stilling(stOff+ 54)=bP) THEN--rettet 54=wP til 54=bP\n    ClosedD4:=TRUE;\n    IF (stilling(stOff+ 35)=wP) AND (stilling(stOff+ 45)=bP) THEN ClosedE3 :=TRUE; END IF;\n    IF (stilling(stOff+ 55)=wP) AND (stilling(stOff+ 65)=bP) THEN ClosedE5 :=TRUE; END IF;\n  ELSIF (stilling(stOff+ 45)=wP) AND (stilling(stOff+ 55)=bP) THEN--rettet 55=wP til 55=bP\n    ClosedE4:=TRUE;\n    IF (stilling(stOff+ 34)=wP) AND (stilling(stOff+ 44)=bP) THEN ClosedD3 :=TRUE; END IF;\n    IF (stilling(stOff+ 54)=wP) AND (stilling(stOff+ 64)=bP) THEN ClosedD5 :=TRUE; END IF;\n  END IF;\n  \n  p := 424;\n  IF (stilling(stOff+ HvisTur)=bT) THEN -- 5-98\n    IF NOT NoBoffs AND NoWoffs THEN --pawn endgame\n      FOR x IN 1..8 LOOP\n        FOR y IN 1..8 LOOP\n          n:=x+10*y;\n          pdw(pdN(bP,n)):=pdw(pdN(bP,n))*2;-- rettet fra pdb til pdw\n        END LOOP;\n      END LOOP;\n    END IF;\n  ELSE\n    IF NOT NoWoffs AND NoBoffs THEN\n       FOR x IN 1..8 LOOP\n        FOR y IN 1..8 LOOP\n          n:=x+10*y;\n          pdw(pdN(wP,n)):=pdw(pdN(wP,n))*2;\n        END LOOP;\n      END LOOP;\n    END IF;\n  END IF;\n  p := 426;\n\n  -- rook open lines calc\n  FOR x IN 1..8 LOOP\n    rr(x):=TRUE;\n    R(x):=TRUE;\n    FOR y_n IN 2..7 LOOP\n      y := y_n*10;\n      IF (stilling(stOff+ y+x)=wP) OR (stilling(stOff+ y+x)=wE) THEN rr(x):=FALSE; END IF;\n      IF (stilling(stOff+ y+x)=bP) OR (stilling(stOff+ y+x)=bE) THEN R(x):=FALSE; END IF;\n    END LOOP;\n  END LOOP;\n p := 430;\n\n  IF NOT EndGame AND NOT (OpenGame AND NOT LatePart) AND KingAir THEN--!!!!!!!!!new may19: air for king in mid-game:\n    IF wkk = 17 and stilling(stOff+ 26)=wP and stilling(stOff+ 27)=wP and stilling(stOff+ 28)=wP  THEN\n      defenders :=0;\n      FOR sc IN 11..16 LOOP\n         IF stilling(stOff+ sc) in (wR,wQ) THEN defenders := defenders + 1; END IF;\n      END LOOP;\n      IF stilling(stOff+ 16) in (wB,wN)  THEN defenders := defenders + 1; END IF;   \n      IF defenders < 2 THEN ix := pdN(wP,27); pdw(ix) := pdw(ix) + defendersWeight*4 - defenders*defendersWeight*2; pdw(ix+1) := pdw(ix+1) + defendersWeight*6 - defenders*defendersWeight*3; END IF;\n    ELSIF wkk = 12 and stilling(stOff+ 21)=wP and stilling(stOff+ 22)=wP and stilling(stOff+ 23)=wP THEN\n      defenders :=0;\n      FOR sc IN 13..18 LOOP\n         IF stilling(stOff+ sc) in (wR,wQ) THEN defenders := defenders + 1; END IF;\n      END LOOP;\n      IF stilling(stOff+ 13) in (wB,wN)  THEN defenders := defenders + 1; END IF;   \n      IF defenders < 2 THEN ix := pdN(wP,22); pdw(ix) := pdw(ix) + defendersWeight*4 - defenders*defendersWeight*2; pdw(ix-1) := pdw(ix-1) + defendersWeight*6 - defenders*defendersWeight*3; END IF;    \n    END IF;\n  END IF;\n  --\n\n  IF NOT EndGame AND (wkk=15) OR OpenGame AND (( MOD(wkk,10)>3) OR ( MOD(wkk,10)<7)) THEN\n    -- king castling eval (avoid a side?)\n    f:=0; -- O-O-O\n    IF (stilling(stOff+ 21)<>wP) AND (stilling(stOff+ 31)<>wP) THEN f := f + 1; END IF;\n    IF (stilling(stOff+ 22)<>wP) AND (stilling(stOff+ 22)<>wB) AND (stilling(stOff+ 33)<>wB) THEN f := f + 1; END IF;\n    IF stilling(stOff+ 23)<>wP THEN f := f + 1; END IF;\n    FOR x IN 1..3 LOOP \n      IF R(x) THEN f := f + 1; END IF; \n    END LOOP;\n    IF f>0 THEN \n      ix := pdN(wK,13); pdw(ix) := pdw(ix) - f*f*AvoidCastling;\n    END IF;\n    f:=0; -- O-O\n    IF (stilling(stOff+ 28)<>wP) AND (stilling(stOff+ 38)<>wP) THEN f := f + 1; END IF;\n    IF (stilling(stOff+ 27)<>wP) AND (stilling(stOff+ 27)<>wB)  AND (stilling(stOff+ 36)<>wB) THEN f := f + 1; END IF;\n    IF stilling(stOff+ 26)<>wP THEN f := f + 1; END IF;\n    FOR x IN 6..8 LOOP IF rr(x) THEN f := f +1; END IF; END LOOP;\n    IF f>0 THEN\n      ix := pdN(wK,17); pdw(ix) := pdw(ix) - f*f*AvoidCastling;\n    ELSE\n      IF (stilling(stOff+ 15)=wM) AND (stilling(stOff+ 16)=wB) AND (stilling(stOff+ 17)=wN) THEN\n        -- undeveloped king-side penalty\n        ix := pdN(wB,16); pdw(ix) := pdw(ix) - 8;\n        ix := pdN(wN,17); pdw(ix) := pdw(ix) - 8;\n      END IF; \n    END IF;\n  END IF;\n  --p := 439;\n  --dbms_output.put_line(length(stilling(stOff+ 85)));\n  \n  p := 440;\n    IF NOT EndGame AND NOT (OpenGame AND NOT LatePart) AND KingAir THEN-----------------new may19: air for king in mid-game:\n    IF bkk = 87 and stilling(stOff+ 76)=bP and stilling(stOff+ 77)=bP and stilling(stOff+ 78)=bP  THEN\n      defenders :=0;\n      FOR sc IN 81..86 LOOP\n         IF stilling(stOff+ sc) in (bR,bQ) THEN defenders := defenders + 1; END IF;\n      END LOOP;\n      IF stilling(stOff+ 86) in (bB,bN)  THEN defenders := defenders + 1; END IF;   \n      IF defenders < 2 THEN ix := pdN(bP,77); pdw(ix) := pdw(ix) + defendersWeight*4 - defenders*defendersWeight*2; pdw(ix+1) := pdw(ix+1) + defendersWeight*6 - defenders*defendersWeight*3; END IF;\n    ELSIF bkk = 82 and stilling(stOff+ 71)=bP and stilling(stOff+ 72)=bP and stilling(stOff+ 73)=bP THEN\n      defenders :=0;\n      FOR sc IN 83..88 LOOP\n         IF stilling(stOff+ sc) in (bR,bQ) THEN defenders := defenders + 1; END IF;\n      END LOOP;\n      IF stilling(stOff+ 83) in (bB,bN)  THEN defenders := defenders + 1; END IF;   \n      IF defenders < 2 THEN ix := pdN(bP,72); pdw(ix) := pdw(ix) + defendersWeight*4 - defenders*defendersWeight*2; pdw(ix-1) := pdw(ix-1) + defendersWeight*6 - defenders*defendersWeight*3; END IF;    \n    END IF;\n  END IF;\n  --\n\n  p := 442;\n  IF NOT EndGame AND (bkk=85) OR OpenGame AND ((MOD(bkk,10)>3) OR (MOD(bkk,10)<7)) THEN\n    p := 443;\n    f:=0; -- O-O-O\n    IF (stilling(stOff+ 71)<>bP) AND (stilling(stOff+ 61)<>bP) THEN f := f + 1; END IF;\n    IF (stilling(stOff+ 72)<>bP) AND (stilling(stOff+ 72)<>bB) AND (stilling(stOff+ 63)<>bB) THEN f := f + 1; END IF;\n    IF stilling(stOff+ 73)<>bP THEN f := f + 1; END IF;\n    FOR x IN 1..3 LOOP IF rr(x) THEN f := f + 1; END IF; END LOOP;\n    IF f>0 THEN \n      ix := pdN(bK,83); pdw(ix) := pdw(ix) - f*f*AvoidCastling;\n    END IF;\n    f:=0; -- O-O\n    IF (stilling(stOff+ 78)<>bP) AND (stilling(stOff+ 68)<>bP) THEN f := f +1; END IF;\n    IF (stilling(stOff+ 77)<>bP) AND (stilling(stOff+ 77)<>bB) AND (stilling(stOff+ 66)<>bB) THEN f := f +1; END IF;\n    IF stilling(stOff+ 76)<>bP THEN  f := f +1; END IF;\n    p := 446;\n    FOR x IN 6..8 LOOP IF rr(x) THEN  f := f + 1; END IF; END LOOP;\n    p := 447;\n    IF f>0 THEN\n      p := 448;\n      ix := pdN(bK,87); pdw(ix) := pdw(ix) - f*f*AvoidCastling;\n    ELSE\n      IF (stilling(stOff+ 85)=bM) AND (stilling(stOff+ 86)=bB) AND (stilling(stOff+ 87)=bN) THEN -- undeveloped king-side penalty\n        p := 449;\n        ix := pdN(bB,86); pdw(ix) := pdw(ix) - 8;\n        ix := pdN(bN,87); pdw(ix) := pdw(ix) - 8;\n      END IF; \n    END IF;\n  END IF;\n p := 450;\n \n  -- adjust around opponent king (wk,bk) as better fields (mating)\n  IF EndGame THEN\n    -- attract the kings to areas with pieces, own AND opponents\n    p := 452;\n    PieceAdjust;\n    p := 453;    \n    SetP(wQ,0,KingArea30);\n    p := 454;\n    SetP(wQ,1,KingArea30);\n    SetP(wQ,2,KingArea20);\n    SetP(wQ,3,KingArea12);\n    SetP(wQ,4,KingArea8);\n    SetP(wR,0,KingArea30);\n    SetP(wR,1,KingArea30);\n    SetP(wR,2,KingArea20);\n    SetP(wR,3,KingArea12);\n    SetP(wR,4,KingArea8);\n    SetP(wK,0,KingArea20);\n    SetP(wK,1,KingArea20);\n    SetP(wK,2,KingArea16);\n    SetP(wK,3,KingArea12);\n    SetP(wK,4,KingArea8);\n  ELSE\n    p := 460;\n    IF (stilling(stOff+ 11)=wR) AND (wkk=12) OR (wkk=13) THEN -- rook in corner\n      ix := pdN(wR,11); pdw(ix) := pdw(ix) - 10;\n      ix := pdN(wR,21); pdw(ix) := pdw(ix) - 10;\n      ix := pdN(wR,12); pdw(ix) := pdw(ix) - 10;\n      ix := pdN(wK,14); pdw(ix) := pdw(ix) - FLOOR(RokeretBonus / 2) ;\n      ix := pdN(wK,21); pdw(ix) := pdw(ix) + RokeretBonus+10;\n      ix := pdN(wK,22); pdw(ix) := pdw(ix) + RokeretBonus+10;\n      ix := pdN(wK,23); pdw(ix) := pdw(ix) + RokeretBonus;\n      IF (stilling(stOff+ wkk+9)=wP) AND (stilling(stOff+ wkk+10)=wP) THEN\n        ix := pdN(wP,31); pdw(ix) := pdw(ix) + RokeretBonus+10;\n        ix := pdN(wP,32); pdw(ix) := pdw(ix) + RokeretBonus+10;\n        ix := pdN(wP,33); pdw(ix) := pdw(ix) + RokeretBonus;\n        ix := pdN(wP,41); pdw(ix) := pdw(ix) + RokeretBonus+10;\n      END IF;\n    END IF;\n    IF (stilling(stOff+ 18)=wR) AND (wkk=17) OR (wkk=16) THEN -- rook in corner\n      ix := pdN(wR,18); pdw(ix) := pdw(ix) - 10;\n      ix := pdN(wR,28); pdw(ix) := pdw(ix) - 10;\n      ix := pdN(wR,17); pdw(ix) := pdw(ix) - 10;\n      ix := pdN(wK,15); pdw(ix) := pdw(ix) - FLOOR(RokeretBonus/2);\n      ix := pdN(wK,28); pdw(ix) := pdw(ix) + RokeretBonus+10;\n      ix := pdN(wK,27); pdw(ix) := pdw(ix) + RokeretBonus+10;\n      ix := pdN(wK,26); pdw(ix) := pdw(ix) + RokeretBonus;\n      IF (stilling(stOff+ wkk+11)=wP) AND (stilling(stOff+ wkk+10)=wP) THEN\n        ix := pdN(wP,38); pdw(ix) := pdw(ix) + RokeretBonus+10;\n        ix := pdN(wP,37); pdw(ix) := pdw(ix) + RokeretBonus+10;\n        ix := pdN(wP,36); pdw(ix) := pdw(ix) + RokeretBonus;\n        ix := pdN(wP,48); pdw(ix) := pdw(ix) + RokeretBonus+10;\n      END IF;\n    END IF;\n\n    IF (stilling(stOff+ 81)=bR) AND (bkk=82) OR (bkk=83) THEN -- rook in corner\n      ix := pdN(bR,81); pdw(ix) := pdw(ix) - 10;\n      ix := pdN(bR,71); pdw(ix) := pdw(ix) - 10;\n      ix := pdN(bR,82); pdw(ix) := pdw(ix) - 10;\n      ix := pdN(bK,84); pdw(ix) := pdw(ix) - FLOOR(RokeretBonus/2);\n      ix := pdN(bK,71); pdw(ix) := pdw(ix) + RokeretBonus+10;\n      ix := pdN(bK,72); pdw(ix) := pdw(ix) + RokeretBonus+10;\n      ix := pdN(bK,73); pdw(ix) := pdw(ix) + RokeretBonus;\n      IF (stilling(stOff+ bkk-11)=bP) AND (stilling(stOff+ bkk-10)=bP) THEN\n        ix := pdN(bP,61); pdw(ix) := pdw(ix) + RokeretBonus+10;\n        ix := pdN(bP,62); pdw(ix) := pdw(ix) + RokeretBonus+10;\n        ix := pdN(bP,63); pdw(ix) := pdw(ix) + RokeretBonus;\n        ix := pdN(bP,51); pdw(ix) := pdw(ix) + RokeretBonus+10;\n      END IF;\n    END IF;\n    \n    IF (stilling(stOff+ 88)=bR) AND (bkk=87) OR (bkk=86) THEN -- rook in corner\n      ix := pdN(bR,88); pdw(ix) := pdw(ix) - 10;\n      ix := pdN(bR,78); pdw(ix) := pdw(ix) - 10;\n      ix := pdN(bR,87); pdw(ix) := pdw(ix) - 10;\n      ix := pdN(bK,85); pdw(ix) := pdw(ix) - FLOOR(RokeretBonus/2);\n      ix := pdN(bK,78); pdw(ix) := pdw(ix) + RokeretBonus+16;\n      ix := pdN(bK,77); pdw(ix) := pdw(ix) + RokeretBonus+16;\n      ix := pdN(bK,76); pdw(ix) := pdw(ix) + RokeretBonus;\n      IF (stilling(stOff+ bkk-9)=bP) AND (stilling(stOff+ bkk-10)=bP) THEN\n        ix := pdN(bP,68); pdw(ix) := pdw(ix) + RokeretBonus+10;\n        ix := pdN(bP,67); pdw(ix) := pdw(ix) + RokeretBonus+10;\n        ix := pdN(bP,66); pdw(ix) := pdw(ix) + RokeretBonus;\n        ix := pdN(bP,58); pdw(ix) := pdw(ix) + RokeretBonus+10;\n      END IF;\n    END IF;\n\n    -- king positions adjust up around\n    p := 470;\n    KingAdj(wkk);\n    KingAdj(bkk);\n  END IF;\n\n  -- if closed center, add value to strategical pawn moves, decrement bad bishop\n  IF ClosedD4 THEN\n    IF ClosedE5 THEN\n      ix := pdN(wP,46); pdw(ix) := pdw(ix) + PawnStrateg10;\n      ix := pdN(wP,56); pdw(ix) := pdw(ix) + PawnStrateg20;\n      ix := pdN(bP,53); pdw(ix) := pdw(ix) + PawnStrateg20;\n    END IF;\n    IF ClosedE3 THEN\n      ix := pdN(wP,43); pdw(ix) := pdw(ix) + PawnStrateg20;\n      ix := pdN(bP,56); pdw(ix) := pdw(ix) + PawnStrateg10;\n      ix := pdN(bP,46); pdw(ix) := pdw(ix) + PawnStrateg20;\n    END IF;   \n    IF ClosedE5 OR ClosedE3 THEN -- decrement white/black bad bishops on own half\n      FOR m IN 1..4 LOOP\n        FOR n IN 1..4 LOOP\n          f:=10*m+n*2;\n          IF MOD(m,2)=1 THEN\n            ix := pdN(wB,f-1);  pdw(ix) := pdw(ix) - BishopClosed ;\n            ix := pdN(bB,f+40); pdw(ix) := pdw(ix) - BishopClosed ;\n          ELSE\n            ix := pdN(wB,f);    pdw(ix) := pdw(ix) - BishopClosed ;\n            ix := pdN(bB,f+39); pdw(ix) := pdw(ix) - BishopClosed ;\n          END IF;\n        END LOOP;\n      END LOOP;\n    END IF;\n  END IF;\n  p := 472;\n  IF ClosedE4 THEN\n    IF ClosedD5 THEN\n      ix := pdN(wP,43); pdw(ix) := pdw(ix) + PawnStrateg10;\n      ix := pdN(wP,53); pdw(ix) := pdw(ix) + PawnStrateg20;\n      ix := pdN(bP,56); pdw(ix) := pdw(ix) + PawnStrateg20;\n    END IF;\n    IF ClosedD3 THEN\n      ix := pdN(wP,46); pdw(ix) := pdw(ix) + PawnStrateg20;\n      ix := pdN(bP,53); pdw(ix) := pdw(ix) + PawnStrateg10;\n      ix := pdN(bP,43); pdw(ix) := pdw(ix) + PawnStrateg20;\n    END IF;   \n    IF ClosedD5 OR ClosedD3 THEN -- decrement white/black bad bishops on own half\n      FOR m IN 1..4 LOOP\n        FOR n IN 1..4 LOOP\n          f:=10*m+n*2;\n          IF MOD(m,2)=1 THEN\n            ix := pdN(wB,f);    pdw(ix) := pdw(ix) - BishopClosed;\n            ix := pdN(bB,f+39); pdw(ix) := pdw(ix) - BishopClosed;\n          ELSE\n            ix := pdN(wB,f-1);    pdw(ix) := pdw(ix) - BishopClosed;\n            ix := pdN(bB,f+40);   pdw(ix) := pdw(ix) - BishopClosed;\n          END IF;\n        END LOOP;\n      END LOOP;\n    END IF;\n  END IF;\n\n  -- add value to bishops if open center\n  IF NOT ClosedD4 AND NOT ClosedE4 THEN\n    FOR n IN 11..88 LOOP\n      ix := pdN(wB,n); pdw(ix) := pdw(ix) + BishopOpen;\n      ix := pdN(bB,n); pdw(ix) := pdw(ix) + BishopOpen;\n    END LOOP;\n  END IF;\n\n  -- add value to knights if closed center\n  IF ClosedD4 AND (ClosedE3 OR ClosedE5) OR  ClosedE4 AND (ClosedD3 OR ClosedD5) THEN\n    FOR n IN 11..88 LOOP\n      ix := pdN(wN,n); pdw(ix) := pdw(ix) + KnightClosed;\n      ix := pdN(bN,n); pdw(ix) := pdw(ix) + KnightClosed;\n    END LOOP;\n  END IF;\n\n  -- rooks bonus on open lines\n  FOR n IN 1..8 LOOP\n    nbb:=0; nB:=0;\n    FOR m IN 2..7 LOOP\n      ch_n:=stilling(stOff+ 10*m+n);\n      IF ch_n=wP THEN nbb := nbb+1; END IF;\n      IF ch_n=bP THEN nbb := nbb+1; END IF;\n    END LOOP;\n    IF nbb=0 THEN\n      IF nB=1 THEN f:=RookHalfOpenLine; ELSE f:=RookFullOpenLine; END IF;\n      FOR m in 1..2 LOOP\n        ix := pdN(wR,10*m+n); pdw(ix) := pdw(ix) + f;\n      END LOOP;\n      IF ((n=1) OR (n=8)) THEN \n        ix := pdN(wC,10+n); pdw(ix) := pdw(ix) + f;\n      END IF;\n    END IF;\n    IF nB=0 THEN\n      IF nbb=1 THEN f:=RookHalfOpenLine; ELSE f:=RookFullOpenLine; END IF;\n      FOR m in 7..8 LOOP\n        ix := pdN(bR,10*m+n); pdw(ix) := pdw(ix) + f;\n      END LOOP;\n      IF ((n=1) OR (n=8)) THEN \n        ix := pdN(bC,10+n); pdw(ix) := pdw(ix) + f;\n      END IF;\n    END IF;\n  END LOOP;\n  \n  p := 480;\n  IF OpenGame THEN\n    p := 481;\n    -- Bishop b/g5 bonus if not too early\n    IF (stilling(stOff+ 33)=wN) THEN \n      ix := pdN(bB,42); pdw(ix) := pdw(ix) + pdB5;\n    ELSE \n      ix := pdN(bB,42); pdw(ix) := pdw(ix) - FLOOR(pdB5/2);\n    END IF;\n    IF (stilling(stOff+ 63)=bN) THEN \n      ix := pdN(wB,52); pdw(ix) := pdw(ix) + pdB5;\n    ELSE \n      ix := pdN(wB,52); pdw(ix) := pdw(ix) - FLOOR(pdB5/2);\n    END IF;\n    IF (stilling(stOff+ 36)=wN) THEN \n      ix := pdN(bB,47); pdw(ix) := pdw(ix) + pdB5;\n    ELSE \n      ix := pdN(bB,47); pdw(ix) := pdw(ix) - FLOOR(pdB5/2);\n    END IF;\n    IF (stilling(stOff+ 66)=bN) THEN \n      ix := pdN(wB,57); pdw(ix) := pdw(ix) + pdB5;\n    ELSE \n      ix := pdN(wB,57); pdw(ix) := pdw(ix) - FLOOR(pdB5/2);\n    END IF;\n    \n    -- too early knights\n    IF (stilling(stOff+ 44)=wP) AND (stilling(stOff+ 54)=spc) THEN\n      IF stilling(stOff+ 63)=bN THEN\n        ix := pdN(bP,54); pdw(ix) := pdw(ix) + EarlyKnight;\n        ix := pdN(bP,65); pdw(ix) := pdw(ix) + EarlyKnight;\n      ELSE\n        ix := pdN(bN,63); pdw(ix) := pdw(ix) - EarlyKnight;\n        IF stilling(stOff+ 75)=bP THEN \n          ix := pdN(bN,63); pdw(ix) := pdw(ix) - EarlyKnight;\n        END IF;\n      END IF;\n    END IF;\n    IF (stilling(stOff+ 54)=bP) AND (stilling(stOff+ 44)=spc) THEN \n      IF stilling(stOff+ 33)=wN THEN\n        ix := pdN(wP,44); pdw(ix) := pdw(ix) + EarlyKnight;\n        ix := pdN(wP,35); pdw(ix) := pdw(ix) + EarlyKnight;\n      ELSE\n        ix := pdN(wN,33); pdw(ix) := pdw(ix) - EarlyKnight;\n        IF stilling(stOff+ 25)=wP THEN \n          ix := pdN(wN,33); pdw(ix) := pdw(ix) - EarlyKnight;\n        END IF;\n      END IF;\n    END IF;\n    IF (stilling(stOff+ 45)=wP) AND (stilling(stOff+ 55)=spc) THEN \n      IF stilling(stOff+ 66)=bN THEN\n        ix := pdN(bP,55); pdw(ix) := pdw(ix) + EarlyKnight;\n        ix := pdN(bP,64); pdw(ix) := pdw(ix) + EarlyKnight;\n      ELSE\n        ix := pdN(bN,66); pdw(ix) := pdw(ix) - EarlyKnight;\n        IF stilling(stOff+ 74)=bP THEN \n          ix := pdN(bN,66); pdw(ix) := pdw(ix) - EarlyKnight;\n        END IF;\n      END IF;\n    END IF;\n    IF (stilling(stOff+ 55)=bP) AND (stilling(stOff+ 45)=spc) THEN \n      IF stilling(stOff+ 36)=wN THEN\n        ix := pdN(wP,45); pdw(ix) := pdw(ix) + EarlyKnight;\n        ix := pdN(wP,34); pdw(ix) := pdw(ix) + EarlyKnight;\n      ELSE\n        ix := pdN(wN,36); pdw(ix) := pdw(ix) - EarlyKnight;\n        IF stilling(stOff+ 24)=wP THEN \n          ix := pdN(wN,36); pdw(ix) := pdw(ix) - EarlyKnight;\n        END IF;\n      END IF;\n    END IF;\n  END IF;\n  \n  -- too early bishops\n  IF (stilling(stOff+ 33)=spc) AND (stilling(stOff+ 23)=wP) THEN\n    ix := pdN(bB,42); pdw(ix) := pdw(ix) - EarlyKnight;\n  END IF;\n  IF (stilling(stOff+ 36)=spc) AND (stilling(stOff+ 26)=wP) THEN\n    ix := pdN(bB,47); pdw(ix) := pdw(ix) - EarlyKnight;\n  END IF;\n  IF (stilling(stOff+ 63)=spc) AND (stilling(stOff+ 73)=bP) THEN\n    ix := pdN(wB,52); pdw(ix) := pdw(ix) - EarlyKnight;\n  END IF;\n  IF (stilling(stOff+ 66)=spc) AND (stilling(stOff+ 76)=bP) THEN\n    ix := pdN(wB,57); pdw(ix) := pdw(ix) - EarlyKnight;\n  END IF;\n  IF NOT EndGame THEN\n    -- too late bishops\n    ix := pdN(bB,86); pdw(ix) := pdw(ix) - LateBishop;\n    ix := pdN(bB,83); pdw(ix) := pdw(ix) - LateBishop;\n    ix := pdN(wB,13); pdw(ix) := pdw(ix) - LateBishop;\n    ix := pdN(wB,16); pdw(ix) := pdw(ix) - LateBishop;\n  END IF;\n\n  -- h3\n  IF (stilling(stOff+ 47)=bB) OR (stilling(stOff+ 47)=bN) THEN \n    ix := pdN(wP,38); pdw(ix) := pdw(ix) + pawnh3a3attack;\n  END IF;\n  IF (stilling(stOff+ 57)=wB) OR (stilling(stOff+ 57)=wN) THEN \n    ix := pdN(bP,68); pdw(ix) := pdw(ix) + pawnh3a3attack;\n  END IF;\n  IF (stilling(stOff+ 42)=bB) OR (stilling(stOff+ 42)=bN) THEN \n    ix := pdN(wP,31); pdw(ix) := pdw(ix) + pawnh3a3attack;--f\u00f8r 38, m\u00e5 v\u00e6re en fejl\n  END IF;\n  IF (stilling(stOff+ 52)=wB) OR (stilling(stOff+ 52)=wN) THEN \n    ix := pdN(bP,61); pdw(ix) := pdw(ix) + pawnh3a3attack;--f\u00f8r 68, m\u00e5 v\u00e6re en fejl\n  END IF;\n  \n  p := 490;\n  --  penalty for bishops behind own pawns\n  FOR n_n IN 1..5 LOOP -- LOOP it for whites first 5 rows\n    n := n_n*10;\n    FOR m IN 1..8 LOOP\n      IF stilling(stOff+ n+m)=wP THEN\n        IF stilling(stOff+ n+10+m)=bP THEN v:=BishopPenalty*2; ELSE v:=BishopPenalty; END IF; \n        FOR f IN 1..m-1 LOOP -- to left edge\n          IF 10*f<n THEN -- if on-board \n            ix := pdN(wB,n-10*f+f); pdw(ix) := pdw(ix) - v;\n          END IF;\n        END LOOP;\n        FOR f IN 1..8-m LOOP -- to right edge\n          IF 10*f<n THEN\n            ix := pdN(wB,n-10*f+m+f); pdw(ix) := pdw(ix) - v;\n          END IF;\n        END LOOP;\n      END IF;\n    END LOOP;\n  END LOOP;\n  FOR n_n IN 4..8 LOOP -- LOOP it for blacks first 5 rows\n    n := n_n * 10;\n    FOR m IN 1..8 LOOP\n      IF stilling(stOff+ n+m)=bP THEN \n        IF stilling(stOff+ n-10+m)=wP THEN v:=BishopPenalty*2; ELSE v:=BishopPenalty; END IF;\n        FOR f IN 1..m-1 LOOP -- to left edge\n          IF 10*f+n<90 THEN -- if on-board\n            ix := pdN(bB,n+10*f+f); pdw(ix) := pdw(ix) - v;\n          END IF;\n        END LOOP;\n        FOR f IN 1..8-m LOOP -- to right edge\n          IF 10*f+n<90 THEN\n            ix := pdN(bB,n+10*f+m+f); pdw(ix) := pdw(ix) - v;\n          END IF;\n        END LOOP;\n      END IF;\n    END LOOP;\n  END LOOP;\n  p := 492;\n      \n  -- mirror pdw to pdb\n  FOR ch_n IN wP..wR LOOP \n    CASE \n      WHEN CH_n in ( wP,wE,wR,wC,wK,wM,wQ,wN,wB) THEN\n      FOR n IN 1..4 LOOP \n        nm:=10*n;\n        om:=90-nm;\n        FOR m IN 1..8 LOOP\n          nm:=nm+1;\n          om:=om+1;\n          pdb(pdN(ch_n,nm))        := pdw(pdN(UPPER_n(ch_n),om));\n          pdb(pdN(ch_n,om))        := pdw(pdN(UPPER_n(ch_n),nm));\n          pdb(pdN(UPPER_n(ch_n),nm)) := pdw(pdN(ch_n,om));\n          pdb(pdN(UPPER_n(ch_n),om)) := pdw(pdN(ch_n,nm));\n        END LOOP;\n      END LOOP;\n    ELSE \n      NULL;\n    END CASE;\n  END LOOP;\n  p := 499;\n  --dbms_output.put_line(p);\nEXCEPTION\n  WHEN OTHERS THEN\n    dbms_output.put_line('PreProcessor p='||p||': '||sqlerrm);\n    --raise;\nEND PreProcessor;\n\n\nFUNCTION Eval(stilling STILLINGTYPE, Activity SIMPLE_INTEGER,\n              Black BOOLEAN, alpha SIMPLE_INTEGER, beta SIMPLE_INTEGER) RETURN SIMPLE_INTEGER IS\n/* evaluates the actual postion using pd and position. */\n/* Is called thousands of times for each engine call! */\n\n\n  n     SIMPLE_INTEGER := 0;\n  m     SIMPLE_INTEGER := 0;\n  res   SIMPLE_INTEGER := 0;\n  kposs SIMPLE_INTEGER := 0;\n  Kpos  SIMPLE_INTEGER := 0;\n  x     SIMPLE_INTEGER := 0;\n  y     SIMPLE_INTEGER := 0;\n  y_n   SIMPLE_INTEGER := 0;\n  inmv SIMPLE_INTEGER  := 0;   -- Positionel, matriel v\u00e6rdi\n  brik           SIMPLE_INTEGER := 0;\n  ch             SIMPLE_INTEGER := 0; -- ny\n  KingEndGameW  BOOLEAN;\n  KingEndGameB  BOOLEAN; -- if k or k+n endgame W/B\n  knEndGameW    BOOLEAN;\n  knEndGameB    BOOLEAN; -- if k+n endgame W/B      \n  priW          SIMPLE_INTEGER := 0;\n  priB          SIMPLE_INTEGER := 0; -- for k or kn endgame     \n  TYPE pawnsType is varray(89) of BOOLEAN;\n  Wpawns  pawnsType := pawnsType(); -- uses 11..89, but is 1..89\n  Bpawns  pawnsType := pawnsType();\n  pawnsInit BOOLEAN:=FALSE;\n  TYPE pawnLineType is varray(8) of SIMPLE_INTEGER;\n  WpL   pawnLineType := pawnLineType(); -- var SHORTINT\n  BpL   pawnLineType := pawnLineType(); -- Pawns on line (iopb) \n  WpLc          SIMPLE_INTEGER := 0;\n  BpLc          SIMPLE_INTEGER := 0; -- Pawns Total (if only pawns back) \n  HvidsTur      BOOLEAN;\n  Slut          BOOLEAN;\n  wBishops      SIMPLE_INTEGER := 0;\n  bBishops      SIMPLE_INTEGER := 0;\n  DebugS VARCHAR2(89);\n  OpenCenterDegree SIMPLE_INTEGER :=2;\nBEGIN\n  HvidsTur := stilling(stOff+ HvisTur)<>bN;\n  IF HvidsTur THEN \n    inmv:=InMoveBonus;\n  ELSE\n    inmv:=-InMoveBonus;\n  END IF;\n  Evals := Evals+1;\n  posi  := 0;\n  wbonus:= 0;\n  bbonus:= 0;\n  matr  := 0;\n  -- based on static eval, how open is center pawn-structure\n  IF  ClosedE4 AND (ClosedD3 or ClosedD5) OR  ClosedD4 AND (ClosedE3 or ClosedE5) THEN \n    OpenCenterDegree:= 0;\n  ELSIF ClosedE4 and not ClosedD4 or ClosedD4 and not ClosedE4 THEN\n    OpenCenterDegree:= 1;\n  --ELSE   \n  --  OpenCenterDegree:= 2;--default\n  END IF;\n  -- KingEndgame if just pawns and knights left. knEndGame if knights left.\n  KingEndGameW:=TRUE; knEndGameW:=FALSE;\n  KingEndGameB:=TRUE; knEndGameB:=FALSE;\n  FOR n IN 11..88 LOOP\n    brik:=stilling(stOff+ n);\n    IF (brik>bA) THEN \n--WRT(brik);\n      CASE WHEN brik IN\n        (wR,wC) THEN \n                    matr:=matr+ValueT; KingEndGameW:=FALSE;\n                    IF (n<50) THEN\n                      IF (stilling(stOff+ n+10)=wP) OR (stilling(stOff+ n+20)=wP) THEN\n                        wbonus:=wbonus-RookFirstRowBehindPawn;\n                      END IF;\n                    END IF;\n                    IF n=11 THEN\n                      IF brik=wC THEN matr:=matr+(ValueR-ValueT); END IF;\n                      IF stilling(stOff+ 12)<>spc THEN\n                        IF stilling(stOff+ 12)=wK THEN\n                          wbonus:=wbonus-RookCornerNextToKing;\n                        ELSE\n                          wbonus:=wbonus-RookCornerNextToPiece;\n                        END IF;\n                      END IF;\n                    ELSIF n=18 THEN\n                      IF brik=wC THEN matr:=matr+(ValueR-ValueT); END IF;\n                      IF stilling(stOff+ 17)<>spc THEN\n                        IF stilling(stOff+ 17)=wK THEN\n                          wbonus:=wbonus-RookCornerNextToKing;\n                        ELSE\n                          wbonus:=wbonus-RookCornerNextToPiece;\n                        END IF;\n                      END IF;\n                    END IF;\n        WHEN brik=wM  THEN \n                    matr:=matr+ValueM; kposs:=n;\n        WHEN brik= wK     THEN \n                    matr:=matr+ValueK; kposs:=n;\n                    IF NOT EndGame THEN\n                      IF (n=16) AND ((stilling(stOff+ 18)=wR) OR (stilling(stOff+ 17)=wR))\n                      OR (n=13) AND ((stilling(stOff+ 11)=wR) OR (stilling(stOff+ 12)=wR)) THEN\n                        IF (n=16) AND (stilling(stOff+ 26)=wP) AND (stilling(stOff+ 27)=wP) \n                        OR (n=13) AND (stilling(stOff+ 23)=wP) AND (stilling(stOff+ 22)=wP) THEN\n                          wbonus:=wbonus-KingCloseRook;\n                        END IF;\n                      ELSE\n                        FOR m IN n+9..n+11 LOOP\n                          IF stilling(stOff+ m)=wP THEN wbonus:=wbonus+12; END IF;\n                        END LOOP;\n                        wbonus:=wbonus-KingBehindPawns;\n                      END IF;\n                    END IF;\n        WHEN brik= wQ     THEN matr:=matr+ValueD; KingEndGameW:=FALSE;\n                    IF OpenGame THEN\n                      IF n>28 THEN\n                        wbonus:=wbonus-QueenDeveloped;\n                        IF n>41 THEN\n                          wbonus:=wbonus-12;\n                        ELSE\n                          IF (n=34) AND (stilling(stOff+ 24)=wP) THEN\n                            wbonus:=wbonus-QueenBeforePawn;\n                            IF (stilling(stOff+ 13)=wB) AND (stilling(stOff+ 22)=wP) THEN\n                              wbonus:=wbonus-QueenBeforePawnBlockedBishop;\n                            END IF;\n                          ELSIF (n=35) AND (stilling(stOff+ 25)=wP) THEN\n                            wbonus:=wbonus-QueenBeforePawn;\n                            IF (stilling(stOff+ 16)=wB) AND (stilling(stOff+ 27)=wP) THEN\n                              wbonus:=wbonus-QueenBeforePawnBlockedBishop;\n                            END IF;\n                          END IF;\n                        END IF;\n                      ELSIF (n=24) AND (stilling(stOff+ 13)=wB) AND (stilling(stOff+ 22)=wP)\n                      OR    (n=25) AND (stilling(stOff+ 16)=wB) AND (stilling(stOff+ 27)=wP) THEN\n                        wbonus :=wbonus-QueenBeforeBishop;\n                      END IF;\n                    END IF;\n        WHEN brik= wB     THEN \n                    matr:=matr+ValueL; KingEndGameW:=FALSE;wBishops:=wBishops+1;\n                    IF (n<39) AND (n>30) THEN IF stilling(stOff+ n-10)=wP THEN wbonus:=wbonus-BishopBeforePawn; END IF; END IF;\n                    IF (n=13) AND (stilling(stOff+ 22)=wP) AND (stilling(stOff+ 24)<>spc) THEN wbonus:=wbonus-BishopBehindPawn; END IF;  \n                    IF (n=16) AND (stilling(stOff+ 27)=wP) AND (stilling(stOff+ 25)<>spc) THEN wbonus:=wbonus-BishopBehindPawn; END IF;  \n                    IF (stilling(stOff+ n-11)=wP) OR (stilling(stOff+ n-9)=wP) THEN wbonus:=wbonus+BishopProtectedByPawn; END IF;\n        WHEN brik= wN     THEN \n                    matr:=matr+Value_S; knEndGameW:=TRUE;\n                    IF (n<39) AND (n>30) THEN IF stilling(stOff+ n-10)=wP THEN wbonus:=wbonus-kNightBeforePawn; END IF; END IF;\n                    IF (stilling(stOff+ n-11)=wP) OR (stilling(stOff+ n-9)=wP) THEN wbonus:=wbonus+kNightProtectedByPawn; END IF;\n                    IF (stilling(stOff+ n+10)=bP) AND (stilling(stOff+ n+11)<>bP) AND (stilling(stOff+ n+9)<>bP) THEN\n                      wbonus:=wbonus+kNightpPawnInFront;\n                      IF (n>50) OR (stilling(stOff+ n+19)<>bP) AND (stilling(stOff+ n+21)<>bP) THEN \n                        wbonus:=wbonus+kNightpPawnInFront;\n                        IF (n>60) OR (stilling(stOff+ n+29)<>bP) AND (stilling(stOff+ n+31)<>bP) THEN \n                          wbonus:=wbonus+kNightpPawnInFront;\n                        END IF;\n                      END IF;\n                    END IF;\n        WHEN brik IN (wP,wE) THEN matr:=matr+ValueB;\n                    IF stilling(stOff+ n- 1)=wP THEN\n                      IF EndGame THEN\n                        IF n>70 THEN\n                          wbonus:=wbonus+TwoOnRow7;\n                        ELSIF n>60 THEN\n                          wbonus:=wbonus+TwoOnRow6;\n                        ELSIF n>50 THEN\n                          wbonus:=wbonus+TwoOnRow5;\n                        END IF;\n                      END IF;\n                      wbonus:=wbonus+PawnNextToPawn;\n                    END IF;\n                    IF stilling(stOff+ n+ 1)=wP THEN wbonus:=wbonus+PawnNextToPawn; END IF;\n                    IF stilling(stOff+ n- 9)=wP THEN wbonus:=wbonus+PawnGuardsPawn; END IF;\n                    IF stilling(stOff+ n-11)=wP THEN wbonus:=wbonus+PawnGuardsPawn; END IF;\n                    IF stilling(stOff+ n-10)=wP THEN wbonus:=wbonus-PawnDoubbledPawn; END IF;\n                    IF stilling(stOff+ n-20)=wP THEN wbonus:=wbonus-PawnDoubbledPawn; END IF;\n        WHEN brik in (bR,bC) THEN \n                    matr:=matr-ValueT; KingEndGameB:=FALSE;\n                    IF (n>40) THEN\n                      IF (stilling(stOff+ n-10)=bP) OR (stilling(stOff+ n-20)=bP) THEN\n                        bbonus:=bbonus-RookFirstRowBehindPawn;\n                      END IF;\n                    END IF;\n                    IF n=81 THEN\n                      IF brik=bC THEN matr:=matr+(ValueT-ValueR); END IF;\n                      IF stilling(stOff+ 82)<>spc THEN\n                        IF stilling(stOff+ 82)=bK THEN\n                          bbonus:=bbonus-RookCornerNextToKing;\n                        ELSE\n                          bbonus:=bbonus-RookCornerNextToPiece;\n                        END IF;\n                      END IF;\n                    ELSIF n=88 THEN\n                      IF brik=bC THEN matr:=matr+(ValueT-ValueR); END IF;\n                      IF stilling(stOff+ 87)<>spc THEN\n                        IF stilling(stOff+ 87)=bK THEN\n                          bbonus:=bbonus-RookCornerNextToKing;\n                        ELSE\n                          bbonus:=bbonus-RookCornerNextToPiece;\n                        END IF;\n                      END IF;\n                    END IF;\n        WHEN brik= bM     THEN \n                    matr:=matr-ValueM; Kpos:=n;\n        WHEN brik= bK     THEN \n                    matr:=matr-ValueK; Kpos:=n;\n                    IF NOT EndGame THEN\n                      IF (n=86) AND ((stilling(stOff+ 88)=bR) OR (stilling(stOff+ 87)=bR))\n                      OR (n=83) AND ((stilling(stOff+ 81)=bR) OR (stilling(stOff+ 82)=bR)) THEN\n                        IF (n=86) AND (stilling(stOff+ 76)=bP) AND (stilling(stOff+ 77)=bP) \n                        OR (n=83) AND (stilling(stOff+ 73)=bP) AND (stilling(stOff+ 72)=bP) THEN\n                          bbonus:=bbonus-KingCloseRook;\n                        END IF;\n                      ELSE\n                        FOR m IN n-11..n-9 LOOP\n                          IF stilling(stOff+ m)=bP THEN bbonus:=bbonus+KingBehindPawns; END IF;\n                        END LOOP;\n                        bbonus:=bbonus-KingBehindPawns;\n                      END IF;\n                    END IF;\n        WHEN brik= bQ     THEN \n                    matr:=matr-ValueD; KingEndGameB:=FALSE;\n                    IF OpenGame THEN\n                      IF n<71 THEN\n                        bbonus:=bbonus-12;\n                        IF n<61 THEN\n                           IF n<>51 THEN bbonus:=bbonus-QueenDeveloped; END IF;\n                        ELSE\n                          IF (n=64) AND (stilling(stOff+ 74)=bP) THEN\n                            bbonus:=bbonus-QueenBeforePawn;\n                            IF (stilling(stOff+ 83)=bB) AND (stilling(stOff+ 72)=bP) THEN\n                              bbonus:=bbonus-QueenBeforePawnBlockedBishop;\n                            END IF;\n                          ELSIF (n=65) AND (stilling(stOff+ 75)=bP) THEN\n                            bbonus:=bbonus-QueenBeforePawn;\n                            IF (stilling(stOff+ 86)=bB) AND (stilling(stOff+ 77)=bP) THEN\n                              bbonus:=bbonus-QueenBeforePawnBlockedBishop;\n                            END IF;\n                          END IF;\n                        END IF;\n                      ELSIF (n=74) AND (stilling(stOff+ 83)=bB) AND (stilling(stOff+ 72)=bP)\n                      OR    (n=75) AND (stilling(stOff+ 86)=bB) AND (stilling(stOff+ 77)=bP) THEN\n                        bbonus :=bbonus-QueenBeforeBishop;\n                      END IF;\n                    END IF;\n        WHEN brik= bB     THEN \n                    matr:=matr-ValueL; KingEndGameB:=FALSE;bBishops:=bBishops+1;\n                    IF (n>60) AND (n<69) THEN IF stilling(stOff+ n+10)=bP THEN bbonus:=bbonus-BishopBeforePawn; END IF; END IF;\n                    IF (n=83) AND (stilling(stOff+ 72)=bP) AND (stilling(stOff+ 74)<>spc) THEN bbonus:=bbonus-BishopBehindPawn; END IF;  \n                    IF (n=86) AND (stilling(stOff+ 77)=bP) AND (stilling(stOff+ 75)<>spc) THEN bbonus:=bbonus-BishopBehindPawn; END IF;  \n                    IF (stilling(stOff+ n+11)=bP) OR (stilling(stOff+ n+9)=bP) THEN bbonus:=bbonus+BishopProtectedByPawn; END IF;\n        WHEN brik= bN     THEN \n                    matr:=matr-Value_S; knEndGameB:=TRUE;\n                    IF (n>60) AND (n<69) THEN IF stilling(stOff+ n+10)=bP THEN bbonus:=bbonus-kNightBeforePawn; END IF; END IF;\n                    IF (stilling(stOff+ n+11)=bP) OR (stilling(stOff+ n+9)=bP) THEN bbonus:=bbonus+kNightProtectedByPawn; END IF;\n                    IF (stilling(stOff+ n-10)=wP) AND (stilling(stOff+ n-11)<>wP) AND (stilling(stOff+ n-9)<>wP) THEN\n                      bbonus:=bbonus+kNightpPawnInFront;\n                      IF (n<31) OR (stilling(stOff+ n-19)<>wP) AND (stilling(stOff+ n-21)<>wP) THEN \n                        bbonus:=bbonus+kNightpPawnInFront;\n                        IF (n<41) OR (stilling(stOff+ n-29)<>wP) AND (stilling(stOff+ n-31)<>wP) THEN \n                          bbonus:=bbonus+kNightpPawnInFront;\n                        END IF;\n                      END IF;\n                    END IF;\n        WHEN brik in (bP,bE) THEN \n                    matr:=matr-ValueB;\n                    IF stilling(stOff+ n- 1)=bP THEN\n                      IF EndGame THEN\n                        IF n<29 THEN\n                          bbonus:=bbonus+TwoOnRow7;\n                        ELSIF n<39 THEN\n                          bbonus:=bbonus+TwoOnRow6;\n                        ELSIF n<49 THEN\n                          bbonus:=bbonus+TwoOnRow5;\n                        END IF;\n                      END IF;\n                      bbonus:=bbonus+PawnNextToPawn;\n                    END IF;\n                    IF stilling(stOff+ n+ 1)=bP THEN bbonus:=bbonus+PawnNextToPawn; END IF;\n                    IF stilling(stOff+ n+ 9)=bP THEN bbonus:=bbonus+PawnGuardsPawn; END IF;\n                    IF stilling(stOff+ n+11)=bP THEN bbonus:=bbonus+PawnGuardsPawn; END IF;\n                    IF stilling(stOff+ n+10)=bP THEN bbonus:=bbonus-PawnDoubbledPawn; END IF;\n                    IF stilling(stOff+ n+20)=bP THEN bbonus:=bbonus-PawnDoubbledPawn; END IF;\n      ELSE\n        NULL; \n      END CASE;\n--(*$ IF Test0\n--WRITEF(s('POSI (')+l(posi)+c(')'));\n--(*$ENDIF\n      IF brik=UPPER_n(brik) THEN \n        posi:=posi-pd(pdN(brik,n)); -- 99-n\n      ELSE \n        posi:=posi+pd(pdN(brik,n)); -- UPPER_n(brik)\n      END IF;\n--(*$ IF Test0\n--WRITELNF(s(' brik=')+c(brik)+s(' n=')+l(n)+s(' posi=')+l(posi));\n--(*$ENDIF\n    END IF;\n  END LOOP;\n  IF wBishops = 2 THEN wbonus:=wbonus+BishopPairBonus*OpenCenterDegree; END IF;\n  IF bBishops = 2 THEN bbonus:=bbonus+BishopPairBonus*OpenCenterDegree; END IF;\n\n  --short-cut experiment (no detailed eval if more than 300 better than nessecary\n  -- Makes it just one % faster and serches 2% more positions. NO change in strength, so \n  -- Not a good complication:\n  --IF matr<alpha-300 OR matr>beta+300 THEN\n  --      IF Black THEN\n  --        return -matr-posi-wbonus+bbonus -inmv;\n  --       ELSE\n  --        return  matr+posi+wbonus-bbonus +inmv;     \n  --      END IF;\n  --END IF;\n\n  IF (KingEndGameW OR KingEndGameB) AND ABS(matr+posi+wbonus-bbonus) < 800 THEN --dont use energy to more exact endgame-evaluations in totally won/lost positions (100= one pawn)\n    IF knEndGameW THEN priW:=knEndGamePrio; ELSE priW:=knEndGamePrio*2; END IF;\n    IF knEndGameB THEN priB:=knEndGamePrio; ELSE priB:=knEndGamePrio*2; END IF;\n    --WRT('KingEndgame '||CASE WHEN KingEndGameW THEN 'W' END||','||CASE WHEN KingEndGameB THEN bP END);\n    --FOR yy IN 1..8 LOOP\n    --  DebugS := edge;\n    --  FOR xx IN 1..8 LOOP\n    --    DebugS := DebugS||stilling(stOff+ xx+10*(9-yy));\n    --  END LOOP;\n    --  WRT(DebugS);\n    --END LOOP;\n    --WRT('matr='||matr||' wbonus='||wbonus||' bbonus='||bbonus||' posi='||posi); --matr=-1559 wbonus=-3 bbonus=24 posi=-33\n    --WRT(stilling(stOff+ hvistur));\n    IF NOT pawnsInit THEN\n      Wpawns.extend(89);\n      Bpawns.extend(89);\n      WpL.extend(8);\n      BpL.extend(8);\n      pawnsInit := TRUE;\n    END IF;\n    \n    FOR n IN 11..88 LOOP\n      Wpawns(n):=FALSE;\n      Bpawns(n):=FALSE;\n    END LOOP;\n\n    FOR x IN 1..8 LOOP WpL(x):=0; BpL(x):=0; END LOOP;\n    WpLc:=0; BpLc:=0;\n    -- mark squares with pawn defend\n    FOR y IN 2..7 LOOP\n      FOR x IN 1..8 LOOP\n        n:=10*y+x;\n        ch := stilling(stOff+ n);\n        CASE \n         WHEN ch in (bP,bE) THEN \n                    IF KingEndGameB THEN\n                      BpL(x) := BpL(x) + 1;\n                      BpLc := BpLc + 1;\n                      Bpawns(n-10):=TRUE;\n                      IF NOT HvidsTur THEN \n                        Bpawns(n-11):=TRUE; -- 10 too!\n                        Bpawns(n- 9):=TRUE;\n                      END IF;\n                      --FOR m IN 20+x..n-20 BY 10 LOOP\n                      FOR m_n in 2..y-2 LOOP --testet grund\u00edgt!!!\n                        m := m_n*10+x;\n                        Bpawns(m)  :=TRUE;\n                        Bpawns(m-1):=TRUE;\n                        Bpawns(m+1):=TRUE;\n                      END LOOP;\n                    END IF;\n        WHEN ch in (wP,wE)  THEN \n                    IF KingEndGameW THEN\n                      WpL(x) := WpL(x) + 1;\n                      WpLc := WpLc+1;\n                      Wpawns(n+10):=TRUE;\n                      IF HvidsTur THEN \n                        Wpawns(n+11):=TRUE; -- 89 too!\n                        Wpawns(n+ 9):=TRUE;\n                      END IF;\n                      --FOR m IN n+20..70+x BY 10 LOOP\n                      FOR m_n in 2+y..7 LOOP--testet grund\u00edgt!!!\n                        m := m_n*10+x;\n                        Wpawns(m)  :=TRUE;\n                        Wpawns(m-1):=TRUE;\n                        Wpawns(m+1):=TRUE;\n                      END LOOP;\n                    END IF;\n        ELSE \n          NULL;\n        END CASE;\n      END LOOP;\n    END LOOP;\n\n    -- find first (nearest promotion) free white pawn\n    IF KingEndGameB THEN\n      Slut:=FALSE;\n      --IF NOT knEndGameB AND (posi<0) THEN -- Check if only pawns on A or H file\n      --  -- IF king in the corner then equal !!!!!!! VIRKER VIST IKKE!!!!!*)\n      --  IF (BpLc=BpL(8)) AND ((kposs=17) OR (kposs=18) OR (kposs=27) OR (kposs=28)) \n      --  OR (BpLc=BpL(1)) AND ((kposs=12) OR (kposs=11) OR (kposs=22) OR (kposs=21)) THEN\n      --    RETURN(0);\n      --  END IF;\n      --END IF;\n      <<outer_y1>>\n      FOR y_n IN 3..7 LOOP--FOR y IN 7..3 BY -1 \n        y := 10 - y_n;\n        FOR x IN 1..8 LOOP\n          n:=10*y+x;\n          IF (stilling(stOff+ n)=wP) OR (y=3) AND (stilling(stOff+ n-10)=wP) THEN\n            IF NOT Bpawns(n) THEN\n              IF (FLOOR(Kpos/10)<y) OR (ABS( MOD(Kpos,10-x))>8-y) THEN\n                Slut:=TRUE; -- inside quadrant\n              ELSIF NOT knEndGameB THEN\n                IF (n>60) THEN\n                  IF (kposs=n+9) OR (kposs=n+11) THEN\n                    Slut:=TRUE; -- Supported pawn\n                  ELSIF n>70 THEN\n                    IF (kposs=n-1) OR (kposs=n+1)\n                    OR (kposs=n-12) AND (kposs<=n-8) AND (Kpos<>n+10) THEN\n                      Slut:=TRUE; -- Supported pawn\n                    END IF;\n                  ELSE\n                    IF (kposs=n-1) AND (MOD(Kpos,10)>x)\n                    OR (kposs=n+1) AND (MOD(Kpos,10)<x) THEN\n                      Slut:=TRUE; -- Supported pawn in one move\n                      posi:=posi-SupportedPawnPenalty;\n                    END IF;\n                  END IF;\n                ELSIF (n>50) THEN\n                  -- IF Possibly supported pawn then add value:\n                  IF (kposs=n+9)  OR (kposs=n+11) THEN posi:=posi+ SupportedPawn0911; END IF;\n                  IF (kposs=n+10) OR (kposs=n+20) THEN posi:=posi+ SupportedPawn1020; END IF;\n                  IF (kposs=n+19) OR (kposs=n+21) THEN posi:=posi+ SupportedPawn1921; END IF;\n                END IF;\n              END IF;\n              IF Slut THEN\n                posi:=posi+y*y*priW; \n                exit outer_y1;--x:=8; y:=3; -- pawn can promote, exit loop\n--(*$ IF Test0 --WRITELNF(s(' fpW felt=')+l(n)+s(' posi=')+l(posi)); --(*$ ENDIF\n              END IF;\n            END IF;\n          END IF;\n        END LOOP;\n      END LOOP outer_y1;\n    END IF;\n    -- find first (nearest promotion) free black pawn\n    IF KingEndGameW THEN\n      Slut:=FALSE;\n      --IF NOT knEndGameW AND (posi>0) THEN -- Check if only pawns on A or H file\n      --  -- IF king in the corner then equal !!!!!!! MAY NOT WORK!!!!!\n      --  IF (WpLc=WpL(8)) AND ((Kpos=87) OR (Kpos=88) OR (Kpos=77) OR (Kpos=78)) \n      --  OR (WpLc=WpL(1)) AND ((Kpos=72) OR (Kpos=71) OR (Kpos=72) OR (Kpos=71)) THEN\n      --    RETURN(0);\n      --  END IF;\n      --END IF;\n      <<outer_y2>>\n      FOR y IN 2..6 LOOP\n        FOR x IN 1..8 LOOP\n          n:=10*y+x;\n          IF (stilling(stOff+ n)=bP) OR (y=6) AND (stilling(stOff+ n+10)=bP) THEN\n            IF NOT Wpawns(n) THEN\n              IF (FLOOR(kposs/10)-1>y) OR (ABS(MOD(kposs,10)-x)>y) THEN\n                Slut:=TRUE; -- inside quadrant\n              ELSIF NOT knEndGameW THEN\n                IF (n<40) THEN\n                  IF (Kpos=n-9) OR (Kpos=n-11) THEN\n                    Slut:=TRUE; -- Supported pawn\n                  ELSIF n<30 THEN\n                    IF (Kpos=n-1) OR (Kpos=n+1)\n                    OR (Kpos>=n+12) AND (Kpos<=n+8) AND (kposs<>n-10) THEN\n                      Slut:=TRUE; -- Supported pawn\n                    END IF;\n                  ELSE\n                    IF (Kpos=n-1) AND (MOD(kposs,10)>x)\n                    OR (Kpos=n+1) AND (MOD(kposs, 10)<x) THEN\n                      Slut:=TRUE; -- Supported pawn in one move\n                      posi:=posi+SupportedPawnPenalty;\n                    END IF;\n                  END IF;\n                ELSIF (n<50) THEN\n                  -- IF Possibly supported pawn then add value:\n                  IF (Kpos=n-9)  OR (Kpos=n-11) THEN posi:=posi- SupportedPawn0911; END IF;\n                  IF (Kpos=n-10) OR (Kpos=n-20) THEN posi:=posi- SupportedPawn1020; END IF;\n                  IF (Kpos=n-19) OR (Kpos=n-21) THEN posi:=posi- SupportedPawn1921; END IF;\n                END IF;\n              END IF;\n              IF Slut THEN\n                posi:=posi-(9-y)*(9-y)*priB; \n                exit outer_y2;-- x:=8; y:=6; -- pawn can promote, exit loop\n--(*$ IF Test0  --WRITELNF(s(' fpB felt=')+l(n)+s(' posi=')+l(posi)); --(*$ ENDIF\n              END IF;\n            END IF;\n          END IF;\n        END LOOP;\n      END LOOP outer_y2;\n    END IF;\n          \n  END IF;\n\n  IF TRUE THEN-- EndGame OR (matr>alpha-200) AND (matr<beta+200) THEN\n    -- penalty for bad development\n    m:=-1;\n    IF stilling(stOff+ 12)=wN THEN m := m + 1; END IF;\n    IF stilling(stOff+ 13)=wB THEN m := m + 1; END IF;\n    IF stilling(stOff+ 15)=wM THEN\n      m := m + 1;\n      IF stilling(stOff+ 16)=wB THEN wbonus:=wbonus-BadDevelBishop; END IF;\n    END IF;\n    IF stilling(stOff+ 16)=wB THEN m := m + 1; END IF;\n    IF stilling(stOff+ 17)=wN THEN m := m + 1; END IF;\n    IF stilling(stOff+ 24)=wP THEN m := m + 1; END IF;\n    IF stilling(stOff+ 25)=wP THEN m := m + 1; END IF;\n    IF m>0 THEN wbonus:=wbonus-m*BadDevelPenalty; END IF;\n    m:=-1;\n    IF stilling(stOff+ 82)=bN THEN m := m + 1; END IF;\n    IF stilling(stOff+ 83)=bB THEN m := m + 1; END IF;\n    IF stilling(stOff+ 85)=bM THEN\n      m := m + 1;\n      IF stilling(stOff+ 86)=bB THEN bbonus:=bbonus-BadDevelBishop; END IF;\n    END IF;\n    IF stilling(stOff+ 86)=bB THEN m := m + 1; END IF;\n    IF stilling(stOff+ 87)=bN THEN m := m + 1; END IF;\n    IF stilling(stOff+ 74)=bP THEN m := m + 1; END IF;\n    IF stilling(stOff+ 75)=bP THEN m := m + 1; END IF;\n    IF m>0 THEN bbonus:=bbonus-m*BadDevelPenalty; END IF;\n\n--(*$ IF Test0\n--  tst2('Eval:',stilling,bK);\n--(*$ ENDIF\n\n    IF Black THEN\n--(*$ IF Test --WRITELNF(s(' !!SORT!! ')); --(*$ ENDIF\n  \n      res:=(-matr-posi-wbonus+bbonus /* +Activity*ActivityWeight */ -inmv);\n    ELSE\n      res:=( matr+posi+wbonus-bbonus /* +Activity*ActivityWeight */ +inmv);\n    END IF; --** posi DIV 2 !!!!!!!!!****)\n    \n    IF PawnOfficer THEN\n      IF endgame and ABS(res) > 180 THEN -- in front, so bonus for pawns and penalty for Officers\n        m := 0; \n        IF ABS(res) > 540 THEN\n          n := 4;\n        ELSIF ABS(res) > 360 THEN\n          n := 3;\n        ELSE\n          n := 2;\n        END IF;\n        FOR y IN 1..8 LOOP\n          FOR x IN 1..8 LOOP\n            brik:=UPPER_n(stilling(stOff+ 10*y+x));\n            CASE brik\n              WHEN bQ THEN m := m - 17*n;\n              WHEN bR THEN m := m - 9*n;\n              WHEN bC THEN m := m - 9*n;\n              WHEN bN THEN m := m - 6*n;\n              WHEN bB THEN m := m - 6*n;\n              WHEN bP THEN m := m + 4*n;\n              WHEN bE THEN m := m + 4*n;\n              ELSE NULL;\n            END CASE;        \n          END LOOP;\n        END LOOP;\n        --m:=m*5;\n        IF res < 0 THEN\n          res := res - m;\n        ELSE\n          res := res + m;\n        END IF;   \n        --IF TRAPon THEN WRT('In front Officers penalty+pawns bonus (keep pawns and exchange officers)='||m); END IF;\n      END IF;\n    END IF;\n\n  ELSE\n    IF Black THEN RETURN(-matr); ELSE RETURN(matr); END IF;\n  END IF;\n  --\n/*\nDECLARE\n  english BOOLEAN := FALSE;\n  ch CHAR(1);\nBEGIN\n    WRT('.  _______________________________');\n    FOR yy IN 1..8 LOOP\n      DebugS :=' '||to_char(9-yy)||' | ';\n      FOR xx IN 1..8 LOOP\n        DebugS := DebugS||stilling(stOff+ xx+10*(9-yy))||' | ';\n      END LOOP;\n      IF english THEN --english version will not show castling-rights and en-passant.\n        DebugS:= TRANSLATE(DebugS,'BbEeLlSsDdTt',\n                                  'PpPpBbNnQqRr');\n      END IF;\n      WRT(DebugS);\n      WRT('.  -------------------------------');\n    END LOOP;\n    ch := stilling(stOff+ PL_PIG_CHESS_ENGINE.HvisTur );\n    WRT('.   A   B   C   D   E   F   G   H   '''||CASE WHEN english THEN CASE when ch=bN THEN bP ELSE 'W' END ELSE ch END||'''');\nEND;\nWRT('res='||res||' matr='||matr||' wbonus='||wbonus||' bbonus='||bbonus||' posi='||posi||'  '||stilling(stOff+ hvistur)); --matr=-1559 wbonus=-3 bbonus=24 posi=-33\n*/\n  -- \n  RETURN(res);\nEND Eval;\n\n\n\nPROCEDURE Initialize IS\n n SIMPLE_INTEGER := 0;\nBEGIN\n  IF not FirstW THEN\n    ToFile:=TRUE;\n    FirstW:=TRUE;\n    --LogVersion(\"SkakBrainEval.def\",SkakBrainEvalDefCompilation);\n    --LogVersion(\"SkakBrainEval.mod\",SkakBrainEvalModCompilation);\n    -- dbms_output.put_line('Initialize A');\n     pdw.extend(pdSz);\n    -- dbms_output.put_line('Initialize B');\n    FOR n in 1..pdSz LOOP\n      pdw(n) := 0;\n    END LOOP;\n    --dbms_output.put_line('Initialize C');\n    pd  := pdw;\n    pdb := pdw;\n    --WRT('Initialize EVAL');\n  ELSE\n    NULL;\n    --WRT('Initialize EVAL SKIP');\n  END IF;\nEND Initialize;\n\nEND;\n/",
      "dependencies": []
    },
    {
      "package_name": "PL_PIG_CHESS_DATA",
      "routines": [
        {
          "type": "function",
          "name": "in",
          "parameters": "",
          "return_type": null,
          "category": "general"
        }
      ],
      "content": "DROP PACKAGE PL_PIG_CHESS_DATA;\n\nCREATE OR REPLACE PACKAGE PL_PIG_CHESS_DATA IS\n-- v 0.92\n--\n-- A part of the suite:\n-- PL_PIG_CHESS_ENGINE\n-- PL_PIG_CHESS_ENGINE_EVAL\n-- PL_PIG_CHESS_DATA\n-- PL_PIG_CHESS_INTERFACE \n\n  --\n  -- MiniTeo 2905 openings with 13 halfmoves, all playable.\n  --\n  -- and\n  --\n  -- Diverse test-suites with at total of more than 1000 positions in EPD format\n  --\n  -- The 'internal' opening book gives strong and quick play\n  -- for upto the six first full-moves (10% of a normal game).\n  --\n  -- Important too, it is used to give opening play variation.\n  --\n  -- ARRAY          POSITIONS   TEST-SUITE IN EPD FORMAT:\n  -------------------------------------------------------------------------------------\n  -- BBCTest\t        42      Big Book Of Combinations\n  -- bkTest\t            24      The B-K test (henceforth BKT) Bratko-Kopec Testpositions\n  -- CCRTest\t        25      One Hour Test by Larry Kaufman, published 1994 (Kaufman Test)\n  -- ColditzTest\t    30      Colditz test suite by Ferdinand Mosca, CCC, December 30, 2016\n  -- LCTIITest\t        36      LCT II (Louguet Chess Test II by Frdric Louguet in 1994) \n  -- MSquickTest\t    24      The Quicktest by Michael Scheidl \n  -- NolotTest\t        11      The Nolot Suite (tactical positions computers can't solve)\n  -- ReinfeldTest      300      Reinfeld's (1945) 300 (tactical) positions; \n  -- SBDTest\t       134      Silent but Deadly (sbd)\n  -- STSTest\t      1500      Strategic Test Suite, (STS) 15 suites x 100 positions\n  -- SLendgameTest      20      Endgame testsuite Sune Larsson 2006 / John Nunn\t\n  -- THmyPosTest\t    16      MY POSITIONAL TEST SUITE by Tony Hedlund\n  \n/* \nEPD format\n  <EPD> ::=  <Piece Placement>' ' <Side to move>' ' <Castling ability>' ' <En passant target square>{' ' <operation>}\n<Piece Placement> ::= <rank8>'/'<rank7>'/'<rank6>'/'<rank5>'/'<rank4>'/'<rank3>'/'<rank2>'/'<rank1>\n<ranki>       ::= [<digit17>]<piece> {[<digit17>]<piece>} [<digit17>] | '8'\n<piece>       ::= <white Piece> | <black Piece>\n<digit17>     ::= '1' | '2' | '3' | '4' | '5' | '6' | '7'\n<white Piece> ::= 'P' | 'N' | 'B' | 'R' | 'Q' | 'K'\n<black Piece> ::= 'p' | 'n' | 'b' | 'r' | 'q' | 'k'\n<Side to move> ::= {'w' | 'b'}\n<Castling ability> ::= '-' | ['K'] ['Q'] ['k'] ['q'] (1..4)\n<En passant target square> ::= '-' | <epsquare>\n<epsquare>   ::= <fileLetter> <eprank>\n<fileLetter> ::= 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h'\n<eprank>     ::= '3' | '6'\n\nAll EPD operations:\n    acd analysis count depth [3]\n    acn analysis count nodes\n    acs analysis count seconds\n    am avoid move(s)\n    bm best move(s)\n    c0 comment (primary, also c1 though c9)\n    ce centipawn evaluation\n    dm direct mate fullmove count\n    draw_accept accept a draw offer\n    draw_claim claim a draw\n    draw_offer offer a draw\n    draw_reject reject a draw offer\n    eco Encyclopedia of Chess Openings opening code\n    fmvn fullmove number\n    hmvc halfmove clock\n    id position identification\n    nic New In Chess opening code\n    noop no operation\n    pm predicted move\n    pv predicted variation\n    rc repetition count\n    resign game resignation\n    sm supplied move\n    tcgs telecommunication game selector\n    tcri telecommunication receiver identification\n    tcsi telecommunication sender identification\n    v0 variation name (primary, also v1 though v9)\n\nFEN format\n<FEN> ::=  <Piece Placement>' ' <Side to move>' ' <Castling ability>' ' <En passant target square>\n                  ' ' <Halfmove clock>' ' <Fullmove counter>\n<Piece Placement> ::= <rank8>'/'<rank7>'/'<rank6>'/'<rank5>'/'<rank4>'/'<rank3>'/'<rank2>'/'<rank1>\n<ranki>       ::= [<digit17>]<piece> {[<digit17>]<piece>} [<digit17>] | '8'\n<piece>       ::= <white Piece> | <black Piece>\n<digit17>     ::= '1' | '2' | '3' | '4' | '5' | '6' | '7'\n<white Piece> ::= 'P' | 'N' | 'B' | 'R' | 'Q' | 'K'\n<black Piece> ::= 'p' | 'n' | 'b' | 'r' | 'q' | 'k'\n<Side to move> ::= {'w' | 'b'}\n<Castling ability> ::= '-' | ['K'] ['Q'] ['k'] ['q'] (1..4)\n<En passant target square> ::= '-' | <epsquare>\n<epsquare>   ::= <fileLetter> <eprank>\n<fileLetter> ::= 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h'\n<eprank>     ::= '3' | '6'\n\n*/\n-- PIG-chess found errors\nTYPE PigTestType IS VARRAY(4) OF VARCHAR2(150); --EPD format\nPigTest CONSTANT PigTestType := PigTestType\n('rnbq1rk1/pppp2pp/4pn2/5p2/1b1P4/P1N1PN2/1PPB1PPP/R2QKB1R b KQ - am Bxc3; id \"PIG.01\"; c0 \"Opgiver l\u00f8berpar un\u00f8digt!\";'\n,'r1bq1rk1/ppp3pp/2npp3/5p2/2B5/P1P1PN2/2P1QPPP/R3K2R b KQ - am d5; id \"PIG.02\"; c0 \"B\u00f8nder p\u00e5 l\u00f8bers farve, sv\u00e6kker e5!\";'\n,'r1b2rk1/p1q3pp/1pp1p3/4Np1Q/5P2/4P3/3R2PP/2R3K1 b - - bm a5; sm g6; am Bb7; id \"PIG.03\"; c0 \"Tillader t\u00e5rn p\u00e5 7''r\u00e6kke! a5 m\u00e5 v\u00e6re bedst\";'\n,'rnbqkbnr/ppp1pppp/8/8/3pP3/2N5/PPPP1PPP/R1BQKBNR w KQkq - am Bb5; id \"PIG.04\"; c0 \"Koster en officer!\";');\n--\n--The B-K test (henceforth BKT) Bratko-Kopec Testpositions (EPD-Records)\n\n--Score:\n--30, 60, 90 and 120 seconds. The testee was awarded 1 point when the move after 120 seconds coincided with the (known) best move. \n--A fractional score of 1/4, 1/3, or 1/2 point was awarded when the (known) best move was indicated at 30, 60 or 90 seconds but not at 120 seconds. \n--\n--Table 1: rating:\n--Score     BKT rating     \n-- 0\t1000-1199\n-- 1-4 \t1200-1599 \n-- 5-6 \t1600-1799 \n-- 7-8 \t1800-1999 \n-- 9-12 2000-2199 \n--13-16 2200-2399  \n--17-24 2400+ \n---\n--BTK rating = 1100 + Score*100  - CASE < 1: 100*(1-Score)   - CASE > 9: 50*(Score-9)\n--\n--Bias = 12x (Tactical-Positional)/Score\n\n  TYPE bkTestType IS VARRAY(24) OF VARCHAR2(99); --EPD format\n  bkTest CONSTANT bkTestType := bkTestType\n('1k1r4/pp1b1R2/3q2pp/4p3/2B5/4Q3/PPP2B2/2K5 b - - bm Qd1+; id \"BK.01\";'\n,'3r1k2/4npp1/1ppr3p/p6P/P2PPPP1/1NR5/5K2/2R5 w - - bm d5; id \"BK.02\";'\n,'2q1rr1k/3bbnnp/p2p1pp1/2pPp3/PpP1P1P1/1P2BNNP/2BQ1PRK/7R b - - bm f5; id \"BK.03\";'\n,'rnbqkb1r/p3pppp/1p6/2ppP3/3N4/2P5/PPP1QPPP/R1B1KB1R w KQkq - bm e6; id \"BK.04\";'\n,'r1b2rk1/2q1b1pp/p2ppn2/1p6/3QP3/1BN1B3/PPP3PP/R4RK1 w - - bm Nd5; sm a4; id \"BK.05\";'\n,'2r3k1/pppR1pp1/4p3/4P1P1/5P2/1P4K1/P1P5/8 w - - bm g6; id \"BK.06\";'\n,'1nk1r1r1/pp2n1pp/4p3/q2pPp1N/b1pP1P2/B1P2R2/2P1B1PP/R2Q2K1 w - - bm Nf6; id \"BK.07\";'\n,'4b3/p3kp2/6p1/3pP2p/2pP1P2/4K1P1/P3N2P/8 w - - bm f5; id \"BK.08\";'\n,'2kr1bnr/pbpq4/2n1pp2/3p3p/3P1P1B/2N2N1Q/PPP3PP/2KR1B1R w - - bm f5; id \"BK.09\";'\n,'3rr1k1/pp3pp1/1qn2np1/8/3p4/PP1R1P2/2P1NQPP/R1B3K1 b - - bm Ne5; id \"BK.10\";'\n,'2r1nrk1/p2q1ppp/bp1p4/n1pPp3/P1P1P3/2PBB1N1/4QPPP/R4RK1 w - - bm f4; id \"BK.11\";'\n,'r3r1k1/ppqb1ppp/8/4p1NQ/8/2P5/PP3PPP/R3R1K1 b - - bm Bf5; id \"BK.12\";'\n,'r2q1rk1/4bppp/p2p4/2pP4/3pP3/3Q4/PP1B1PPP/R3R1K1 w - - bm b4; id \"BK.13\";'\n,'rnb2r1k/pp2p2p/2pp2p1/q2P1p2/8/1Pb2NP1/PB2PPBP/R2Q1RK1 w - - bm Qd2; sm Qe1; id \"BK.14\";'\n,'2r3k1/1p2q1pp/2b1pr2/p1pp4/6Q1/1P1PP1R1/P1PN2PP/5RK1 w - - bm Qxg7+; id \"BK.15\";'\n,'r1bqkb1r/4npp1/p1p4p/1p1pP1B1/8/1B6/PPPN1PPP/R2Q1RK1 w kq - bm Ne4; id \"BK.16\";'\n,'r2q1rk1/1ppnbppp/p2p1nb1/3Pp3/2P1P1P1/2N2N1P/PPB1QP2/R1B2RK1 b - - bm h5; id \"BK.17\";'\n,'r1bq1rk1/pp2ppbp/2np2p1/2n5/P3PP2/N1P2N2/1PB3PP/R1B1QRK1 b - - bm Nb3; id \"BK.18\";'\n,'3rr3/2pq2pk/p2p1pnp/8/2QBPP2/1P6/P5PP/4RRK1 b - - bm Rxe4; id \"BK.19\";'\n,'r4k2/pb2bp1r/1p1qp2p/3pNp2/3P1P2/2N3P1/PPP1Q2P/2KRR3 w - - bm g4; id \"BK.20\";'\n,'3rn2k/ppb2rpp/2ppqp2/5N2/2P1P3/1P5Q/PB3PPP/3RR1K1 w - - bm Nh6; id \"BK.21\";'\n,'2r2rk1/1bqnbpp1/1p1ppn1p/pP6/N1P1P3/P2B1N1P/1B2QPP1/R2R2K1 b - - bm Bxe4; id \"BK.22\";'\n,'r1bqk2r/pp2bppp/2p5/3pP3/P2Q1P2/2N1B3/1PP3PP/R4RK1 b kq - bm f6; id \"BK.23\";'\n,'r2qnrnk/p2b2b1/1p1p2pp/2pPpp2/1PP1P3/PRNBB3/3QNPPP/5RK1 w - - bm f4; id \"BK.24\";');\n\n--Endgame testsuite - final version + pgn with comments Author: Sune Larsson 2006 / John Nunn\n  TYPE SLendgameTestType IS VARRAY(20) OF VARCHAR2(99); --EPD format\n  SLendgameTest CONSTANT SLendgameTestType := SLendgameTestType\n('8/1ppr1kp1/p1p4p/8/8/5P2/PPP1RKPP/8 w - - c0 \"From JN\"; id \"SL.01\";'\n,'8/1pk3pp/p7/3p1p2/8/3K2P1/PP2PP1P/8 w - - c0 \"From JN\"; id \"SL.02\";'\n,'8/4k3/r4pp1/pR6/P4KP1/5P2/8/8 w - - c0 \"From JN\"; id \"SL.03\";'\n,'8/p1p1k3/1p1p2p1/3Pq2p/2P1P3/1P3QPK/P7/8 w - - c0 \"From JN\"; id \"SL.04\";'\n,'8/p3ppk1/1p4pp/3nN3/6PP/1P3P2/P3PK2/8 w - - c0 \"From JN\"; id \"SL.05\";'\n,'7k/pp4pp/2n5/8/8/P7/1P4PP/2K1B3 b - - c0 \"From JN\"; id \"SL.06\";'\n,'8/8/p4Bp1/1pPb2P1/1P2kp2/P7/5K2/8 w - - c0 \"From JN\"; id \"SL.07\";'\n,'8/4k3/p1B4p/2K5/1P4bP/8/8/8 b - - c0 \"From JN\"; id \"SL.08\";'\n,'3R4/1p6/2b5/2P1k2p/p3p2P/P6r/1P2KB2/8 b - - c0 \"From JN\"; id \"SL.09\";'\n,'8/5b2/1k2p1p1/2NpP1P1/1K1P4/8/8/8 w - - c0 \"From SL\"; id \"SL.10\";'\n,'8/5pk1/r5pp/P7/3R3P/6P1/5PK1/8 w - - c0 \"From SL\"; id \"SL.11\";'\n,'4b3/5k2/4p1p1/3pP2p/2pP1P1P/2P5/6N1/2K5 w - - c0 \"From SL\"; id \"SL.12\";'\n,'8/1p1b2k1/p1p1p1p1/2P1P2p/1P3P1P/P2B4/5K2/8 w - - c0 \"From SL\"; id \"SL.13\";'\n,'6k1/2p3np/1p1p2p1/3P4/1PPK1R2/6PB/7P/4r3 w - - c0 \"From SL\"; id \"SL.14\";'\n,'1n6/4k2p/p3ppp1/1pPp4/3P1PP1/3NP3/P3K2P/8 w - - c0 \"From SL\"; id \"SL.15\";'\n,'3r4/7p/Rp4k1/5p2/4p3/2P5/PP3P1P/5K2 b - - c0 \"From SL\"; id \"SL.16\";'\n,'6k1/p2b1ppp/8/8/3N4/1P5P/5PP1/6K1 b - - c0 \"From SL\"; id \"SL.17\";'\n,'4b3/pp2kp1p/5bp1/8/8/4P3/PP2NPPP/3N2K1 w - - c0 \"From SL\"; id \"SL.18\";'\n,'8/6b1/4k2p/p1p1p1p1/2P1K1P1/PP3N1P/8/8 w - - c0 \"From SL\"; id \"SL.19\";'\n,'2r3k1/4pp1p/3p2p1/p2R4/1r6/1P4P1/P3PP1P/R5K1 b - - c0 \"From SL\"; id \"SL.20\";');\n\n-- The Quicktest by Michael Scheidl\n--is a test for computerchess programs. It consists of 24 positions, and focusses on sacrifice combinations (some other types of positions are included too). \n--A good chess program, running at ~1 GHz, will most probably solve at least 50% within one minute of calculation time, each. \n--On the other hand, I think currently (in 2005) still no PC program is able to find all solutions, which means the test will be useful for a longer period of time. \n--\n--The positions are - roughly - sorted by difficulty, starting with the most difficult ones. \n--The test is performed by letting the program(s) calculate in analysis mode (or on infinite level), with one primary variation, in each test position. \n--Maximum solving time is 1 minute. Solving time is the time, after which the correct first move is displayed, and kept until 1:00. \n--To use the Process Test Set function in Fritz, the correct settings for the Quicktest are Maximum time: 60 and Extra Ply: 5 (=max.).\n  TYPE MSquickTestType IS VARRAY(24) OF VARCHAR2(99); --EPD format\n  MSquickTest CONSTANT MSquickTestType := MSquickTestType\n('1n1r1rk1/ppq2ppp/3p2b1/3B1NP1/4PB1R/bP2P2P/P1P5/3KQ1R1 w - - bm Qc3; id Quick-01;'\n,'1q6/r4pbk/1r1p2pp/B2Pn3/Q2NP3/1p3P2/6PP/1R3RK1 b - - bm Rxa5; id Quick-02;'\n,'3Q4/3p4/P2p4/N2b4/8/4P3/5p1p/5Kbk w - - bm Qa8; id Quick-03;'\n,'4qrk1/3nppb1/R1Np2p1/3P2P1/1Pr5/4B3/5Q1P/5R1K w - - bm Ra8; id Quick-04;'\n,'r3r3/2R2pk1/p2p1bpp/3P4/q2pQ3/5N1P/5PP1/1R4K1 w - - bm Rxf7+; id Quick-05;'\n,'r1b1Rbk1/pp3p2/2npN2p/2qp2p1/8/1QPB3P/PP3PPB/6K1 b - - bm Bxe6; id Quick-06;'\n,'r5k1/Rb4p1/2q2pBp/1pp5/1b4QN/1P2P2P/5PP1/6K1 w - - bm Rxb7; id Quick-07;'\n,'3R4/5r1p/5ppk/8/1Q3PPq/5P2/6K1/8 w - - bm Rg8; id Quick-08;'\n,'2kr3r/ppp3pp/2pbbn2/4N3/3Pp3/2P3Pq/PP1NQP1P/R1B2RK1 w - - am Nxe4; id Quick-09;'\n,'2r3k1/pp1bpp1p/3p1npQ/q1r5/4P1P1/2NR1P2/PPP1N3/2K4R w - - bm g5; id Quick-10;'\n,'r1b2rk1/pp3p2/2p2bpQ/8/1q1P4/2N2N2/Pn3PPP/1B1RR1K1 w - - bm Bxg6; id Quick-11;'\n,'r2qk2r/1p1bbp2/1P2p3/p2pPp2/n2N1N1p/3PB3/5QPP/R4RK1 w kq - bm Rxa4; id Quick-12;'\n,'3r1n1r/1p2q1k1/p1p1P1p1/3n4/5Pp1/P5N1/1P3QP1/1BR1R1K1 w - - bm Bxg6; id Quick-13;'\n,'r2q1rk1/p1p3pp/b2bp3/2pp4/6p1/2NPPN2/PPP2PP1/R1BQR1K1 w - - bm Ne5; id Quick-14;'\n,'r2qr1k1/p2b1ppp/5n2/2pp4/5b2/NP6/PBP1NPPP/R3QRK1 b - - bm Bxh2+; id Quick-15;'\n,'3k4/p7/K3BP2/8/7p/8/2P4P/8 w - - bm Kb7; id Quick-16;'\n,'rq4k1/pp1nrppp/4bn2/6R1/3QP3/P4PN1/4B1PP/2B2RK1 w - - bm Rxg7+; id Quick-17;'\n,'2r4k/pb2q2P/1p6/3Pp3/4p3/1P2R3/PBrQ2PP/5RK1 w - - bm Qb4; id Quick-18;'\n,'5k2/6p1/2p2p2/P7/1Q6/2P1pqPP/7K/8 b - - bm c5; id Quick-19;'\n,'rnbq1b1r/ppp1p1pp/1n1p2k1/4P1N1/8/5Q2/PPPP1PPP/RNB1K2R b KQ - bm Qe8; id Quick-20;'\n,'r1b1kb1r/2q2ppp/p2ppP2/1pn3P1/3NP3/2N2Q2/PPP4P/2KR1B1R w kq - bm Bxb5+; id Quick-21;'\n,'4r2k/3n3p/2q3p1/2p1p1Q1/1pP1P3/1P6/5PP1/R2B2K1 b - - am Qxe4; id Quick-22;'\n,'r3r1k1/1Bp1qppp/3p1n2/pNb5/2P5/PQ6/1P3PPP/R2R2K1 b - - bm Ng4; id Quick-23;'\n,'3B4/1R3p1k/2p4p/2Pp3r/3P4/4Q1K1/6P1/3b1q2 w - - bm Bf6; id Quick-24;');\n\n-- MY POSITIONAL TEST SUITE by Tony Hedlund\n\n--The positions are from several numbers of the excellent Swedish chessmagazine SCHACKNYTT (chessnews). \n--10 minutes for each position and you get points from the Movepoints table. \n--The positions are tested on eight human players with an average rating of 2310. \n--They scored in average 130 points. Analyses and comments to the positions you can find here. \n--You can also download the games from where the positions are in cbh-format, with analyses and comments.\n\n  TYPE THmyPosTestType IS VARRAY(16) OF VARCHAR2(200); --EPD format\n  THmyPosTest CONSTANT THmyPosTestType := THmyPosTestType\n('1r2r1k1/1pqbbppp/p2p1n2/4p3/P3PP2/2N1BB2/1PP2QPP/R4R1K b - - bm Rbc8; c0 \"positional scores are: Rbc8=10, exf4=9, Bc6=7, Rec8=6, b6=6, b5=5, Be6=4, h6=3\"; id \"tony.pos.01\";'\n,'r1bk1bnr/ppp2ppp/8/4n3/2P5/P3B3/1P3PPP/RN2KBNR w KQ - - bm Nf3; c0 \"positional scores are: Nf3=10, Nd2=9, Nc3=7, Be2=6, Bf4=4, f4=3, h3=3\"; id \"tony.pos.02\";'\n,'8/7p/3k2p1/6P1/4KP2/8/7P/8 w - - bm h4; c0 \"positional scores are: h4=10, Kf3=8, Ke3=6, Kd4=6, Kd3=6, h3=5\"; id \"tony.pos.03\";'\n,'r1b1r1k1/1p1n1pbp/2p1n1p1/q1P1p3/4P3/1PN1BNPP/2Q2PB1/1R1R2K1 w - - bm Rb2; c0 \"positional scores are: Rb2=10, Na4=8, b4=7, Nd2=6, Qb2=5, Bf1=5, Rd2=4, Ne2=3, Kh2=3, Ra1=1\"; id \"tony.pos.04\";'\n,'1rN1r1k1/1pq2pp1/2p1nn1p/p2p1B2/3P4/4P2P/PPQ1NPP1/2R2RK1 b - - bm Rexc8; c0 \"positional scores are: Rexc8=10, Rbxc8=7, Qxc8=7\"; id \"tony.pos.05\";'\n,'3r1rk1/p1q2pbp/1np1p1p1/1p2P3/5P2/2N2Q1P/PPP3P1/3RRBK1 b - - bm Rxd1; c0 \"positional scores are: Rxd1=10, f5=9, Na4=7, Nd5=5, a6=5, f6=4, g5=3\"; id \"tony.pos.06\";'\n,'r2r2k1/p3ppbp/1p4p1/3p4/3P4/2P1P2P/P3BPP1/2R2RK1 w - - bm f4; c0 \"positional scores are: f4=10, Ba6=8, c4=7, a4=5, Rfd1=4\"; id \"tony.pos.07\";'\n,'2rq3r/pb1pbkpp/1p2pp2/n1P5/2P5/QP2BNPB/P3PP1P/3R1RK1 w - - bm b4; c0 \"positional scores are: b4=10, Nd4=8, Rd2=5, Qc1=5\"; id \"tony.pos.08\";'\n,'1r1q1rk1/pp1bbppp/2n1p1n1/4P3/2BpN3/3P1N2/PP2QPPP/R1B1R1K1 b - - bm b5; c0 \"positional scores are: b5=10, Ngxe5=9, Ncxe5=9, Qc7=8, Na5=7, a6=6, h6=5, f6=3\"; id \"tony.pos.09\";'\n,'3r2k1/2p2ppp/1p1br3/pPn5/3PP3/P7/1B1N2PP/R3R1K1 w - - bm Re2; c0 \"positional scores are: Re2=10, d5=8, Nc4=7, e5=6, dxc5=5\"; id \"tony.pos.10\";'\n,'r4rk1/p2qn1bp/1pnp2p1/2p2p2/4PP1N/2PPB3/PP2QN1P/R4RK1 b - - bm d5; c0 \"positional scores are: d5=10, Bh6=8, Rae8=7, fxe4=5\"; id \"tony.pos.11\";'\n,'r3r1k1/1b1n1p2/1q1p1n1p/2p1p2P/p1P3p1/P1QNPPB1/1P2B1P1/2KR3R w - - bm e4; c0 \"positional scores are: e4=10, Rh4=8, Nf2=7, Qd2=6, Qc2=5, Bh4=4, Kb1=3\"; id \"tony.pos.12\";'\n,'1rb1nrk1/2q1bppp/p1n1p3/2p1P3/2Pp1PP1/3P1NN1/P5BP/R1BQ1RK1 w - - bm Nd2; c0 \"positional scores are: Nd2=10, Qe1=9, Qe2=8, Ne4=7, f5=6, Nh5=6, g5=6, h4=5, Bd2=4, Bh3=3, Re1=1\"; id \"tony.pos.13\";'\n,'r3r1k1/ppqbbpp1/2pp1nnp/3Pp3/2P1P3/5N1P/PPBN1PP1/R1BQR1K1 w - - bm Nb1; c0 \"positional scores are: Nb1=10, Rb1=9, Nf1=8, dxc6=5, Nb3=5, b3=4, a3=3, b4=2\"; id \"tony.pos.14\";'\n,'5r1k/1q2rnpp/p4p2/1pp5/6Q1/1P3P2/PBP3PP/3RR1K1 w - - bm Re6; c0 \"positional scores are: Re6=10, Kf2=9, h4=6, f4=5, Rxe7=4\"; id \"tony.pos.15\";'\n,'2r2k2/5p2/2Bp1b1r/2qPp1pp/PpN1P3/1P2Q3/5PPP/4R1K1 w - - bm Rc1; c0 \"positional scores are: Rc1=10, Nb6=8, Qxc5=7, a5=6, Qf3=5, h4=4, Nxe5=2\"; id \"tony.pos.16\";');\n\n--Colditz test suite by Ferdinand Mosca, CCC, December 30, 2016\n  TYPE ColditzTestType IS VARRAY(30) OF VARCHAR2(99); --EPD format\n  ColditzTest CONSTANT ColditzTestType := ColditzTestType\n('3r2k1/p3R1p1/1pq2pQp/8/8/1P4P1/PB3P1P/3b2K1 b - - bm Qh1+; id \"Colditz 1\"; c0 \"25\";'\n,'5r1k/5Bpp/p1p1Qb2/1pq5/4Pp2/7R/Pr3PPP/5RK1 w - - bm Rxh7+; id \"Colditz 2\"; c0 \"25\";'\n,'3R4/1p3kpp/8/1P1b4/8/3r1N2/6PP/6K1 b - - bm Rd1+; id \"Colditz 3\"; c0 \"25\";'\n,'4rrk1/1bp2ppp/p7/1p1q4/3P1B2/2P3P1/PP5K/RN1Q2R1 b - - bm Re1; id \"Colditz 4\"; c0 \"30\";'\n,'6k1/1p1qrpp1/p7/7p/PQ6/8/1PPp2PP/3R2K1 b - - bm Re1+; id \"Colditz 5\"; c0 \"30\";'\n,'r5rk/1p3p1p/p2N1Pq1/5R2/4Q3/7P/PPP4K/8 w - - bm Rg5; id \"Colditz 6\"; c0 \"35\";'\n,'7k/p1p3pp/2r2q2/2P5/3Q2R1/3P3P/PP4PK/8 w - - bm Rf4; id \"Colditz 7\"; c0 \"35\";'\n,'5r1k/1b4p1/p6p/4Pp1q/2pNnP2/7N/PPQ3PP/5R1K b - - bm Qxh3; id \"Colditz 8\"; c0 \"35\";'\n,'r2r4/1p1R3p/5pk1/b1B1Pp2/p4P2/P7/1P5P/1K1R4 w - - bm Rg1+; id \"Colditz 9\"; c0 \"40\";'\n,'r4rk1/pbp2ppp/1p3Q2/8/2P5/2BR3P/PP2qPP1/5RK1 b - - bm Qg4; id \"Colditz 10\"; c0 \"40\";'\n,'r5k1/ppq2p1p/2p5/6r1/1P2pN2/P3PbP1/2Q2P2/R3R1K1 b - - bm Qxf4; id \"Colditz 11\"; c0 \"25\";'\n,'3r2k1/5p2/6p1/4b3/1P2P3/1R2P2p/P1K1N3/8 b - - bm Rd1; id \"Colditz 12\"; c0 \"25\";'\n,'r4rk1/5qpp/8/3Q4/1p6/1P5P/PB4P1/4R1K1 w - - bm Re7; id \"Colditz 13\"; c0 \"25\";'\n,'3r2k1/pRp2p2/6pQ/5b2/2B5/2qP2P1/P6P/6K1 w - - bm Bxf7+; id \"Colditz 14\"; c0 \"30\";'\n,'4bk1r/Q4ppp/1p2q3/8/4B3/8/P4PPP/4R1K1 w - - bm Qa3+; id \"Colditz 15\"; c0 \"30\";'\n,'7k/3q2p1/4p2p/4Pp2/1r3P2/p1pR4/P1P3PP/3Q3K b - - bm Qxd3; id \"Colditz 16\"; c0 \"35\";'\n,'6k1/4pp1p/3p2p1/2pP3q/1rNrPn2/1P6/P1QR1PPP/4R1K1 b - - bm Rbxc4; id \"Colditz 17\"; c0 \"35\";'\n,'3r3k/1b2rpp1/p2qpN1p/1p6/4pP1Q/P5R1/1PP3PP/5R1K w - - bm Qg5; id \"Colditz 18\"; c0 \"40\";'\n,'8/7p/6pk/1P4r1/2P2QBK/R6P/6r1/6q1 b - - bm Qf2+; id \"Colditz 19\"; c0 \"40\";'\n,'r1b2rk1/2n1qppp/p1p1p3/1p2P3/4N3/3BP3/PP2QPPP/R4RK1 w - - bm Nf6+; id \"Colditz 20\"; c0 \"40\";'\n,'r3k1nr/p5b1/2qpp2p/1Q2n1p1/3N1p2/2P5/PP4PP/RNB2RK1 b - - bm Nf3+; id \"Colditz 21\"; c0 \"25\";'\n,'2q3k1/pbR1bppp/4r3/1Q2p3/8/4P1P1/P4PPK/1BBR4 b - - bm Rh6+; id \"Colditz 22\"; c0 \"25\";'\n,'2r3k1/5ppp/4p3/5q2/8/Pp1Q1P2/1P4PP/1K1R4 b - - bm Rd8; id \"Colditz 23\"; c0 \"30\";'\n,'r1br2k1/pp3ppp/1q1N4/3Q4/2B2n2/8/PPP3PP/R2K1R2 w - - bm Qxf7+; id \"Colditz 24\"; c0 \"30\";'\n,'2rq2k1/5pbp/6p1/pp6/3B4/1PnQ1N2/P4PPP/4R1K1 b - - bm Bxd4; id \"Colditz 25\"; c0 \"35\";'\n,'r3k1r1/pp3p1p/4p3/4n3/b1qNP3/4B2P/P4PP1/R1Q3KR b - - bm Qxd4; id \"Colditz 26\"; c0 \"35\";'\n,'4k3/1pp2b1p/2p2P2/r3P1R1/pr6/2N5/1PP4P/2KR4 w - - bm e6; id \"Colditz 27\"; c0 \"35\";'\n,'q4r1k/5p1p/p2pp2Q/1p2b3/8/2P2R2/P1P4P/6RK w - - bm Rg2; id \"Colditz 28\"; c0 \"40\";'\n,'q3rn1k/2QR4/pp2pp2/8/P1P5/1P4N1/6n1/6K1 w - - bm Nf5; id \"Colditz 29\"; c0 \"40\";'\n,'5k2/p4r1p/3q4/2p1p1N1/P1P5/8/6QB/7K w - - bm Qa8+; id \"Colditz 30\"; c0 \"40\";');\n\n--The Nolot Suite (11 tactical positions computers can't solve)\n--3, 6, and 9 are monsters and remain unsolved, if they aren't actually broken.\n--1, 4, and 10 are solvable, but the scores haven't been convincing yet.\n--11 is also findable, but it seems that the best result is a draw, so don't expect a big positive score.\n--8 is also solvable, but it might be found due to speculation.\n--2, 5, and 7 are known to be findable as wins.\n\n  TYPE NolotTestType IS VARRAY(11) OF VARCHAR2(99); --EPD format\n  NolotTest CONSTANT NolotTestType := NolotTestType\n('r3qb1k/1b4p1/p2pr2p/3n4/Pnp1N1N1/6RP/1B3PP1/1B1QR1K1 w - - bm Nxh6; id \"Position 1\";'\n,'r4rk1/pp1n1p1p/1nqP2p1/2b1P1B1/4NQ2/1B3P2/PP2K2P/2R5 w - - bm Rxc5; id \"Position 2\";'\n,'r2qk2r/ppp1b1pp/2n1p3/3pP1n1/3P2b1/2PB1NN1/PP4PP/R1BQK2R w KQkq - bm Nxg5; id \"Position 3\"; sm h3;'\n,'r1b1kb1r/1p1n1ppp/p2ppn2/6BB/2qNP3/2N5/PPP2PPP/R2Q1RK1 w kq - bm Nxe6; id \"Position 4\";'\n,'r2qrb1k/1p1b2p1/p2ppn1p/8/3NP3/1BN5/PPP3QP/1K3RR1 w - - bm e5; id \"Position 5\";'\n,'rnbqk2r/1p3ppp/p7/1NpPp3/QPP1P1n1/P4N2/4KbPP/R1B2B1R b kq - bm axb5; id \"Position 6\";'\n,'1r1bk2r/2R2ppp/p3p3/1b2P2q/4QP2/4N3/1B4PP/3R2K1 w k - bm Rxd8+; id \"Position 7\";'\n,'r3rbk1/ppq2ppp/2b1pB2/8/6Q1/1P1B3P/P1P2PP1/R2R2K1 w - - bm Bxh7+; id \"Position 8\";'\n,'r4r1k/4bppb/2n1p2p/p1n1P3/1p1p1BNP/3P1NP1/qP2QPB1/2RR2K1 w - - bm Ng5; id \"Position 9\";'\n,'r1b2rk1/1p1nbppp/pq1p4/3B4/P2NP3/2N1p3/1PP3PP/R2Q1R1K w - - bm Rxf7; id \"Position 10\";'\n,'r1b3k1/p2p1nP1/2pqr1Rp/1p2p2P/2B1PnQ1/1P6/P1PP4/1K4R1 w - - bm Rxh6; id \"Position 11\";');\n\n--LCT II (Louguet Chess Test II by Fr\u00e9d\u00e9ric Louguet in 1994)\n-- It contains 14 positional (POS), 12 tactical (CMB) and 9 endgame (FIN) test-postions, 10 minutes per position. \n--    30 points, if solution is found between 0 and 9 seconds\n--    25 points, if solution is found between 10 and 29 seconds\n--    20 points, if solution is found between 30 and 89 seconds\n--    15 points, if solution is found between 90 and 209 seconds\n--    10 points, if solution is found between 210 and 389 seconds\n--    5 points, if solution is found between 390 and 600 seconds\n--    0 points, if not found with in 10 minutes\n--    Minimum = 1900\n--    Maximum = 1900 + 30*35 = 2950\n  TYPE LCTIITestType IS VARRAY(35) OF VARCHAR2(135); --EPD format\n  LCTIITest CONSTANT LCTIITestType := LCTIITestType\n('r3kb1r/3n1pp1/p6p/2pPp2q/Pp2N3/3B2PP/1PQ2P2/R3K2R w KQkq - bm d6; id \"LCTII.POS.01\"; c0 \"Chernin - Miles, Tunis 1985\";'\n,'1k1r3r/pp2qpp1/3b1n1p/3pNQ2/2pP1P2/2N1P3/PP4PP/1K1RR3 b - - bm Bb4; id \"LCTII.POS.02\"; c0 \"Lilienthal - Botvinnik, Moskau 1945\";'\n,'r6k/pp4p1/2p1b3/3pP3/7q/P2B3r/1PP2Q1P/2K1R1R1 w - - bm Qc5; id \"LCTII.POS.03\"; c0 \"Boissel - Boulard, corr. 1994\";'\n,'1nr5/2rbkppp/p3p3/Np6/2PRPP2/8/PKP1B1PP/3R4 b - - bm e5; id \"LCTII.POS.04\"; c0 \"Kaplan - Kopec, USA 1975\";'\n,'2r2rk1/1p1bq3/p3p2p/3pPpp1/1P1Q4/P7/2P2PPP/2R1RBK1 b - - bm Bb5; id \"LCTII.POS.05\"; c0 \"Estrin - Pytel, Albena 1973\";'\n,'3r1bk1/p4ppp/Qp2p3/8/1P1B4/Pq2P1P1/2r2P1P/R3R1K1 b - - bm e5; id \"LCTII.POS.06\"; c0 \"Nimzowitsch - Capablanca, New York 1927\";'\n,'r1b2r1k/pp2q1pp/2p2p2/2p1n2N/4P3/1PNP2QP/1PP2RP1/5RK1 w - - bm Nd1; id \"LCTII.POS.07\"; c0 \"Tartakower - Rubinstein, Moskau 1925\";'\n,'r2qrnk1/pp3ppb/3b1n1p/1Pp1p3/2P1P2N/P5P1/1B1NQPBP/R4RK1 w - - bm Bh3; id \"LCTII.POS.08\"; c0 \"Polugaevsky - Unzicker, Kislovodsk 1972\";'\n,'5nk1/Q4bpp/5p2/8/P1n1PN2/q4P2/6PP/1R4K1 w - - bm Qd4; id \"LCTII.POS.09\"; c0 \"Boissel - Del Gobbo, corr. 1994\";'\n,'r3k2r/3bbp1p/p1nppp2/5P2/1p1NP3/5NP1/PPPK3P/3R1B1R b kq - bm Bf8; id \"LCTII.POS.10\"; c0 \"Cucka - Jansa, Brno 1960\";'\n,'bn6/1q4n1/1p1p1kp1/2pPp1pp/1PP1P1P1/3N1P1P/4B1K1/2Q2N2 w - - bm h4; id \"LCTII.POS.11\"; c0 \"Landau - Schmidt, Noordwijk 1938\";'\n,'3r2k1/pp2npp1/2rqp2p/8/3PQ3/1BR3P1/PP3P1P/3R2K1 b - - bm Rb6; id \"LCTII.POS.12\"; c0 \"Korchnoi - Karpov, Meran 1981\";'\n,'1r2r1k1/4ppbp/B5p1/3P4/pp1qPB2/2n2Q1P/P4PP1/4RRK1 b - - bm Nxa2; id \"LCTII.POS.13\"; c0 \"Barbero - Kouatly, Budapest 1987\";'\n,'r2qkb1r/1b3ppp/p3pn2/1p6/1n1P4/1BN2N2/PP2QPPP/R1BR2K1 w kq - bm d5; id \"LCTII.POS.14\"; c0 \"Spasski - Aftonomov, Leningrad 1949\";'\n,'1r4k1/1q2bp2/3p2p1/2pP4/p1N4R/2P2QP1/1P3PK1/8 w - - bm Nxd6; id \"LCTII.CMB.01\"; c0 \"Romanishin - Gdansky, Polonica Zdroj 1992\";'\n,'rn3rk1/pbppq1pp/1p2pb2/4N2Q/3PN3/3B4/PPP2PPP/R3K2R w KQ - bm Qxh7+; id \"LCTII.CMB.02\"; c0 \"Lasker,Ed - Thomas, London 1911\";'\n,'4r1k1/3b1p2/5qp1/1BPpn2p/7n/r3P1N1/2Q1RPPP/1R3NK1 b - - bm Qf3; id \"LCTII.CMB.03\"; c0 \"Andruet - Spassky, BL 1988\";'\n,'2k2b1r/1pq3p1/2p1pp2/p1n1PnNp/2P2B2/2N4P/PP2QPP1/3R2K1 w - - bm exf6; id \"LCTII.CMB.04\"; c0 \"Vanka - Jansa, Prag 1957\";'\n,'2r2r2/3qbpkp/p3n1p1/2ppP3/6Q1/1P1B3R/PBP3PP/5R1K w - - bm Rxh7+; id \"LCTII.CMB.05\"; c0 \"Boros - Szabo, Budapest 1937\";'\n,'2r1k2r/2pn1pp1/1p3n1p/p3PP2/4q2B/P1P5/2Q1N1PP/R4RK1 w q - bm exf6; id \"LCTII.CMB.06\"; c0 \"Lilienthal - Capablanca, Hastings 1934\";'\n,'2rr2k1/1b3ppp/pb2p3/1p2P3/1P2BPnq/P1N3P1/1B2Q2P/R4R1K b - - bm Rxc3; id \"LCTII.CMB.07\"; c0 \"Rotlewi - Rubinstein, Lodz 1907\";'\n,'2b1r1k1/r4ppp/p7/2pNP3/4Q3/q6P/2P2PP1/3RR1K1 w - - bm Nf6+; id \"LCTII.CMB.08\"; c0 \"Zarkov - Mephisto, Albuquerque 1991\";'\n,'6k1/5p2/3P2p1/7n/3QPP2/7q/r2N3P/6RK b - - bm Rxd2; id \"LCTII.CMB.09\"; c0 \"Portisch - Kasparov, Moskau 1981\";'\n,'rq2rbk1/6p1/p2p2Pp/1p1Rn3/4PB2/6Q1/PPP1B3/2K3R1 w - - bm Bxh6; id \"LCTII.CMB.10\"; c0 \"Tchoudinovskikh - Merchiev, UdSSR 1987\";'\n,'rnbq2k1/p1r2p1p/1p1p1Pp1/1BpPn1N1/P7/2P5/6PP/R1B1QRK1 w - - bm Nxh7; id \"LCTII.CMB.11\"; c0 \"Vaisser - Genius 2, Aubervilliers, 1994\";'\n,'r2qrb1k/1p1b2p1/p2ppn1p/8/3NP3/1BN5/PPP3QP/1K3RR1 w - - bm e5; id \"LCTII.CMB.12\"; c0 \"Spassky - Petrosian, Moskau 1969\";'\n,'8/1p3pp1/7p/5P1P/2k3P1/8/2K2P2/8 w - - bm f6; id \"LCTII.FIN.01\"; c0 \"NN - Lasker,Ed\";'\n,'8/pp2r1k1/2p1p3/3pP2p/1P1P1P1P/P5KR/8/8 w - - bm f5; id \"LCTII.FIN.02\"; c0 \"Capablanca - Eliskases, Moskau 1936\";'\n,'8/3p4/p1bk3p/Pp6/1Kp1PpPp/2P2P1P/2P5/5B2 b - - bm Bxe4; id \"LCTII.FIN.03\"; c0 \"Studie 1994\";'\n,'5k2/7R/4P2p/5K2/p1r2P1p/8/8/8 b - - bm h3; am h5; id \"LCTII.FIN.04\"; c0 \"Karpov - Deep Thought, Analyse 1990\";'\n,'6k1/6p1/7p/P1N5/1r3p2/7P/1b3PP1/3bR1K1 w - - bm a6; id \"LCTII.FIN.05\"; c0 \"Karpov - Kasparov, Moskau 1985 [Analyse]\";'\n,'8/3b4/5k2/2pPnp2/1pP4N/pP1B2P1/P3K3/8 b - - bm f4; id \"LCTII.FIN.06\"; c0 \"Minev - Portisch, Halle 1967\";'\n,'6k1/4pp1p/3p2p1/P1pPb3/R7/1r2P1PP/3B1P2/6K1 w - - bm Bb4; id \"LCTII.FIN.07\"; c0 \"Lengyel - Kaufman, Los Angeles 1974\";'\n,'2k5/p7/Pp1p1b2/1P1P1p2/2P2P1p/3K3P/5B2/8 w - - bm c5; id \"LCTII.FIN.08\"; c0 \"Spassky - Byrne, 1974\";'\n,'8/5Bp1/4P3/6pP/1b1k1P2/5K2/8/8 w - - bm Kg4; id \"LCTII.FIN.09\"; c0 \"Klimenok - Kabanov, UdSSR 1969\";');\n\n--CCR One Hour Test by Larry Kaufman, published 1994 (Kaufman Test)\n\n--  The test is very simple.  Set the level to infinite, turn off the opening book\n--and thinking on opponent's time if possible.  Play out the moves to the problem\n--position.  Note the choice moves after 15\", 30\", 1', and 2'.  Score one point\n--for each correct move found or each bad move avoided at each of the four time\n--intervals.  The most points possible for each test set is 4.  If the correct\n--move is shown at 15\" but not at the 1 minute mark 1 point would still be given.\n--To get an estimated USCF rating, multiply the test score by 8 and add it to 2000\n--(for British ratings, add 1900, for Swedish, add 1800).\n\n--bm=bestmove am=avoidmove sm=sekundarymove\n  TYPE CCRTestType IS VARRAY(25) OF VARCHAR2(99); --EPD format\n  CCRTest CONSTANT CCRTestType := CCRTestType\n('rn1qkb1r/pp2pppp/5n2/3p1b2/3P4/2N1P3/PP3PPP/R1BQKBNR w KQkq - 0 1 id \"CCR01\"; bm Qb3;'\n,'rn1qkb1r/pp2pppp/5n2/3p1b2/3P4/1QN1P3/PP3PPP/R1B1KBNR b KQkq - 1 1 id \"CCR02\";bm Bc8; sm Nc6;' --secondary move added, as new analysis prefer\n,'r1bqk2r/ppp2ppp/2n5/4P3/2Bp2n1/5N1P/PP1N1PP1/R2Q1RK1 b kq - 1 10 id \"CCR03\"; bm Nh6; am Ne5;'\n,'r1bqrnk1/pp2bp1p/2p2np1/3p2B1/3P4/2NBPN2/PPQ2PPP/1R3RK1 w - - 1 12 id \"CCR04\"; bm b4;'\n,'rnbqkb1r/ppp1pppp/5n2/8/3PP3/2N5/PP3PPP/R1BQKBNR b KQkq - 3 5 id \"CCR05\"; bm e5;'\n,'rnbq1rk1/pppp1ppp/4pn2/8/1bPP4/P1N5/1PQ1PPPP/R1B1KBNR b KQ - 1 5 id \"CCR06\"; bm Bcx3+;'\n,'r4rk1/3nppbp/bq1p1np1/2pP4/8/2N2NPP/PP2PPB1/R1BQR1K1 b - - 1 12 id \"CCR07\"; bm Rfb8;'\n,'rn1qkb1r/pb1p1ppp/1p2pn2/2p5/2PP4/5NP1/PP2PPBP/RNBQK2R w KQkq c6 1 6 id \"CCR08\"; bm d5;'\n,'r1bq1rk1/1pp2pbp/p1np1np1/3Pp3/2P1P3/2N1BP2/PP4PP/R1NQKB1R b KQ - 1 9 id \"CCR09\"; bm Nd4;'\n,'rnbqr1k1/1p3pbp/p2p1np1/2pP4/4P3/2N5/PP1NBPPP/R1BQ1RK1 w - - 1 11 id \"CCR10\"; bm a4;'\n,'rnbqkb1r/pppp1ppp/5n2/4p3/4PP2/2N5/PPPP2PP/R1BQKBNR b KQkq f3 1 3 id \"CCR11\"; bm d5;'\n,'r1bqk1nr/pppnbppp/3p4/8/2BNP3/8/PPP2PPP/RNBQK2R w KQkq - 2 6 id \"CCR12\"; bm Bxf7+;'\n,'rnbq1b1r/ppp2kpp/3p1n2/8/3PP3/8/PPP2PPP/RNBQKB1R b KQ d3 1 5 id \"CCR13\"; am Ne4;'\n,'rnbqkb1r/pppp1ppp/3n4/8/2BQ4/5N2/PPP2PPP/RNB2RK1 b kq - 1 6 id \"CCR14\"; am Nxc4;'\n,'r2q1rk1/2p1bppp/p2p1n2/1p2P3/4P1b1/1nP1BN2/PP3PPP/RN1QR1K1 w - - 1 12 id \"CCR15\"; bm exf6;'\n,'r1bqkb1r/2pp1ppp/p1n5/1p2p3/3Pn3/1B3N2/PPP2PPP/RNBQ1RK1 b kq - 2 7 id \"CCR16\"; bm d5;'\n,'r2qkbnr/2p2pp1/p1pp4/4p2p/4P1b1/5N1P/PPPP1PP1/RNBQ1RK1 w kq - 1 8 id \"CCR17\"; am hxg4;'\n,'r1bqkb1r/pp3ppp/2np1n2/4p1B1/3NP3/2N5/PPP2PPP/R2QKB1R w KQkq e6 1 7 id \"CCR18\"; bm Bxf6+;'\n,'rn1qk2r/1b2bppp/p2ppn2/1p6/3NP3/1BN5/PPP2PPP/R1BQR1K1 w kq - 5 10 id \"CCR19\"; am Bxe6;'\n,'r1b1kb1r/1pqpnppp/p1n1p3/8/3NP3/2N1B3/PPP1BPPP/R2QK2R w KQkq - 3 8 id \"CCR20\"; am Ndb5;'\n,'r1bqnr2/pp1ppkbp/4N1p1/n3P3/8/2N1B3/PPP2PPP/R2QK2R b KQ - 2 11 id \"CCR21\"; am Kxe6;'\n,'r3kb1r/pp1n1ppp/1q2p3/n2p4/3P1Bb1/2PB1N2/PPQ2PPP/RN2K2R w KQkq - 3 11 id \"CCR22\"; bm a4; sm Qe2;'--secondary move added, as new analysis prefer\n,'r1bq1rk1/pppnnppp/4p3/3pP3/1b1P4/2NB3N/PPP2PPP/R1BQK2R w KQ - 3 7 id \"CCR23\"; bm Bxh7+;'\n,'r2qkbnr/ppp1pp1p/3p2p1/3Pn3/4P1b1/2N2N2/PPP2PPP/R1BQKB1R w KQkq - 2 6 id \"CCR24\"; bm Nxe5;'\n,'rn2kb1r/pp2pppp/1qP2n2/8/6b1/1Q6/PP1PPPBP/RNB1K1NR b KQkq - 1 6 id \"CCR25\"; am Qxb3;');\n\n\n--Subject: Big Book Of Combinations (long post)\n\n--Author: Jouni Uski Date: 23:33:19 09/16/01\n\n--Book has originally 1000 positions, but Steve Maughan has removed all, which\n--were too easy for computers resulting 190. I have further reduced a lot of\n--inaccurate positions to finally have only 42 positions. I don't claim, that\n--indicated move is only winning, but probably the best.\n\n--And here's some result in AMD 450Mhz and 600 sec limit for reference:\n--\n--Gambit Tiger 2        32/42\n--Goliath Light 1.5     29\n--Chess Tiger           24\n--Crafty 18.10          13\n\n\n  TYPE BBCTestType IS VARRAY(42) OF VARCHAR2(99); --Converted from PGN to EPD format\n  BBCTest CONSTANT BBCTestType := BBCTestType\n('r1b1kb1r/1p4pp/p2ppn2/8/2qNP3/2N1B3/PPP3PP/R2Q1RK1 w kq - 0 1 bm Rxf6 id \"BBC.01\";'     --gxf6 2. Qh5+ Kd8 3. Qf7 Be7 4. Nf5 Qc7 5. Na4 $1 Rf8 6. Qxh7 exf5\n,'1r5k/2q2p1p/p2p3B/5PQ1/n1p5/2b4P/PrB3P1/2R1R1K1 w - - 0 1 bm Re5 id \"BBC.02\";'          --f6 2. Qxf6+ Kg8 3. Qg5+ Kh8 4. Re7 Rg8 5. Rxc7 Rxg5 6. Bxg5 1-0\n,'2kr3r/pRp3q1/2Pppn2/4p2p/B2bP1p1/7P/2P2PP1/2BQ1RK1 w - - 0 1 bm Bh6 id \"BBC.03\";'       --Rdg8 (1... Qxh6 2. Qb1 Bxf2+ (2... Bb6 3. Qb5 Nd7 4. Rxa7 Nb8 5. Ra8\n,'r2r2k1/ppqbbppp/4pn2/6N1/n1P4P/3B1N2/PP2QPP1/1KBR3R w - - 0 1 bm Nxh7 id \"BBC.04\";'     --Nxh7 2. Bxh7+ Kxh7 3. Ng5+ Kg8 4. Qh5 Bf6 5. Qxf7+ Kh8 6. h5 $1 Nc3+ \n,'r2rn3/1p3pk1/p1pNn1pp/q3P3/P7/1PN4P/2QR1PP1/3R2K1 w - - 0 1 bm Nxf7 id \"BBC.05\";'       --Kxf7 2. Rd7+ Rxd7 3. Rxd7+ Kg8 4. Qxg6+ N6g7 5. Ne4 Qxe5 6. Rf7 Qa1+ \n,'r1b1kb1r/1p1n1ppp/p2ppn2/6BB/2qNP3/2N5/PPP2PPP/R2Q1RK1 w kq - 0 1 bm Nxe6 id \"BBC.06\";' --Qxe6 2. Nd5 Nxd5 (2... Kd8 3. Bg4 Qe5 4. f4 Qxb2 5. Bxd7 Bxd7 6. Rb1\n,'2rr2k1/4bppp/p1n1p3/3q4/1p1P2N1/2P3R1/P3QPPP/2B2RK1 w - - 0 1 bm Nh6+ id \"BBC.07\";'     --Kf8 2. Rxg7 Kxg7 3. Qg4+ Bg5 4. c4 Qa5 5. d5 f6 6. Bxg5 Rf8 \n,'3r2k1/p6p/b2r2p1/2qPQp2/2P2P2/8/6BP/R4R1K w - - 0 1 bm Rxa6 id \"BBC.08\";'               --{Excellent test for computers to determine if they see the value of\n,'r5k1/pn1q1rpp/2pp4/5R1N/bP6/4BQ2/P4PPP/2R3K1 w - - 0 1 bm Nxg7 id \"BBC.09\";'            --Rxg7 2. Bh6 Qe7 (2... Re8 3. h4 Rf7 4. Rg5+ Kh8 5. Qc3+ Re5 6. f4 Qe6\n,'r2qr3/2p1b1pk/p5pp/1p2p3/nP2P1P1/1BP2RP1/P3QPK1/R1B5 w - - 0 1 bm Bxh6 id \"BBC.10\";'    --gxh6 2. Rf7+ Kh8 3. Rh1 Bg5 4. Rd1 Nxc3 5. Rxd8 Nxe2 6. Rdd7 Re7\n,'r4r1k/2q2ppp/1np1b3/p1b1pNB1/2B1P3/8/PPP1Q1PP/3R1R1K w - - 0 1 bm Nxg7 id \"BBC.11\";'    --Bxc4 2. Bf6 Be7 3. Qf3 Bxf6 4. Qxf6 Qe7 5. Qxe7 Bd5 (5... Nd5 6. exd5\n,'r2qrbk1/5p1p/2b1pPp1/2np2P1/ppPpPB1N/3P1R2/PP4B1/1R2Q1K1 w - - 0 1 bm Nxg6 id \"BBC.12\";'--dxe4 2. Qh4 {A tough move to find} 2... Bg7 3. Rh3 h6 4. gxh6 fxg6\n,'3r4/2n1qr2/pkp2pp1/N1p3n1/Q3P1B1/2PP2Pp/1P5P/K2R1R2 w - - 0 1 bm Qxc6+ id \"BBC.13\";'    --Kxa5 2. Rf2 c4 3. dxc4 Qa3+ 4. bxa3 Rb8 5. Rxf6 Nge6 6. Rxe6 Rb5\n,'r4rk1/pp3ppp/2p4q/2P5/1b1P4/1B3NPb/PP2Q2P/R4RK1 w - - 0 1 bm Ne5 id \"BBC.14\";'          --Bxf1 2. Rxf1 Qd2 (2... Bd2 {Move played in the game} 3. Rf3 Rad8\n,'8/p2bRpkp/5np1/3p2Q1/p2P4/P4BNP/1qr2PP1/6K1 w - - 0 1 bm Qe5 id \"BBC.15\";'              --Qc1+ 2. Kh2 Bc6 3. Nh5+ gxh5 4. Bxh5 Be8 5. Rxe8 Rxf2 6. Qg3+ Kh6\n,'r3r1k1/pp3pp1/3p4/2q4p/2P5/1PB2Q1P/n4PP1/3R1RK1 w - - 0 1 bm Bxg7 id \"BBC.16\";'         --Kxg7 2. Rd5 Qb6 (2... Qb4 3. Rg5+ Kf8 4. Rf5 Ke7 5. Rxf7+ Kd8 6. Qf5\n,'2r1r1k1/pb1n1pp1/1p1qpn1p/4N1B1/2PP4/3B4/P2Q1PPP/3RR1K1 w - - 0 1 bm Bxh6 id \"BBC.17\";' --gxh6 2. Nxd7 Qxd7 3. Qxh6 Qc6 (3... Ng4 4. Qg5+ Kf8 5. Qxg4) 4. f3 e5\n,'rqbn1rk1/1p3ppp/p3p3/8/4NP2/5Q2/PPP1B1PP/1K1R3R w - - 0 1 bm Nf6+ id \"BBC.18\";'         --gxf6 2. Qg4+ Kh8 3. Qh4 Kg7 (3... Rg8 4. Qxf6+ Rg7 5. Rxd8#) 4. Rd3 Re8\n,'r3r1k1/p3bppp/q1b2n2/5Q2/1p1B4/1BNR4/PPP3PP/2K2R2 w - - 0 1 bm Rg3 id \"BBC.19\";'        --Bd7 (1... bxc3 2. Rxg7+ Kxg7 3. Qg5+ Kf8 4. Qh6+ Kg8 5. Bxf7+ Kxf7\n,'1q1r3k/3P1pp1/ppBR1n1p/4Q2P/P4P2/8/5PK1/8 w - - 0 1 bm Rxf6 id \"BBC.20\";'               --Qxe5 2. fxe5 gxf6 3. exf6 Kg8 (3... b5 4. axb5 axb5 5. Bxb5) 4. Kf3\n,'4rrk1/2pn2pb/p1p1qp2/1pb1pN2/P3P1PN/1P1P4/1BP2PK1/R2Q3R w - - 0 1 bm Nxg7 id \"BBC.21\";' --Kxg7 2. Nf5+ Kg8 3. Rxh7 Kxh7 (3... Rf7 4. Rxf7 Kxf7 5. Qh1 Rb8 6. Qh7+\n,'r3kbr1/pb1n1p2/2q1p2p/2P1P3/1p3Q1B/1Pp2N2/P3BPPP/R2R2K1 w q - 0 1 bm Rxd7 id \"BBC.22\";' --Qxd7 2. Rd1 Bd5 (2... Qc6 3. Qf6 Rg5 4. Bxg5 hxg5 5. Bb5 c2\n,'r1br2k1/p1q2pp1/4p1np/2ppP2Q/2n5/2PB1N2/2P2PPP/R1B1R1K1 w - - 0 1 bm Bxh6 id \"BBC.23\";' --gxh6 2. Qxh6 Qe7 3. Ng5 Ncxe5 4. Rxe5 Qf6 5. Re3 Qg7 6. Nxf7 1-0\n,'1rbqnr2/5p1k/p1np3p/1p1Np3/4P2P/1Q2B3/PPP1BP2/2KR3R w - - 0 1 bm Bxh6 id \"BBC.24\";'     --Kxh6 2. Qf3 Nf6 (2... Ng7 3. Nf6 Qb6 4. Rxd6 Ne7 5. Rxb6 Ne6 6. Ne8 Kh7\n,'r1b1k1nr/3n1p1p/1qpBp1p1/pp2b3/4PN2/PBN2Q2/1PP2PPP/2KR3R w kq - 0 1 bm Nxe6 id \"BBC.25\";'--fxe6 2. Bxe6 Bf6 3. e5 Bg5+ 4. Kb1 Nh6 5. Ne4 Bh4 6. Qf4 Qd8 7. Qxh6\n,'r4rk1/1pqbbN1p/p2pp1p1/6Pn/P3P3/2N1B3/1PP2Q1P/R4RK1 w - - 0 1 bm Nd5 id \"BBC.26\";'      --exd5 2. Nh6+ Kg7 3. Qf7+ Rxf7 4. Rxf7+ Kh8 5. Bd4+ Bf6 6. Rxf6 Ng7\n,'r3r1k1/1bqn1ppp/1pp2p2/8/3P4/1B4N1/PP3PPP/R2QR1K1 w - - 0 1 bm Bxf7+ id \"BBC.27\";'      --Kxf7 2. Qh5+ Kf8 3. Qxh7 g6 4. Qxg6 Qf4 5. Nf5 Qg5 6. Qh7 c5 7. g3 Re4\n,'r1bq1rk1/p3bppp/2p1p3/2npP3/5B2/3B4/PPPN1PPP/R2QR1K1 w - - 0 1 bm Bxh7+ id \"BBC.28\";'   --{One of the hardest positions for computers in the book - not\n,'rn5r/1b1kb2p/pq2pp2/1p1n2BQ/3NN3/3B4/PP3PPP/R4RK1 w - - 0 1 bm Nxf6+ id \"BBC.29\";'      --{Junior 5 solves in 25 secs Fritz 5.32 > 60 secs} 1... Nxf6 2. Bxf6\n,'r1b2r1k/5ppp/p1qppb1B/8/4P3/1B6/PpP1QP1P/1K1R2R1 w - - 0 1 bm e5 id \"BBC.30\";'          --{Fritz 5.32 solves in 5 secs} 1... gxh6 (1... Bxe5 2. Qxe5 f6 3. Bxg7+\n,'1r3rk1/b1pR1p2/p3p1p1/2q1P1Kp/P1N2P2/1P1Q2P1/7P/3R4 w - - 0 1 bm Kh6 id \"BBC.31\";'      --{Fritz 5.32 solves in 2 min 5 sec; Hiarcs 7.32 in 13 secs} 1... Qc6\n,'r2qr1k1/pbpp1ppn/1p2p3/n3P1P1/2PPN3/P1P5/5PP1/R2QKB1R w KQ - 0 1 bm Nf6+  id \"BBC.32\";' --{Tough one as the first three white moves are difficult to find.\n,'r4r1k/1bq2pp1/2p1p2p/1pPnP1BQ/4B2P/1p4P1/P4P2/3RR1K1 w - - 0 1 bm Rxd5 id \"BBC.33\";'    --{Fabulously complex position.  Difficult for the computers but not\n,'2q3r1/2r2ppk/b3p3/p2pPP1P/1p1B2Q1/1P6/1PPR4/4K1R1 w - - 0 1 bm Qg6+ id \"BBC.34\";'       --{Fritz 5.32 solves in 4 secs} 1... Kh8 2. f6 Qf8 3. Rdg2 Rc8 4. fxg7+\n,'r4k1r/1p3pp1/2b1p1np/p3P3/3PN1q1/4Q1P1/5P1P/R1R2BK1 w - - 0 1 bm Rxc6 id \"BBC.35\";'     --bxc6 2. Be2 Qf5 3. Nd6 Qg5 4. Qf3 Qe7 5. Rb1 Rd8 6. Rb7 $18 1-0\n,'r6r/6k1/b2pBpp1/2bP4/p1q1P3/2P2RN1/2Q3PP/3R3K w - - 0 1 bm e5 id \"BBC.36\";'             --dxe5 2. Nf5+ gxf5 3. Rg3+ Kf8 4. Qxf5 Qh4 (4... Qf4 5. Qg6 Ra7 6. Rh3\n,'2rrnbk1/1pqb1pp1/p2pp2p/6N1/Pn1BPP2/2N3Q1/1PP1B1PP/3R1R1K w - - 0 1 bm Bh5 id \"BBC.37\";'--{Complex position but the key move almost certainly lead to mate \n,'r1b1k2r/pp3ppp/4pb2/2n5/3RB3/4BN2/PqP1QPPP/3R2K1 w kq - 0 1 bm Rd8+ id \"BBC.38\";'       --{Tough position for computers} 1... Bxd8 2. Bxc5 Be7 (2... Bf6 3. Qd3\n,'rq3rk1/1b1n1ppp/ppn1p3/3pP3/5B2/2NBP2P/PP2QPP1/2RR2K1 w - - 0 1 bm Nxd5 id \"BBC.39\";'   --exd5 2. e6 Nde5 3. Rxc6 Bxc6 4. e7 Rc8 (4... Re8 5. Bxh7+ Kxh7 6. Qh5+\n,'r4rk1/1pqb1pp1/pn2p2p/b3P3/P4Q1B/1B3N2/1P3PPP/1K1R3R w - - 0 1 bm Bf6 id \"BBC.40\";'     --Nd5 (1... Rfc8 2. Qg3 g6 3. Qh4 h5 4. Qf4 Kh7 5. Ng5+ Kg8 6. Nxe6 Bd2\n,'r2q1rk1/1p2bpp1/p1b2n1p/8/5B2/2NB4/PP1Q1PPP/3R1RK1 w - - 0 1 bm Bxh6 id \"BBC.41\";'      --{Found by CM 6000 in 1 min 12 secs with the line 1.Bxh6 Re8 2.Bg5}\n,'r3k2r/2q2p1p/p1b1pb2/3p4/1p1Nn1Q1/8/PPP1NPPP/R1B1R1K1 w kq - 0 1 bm Nxe6 id \"BBC.42\";');--fxe6 2. Qxe6+ Be7 3. Nd4 Rc8 4. f3 Qd7 5. Qe5 O-O 6. fxe4 1-0\n\n\n\n--Silent but Deadly (sbd), EPD test by Dann Corbit\n--This is an EPD test that is designed to help tune chess engines. \n--All of the 134 positions are fairly quiet, and the best move is not a capture. \n--The evaluation for the position is intended to be below one pawn for a one minute search. \n--There are a few positions that have a score a bit larger than one pawn (marked polar) and there are a few positions that have more than one solution (marked Multiple solutions). \n--I would like to see suggestions for replacements for the positions with comments attached. \n\n  TYPE SBDTestType IS VARRAY(134) OF VARCHAR2(99); --suite-headers\n  SBDTest CONSTANT SBDTestType := SBDTestType\n('1qr3k1/p2nbppp/bp2p3/3p4/3P4/1P2PNP1/P2Q1PBP/1N2R1K1 b - - bm Qc7; id \"sbd.001\";'\n,'1r2r1k1/3bnppp/p2q4/2RPp3/4P3/6P1/2Q1NPBP/2R3K1 w - - bm Rc7; id \"sbd.002\";'\n,'2b1k2r/2p2ppp/1qp4n/7B/1p2P3/5Q2/PPPr2PP/R2N1R1K b k - bm O-O; id \"sbd.003\";'\n,'2b5/1p4k1/p2R2P1/4Np2/1P3Pp1/1r6/5K2/8 w - - bm Rd8; id \"sbd.004\";'\n,'2brr1k1/ppq2ppp/2pb1n2/8/3NP3/2P2P2/P1Q2BPP/1R1R1BK1 w - - bm g3; id \"sbd.005\";'\n,'2kr2nr/1pp3pp/p1pb4/4p2b/4P1P1/5N1P/PPPN1P2/R1B1R1K1 b - - bm Bf7; id \"sbd.006\";'\n,'2r1k2r/1p1qbppp/p3pn2/3pBb2/3P4/1QN1P3/PP2BPPP/2R2RK1 b k - bm O-O; id \"sbd.007\";'\n,'2r1r1k1/pbpp1npp/1p1b3q/3P4/4RN1P/1P4P1/PB1Q1PB1/2R3K1 w - - bm Rce1; id \"sbd.008\";'\n,'2r2k2/r4p2/2b1p1p1/1p1p2Pp/3R1P1P/P1P5/1PB5/2K1R3 w - - bm Kd2; id \"sbd.009\";'\n,'2r3k1/5pp1/1p2p1np/p1q5/P1P4P/1P1Q1NP1/5PK1/R7 w - - bm Rd1; id \"sbd.010\";'\n,'2r3qk/p5p1/1n3p1p/4PQ2/8/3B4/5P1P/3R2K1 w - - bm e6; id \"sbd.011\";'\n,'3b4/3k1pp1/p1pP2q1/1p2B2p/1P2P1P1/P2Q3P/4K3/8 w - - bm Qf3; id \"sbd.012\";'\n,'3n1r1k/2p1p1bp/Rn4p1/6N1/3P3P/2N1B3/2r2PP1/5RK1 w - - bm Na4 Nce4; id \"sbd.013\";'\n,'3q1rk1/3rbppp/ppbppn2/1N6/2P1P3/BP6/P1B1QPPP/R3R1K1 w - - bm Nd4; id \"sbd.014\";'\n,'3r1rk1/p1q4p/1pP1ppp1/2n1b1B1/2P5/6P1/P1Q2PBP/1R3RK1 w - - bm Bh6; id \"sbd.015\";'\n,'3r2k1/2q2p1p/5bp1/p1pP4/PpQ5/1P3NP1/5PKP/3R4 b - - bm Qd6; id \"sbd.016\";'\n,'3r2k1/p1q1npp1/3r1n1p/2p1p3/4P2B/P1P2Q1P/B4PP1/1R2R1K1 w - - bm Bc4; id \"sbd.017\";'\n,'3r4/2k5/p3N3/4p3/1p1p4/4r3/PPP3P1/1K1R4 b - - bm Kd7; id \"sbd.018\";'\n,'3r4/2R1np1p/1p1rpk2/p2b1p2/8/PP2P3/4BPPP/2R1NK2 w - - bm b4; id \"sbd.019\";'\n,'3rk2r/1b2bppp/p1qppn2/1p6/4P3/PBN2PQ1/1PP3PP/R1B1R1K1 b k - bm O-O; id \"sbd.020\";'\n,'3rk2r/1bq2pp1/2pb1n1p/p3pP2/P1B1P3/8/1P2QBPP/2RN1R1K b k - bm Be7 O-O; id \"sbd.021\";'\n,'3rkb1r/pppb1pp1/4n2p/2p5/3NN3/1P5P/PBP2PP1/3RR1K1 w - - bm Nf5; id \"sbd.022\";'\n,'3rr1k1/1pq2ppp/p1n5/3p4/6b1/2P2N2/PP1QBPPP/3R1RK1 w - - bm Rfe1; id \"sbd.023\";'\n,'4r1k1/1q1n1ppp/3pp3/rp6/p2PP3/N5P1/PPQ2P1P/3RR1K1 w - - bm Rc1; id \"sbd.024\";'\n,'4rb1k/1bqn1pp1/p3rn1p/1p2pN2/1PP1p1N1/P1P2Q1P/1BB2PP1/3RR1K1 w - - bm Qe2; id \"sbd.025\";'\n,'4rr2/2p5/1p1p1kp1/p6p/P1P4P/6P1/1P3PK1/3R1R2 w - - bm Rfe1; id \"sbd.026\";'\n,'5r2/pp1b1kpp/8/2pPp3/2P1p2P/4P1r1/PPRKB1P1/6R1 b - - bm Ke7; id \"sbd.027\";'\n,'6k1/1R5p/r2p2p1/2pN2B1/2bb4/P7/1P1K2PP/8 w - - bm Nf6+; id \"sbd.028\";'\n,'6k1/pp1q1pp1/2nBp1bp/P2pP3/3P4/8/1P2BPPP/2Q3K1 w - - bm Qc5; id \"sbd.029\";'\n,'6k1/pp2rp1p/2p2bp1/1n1n4/1PN3P1/P2rP2P/R3NPK1/2B2R2 w - - bm Rd2; id \"sbd.030\";'\n,'8/2p2kpp/p6r/4Pp2/1P2pPb1/2P3P1/P2B1K1P/4R3 w - - bm h4; id \"sbd.031\";'\n,'Q5k1/5pp1/5n1p/2b2P2/8/5N1P/5PP1/2q1B1K1 b - - bm Kh7; id \"sbd.032\";'\n,'r1b1k1nr/1p3ppp/p1np4/4p1q1/2P1P3/N1NB4/PP3PPP/2RQK2R w Kkq - bm O-O; id \"sbd.033\";'\n,'r1b1k2r/p1pp1ppp/1np1q3/4P3/1bP5/1P6/PB1NQPPP/R3KB1R b KQkq - bm O-O; id \"sbd.034\";'\n,'r1b1k2r/ppppqppp/8/2bP4/3p4/6P1/PPQPPPBP/R1B2RK1 b kq - bm O-O; id \"sbd.035\";'\n,'r1b1k2r/ppq1bppp/2n5/2N1p3/8/2P1B1P1/P3PPBP/R2Q1RK1 b kq - bm O-O; id \"sbd.036\";'\n,'r1b1kb1r/pp2qppp/2pp4/8/4nP2/2N2N2/PPPP2PP/R1BQK2R w KQkq - bm O-O; id \"sbd.037\";'\n,'r1b1qrk1/pp4b1/2pRn1pp/5p2/2n2B2/2N2NPP/PPQ1PPB1/5RK1 w - - bm Rd3; id \"sbd.038\";'\n,'r1b2rk1/1pqn1pp1/p2bpn1p/8/3P4/2NB1N2/PPQB1PPP/3R1RK1 w - - bm Rc1; id \"sbd.039\";'\n,'r1b2rk1/2qnbp1p/p1npp1p1/1p4PQ/4PP2/1NNBB3/PPP4P/R4RK1 w - - bm Qh6; id \"sbd.040\";'\n,'r1b2rk1/pp2ppbp/2n2np1/2q5/5B2/1BN1PN2/PP3PPP/2RQK2R w K - bm O-O; id \"sbd.041\";'\n,'r1b2rk1/pp4pp/1q1Nppn1/2n4B/1P3P2/2B2RP1/P6P/R2Q3K b - - bm Na6; id \"sbd.042\";'\n,'r1b2rk1/ppp1qppp/1b1n4/8/B2n4/3NN3/PPPP1PPP/R1BQK2R w KQ - bm O-O; id \"sbd.043\";'\n,'r1b2rk1/ppq1bppp/2p1pn2/8/2NP4/2N1P3/PP2BPPP/2RQK2R w K - bm O-O; id \"sbd.044\";'\n,'r1bq1rk1/1p1n1pp1/p4n1p/2bp4/8/2NBPN2/PPQB1PPP/R3K2R w KQ - bm O-O; id \"sbd.045\";'\n,'r1bq1rk1/1p2ppbp/p2p1np1/6B1/2P1P3/2N5/PP1QBPPP/R3K2R w KQ - bm O-O; id \"sbd.046\";'\n,'r1bq1rk1/1p3ppp/p1np4/3Np1b1/2B1P3/P7/1PP2PPP/RN1QK2R w KQ - bm O-O; id \"sbd.047\";'\n,'r1bq1rk1/4bppp/ppnppn2/8/2P1P3/2N5/PPN1BPPP/R1BQK2R w KQ - bm O-O; id \"sbd.048\";'\n,'r1bq1rk1/pp1n1pbp/2n1p1p1/2ppP3/8/2PP1NP1/PP1N1PBP/R1BQ1RK1 w - - bm d4; id \"sbd.049\";'\n,'r1bq1rk1/pp1pppbp/2n2np1/8/4P3/1NN5/PPP1BPPP/R1BQK2R w KQ - bm O-O; id \"sbd.050\";'\n,'r1bq1rk1/pp2ppbp/2n2np1/2p3B1/4P3/2P2N2/PP1NBPPP/R2QK2R w KQ - bm O-O; id \"sbd.051\";'\n,'r1bq1rk1/pp2ppbp/2n3p1/2p5/2BPP3/2P1B3/P3NPPP/R2QK2R w KQ - bm O-O; id \"sbd.052\";'\n,'r1bq1rk1/pp3ppp/2n1pn2/2p5/1bBP4/2N1PN2/PP3PPP/R1BQ1RK1 w - - bm a3; id \"sbd.053\";'\n,'r1bq1rk1/pp3ppp/2n2n2/3p4/8/P1NB4/1PP2PPP/R1BQK2R w KQ - bm O-O; id \"sbd.054\";'\n,'r1bq1rk1/ppp1npb1/3p2pp/3Pp2n/1PP1P3/2N5/P2NBPPP/R1BQR1K1 b - - bm Nf4; id \"sbd.055\";'\n,'r1bq1rk1/ppp2ppp/2n1pn2/3p4/1bPP4/2NBPN2/PP3PPP/R1BQK2R w KQ - bm O-O; id \"sbd.056\";'\n,'r1bq1rk1/pppp1pbp/2n2np1/4p3/2P5/P1N2NP1/1P1PPPBP/R1BQK2R w KQ - bm O-O; id \"sbd.057\";'\n,'r1bqk2r/2ppbppp/p1n2n2/1p2p3/4P3/1B3N2/PPPPQPPP/RNB2RK1 b kq - bm O-O; id \"sbd.058\";'\n,'r1bqk2r/5ppp/p1np4/1p1Np1b1/4P3/2P5/PPN2PPP/R2QKB1R b KQkq - bm O-O; id \"sbd.059\";'\n,'r1bqk2r/bp3ppp/p1n1pn2/3p4/1PP5/P1N1PN2/1B3PPP/R2QKB1R b KQkq - bm O-O; id \"sbd.060\";'\n,'r1bqk2r/p2pppbp/2p3pn/2p5/4P3/2P2N2/PP1P1PPP/RNBQR1K1 b kq - bm O-O; id \"sbd.061\";'\n,'r1bqk2r/pp2bppp/2n1p3/1B1n4/3P4/2N2N2/PP3PPP/R1BQ1RK1 b kq - bm O-O; id \"sbd.062\";'\n,'r1bqk2r/pp2bppp/2n1p3/3n4/3P4/2NB1N2/PP3PPP/R1BQ1RK1 b kq - bm O-O; id \"sbd.063\";'\n,'r1bqk2r/pp2ppbp/2np1np1/2p5/4P3/1B1P1N1P/PPP2PP1/RNBQK2R w KQkq - bm O-O; id \"sbd.064\";'\n,'r1bqk2r/ppn1bppp/2n5/2p1p3/8/2NP1NP1/PP1BPPBP/R2Q1RK1 b kq - bm O-O; id \"sbd.065\";'\n,'r1bqk2r/ppp1bppp/2n5/3p4/3P4/2PB1N2/P1P2PPP/R1BQ1RK1 b kq - bm O-O; id \"sbd.066\";'\n,'r1bqk2r/ppp2ppp/2nb4/3np3/8/PP2P3/1BQP1PPP/RN2KBNR b KQkq - bm O-O; id \"sbd.067\";'\n,'r1bqk2r/ppp2ppp/3b4/4p3/8/1PPP1N2/2PB1PPP/R2Q1RK1 b kq - bm O-O; id \"sbd.068\";'\n,'r1bqk2r/pppp1ppp/5n2/4p3/Bb2P3/5Q2/PPPPNPPP/R1B1K2R b KQkq - bm O-O; id \"sbd.069\";'\n,'r1bqkb1r/pp3ppp/2n5/2pp4/3Pn3/2N2N2/PPP1BPPP/R1BQK2R w KQkq - bm O-O; id \"sbd.070\";'\n,'r1bqkb1r/pp3ppp/2npp3/3nP3/2BP4/5N2/PP3PPP/RNBQK2R w KQkq - bm O-O; id \"sbd.071\";'\n,'r1bqkbnr/3p1ppp/p1p1p3/8/4P3/3B4/PPP2PPP/RNBQK2R w KQkq - bm O-O; id \"sbd.072\";'\n,'r1bqkbnr/ppp2ppp/2n5/8/2BpP3/5N2/PP3PPP/RNBQK2R w KQkq - bm O-O; id \"sbd.073\";'\n,'r1bqrbk1/1pp3pp/2n2p2/p2np3/8/PP1PPN2/1BQNBPPP/R3K2R w KQ - bm O-O; id \"sbd.074\";'\n,'r1br2k1/1p2qppp/pN2pn2/P7/2pn4/4N1P1/1P2PPBP/R3QRK1 b - - bm Rb8; id \"sbd.075\";'\n,'r1q1k2r/1b1nbppp/pp1ppn2/8/2PQP3/1PN2NP1/PB3PBP/R2R2K1 b kq - bm O-O; id \"sbd.076\";'\n,'r1q1k2r/pb1nbppp/1p2pn2/8/P1PNP3/2B3P1/2QN1PBP/R4RK1 b kq - bm O-O; id \"sbd.077\";'\n,'r1r3k1/1bq2pbp/pp1pp1p1/2n5/P3PP2/R2B4/1PPBQ1PP/3N1R1K w - - bm Bc3; id \"sbd.078\";'\n,'r1rn2k1/pp1qppbp/6p1/3pP3/3P4/1P3N1P/PB1Q1PP1/R3R1K1 w - - bm Rac1; id \"sbd.079\";'\n,'r2q1rk1/1b1nbpp1/pp2pn1p/8/2BN3B/2N1P3/PP2QPPP/2R2RK1 w - - bm Rfd1; id \"sbd.080\";'\n,'r2q1rk1/1b3ppp/4pn2/1pP5/1b6/2NBPN2/1PQ2PPP/R3K2R w KQ - bm O-O; id \"sbd.081\";'\n,'r2q1rk1/pb1nppbp/6p1/1p6/3PP3/3QBN1P/P3BPP1/R3K2R w KQ - bm O-O; id \"sbd.082\";'\n,'r2q1rk1/pb2bppp/npp1pn2/3pN3/2PP4/1PB3P1/P2NPPBP/R2Q1RK1 w - - bm e4; id \"sbd.083\";'\n,'r2q1rk1/pppb1pbp/2np1np1/4p3/2P5/P1NPPNP1/1P3PBP/R1BQK2R w KQ - bm O-O; id \"sbd.084\";'\n,'r2qk2r/1b1n1ppp/4pn2/p7/1pPP4/3BPN2/1B3PPP/R2QK2R w KQkq - bm O-O; id \"sbd.085\";'\n,'r2qk2r/1b2bppp/p1n1pn2/1p6/1P6/P2BPN2/1B2QPPP/RN3RK1 b kq - bm O-O; id \"sbd.086\";'\n,'r2qk2r/2p2ppp/p1n1b3/1pbpP3/4n3/1BP2N2/PP1N1PPP/R1BQ1RK1 b kq - bm O-O; id \"sbd.087\";'\n,'r2qk2r/3n1ppp/p3p3/3nP3/3R4/5N2/1P1N1PPP/3QR1K1 b kq - bm O-O; id \"sbd.088\";'\n,'r2qk2r/p1pn1ppp/b3pn2/3p4/Nb1P4/1P3NP1/P3PPBP/1RBQ1RK1 b kq - bm O-O Qe7; id \"sbd.089\";'\n,'r2qk2r/ppp1bppp/2n2n2/8/2BP2b1/2N2N2/PP3PPP/R1BQR1K1 b kq - bm O-O; id \"sbd.090\";'\n,'r2qkb1r/pb1n1p2/2p1p2p/4P1pn/PppP4/2N2NB1/1P2BPPP/R2Q1RK1 w kq - bm Ne4; id \"sbd.091\";'\n,'r2qkb1r/pp2nppp/1np1p3/4Pb2/3P4/PB3N2/1P3PPP/RNBQ1RK1 b kq - bm Ned5; id \"sbd.092\";'\n,'r2qkb1r/pp3ppp/2bppn2/8/2PQP3/2N2N2/PP3PPP/R1B1K2R w KQkq - bm O-O; id \"sbd.093\";'\n,'r2qr1k1/p3bppp/1p2n3/3Q1N2/5P2/4B1P1/PP3R1P/R5K1 w - - bm Rd1; id \"sbd.094\";'\n,'r2r2k1/p1pnqpp1/1p2p2p/3b4/3P4/3BPN2/PP3PPP/2RQR1K1 b - - bm c5; id \"sbd.095\";'\n,'r2r2k1/pp1b1ppp/8/3p2P1/3N4/P3P3/1P3P1P/3RK2R b K - bm Rac8; id \"sbd.096\";'\n,'r3k2r/1b1nb1p1/p1q1pn1p/1pp3N1/4PP2/2N5/PPB3PP/R1BQ1RK1 w kq - bm Nf3; id \"sbd.097\";'\n,'r3k2r/1pqnnppp/p5b1/1PPp1p2/3P4/2N5/P2NB1PP/2RQ1RK1 b kq - bm O-O; id \"sbd.098\";'\n,'r3k2r/p1q1nppp/1pn5/2P1p3/4P1Q1/P1P2P2/4N1PP/R1B2K1R b kq - bm O-O; id \"sbd.099\";'\n,'r3k2r/pp2pp1p/6p1/2nP4/1R2PB2/4PK2/P5PP/5bNR w kq - bm Ne2; id \"sbd.100\";'\n,'r3k2r/ppp1bppp/2n5/3n4/3PB3/8/PP3PPP/RNB1R1K1 b kq - bm O-O-O; id \"sbd.101\";'\n,'r3kb1r/pp3ppp/4bn2/3p4/P7/4N1P1/1P2PPBP/R1B1K2R w KQkq - bm O-O; id \"sbd.102\";'\n,'r3kbnr/1pp3pp/p1p2p2/8/3qP3/5Q1P/PP3PP1/RNB2RK1 w kq - bm Rd1; id \"sbd.103\";'\n,'r3kr2/pppb1p2/2n3p1/3Bp2p/4P2N/2P5/PP3PPP/2KR3R b q - bm O-O-O; id \"sbd.104\";'\n,'r3nrk1/pp2qpb1/3p1npp/2pPp3/2P1P2N/2N3Pb/PP1BBP1P/R2Q1RK1 w - - bm Re1; id \"sbd.105\";'\n,'r3r1k1/1pqn1pbp/p2p2p1/2nP2B1/P1P1P3/2NB3P/5PP1/R2QR1K1 w - - bm Rc1; id \"sbd.106\";'\n,'r3r1k1/pp1q1ppp/2p5/P2n1p2/1b1P4/1B2PP2/1PQ3PP/R1B2RK1 w - - bm e4; id \"sbd.107\";'\n,'r3r1k1/pp3ppp/2ppqn2/5R2/2P5/2PQP1P1/P2P2BP/5RK1 w - - bm Qd4; id \"sbd.108\";'\n,'r3rbk1/p2b1p2/5p1p/1q1p4/N7/6P1/PP1BPPBP/3Q1RK1 w - - bm Nc3; id \"sbd.109\";'\n,'r4r1k/pp1bq1b1/n2p2p1/2pPp1Np/2P4P/P1N1BP2/1P1Q2P1/2KR3R w - - bm Ne6; id \"sbd.110\";'\n,'r4rk1/1bqp1ppp/pp2pn2/4b3/P1P1P3/2N2BP1/1PQB1P1P/2R2RK1 w - - bm b3; id \"sbd.111\";'\n,'r4rk1/1q2bppp/p1bppn2/8/3BPP2/3B2Q1/1PP1N1PP/4RR1K w - - bm e5; id \"sbd.112\";'\n,'r4rk1/pp2qpp1/2pRb2p/4P3/2p5/2Q1PN2/PP3PPP/4K2R w K - bm O-O; id \"sbd.113\";'\n,'r7/3rq1kp/2p1bpp1/p1Pnp3/2B4P/PP4P1/1B1RQP2/2R3K1 b - - bm Rad8; id \"sbd.114\";'\n,'r7/pp1bpp2/1n1p2pk/1B3P2/4P1P1/2N5/PPP5/1K5R b - - bm Kg5; id \"sbd.115\";'\n,'rn1q1rk1/p4pbp/bp1p1np1/2pP4/8/P1N2NP1/1PQ1PPBP/R1B1K2R w KQ - bm O-O; id \"sbd.116\";'\n,'rn1q1rk1/pb3p2/1p5p/3n2P1/3p4/P4P2/1P1Q1BP1/R3KBNR b KQ - bm Re8+; id \"sbd.117\";'\n,'rn1q1rk1/pp2bppp/1n2p1b1/8/2pPP3/1BN1BP2/PP2N1PP/R2Q1RK1 w - - bm Bc2; id \"sbd.118\";'\n,'rn1q1rk1/pp3ppp/4bn2/2bp4/5B2/2NBP1N1/PP3PPP/R2QK2R w KQ - bm O-O; id \"sbd.119\";'\n,'rn1qkbnr/pp1b1ppp/8/1Bpp4/3P4/8/PPPNQPPP/R1B1K1NR b KQkq - bm Qe7; id \"sbd.120\";'\n,'rn1qr1k1/pb3p2/1p5p/3n2P1/3p4/P4P2/1P1QNBP1/R3KB1R b KQ - bm d3; id \"sbd.121\";'\n,'rn2kb1r/pp2nppp/1q2p3/3pP3/3P4/5N2/PP2NPPP/R1BQK2R w KQkq - bm O-O; id \"sbd.122\";'\n,'rn3rk1/1bqp1ppp/p3pn2/8/Nb1NP3/4B3/PP2BPPP/R2Q1RK1 w - - bm Rc1; id \"sbd.123\";'\n,'rn3rk1/pbp1qppp/1p1ppn2/8/2PP4/P1Q2NP1/1P2PPBP/R1B1K2R w KQ - bm O-O; id \"sbd.124\";'\n,'rnb1k2r/1pq2ppp/p2ppn2/2b5/3NPP2/2P2B2/PP4PP/RNBQ1R1K b kq - bm O-O; id \"sbd.125\";'\n,'rnb2rk1/ppq1ppbp/6p1/2p5/3PP3/2P2N2/P3BPPP/1RBQK2R w K - bm O-O; id \"sbd.126\";'\n,'rnbq1rk1/5ppp/p3pn2/1p6/2BP4/P1P2N2/5PPP/R1BQ1RK1 w - - bm Bd3; id \"sbd.127\";'\n,'rnbq1rk1/pp2ppbp/2pp1np1/8/P2PP3/2N2N2/1PP1BPPP/R1BQK2R w KQ - bm O-O; id \"sbd.128\";'\n,'rnbq1rk1/ppp1ppbp/6p1/8/8/2P2NP1/P2PPPBP/R1BQK2R w KQ - bm O-O; id \"sbd.129\";'\n,'rnbqk1nr/pp3pbp/2ppp1p1/8/2BPP3/2N2Q2/PPP2PPP/R1B1K1NR w KQkq - bm Nge2; id \"sbd.130\";'\n,'rnbqk2r/ppp2ppp/1b1p1n2/4p3/2B1P3/2PP1N2/PP1N1PPP/R1BQK2R b KQkq - bm O-O; id \"sbd.131\";'\n,'rnbqk2r/pppp2pp/4pn2/5p2/1b1P4/2P2NP1/PP2PPBP/RNBQK2R b KQkq - bm Be7; id \"sbd.132\";'\n,'rnbqr1k1/pp1p1ppp/5n2/3Pb3/1P6/P1N3P1/4NPBP/R1BQK2R w KQ - bm O-O; id \"sbd.133\";'\n,'rnq1nrk1/pp3pbp/6p1/3p4/3P4/5N2/PP2BPPP/R1BQK2R w KQ - bm O-O; id \"sbd.134\";');\n\n\n-- Reinfeld\u00bfs (1945) 300 (tactical) positions; \n--EPD Wacnew\n  TYPE ReinfeldTestType IS VARRAY(300) OF VARCHAR2(128); --EPD format\n  ReinfeldTest CONSTANT ReinfeldTestType := ReinfeldTestType\n('2rr3k/pp3pp1/1nnqbN1p/3pN3/2pP4/2P3Q1/PPB4P/R4RK1 w - - bm Qg6; id \"WAC.001\";'\n,'8/7p/5k2/5p2/p1p2P2/Pr1pPK2/1P1R3P/8 b - - bm Rxb2; id \"WAC.002\";'\n,'5rk1/1ppb3p/p1pb4/6q1/3P1p1r/2P1R2P/PP1BQ1P1/5RKN w - - bm Rg3; id \"WAC.003\";'\n,'r1bq2rk/pp3pbp/2p1p1pQ/7P/3P4/2PB1N2/PP3PPR/2KR4 w - - bm Qxh7+; id \"WAC.004\";'\n,'5k2/6pp/p1qN4/1p1p4/3P4/2PKP2Q/PP3r2/3R4 b - - bm Qc4+; id \"WAC.005\";'\n,'7k/p7/1R5K/6r1/6p1/6P1/8/8 w - - bm Rb7; id \"WAC.006\";'\n,'rnbqkb1r/pppp1ppp/8/4P3/6n1/7P/PPPNPPP1/R1BQKBNR b KQkq - bm Ne3; id \"WAC.007\";'\n,'r4q1k/p2bR1rp/2p2Q1N/5p2/5p2/2P5/PP3PPP/R5K1 w - - bm Rf7; id \"WAC.008\";'\n,'3q1rk1/p4pp1/2pb3p/3p4/6Pr/1PNQ4/P1PB1PP1/4RRK1 b - - bm Bh2+; id \"WAC.009\";'\n,'2br2k1/2q3rn/p2NppQ1/2p1P3/Pp5R/4P3/1P3PPP/3R2K1 w - - bm Rxh7; id \"WAC.010\";'\n,'r1b1kb1r/3q1ppp/pBp1pn2/8/Np3P2/5B2/PPP3PP/R2Q1RK1 w kq - bm Bxc6; id \"WAC.011\";'\n,'4k1r1/2p3r1/1pR1p3/3pP2p/3P2qP/P4N2/1PQ4P/5R1K b - - bm Qxf3+; id \"WAC.012\";'\n,'5rk1/pp4p1/2n1p2p/2Npq3/2p5/6P1/P3P1BP/R4Q1K w - - bm Qxf8+; id \"WAC.013\";'\n,'r2rb1k1/pp1q1p1p/2n1p1p1/2bp4/5P2/PP1BPR1Q/1BPN2PP/R5K1 w - - bm Qxh7+; id \"WAC.014\";'\n,'1R6/1brk2p1/4p2p/p1P1Pp2/P7/6P1/1P4P1/2R3K1 w - - bm Rxb7; id \"WAC.015\";'\n,'r4rk1/ppp2ppp/2n5/2bqp3/8/P2PB3/1PP1NPPP/R2Q1RK1 w - - bm Nc3; id \"WAC.016\";'\n,'1k5r/pppbn1pp/4q1r1/1P3p2/2NPp3/1QP5/P4PPP/R1B1R1K1 w - - bm Ne5; id \"WAC.017\";'\n,'R7/P4k2/8/8/8/8/r7/6K1 w - - bm Rh8; id \"WAC.018\";'\n,'r1b2rk1/ppbn1ppp/4p3/1QP4q/3P4/N4N2/5PPP/R1B2RK1 w - - bm c6; id \"WAC.019\";'\n,'r2qkb1r/1ppb1ppp/p7/4p3/P1Q1P3/2P5/5PPP/R1B2KNR b kq - bm Bb5; id \"WAC.020\";'\n,'5rk1/1b3p1p/pp3p2/3n1N2/1P6/P1qB1PP1/3Q3P/4R1K1 w - - bm Qh6; id \"WAC.021\";'\n,'r1bqk2r/ppp1nppp/4p3/n5N1/2BPp3/P1P5/2P2PPP/R1BQK2R w KQkq - bm Ba2 Nxf7; id \"WAC.022\";'\n,'r3nrk1/2p2p1p/p1p1b1p1/2NpPq2/3R4/P1N1Q3/1PP2PPP/4R1K1 w - - bm g4; id \"WAC.023\";'\n,'6k1/1b1nqpbp/pp4p1/5P2/1PN5/4Q3/P5PP/1B2B1K1 b - - bm Bd4; id \"WAC.024\";'\n,'3R1rk1/8/5Qpp/2p5/2P1p1q1/P3P3/1P2PK2/8 b - - bm Qh4+; id \"WAC.025\";'\n,'3r2k1/1p1b1pp1/pq5p/8/3NR3/2PQ3P/PP3PP1/6K1 b - - bm Bf5; id \"WAC.026\";'\n,'7k/pp4np/2p3p1/3pN1q1/3P4/Q7/1r3rPP/2R2RK1 w - - bm Qf8+; id \"WAC.027\";'\n,'1r1r2k1/4pp1p/2p1b1p1/p3R3/RqBP4/4P3/1PQ2PPP/6K1 b - - bm Qe1+; id \"WAC.028\";'\n,'r2q2k1/pp1rbppp/4pn2/2P5/1P3B2/6P1/P3QPBP/1R3RK1 w - - bm c6; id \"WAC.029\";'\n,'1r3r2/4q1kp/b1pp2p1/5p2/pPn1N3/6P1/P3PPBP/2QRR1K1 w - - bm Nxd6; id \"WAC.030\";'\n,'rb3qk1/pQ3ppp/4p3/3P4/8/1P3N2/1P3PPP/3R2K1 w - - bm Qxa8 d6 dxe6 g3; id \"WAC.031\";'\n,'6k1/p4p1p/1p3np1/2q5/4p3/4P1N1/PP3PPP/3Q2K1 w - - bm Qd8+; id \"WAC.032\";'\n,'8/p1q2pkp/2Pr2p1/8/P3Q3/6P1/5P1P/2R3K1 w - - bm Qe5+ Qf4; id \"WAC.033\";'\n,'7k/1b1r2p1/p6p/1p2qN2/3bP3/3Q4/P5PP/1B1R3K b - - bm Bg1; id \"WAC.034\";'\n,'r3r2k/2R3pp/pp1q1p2/8/3P3R/7P/PP3PP1/3Q2K1 w - - bm Rxh7+; id \"WAC.035\";'\n,'3r4/2p1rk2/1pQq1pp1/7p/1P1P4/P4P2/6PP/R1R3K1 b - - bm Re1+; id \"WAC.036\";'\n,'2r5/2rk2pp/1pn1pb2/pN1p4/P2P4/1N2B3/nPR1KPPP/3R4 b - - bm Nxd4+; id \"WAC.037\";'\n,'4k3/p4prp/1p6/2b5/8/2Q3P1/P2R1PKP/4q3 w - - bm Qd3 Rd8+; id \"WAC.038\";'\n,'r1br2k1/pp2bppp/2nppn2/8/2P1PB2/2N2P2/PqN1B1PP/R2Q1R1K w - - bm Na4; id \"WAC.039\";'\n,'3r1r1k/1p4pp/p4p2/8/1PQR4/6Pq/P3PP2/2R3K1 b - - bm Rc8; id \"WAC.040\";'\n,'1k6/5RP1/1P6/1K6/6r1/8/8/8 w - - bm Ka5 Kc5 b7; id \"WAC.041\";'\n,'r1b1r1k1/pp1n1pbp/1qp3p1/3p4/1B1P4/Q3PN2/PP2BPPP/R4RK1 w - - bm Ba5; id \"WAC.042\";'\n,'r2q3k/p2P3p/1p3p2/3QP1r1/8/B7/P5PP/2R3K1 w - - bm Be7 Qxa8; id \"WAC.043\";'\n,'3rb1k1/pq3pbp/4n1p1/3p4/2N5/2P2QB1/PP3PPP/1B1R2K1 b - - bm dxc4; id \"WAC.044\";'\n,'7k/2p1b1pp/8/1p2P3/1P3r2/2P3Q1/1P5P/R4qBK b - - bm Qxa1; id \"WAC.045\";'\n,'r1bqr1k1/pp1nb1p1/4p2p/3p1p2/3P4/P1N1PNP1/1PQ2PP1/3RKB1R w K - bm Nb5; id \"WAC.046\";'\n,'r1b2rk1/pp2bppp/2n1pn2/q5B1/2BP4/2N2N2/PP2QPPP/2R2RK1 b - - bm Nxd4; id \"WAC.047\";'\n,'1rbq1rk1/p1p1bppp/2p2n2/8/Q1BP4/2N5/PP3PPP/R1B2RK1 b - - bm Rb4; id \"WAC.048\";'\n,'2b3k1/4rrpp/p2p4/2pP2RQ/1pP1Pp1N/1P3P1P/1q6/6RK w - - bm Qxh7+; id \"WAC.049\";'\n,'k4r2/1R4pb/1pQp1n1p/3P4/5p1P/3P2P1/r1q1R2K/8 w - - bm Rxb6+; id \"WAC.050\";'\n,'r1bq1r2/pp4k1/4p2p/3pPp1Q/3N1R1P/2PB4/6P1/6K1 w - - bm Rg4+; id \"WAC.051\";'\n,'r1k5/1p3q2/1Qpb4/3N1p2/5Pp1/3P2Pp/PPPK3P/4R3 w - - bm Re7 c4; id \"WAC.052\";'\n,'6k1/6p1/p7/3Pn3/5p2/4rBqP/P4RP1/5QK1 b - - bm Re1; id \"WAC.053\";'\n,'r3kr2/1pp4p/1p1p4/7q/4P1n1/2PP2Q1/PP4P1/R1BB2K1 b q - bm Qh1+; id \"WAC.054\";'\n,'r3r1k1/pp1q1pp1/4b1p1/3p2B1/3Q1R2/8/PPP3PP/4R1K1 w - - bm Qxg7+; id \"WAC.055\";'\n,'r1bqk2r/pppp1ppp/5n2/2b1n3/4P3/1BP3Q1/PP3PPP/RNB1K1NR b KQkq - bm Bxf2+; id \"WAC.056\";'\n,'r3q1kr/ppp5/3p2pQ/8/3PP1b1/5R2/PPP3P1/5RK1 w - - bm Rf8+; id \"WAC.057\";'\n,'8/8/2R5/1p2qp1k/1P2r3/2PQ2P1/5K2/8 w - - bm Qd1+; id \"WAC.058\";'\n,'r1b2rk1/2p1qnbp/p1pp2p1/5p2/2PQP3/1PN2N1P/PB3PP1/3R1RK1 w - - bm Nd5; id \"WAC.059\";'\n,'rn1qr1k1/1p2np2/2p3p1/8/1pPb4/7Q/PB1P1PP1/2KR1B1R w - - bm Qh8+; id \"WAC.060\";'\n,'3qrbk1/ppp1r2n/3pP2p/3P4/2P4P/1P3Q2/PB6/R4R1K w - - bm Qf7+; id \"WAC.061\";'\n,'6r1/3Pn1qk/p1p1P1rp/2Q2p2/2P5/1P4P1/P3R2P/5RK1 b - - bm Rxg3+; id \"WAC.062\";'\n,'r1brnbk1/ppq2pp1/4p2p/4N3/3P4/P1PB1Q2/3B1PPP/R3R1K1 w - - bm Nxf7; id \"WAC.063\";'\n,'8/6pp/3q1p2/3n1k2/1P6/3NQ2P/5PP1/6K1 w - - bm g4+; id \"WAC.064\";'\n,'1r1r1qk1/p2n1p1p/bp1Pn1pQ/2pNp3/2P2P1N/1P5B/P6P/3R1RK1 w - - bm Ne7+; id \"WAC.065\";'\n,'1k1r2r1/ppq5/1bp4p/3pQ3/8/2P2N2/PP4P1/R4R1K b - - bm Qxe5; id \"WAC.066\";'\n,'3r2k1/p2q4/1p4p1/3rRp1p/5P1P/6PK/P3R3/3Q4 w - - bm Rxd5; id \"WAC.067\";'\n,'6k1/5ppp/1q6/2b5/8/2R1pPP1/1P2Q2P/7K w - - bm Qxe3; id \"WAC.068\";'\n,'2k5/pppr4/4R3/4Q3/2pp2q1/8/PPP2PPP/6K1 w - - bm f3 h3; id \"WAC.069\";'\n,'2kr3r/pppq1ppp/3p1n2/bQ2p3/1n1PP3/1PN1BN1P/1PP2PP1/2KR3R b - - bm Na2+; id \"WAC.070\";'\n,'2kr3r/pp1q1ppp/5n2/1Nb5/2Pp1B2/7Q/P4PPP/1R3RK1 w - - bm Nxa7+; id \"WAC.071\";'\n,'r3r1k1/pp1n1ppp/2p5/4Pb2/2B2P2/B1P5/P5PP/R2R2K1 w - - bm e6; id \"WAC.072\";'\n,'r1q3rk/1ppbb1p1/4Np1p/p3pP2/P3P3/2N4R/1PP1Q1PP/3R2K1 w - - bm Qd2; id \"WAC.073\";'\n,'5r1k/pp4pp/2p5/2b1P3/4Pq2/1PB1p3/P3Q1PP/3N2K1 b - - bm Qf1+; id \"WAC.074\";'\n,'r3r1k1/pppq1ppp/8/8/1Q4n1/7P/PPP2PP1/RNB1R1K1 b - - bm Qd6; id \"WAC.075\";'\n,'r1b1qrk1/2p2ppp/pb1pnn2/1p2pNB1/3PP3/1BP5/PP2QPPP/RN1R2K1 w - - bm Bxf6; id \"WAC.076\";'\n,'3r2k1/ppp2ppp/6q1/b4n2/3nQB2/2p5/P4PPP/RN3RK1 b - - bm Ng3; id \"WAC.077\";'\n,'r2q3r/ppp2k2/4nbp1/5Q1p/2P1NB2/8/PP3P1P/3RR1K1 w - - bm Ng5+; id \"WAC.078\";'\n,'r3k2r/pbp2pp1/3b1n2/1p6/3P3p/1B2N1Pq/PP1PQP1P/R1B2RK1 b kq - bm Qxh2+; id \"WAC.079\";'\n,'r4rk1/p1B1bpp1/1p2pn1p/8/2PP4/3B1P2/qP2QP1P/3R1RK1 w - - bm Ra1; id \"WAC.080\";'\n,'r4rk1/1bR1bppp/4pn2/1p2N3/1P6/P3P3/4BPPP/3R2K1 b - - bm Bd6; id \"WAC.081\";'\n,'3rr1k1/pp3pp1/4b3/8/2P1B2R/6QP/P3q1P1/5R1K w - - bm Bh7+; id \"WAC.082\";'\n,'3rr1k1/ppqbRppp/2p5/8/3Q1n2/2P3N1/PPB2PPP/3R2K1 w - - bm Qxd7; id \"WAC.083\";'\n,'r2q1r1k/2p1b1pp/p1n5/1p1Q1bN1/4n3/1BP1B3/PP3PPP/R4RK1 w - - bm Qg8+; id \"WAC.084\";'\n,'kr2R3/p4r2/2pq4/2N2p1p/3P2p1/Q5P1/5P1P/5BK1 w - - bm Na6; id \"WAC.085\";'\n,'8/p7/1ppk1n2/5ppp/P1PP4/2P1K1P1/5N1P/8 b - - bm Ng4+; id \"WAC.086\";'\n,'8/p3k1p1/4r3/2ppNpp1/PP1P4/2P3KP/5P2/8 b - - bm Rxe5; id \"WAC.087\";'\n,'r6k/p1Q4p/2p1b1rq/4p3/B3P3/4P3/PPP3P1/4RRK1 b - - bm Rxg2+; id \"WAC.088\";'\n,'1r3b1k/p4rpp/4pp2/3q4/2ppbPPQ/6RK/PP5P/2B1NR2 b - - bm g5; id \"WAC.089\";'\n,'3qrrk1/1pp2pp1/1p2bn1p/5N2/2P5/P1P3B1/1P4PP/2Q1RRK1 w - - bm Nxg7; id \"WAC.090\";'\n,'2qr2k1/4b1p1/2p2p1p/1pP1p3/p2nP3/PbQNB1PP/1P3PK1/4RB2 b - - bm Be6; id \"WAC.091\";'\n,'r4rk1/1p2ppbp/p2pbnp1/q7/3BPPP1/2N2B2/PPP4P/R2Q1RK1 b - - bm Bxg4; id \"WAC.092\";'\n,'r1b1k1nr/pp3pQp/4pq2/3pn3/8/P1P5/2P2PPP/R1B1KBNR w KQkq - bm Bh6; id \"WAC.093\";'\n,'8/k7/p7/3Qp2P/n1P5/3KP3/1q6/8 b - - bm e4+; id \"WAC.094\";'\n,'2r5/1r6/4pNpk/3pP1qp/8/2P1QP2/5PK1/R7 w - - bm Ng4+; id \"WAC.095\";'\n,'r1b4k/ppp2Bb1/6Pp/3pP3/1qnP1p1Q/8/PPP3P1/1K1R3R w - - bm Qd8+ b3; id \"WAC.096\";'\n,'6k1/5p2/p5np/4B3/3P4/1PP1q3/P3r1QP/6RK w - - bm Qa8+; id \"WAC.097\";'\n,'1r3rk1/5pb1/p2p2p1/Q1n1q2p/1NP1P3/3p1P1B/PP1R3P/1K2R3 b - - bm Nxe4; id \"WAC.098\";'\n,'r1bq1r1k/1pp1Np1p/p2p2pQ/4R3/n7/8/PPPP1PPP/R1B3K1 w - - bm Rh5; id \"WAC.099\";'\n,'8/k1b5/P4p2/1Pp2p1p/K1P2P1P/8/3B4/8 w - - bm Be3 b6+; id \"WAC.100\";'\n,'5rk1/p5pp/8/8/2Pbp3/1P4P1/7P/4RN1K b - - bm Bc3; id \"WAC.101\";'\n,'2Q2n2/2R4p/1p1qpp1k/8/3P3P/3B2P1/5PK1/r7 w - - bm Qxf8+; id \"WAC.102\";'\n,'6k1/2pb1r1p/3p1PpQ/p1nPp3/1q2P3/2N2P2/PrB5/2K3RR w - - bm Qxg6+; id \"WAC.103\";'\n,'b4r1k/pq2rp2/1p1bpn1p/3PN2n/2P2P2/P2B3K/1B2Q2N/3R2R1 w - - bm Qxh5; id \"WAC.104\";'\n,'r2r2k1/pb3ppp/1p1bp3/7q/3n2nP/PP1B2P1/1B1N1P2/RQ2NRK1 b - - bm Bxg3 Qxh4; id \"WAC.105\";'\n,'4rrk1/pppb4/7p/3P2pq/3Qn3/P5P1/1PP4P/R3RNNK b - - bm Nf2+; id \"WAC.106\";'\n,'5n2/pRrk2p1/P4p1p/4p3/3N4/5P2/6PP/6K1 w - - bm Nb5; id \"WAC.107\";'\n,'r5k1/1q4pp/2p5/p1Q5/2P5/5R2/4RKPP/r7 w - - bm Qe5; id \"WAC.108\";'\n,'rn2k1nr/pbp2ppp/3q4/1p2N3/2p5/QP6/PB1PPPPP/R3KB1R b KQkq - bm c3; id \"WAC.109\";'\n,'2kr4/bp3p2/p2p2b1/P7/2q5/1N4B1/1PPQ2P1/2KR4 b - - bm Be3; id \"WAC.110\";'\n,'6k1/p5p1/5p2/2P2Q2/3pN2p/3PbK1P/7P/6q1 b - - bm Qf1+; id \"WAC.111\";'\n,'r4kr1/ppp5/4bq1b/7B/2PR1Q1p/2N3P1/PP3P1P/2K1R3 w - - bm Rxe6; id \"WAC.112\";'\n,'rnbqkb1r/1p3ppp/5N2/1p2p1B1/2P5/8/PP2PPPP/R2QKB1R b KQkq - bm Qxf6; id \"WAC.113\";'\n,'r1b1rnk1/1p4pp/p1p2p2/3pN2n/3P1PPq/2NBPR1P/PPQ5/2R3K1 w - - bm Bxh7+; id \"WAC.114\";'\n,'4N2k/5rpp/1Q6/p3q3/8/P5P1/1P3P1P/5K2 w - - bm Nd6; id \"WAC.115\";'\n,'r2r2k1/2p2ppp/p7/1p2P1n1/P6q/5P2/1PB1QP1P/R5RK b - - bm Rd2; id \"WAC.116\";'\n,'3r1rk1/q4ppp/p1Rnp3/8/1p6/1N3P2/PP3QPP/3R2K1 b - - bm Ne4; id \"WAC.117\";'\n,'r5k1/pb2rpp1/1p6/2p4q/5R2/2PB2Q1/P1P3PP/5R1K w - - bm Rh4; id \"WAC.118\";'\n,'r2qr1k1/p1p2ppp/2p5/2b5/4nPQ1/3B4/PPP3PP/R1B2R1K b - - bm Qxd3; id \"WAC.119\";'\n,'r4rk1/1bn2qnp/3p1B1Q/p2P1pP1/1pp5/5N1P/PPB2P2/2KR3R w - - bm Rhg1 g6; id \"WAC.120\";'\n,'6k1/5p1p/2bP2pb/4p3/2P5/1p1pNPPP/1P1Q1BK1/1q6 b - - bm Bxf3+; id \"WAC.121\";'\n,'1k6/ppp4p/1n2pq2/1N2Rb2/2P2Q2/8/P4KPP/3r1B2 b - - bm Rxf1+; id \"WAC.122\";'\n,'6k1/1b2rp2/1p4p1/3P4/PQ4P1/2N2q2/5P2/3R2K1 b - - bm Bxd5 Rc7 Re6; id \"WAC.123\";'\n,'6k1/3r4/2R5/P5P1/1P4p1/8/4rB2/6K1 b - - bm g3; id \"WAC.124\";'\n,'r1bqr1k1/pp3ppp/1bp5/3n4/3B4/2N2P1P/PPP1B1P1/R2Q1RK1 b - - bm Bxd4+; id \"WAC.125\";'\n,'r5r1/pQ5p/1qp2R2/2k1p3/4P3/2PP4/P1P3PP/6K1 w - - bm Rxc6+; id \"WAC.126\";'\n,'2k4r/1pr1n3/p1p1q2p/5pp1/3P1P2/P1P1P3/1R2Q1PP/1RB3K1 w - - bm Rxb7; id \"WAC.127\";'\n,'6rk/1pp2Qrp/3p1B2/1pb1p2R/3n1q2/3P4/PPP3PP/R6K w - - bm Qg6; id \"WAC.128\";'\n,'3r1r1k/1b2b1p1/1p5p/2p1Pp2/q1B2P2/4P2P/1BR1Q2K/6R1 b - - bm Bf3; id \"WAC.129\";'\n,'6k1/1pp3q1/5r2/1PPp4/3P1pP1/3Qn2P/3B4/4R1K1 b - - bm Qh6 Qh8; id \"WAC.130\";'\n,'2rq1bk1/p4p1p/1p4p1/3b4/3B1Q2/8/P4PpP/3RR1K1 w - - bm Re8; id \"WAC.131\";'\n,'4r1k1/5bpp/2p5/3pr3/8/1B3pPq/PPR2P2/2R2QK1 b - - bm Re1; id \"WAC.132\";'\n,'r1b1k2r/1pp1q2p/p1n3p1/3QPp2/8/1BP3B1/P5PP/3R1RK1 w kq - bm Bh4; id \"WAC.133\";'\n,'3r2k1/p6p/2Q3p1/4q3/2P1p3/P3Pb2/1P3P1P/2K2BR1 b - - bm Rd1+; id \"WAC.134\";'\n,'3r1r1k/N2qn1pp/1p2np2/2p5/2Q1P2N/3P4/PP4PP/3R1RK1 b - - bm Nd4; id \"WAC.135\";'\n,'6kr/1q2r1p1/1p2N1Q1/5p2/1P1p4/6R1/7P/2R3K1 w - - bm Rc8+; id \"WAC.136\";'\n,'3b1rk1/1bq3pp/5pn1/1p2rN2/2p1p3/2P1B2Q/1PB2PPP/R2R2K1 w - - bm Rd7; id \"WAC.137\";'\n,'r1bq3r/ppppR1p1/5n1k/3P4/6pP/3Q4/PP1N1PP1/5K1R w - - bm h5; id \"WAC.138\";'\n,'rnb3kr/ppp2ppp/1b6/3q4/3pN3/Q4N2/PPP2KPP/R1B1R3 w - - bm Nf6+; id \"WAC.139\";'\n,'r2b1rk1/pq4p1/4ppQP/3pB1p1/3P4/2R5/PP3PP1/5RK1 w - - bm Bc7 Rc7; id \"WAC.140\";'\n,'4r1k1/p1qr1p2/2pb1Bp1/1p5p/3P1n1R/1B3P2/PP3PK1/2Q4R w - - bm Qxf4; id \"WAC.141\";'\n,'r2q3n/ppp2pk1/3p4/5Pr1/2NP1Qp1/2P2pP1/PP3K2/4R2R w - - bm Re8 f6+; id \"WAC.142\";'\n,'5b2/pp2r1pk/2pp1pRp/4rP1N/2P1P3/1P4QP/P3q1P1/5R1K w - - bm Rxh6+; id \"WAC.143\";'\n,'r2q1rk1/pp3ppp/2p2b2/8/B2pPPb1/7P/PPP1N1P1/R2Q1RK1 b - - bm d3; id \"WAC.144\";'\n,'r1bq4/1p4kp/3p1n2/p4pB1/2pQ4/8/1P4PP/4RRK1 w - - bm Re8; id \"WAC.145\";'\n,'8/8/2Kp4/3P1B2/2P2k2/5p2/8/8 w - - bm Bc8 Bd3 Bh3; id \"WAC.146\";'\n,'r2r2k1/ppqbppbp/2n2np1/2pp4/6P1/1P1PPNNP/PBP2PB1/R2QK2R b KQ - bm Nxg4; id \"WAC.147\";'\n,'2r1k3/6pr/p1nBP3/1p3p1p/2q5/2P5/P1R4P/K2Q2R1 w - - bm Rxg7; id \"WAC.148\";'\n,'6k1/6p1/2p4p/4Pp2/4b1qP/2Br4/1P2RQPK/8 b - - bm Bxg2; id \"WAC.149\";'\n,'r3r1k1/5p2/pQ1b2pB/1p6/4p3/6P1/Pq2BP1P/2R3K1 b - - bm Ba3 Be5 Bf8 e3; c0 \"All win but e3 is best.\"; id \"WAC.150\";'\n,'8/3b2kp/4p1p1/pr1n4/N1N4P/1P4P1/1K3P2/3R4 w - - bm Nc3; id \"WAC.151\";'\n,'1br2rk1/1pqb1ppp/p3pn2/8/1P6/P1N1PN1P/1B3PP1/1QRR2K1 w - - bm Ne4; id \"WAC.152\";'\n,'2r3k1/q4ppp/p3p3/pnNp4/2rP4/2P2P2/4R1PP/2R1Q1K1 b - - bm Nxd4; id \"WAC.153\";'\n,'r1b2rk1/2p2ppp/p7/1p6/3P3q/1BP3bP/PP3QP1/RNB1R1K1 w - - bm Qxf7+; id \"WAC.154\";'\n,'5bk1/1rQ4p/5pp1/2pP4/3n1PP1/7P/1q3BB1/4R1K1 w - - bm d6; id \"WAC.155\";'\n,'r1b1qN1k/1pp3p1/p2p3n/4p1B1/8/1BP4Q/PP3KPP/8 w - - bm Qxh6+; id \"WAC.156\";'\n,'5rk1/p4ppp/2p1b3/3Nq3/4P1n1/1p1B2QP/1PPr2P1/1K2R2R w - - bm Ne7+; id \"WAC.157\";'\n,'5rk1/n1p1R1bp/p2p4/1qpP1QB1/7P/2P3P1/PP3P2/6K1 w - - bm Rxg7+; id \"WAC.158\";'\n,'r1b2r2/5P1p/ppn3pk/2p1p1Nq/1bP1PQ2/3P4/PB4BP/1R3RK1 w - - bm Ne6+; id \"WAC.159\";'\n,'qn1kr2r/1pRbb3/pP5p/P2pP1pP/3N1pQ1/3B4/3B1PP1/R5K1 w - - bm Qxd7+; id \"WAC.160\";'\n,'3r3k/3r1P1p/pp1Nn3/2pp4/7Q/6R1/Pq4PP/5RK1 w - - bm Qxd8+; id \"WAC.161\";'\n,'r3kbnr/p4ppp/2p1p3/8/Q1B3b1/2N1B3/PP3PqP/R3K2R w KQkq - bm Bd5; id \"WAC.162\";'\n,'5rk1/2p4p/2p4r/3P4/4p1b1/1Q2NqPp/PP3P1K/R4R2 b - - bm Qg2+; id \"WAC.163\";'\n,'8/6pp/4p3/1p1n4/1NbkN1P1/P4P1P/1PR3K1/r7 w - - bm Rxc4+; id \"WAC.164\";'\n,'1r5k/p1p3pp/8/8/4p3/P1P1R3/1P1Q1qr1/2KR4 w - - bm Re2; id \"WAC.165\";'\n,'r3r1k1/5pp1/p1p4p/2Pp4/8/q1NQP1BP/5PP1/4K2R b K - bm d4; id \"WAC.166\";'\n,'7Q/ppp2q2/3p2k1/P2Ppr1N/1PP5/7R/5rP1/6K1 b - - bm Rxg2+; id \"WAC.167\";'\n,'r3k2r/pb1q1p2/8/2p1pP2/4p1p1/B1P1Q1P1/P1P3K1/R4R2 b kq - bm Qd2+; id \"WAC.168\";'\n,'5rk1/1pp3bp/3p2p1/2PPp3/1P2P3/2Q1B3/4q1PP/R5K1 b - - bm Bh6; id \"WAC.169\";'\n,'5r1k/6Rp/1p2p3/p2pBp2/1qnP4/4P3/Q4PPP/6K1 w - - bm Qxc4; id \"WAC.170\";'\n,'2rq4/1b2b1kp/p3p1p1/1p1nNp2/7P/1B2B1Q1/PP3PP1/3R2K1 w - - bm Bh6+; id \"WAC.171\";'\n,'5r1k/p5pp/8/1P1pq3/P1p2nR1/Q7/5BPP/6K1 b - - bm Qe1+; id \"WAC.172\";'\n,'2r1b3/1pp1qrk1/p1n1P1p1/7R/2B1p3/4Q1P1/PP3PP1/3R2K1 w - - bm Qh6+; id \"WAC.173\";'\n,'2r2rk1/6p1/p3pq1p/1p1b1p2/3P1n2/PP3N2/3N1PPP/1Q2RR1K b - - bm Nxg2; id \"WAC.174\";'\n,'r5k1/pppb3p/2np1n2/8/3PqNpP/3Q2P1/PPP5/R4RK1 w - - bm Nh5; id \"WAC.175\";'\n,'r1bq3r/ppp2pk1/3p1pp1/8/2BbPQ2/2NP2P1/PPP4P/R4R1K b - - bm Rxh2+; id \"WAC.176\";'\n,'r1b3r1/4qk2/1nn1p1p1/3pPp1P/p4P2/1p3BQN/PKPBN3/3R3R b - - bm Qa3+; id \"WAC.177\";'\n,'3r2k1/p1rn1p1p/1p2pp2/6q1/3PQNP1/5P2/P1P4R/R5K1 w - - bm Nxe6; id \"WAC.178\";'\n,'r1b2r1k/pp4pp/3p4/3B4/8/1QN3Pn/PP3q1P/R3R2K b - - bm Qg1+; id \"WAC.179\";'\n,'r1q2rk1/p3bppb/3p1n1p/2nPp3/1p2P1P1/6NP/PP2QPB1/R1BNK2R b KQ - bm Nxd5; id \"WAC.180\";'\n,'r3k2r/2p2p2/p2p1n2/1p2p3/4P2p/1PPPPp1q/1P5P/R1N2QRK b kq - bm Ng4; id \"WAC.181\";'\n,'r1b2rk1/ppqn1p1p/2n1p1p1/2b3N1/2N5/PP1BP3/1B3PPP/R2QK2R w KQ - bm Qh5; id \"WAC.182\";'\n,'1r2k1r1/5p2/b3p3/1p2b1B1/3p3P/3B4/PP2KP2/2R3R1 w - - bm Bf6; id \"WAC.183\";'\n,'4kn2/r4p1r/p3bQ2/q1nNP1Np/1p5P/8/PPP3P1/2KR3R w - - bm Qe7+; id \"WAC.184\";'\n,'1r1rb1k1/2p3pp/p2q1p2/3PpP1Q/Pp1bP2N/1B5R/1P4PP/2B4K w - - bm Qxh7+; id \"WAC.185\";'\n,'r5r1/p1q2p1k/1p1R2pB/3pP3/6bQ/2p5/P1P1NPPP/6K1 w - - bm Bf8+; id \"WAC.186\";'\n,'6k1/5p2/p3p3/1p3qp1/2p1Qn2/2P1R3/PP1r1PPP/4R1K1 b - - bm Nh3+; id \"WAC.187\";'\n,'3RNbk1/pp3p2/4rQpp/8/1qr5/7P/P4P2/3R2K1 w - - bm Qg7+; id \"WAC.188\";'\n,'3r1k2/1ppPR1n1/p2p1rP1/3P3p/4Rp1N/5K2/P1P2P2/8 w - - bm Re8+; id \"WAC.189\";'\n,'8/p2b2kp/1q1p2p1/1P1Pp3/4P3/3B2P1/P2Q3P/2Nn3K b - - bm Bh3; id \"WAC.190\";'\n,'2r1Rn1k/1p1q2pp/p7/5p2/3P4/1B4P1/P1P1QP1P/6K1 w - - bm Qc4; id \"WAC.191\";'\n,'r3k3/ppp2Npp/4Bn2/2b5/1n1pp3/N4P2/PPP3qP/R2QKR2 b Qq - bm Nd3+; id \"WAC.192\";'\n,'5bk1/p4ppp/Qp6/4B3/1P6/Pq2P1P1/2rr1P1P/R4RK1 b - - bm Qxe3; id \"WAC.193\";'\n,'5rk1/ppq2ppp/2p5/4bN2/4P3/6Q1/PPP2PPP/3R2K1 w - - bm Nh6+; id \"WAC.194\";'\n,'3r1rk1/1p3p2/p3pnnp/2p3p1/2P2q2/1P5P/PB2QPPN/3RR1K1 w - - bm g3; id \"WAC.195\";'\n,'rr4k1/p1pq2pp/Q1n1pn2/2bpp3/4P3/2PP1NN1/PP3PPP/R1B1K2R b KQ - bm Nb4; id \"WAC.196\";'\n,'7k/1p4p1/7p/3P1n2/4Q3/2P2P2/PP3qRP/7K b - - bm Qf1+; id \"WAC.197\";'\n,'2br2k1/ppp2p1p/4p1p1/4P2q/2P1Bn2/2Q5/PP3P1P/4R1RK b - - bm Rd3; id \"WAC.198\";'\n,'r1br2k1/pp2nppp/2n5/1B1q4/Q7/4BN2/PP3PPP/2R2RK1 w - - bm Bxc6 Rcd1 Rfd1; id \"WAC.199\";'\n,'2rqrn1k/pb4pp/1p2pp2/n2P4/2P3N1/P2B2Q1/1B3PPP/2R1R1K1 w - - bm Bxf6; id \"WAC.200\";'\n,'2b2r1k/4q2p/3p2pQ/2pBp3/8/6P1/1PP2P1P/R5K1 w - - bm Ra7; id \"WAC.201\";'\n,'QR2rq1k/2p3p1/3p1pPp/8/4P3/8/P1r3PP/1R4K1 b - - bm Rxa2; id \"WAC.202\";'\n,'r4rk1/5ppp/p3q1n1/2p2NQ1/4n3/P3P3/1B3PPP/1R3RK1 w - - bm Qh6; id \"WAC.203\";'\n,'r1b1qrk1/1p3ppp/p1p5/3Nb3/5N2/P7/1P4PQ/K1R1R3 w - - bm Rxe5; id \"WAC.204\";'\n,'r3rnk1/1pq2bb1/p4p2/3p1Pp1/3B2P1/1NP4R/P1PQB3/2K4R w - - bm Qxg5; id \"WAC.205\";'\n,'1Qq5/2P1p1kp/3r1pp1/8/8/7P/p4PP1/2R3K1 b - - bm Rc6; id \"WAC.206\";'\n,'r1bq2kr/p1pp1ppp/1pn1p3/4P3/2Pb2Q1/BR6/P4PPP/3K1BNR w - - bm Qxg7+; id \"WAC.207\";'\n,'3r1bk1/ppq3pp/2p5/2P2Q1B/8/1P4P1/P6P/5RK1 w - - bm Bf7+; id \"WAC.208\";'\n,'4kb1r/2q2p2/r2p4/pppBn1B1/P6P/6Q1/1PP5/2KRR3 w k - bm Rxe5+; id \"WAC.209\";'\n,'3r1rk1/pp1q1ppp/3pn3/2pN4/5PP1/P5PQ/1PP1B3/1K1R4 w - - bm Rh1; id \"WAC.210\";'\n,'r1bqrk2/pp1n1n1p/3p1p2/P1pP1P1Q/2PpP1NP/6R1/2PB4/4RBK1 w - - bm Qxf7+; id \"WAC.211\";'\n,'rn1qr2Q/pbppk1p1/1p2pb2/4N3/3P4/2N5/PPP3PP/R4RK1 w - - bm Qxg7+; id \"WAC.212\";'\n,'3r1r1k/1b4pp/ppn1p3/4Pp1R/Pn5P/3P4/4QP2/1qB1NKR1 w - - bm Rxh7+; id \"WAC.213\";'\n,'r2r2k1/1p2qpp1/1np1p1p1/p3N3/2PPN3/bP5R/4QPPP/4R1K1 w - - bm Ng5; id \"WAC.214\";'\n,'3r2k1/pb1q1pp1/1p2pb1p/8/3N4/P2QB3/1P3PPP/1Br1R1K1 w - - bm Qh7+; id \"WAC.215\";'\n,'r2qr1k1/1b1nbppp/p3pn2/1p1pN3/3P1B2/2PB1N2/PP2QPPP/R4RK1 w - - bm Nxf7 a4; id \"WAC.216\";'\n,'r3kb1r/1pp3p1/p3bp1p/5q2/3QN3/1P6/PBP3P1/3RR1K1 w kq - bm Qd7+; id \"WAC.217\";'\n,'6k1/pp5p/2p3q1/6BP/2nPr1Q1/8/PP3R1K/8 w - - bm Bh6; id \"WAC.218\";'\n,'7k/p4q1p/1pb5/2p5/4B2Q/2P1B3/P6P/7K b - - bm Qf1+; id \"WAC.219\";'\n,'3rr1k1/ppp2ppp/8/5Q2/4n3/1B5R/PPP1qPP1/5RK1 b - - bm Qxf1+; id \"WAC.220\";'\n,'r3k3/P5bp/2N1bp2/4p3/2p5/6NP/1PP2PP1/3R2K1 w q - bm Rd8+; id \"WAC.221\";'\n,'2r1r2k/1q3ppp/p2Rp3/2p1P3/6QB/p3P3/bP3PPP/3R2K1 w - - bm Bf6; id \"WAC.222\";'\n,'r1bqk2r/pp3ppp/5n2/8/1b1npB2/2N5/PP1Q2PP/1K2RBNR w kq - bm Nxe4; id \"WAC.223\";'\n,'5rk1/p1q3pp/1p1r4/2p1pp1Q/1PPn1P2/3B3P/P2R2P1/3R2K1 b - - bm Rh6 e4; id \"WAC.224\";'\n,'4R3/4q1kp/6p1/1Q3b2/1P1b1P2/6KP/8/8 b - - bm Qh4+; id \"WAC.225\";'\n,'2b2rk1/p1p4p/2p1p1p1/br2N1Q1/1p2q3/8/PB3PPP/3R1RK1 w - - bm Nf7; id \"WAC.226\";'\n,'2k1rb1r/ppp3pp/2np1q2/5b2/2B2P2/2P1BQ2/PP1N1P1P/2KR3R b - - bm d5; id \"WAC.227\";'\n,'r4rk1/1bq1bp1p/4p1p1/p2p4/3BnP2/1N1B3R/PPP3PP/R2Q2K1 w - - bm Bxe4; id \"WAC.228\";'\n,'8/8/8/1p5r/p1p1k1pN/P2pBpP1/1P1K1P2/8 b - - bm Rxh4 b4; id \"WAC.229\";'\n,'2b5/1r6/2kBp1p1/p2pP1P1/2pP4/1pP3K1/1R3P2/8 b - - bm Rb4; id \"WAC.230\";'\n,'r4rk1/1b1nqp1p/p5p1/1p2PQ2/2p5/5N2/PP3PPP/R1BR2K1 w - - bm Bg5; id \"WAC.231\";'\n,'1R2rq1k/2p3p1/Q2p1pPp/8/4P3/8/P1r3PP/1R4K1 w - - bm Qb5 Rxe8; id \"WAC.232\";'\n,'5rk1/p1p2r1p/2pp2p1/4p3/PPPnP3/3Pq1P1/1Q1R1R1P/4NK2 b - - bm Nb3; id \"WAC.233\";'\n,'2kr1r2/p6p/5Pp1/2p5/1qp2Q1P/7R/PP6/1KR5 w - - bm Rb3; id \"WAC.234\";'\n,'5r2/1p1RRrk1/4Qq1p/1PP3p1/8/4B3/1b3P1P/6K1 w - - bm Qe4 Qxf7+ Rxf7+; id \"WAC.235\";'\n,'1R6/p5pk/4p2p/4P3/8/2r3qP/P3R1b1/4Q1K1 b - - bm Rc1; id \"WAC.236\";'\n,'r5k1/pQp2qpp/8/4pbN1/3P4/6P1/PPr4P/1K1R3R b - - bm Rc1+; id \"WAC.237\";'\n,'1k1r4/pp1r1pp1/4n1p1/2R5/2Pp1qP1/3P2QP/P4PB1/1R4K1 w - - bm Bxb7; id \"WAC.238\";'\n,'8/6k1/5pp1/Q6p/5P2/6PK/P4q1P/8 b - - bm Qf1+; id \"WAC.239\";'\n,'2b4k/p1b2p2/2p2q2/3p1PNp/3P2R1/3B4/P1Q2PKP/4r3 w - - bm Qxc6; id \"WAC.240\";'\n,'2rq1rk1/pp3ppp/2n2b2/4NR2/3P4/PB5Q/1P4PP/3R2K1 w - - bm Qxh7+; id \"WAC.241\";'\n,'r1b1r1k1/pp1nqp2/2p1p1pp/8/4N3/P1Q1P3/1P3PPP/1BRR2K1 w - - bm Rxd7; id \"WAC.242\";'\n,'1r3r1k/3p4/1p1Nn1R1/4Pp1q/pP3P1p/P7/5Q1P/6RK w - - bm Qe2; id \"WAC.243\";'\n,'r6r/pp3ppp/3k1b2/2pb4/B4Pq1/2P1Q3/P5PP/1RBR2K1 w - - bm Qxc5+; id \"WAC.244\";'\n,'4rrn1/ppq3bk/3pPnpp/2p5/2PB4/2NQ1RPB/PP5P/5R1K w - - bm Qxg6+; id \"WAC.245\";'\n,'6R1/4qp1p/ppr1n1pk/8/1P2P1QP/6N1/P4PP1/6K1 w - - bm Qh5+; id \"WAC.246\";'\n,'2k1r3/1p2Bq2/p2Qp3/Pb1p1p1P/2pP1P2/2P5/2P2KP1/1R6 w - - bm Rxb5; id \"WAC.247\";'\n,'5r1k/1p4pp/3q4/3Pp1R1/8/8/PP4PP/4Q1K1 b - - bm Qc5+; id \"WAC.248\";'\n,'r4rk1/pbq2pp1/1ppbpn1p/8/2PP4/1P1Q1N2/PBB2PPP/R3R1K1 w - - bm c5 d5; id \"WAC.249\";'\n,'1b5k/7P/p1p2np1/2P2p2/PP3P2/4RQ1R/q2r3P/6K1 w - - bm Re8+; id \"WAC.250\";'\n,'k7/p4p2/P1q1b1p1/3p3p/3Q4/7P/5PP1/1R4K1 w - - bm Qe5 Qf4; id \"WAC.251\";'\n,'1rb1r1k1/p1p2ppp/5n2/2pP4/5P2/2QB4/qNP3PP/2KRB2R b - - bm Bg4 Re2; c0 \"Bg4 wins, but Re2 is far better.\"; id \"WAC.252\";'\n,'k5r1/p4b2/2P5/5p2/3P1P2/4QBrq/P5P1/4R1K1 w - - bm Qe8+; id \"WAC.253\";'\n,'r6k/pp3p1p/2p1bp1q/b3p3/4Pnr1/2PP2NP/PP1Q1PPN/R2B2RK b - - bm Nxh3; id \"WAC.254\";'\n,'3r3r/p4pk1/5Rp1/3q4/1p1P2RQ/5N2/P1P4P/2b4K w - - bm Rfxg6+; id \"WAC.255\";'\n,'3r1rk1/1pb1qp1p/2p3p1/p7/P2Np2R/1P5P/1BP2PP1/3Q1BK1 w - - bm Nf5; id \"WAC.256\";'\n,'4r1k1/pq3p1p/2p1r1p1/2Q1p3/3nN1P1/1P6/P1P2P1P/3RR1K1 w - - bm Rxd4; id \"WAC.257\";'\n,'r3brkn/1p5p/2p2Ppq/2Pp3B/3Pp2Q/4P1R1/6PP/5R1K w - - bm Bxg6; id \"WAC.258\";'\n,'r1bq1rk1/ppp2ppp/2np4/2bN1PN1/2B1P3/3p4/PPP2nPP/R1BQ1K1R w - - bm Qh5; id \"WAC.259\";'\n,'2r2b1r/p1Nk2pp/3p1p2/N2Qn3/4P3/q6P/P4PP1/1R3K1R w - - bm Qe6+; id \"WAC.260\";'\n,'r5k1/1bp3pp/p2p4/1p6/5p2/1PBP1nqP/1PP3Q1/R4R1K b - - bm Nd4; id \"WAC.261\";'\n,'6k1/p1B1b2p/2b3r1/2p5/4p3/1PP1N1Pq/P2R1P2/3Q2K1 b - - bm Rh6; id \"WAC.262\";'\n,'rnbqr2k/pppp1Qpp/8/b2NN3/2B1n3/8/PPPP1PPP/R1B1K2R w KQ - bm Qg8+; id \"WAC.263\";'\n,'r2r2k1/1R2qp2/p5pp/2P5/b1PN1b2/P7/1Q3PPP/1B1R2K1 b - - bm Qe5 Rab8; id \"WAC.264\";'\n,'2r1k2r/2pn1pp1/1p3n1p/p3PP2/4q2B/P1P5/2Q1N1PP/R4RK1 w k - bm exf6; id \"WAC.265\";'\n,'r3q2r/2p1k1p1/p5p1/1p2Nb2/1P2nB2/P7/2PNQbPP/R2R3K b - - bm Rxh2+; id \"WAC.266\";'\n,'2r1kb1r/pp3ppp/2n1b3/1q1N2B1/1P2Q3/8/P4PPP/3RK1NR w Kk - bm Nc7+; id \"WAC.267\";'\n,'2r3kr/ppp2n1p/7B/5q1N/1bp5/2Pp4/PP2RPPP/R2Q2K1 w - - bm Re8+; id \"WAC.268\";'\n,'2kr2nr/pp1n1ppp/2p1p3/q7/1b1P1B2/P1N2Q1P/1PP1BPP1/R3K2R w KQ - bm axb4; id \"WAC.269\";'\n,'2r1r1k1/pp1q1ppp/3p1b2/3P4/3Q4/5N2/PP2RPPP/4R1K1 w - - bm Qg4; id \"WAC.270\";'\n,'2kr4/ppp3Pp/4RP1B/2r5/5P2/1P6/P2p4/3K4 w - - bm Rd6; id \"WAC.271\";'\n,'nrq4r/2k1p3/1p1pPnp1/pRpP1p2/P1P2P2/2P1BB2/1R2Q1P1/6K1 w - - bm Bxc5; id \"WAC.272\";'\n,'2k4B/bpp1qp2/p1b5/7p/1PN1n1p1/2Pr4/P5PP/R3QR1K b - - bm Ng3+ g3; id \"WAC.273\";'\n,'8/1p6/p5R1/k7/Prpp4/K7/1NP5/8 w - - am Rd6; bm Rb6 Rg5+; id \"WAC.274\";'\n,'r1b2rk1/1p1n1ppp/p1p2q2/4p3/P1B1Pn2/1QN2N2/1P3PPP/3R1RK1 b - - bm Nc5 Nxg2 b5; id \"WAC.275\";'\n,'r5k1/pp1RR1pp/1b6/6r1/2p5/B6P/P4qPK/3Q4 w - - bm Qd5+; id \"WAC.276\";'\n,'1r4r1/p2kb2p/bq2p3/3p1p2/5P2/2BB3Q/PP4PP/3RKR2 b - - bm Rg3 Rxg2; id \"WAC.277\";'\n,'r2qkb1r/pppb2pp/2np1n2/5pN1/2BQP3/2N5/PPP2PPP/R1B1K2R w KQkq - bm Bf7+; id \"WAC.278\";'\n,'r7/4b3/2p1r1k1/1p1pPp1q/1P1P1P1p/PR2NRpP/2Q3K1/8 w - - bm Nxf5 Rc3; id \"WAC.279\";'\n,'r1r2bk1/5p1p/pn4p1/N2b4/3Pp3/B3P3/2q1BPPP/RQ3RK1 b - - bm Bxa3; id \"WAC.280\";'\n,'2R5/2R4p/5p1k/6n1/8/1P2QPPq/r7/6K1 w - - bm Rxh7+; id \"WAC.281\";'\n,'6k1/2p3p1/1p1p1nN1/1B1P4/4PK2/8/2r3b1/7R w - - bm Rh8+; id \"WAC.282\";'\n,'3q1rk1/4bp1p/1n2P2Q/3p1p2/6r1/Pp2R2N/1B4PP/7K w - - bm Ng5; id \"WAC.283\";'\n,'3r3k/pp4pp/8/1P6/3N4/Pn2P1qb/1B1Q2B1/2R3K1 w - - bm Nf5; id \"WAC.284\";'\n,'2rr3k/1b2bppP/p2p1n2/R7/3P4/1qB2P2/1P4Q1/1K5R w - - bm Qxg7+; id \"WAC.285\";'\n,'3r1k2/1p6/p4P2/2pP2Qb/8/1P1KB3/P6r/8 b - - bm Rxd5+; id \"WAC.286\";'\n,'rn3k1r/pp2bBpp/2p2n2/q5N1/3P4/1P6/P1P3PP/R1BQ1RK1 w - - bm Qg4 Qh5; id \"WAC.287\";'\n,'r1b2rk1/p4ppp/1p1Qp3/4P2N/1P6/8/P3qPPP/3R1RK1 w - - bm Nf6+; id \"WAC.288\";'\n,'2r3k1/5p1p/p3q1p1/2n3P1/1p1QP2P/1P4N1/PK6/2R5 b - - bm Qe5; id \"WAC.289\";'\n,'2k2r2/2p5/1pq5/p1p1n3/P1P2n1B/1R4Pp/2QR4/6K1 b - - bm Ne2+; id \"WAC.290\";'\n,'5r1k/3b2p1/p6p/1pRpR3/1P1P2q1/P4pP1/5QnP/1B4K1 w - - bm h3; id \"WAC.291\";'\n,'4r3/1Q1qk2p/p4pp1/3Pb3/P7/6PP/5P2/4R1K1 w - - bm d6+; id \"WAC.292\";'\n,'1nbq1r1k/3rbp1p/p1p1pp1Q/1p6/P1pPN3/5NP1/1P2PPBP/R4RK1 w - - bm Nfg5; id \"WAC.293\";'\n,'3r3k/1r3p1p/p1pB1p2/8/p1qNP1Q1/P6P/1P4P1/3R3K w - - bm Bf8 Nf5 Qf4; id \"WAC.294\";'\n,'4r3/p4r1p/R1p2pp1/1p1bk3/4pNPP/2P1K3/2P2P2/3R4 w - - bm Rxd5+; id \"WAC.295\";'\n,'3r4/1p2k2p/p1b1p1p1/4Q1Pn/2B3KP/4pP2/PP2R1N1/6q1 b - - bm Rd4+ Rf8; id \"WAC.296\";'\n,'3r1rk1/p3qp1p/2bb2p1/2p5/3P4/1P6/PBQN1PPP/2R2RK1 b - - bm Bxg2 Bxh2+; id \"WAC.297\";'\n,'3Q4/p3b1k1/2p2rPp/2q5/4B3/P2P4/7P/6RK w - - bm Qh8+; id \"WAC.298\";'\n,'1n2rr2/1pk3pp/pNn2p2/2N1p3/8/6P1/PP2PPKP/2RR4 w - - bm Nca4; id \"WAC.299\";'\n,'b2b1r1k/3R1ppp/4qP2/4p1PQ/4P3/5B2/4N1K1/8 w - - bm g6; id \"WAC.300\";');\n\n\n\n\n\n--Strategic Test Suite, (STS)\n-- series of themed test suites by Dann Corbit and Swaminathan Natarajan, designed to evaluate chess engine's long term understanding of strategical and positional concepts. \n--More recently, the 1500 positions were revised and converted by Ferdinand Mosca to be used by an analysis tool\n--Houdini 4 /StockFish030414 92/100  1 second/position +1 minute/position\n\n  TYPE STSsuitesTestType IS VARRAY(15) OF VARCHAR2(80); --15 suite-headers\n  STSsuitesTest CONSTANT STSsuitesTestType := STSsuitesTestType\n('Undermining, Undermining :/91'                               --  1\n,'Open Files and Diagonals, Rook on Open File :CR/80'          --  2\n,'Knight Outposts, Outposts :/96'                              --  3\n,'Square Vacancy, Square Control :/82'                         --  4\n,'Bishop vs Knight, Bishop versus Knight :'                    --  5\n,'Re-Capturing, Captures :/71'                                 --  6\n,'Offer of Simplification, Material :/63'                      --  7\n,'Advancement of f/g/h pawns,Pawn Storm :'                     --  8\n,'Advancement of a/b/c Pawns, Pawn Storm :'                    --  9\n,'Simplification, :SF/82'                                      -- 10\n,'Activity of the King,King Safety vs King Centra\t:PLI/46'   -- 11\t\n,'Center Control,Center Control :RY/88'                        -- 12\n,'Pawn Play in the Center, Pawn Center :PLI/64'                -- 13\n,'Queens and Rooks 7th Rank, Rook on Seventh :'\t               -- 14\t\t\n,'Avoid Pointless Exchange, :H64/87 SF61/92');                 -- 15\n\n\n  TYPE STSTestType IS VARRAY(1500) OF VARCHAR2(199); --Strategic Test Suite, (STS) in EPD format 15 suites x 100 positions\n  STSTest CONSTANT STSTestType := STSTestType\n-- STS1: Undermining \t\n('1kr5/3n4/q3p2p/p2n2p1/PppB1P2/5BP1/1P2Q2P/3R2K1 w - - bm f5; id \"Undermine.001\"; c0 \"f5=10, Be5+=2, Bf2=3, Bg4=2\";'\n,'1n5k/3q3p/pp1p2pB/5r2/1PP1Qp2/P6P/6P1/2R3K1 w - - bm c5; id \"Undermine.002\"; c0 \"c5=10, Qd4+=4, b5=4, g4=3\";'\n,'1n6/4bk1r/1p2rp2/pP2pN1p/K1P1N2P/8/P5R1/3R4 w - - bm c5; id \"Undermine.003\"; c0 \"c5=10, Rd3=7, Rdd2=7, Rg3=7, Rd5=9\";'\n,'1nr5/1k5r/p3pqp1/3p4/1P1P1PP1/R4N2/3Q1PK1/R7 w - - bm b5; id \"Undermine.004\"; c0 \"b5=10, Kg3=4, Ng5=4, Qe3=4\";'\n,'1q2r1k1/1b2bpp1/p2ppn1p/2p5/P3PP1B/2PB1RP1/2P1Q2P/2KR4 b - - bm c4; id \"Undermine.005\"; c0 \"c4=10, Bc6=7, Qa8=7, Qc8=7\";'\n,'1q4k1/5p1p/p1rprnp1/3R4/N1P1P3/1P6/P5PP/3Q1R1K w - - bm e5; id \"Undermine.006\"; c0 \"e5=10, Nc3=3, Qd3=1, Qf3=2\";'\n,'1qr1k2r/1p2bp2/pBn1p3/P2pPbpp/5P2/2P1QBPP/1P1N3R/R4K2 b k - bm h4; id \"Undermine.007\"; c0 \"h4=10, Bd8=1, Bf8=1, Rh7=1\";'\n,'1r1b2k1/2r2ppp/p1qp4/3R1NPP/1pn1PQB1/8/PPP3R1/1K6 w - - bm g6; id \"Undermine.008\"; c0 \"g6=10, Ka1=2, Nd4=2, Rd3=2\";'\n,'1r1qk1nr/p3ppbp/3p2p1/1pp5/2bPP3/4B1P1/2PQNPBP/R2R2K1 w k - bm e5; id \"Undermine.009\"; c0 \"e5=10, Bf3=5, Nc1=5, Rxa7=4\";'\n,'1r1r2k1/p3n2p/b1nqpbp1/2pp4/1p3PP1/2PP1N2/PPN3BP/R1BRQ2K w - - bm d4; id \"Undermine.010\"; c0 \"d4=10, Ng5=6, a4=6, h3=6\";'\n,'1r2n1rk/pP2q2p/P2p4/4pQ2/2P2p2/5B1P/3R1P1K/3R4 w - - bm c5; id \"Undermine.011\"; c0 \"c5=10, Bc6=6, Qc2=5, Rg1=5\";'\n,'1r3bk1/7p/pp1q2p1/P1pPp3/2P3b1/4B3/1P1Q2BP/R6K w - - bm b4; id \"Undermine.012\"; c0 \"b4=10, Bg1=3, axb6=3, h3=1\";'\n,'1r3rk1/3n1pbp/1q1pp1p1/p1p5/2PnPP2/PPB1N1PP/6B1/1R1Q1RK1 b - - bm a4; id \"Undermine.013\"; c0 \"a4=10, Ne2+=2, Rfd8=2, h5=2\";'\n,'1r3rk1/p5bp/6p1/q1pPppn1/7P/1B1PQ1P1/PB3P2/R4RK1 b - - bm f4; id \"Undermine.014\"; c0 \"f4=10, Nf7=4, c4=5, e4=5\";'\n,'1r4k1/1rq2pp1/3b1nn1/pBpPp3/P1N4p/2PP1Q1P/6PB/2R2RK1 w - - bm d4; id \"Undermine.015\"; c0 \"d4=10, Bc6=4, Qf5=6, Rce1=4\";'\n,'1r4k1/p1rqbp1p/b1p1p1p1/NpP1P3/3PB3/3Q2P1/P4P1P/3RR1K1 w - - bm a4; id \"Undermine.016\"; c0 \"a4=10, Kg2=4, Qf3=4, h4=5\";'\n,'2r3k1/p2q1pp1/Pbrp3p/6n1/1BP1PpP1/R4P2/2QN2KP/1R6 b - - bm h5; id \"Undermine.017\"; c0 \"h5=10, Be3=4, Ne6=4, Qd8=4\";'\n,'1r6/2q2pk1/2n1p1pp/p1Pr4/P1RP4/1p1RQ2P/1N3PP1/7K b - - bm e5; id \"Undermine.018\"; c0 \"e5=10, Kh7=4, Qb7=5, Rbd8=5\";'\n,'1r6/R1nk1p2/1p4pp/pP1p1P2/P2P3P/5PN1/5K2/8 w - - bm h5; id \"Undermine.019\"; c0 \"h5=10, Ne2=4, Nf1=7, f4=7\";'\n,'1rb3k1/2pn2pp/p2p4/4p3/1pP4q/1P1PBP1P/1PQ2P2/R3R1K1 w - - bm c5; id \"Undermine.020\"; c0 \"c5=10, Kf1=5, Kg2=5, Ra5=5\";'\n,'1rbqnrk1/6bp/pp3np1/2pPp3/P1P1N3/2N1B3/1P2Q1BP/R4R1K w - - bm a5; id \"Undermine.021\"; c0 \"a5=10, Bg5=6, Kg1=6, Nxf6+=6\";'\n,'1rr3k1/1q3pp1/pnbQp2p/1p2P3/3B1P2/2PB4/P1P2RPP/R5K1 w - - bm f5; id \"Undermine.022\"; c0 \"f5=10, Qa3=3, Rd1=2, h3=2\";'\n,'2kr2r1/1bpnqp2/1p1ppn2/p5pp/P1PP4/4PP2/1P1NBBPP/R2Q1RK1 w - - bm b4; id \"Undermine.023\"; c0 \"b4=10, Qb1=3, Qc2=4, Re1=4\";'\n,'2b1k2r/5p2/pq1pNp1b/1p6/2r1PPBp/3Q4/PPP3PP/1K1RR3 w k - bm e5; id \"Undermine.024\"; c0 \"e5=10, Qd5=1, Qh3=7, f5=1\";'\n,'2b1r1k1/1p6/pQ1p1q1p/P2P3P/2P1pPpN/6P1/4R1K1/8 w - - bm c5; id \"Undermine.025\"; c0 \"c5=10, Kg1=6, Kh2=5, Re3=5\";'\n,'2b2rk1/2qn1p2/p2p2pp/2pPP3/8/4NN1P/P1Q2PP1/bB2R1K1 w - - bm e6; id \"Undermine.026\"; c0 \"e6=10, Nc4=1, Ng4=1, exd6=2\";'\n,'2bq2k1/1pr3bp/1Qpr2p1/P2pNp2/3P1P1P/6P1/5PB1/1RR3K1 w - - bm a6; id \"Undermine.027\"; c0 \"a6=10, Qc5=2, Rc5=3, h5=2\";'\n,'rr6/8/2pbkp2/ppp1p1p1/P3P3/1P1P1PB1/R1P2PK1/R7 b - - bm c4; id \"Undermine.28\"; c0 \"c4=10, Bc7=4, Rb6=1, b4=1\";'\n,'2r2rk1/pb2q2p/1pn1p2p/5p1Q/3P4/P1NB4/1P3PPP/R4RK1 w - - bm d5; id \"Undermine.029\"; c0 \"d5=10, Qxh6=5, Rac1=5, Rfd1=5\";'\n,'2kr4/ppqnbp1r/2n1p1p1/P2pP3/3P2P1/3BBN2/1P1Q1PP1/R4RK1 w - - bm a6; id \"Undermine.030\"; c0 \"a6=10, Qc2=3, Rfc1=4, g3=4\";'\n,'2q5/1pb2r1k/p1b3pB/P1Pp3p/3P4/3B1pPP/1R3P1K/2Q5 b - - bm h4; id \"Undermine.031\"; c0 \"h4=10, Bb5=5, Bd7=1, Qd8=5\";'\n,'2r1kb1r/1bqn1pp1/p3p3/1p2P1P1/3Np3/P1N1B3/1PP1Q2P/R4RK1 w k - bm g6; id \"Undermine.032\"; c0 \"g6=10, Bf4=6, Rae1=6, Rf4=6\";'\n,'2r1rb2/1bq2p1k/3p1np1/p1p5/1pP1P1P1/PP2BPN1/2Q3P1/R2R1BK1 b - - bm d5; id \"Undermine.033\"; c0 \"d5=10, Bg7=7, Kg8=7, Nd7=7\";'\n,'2r2bk1/pq3r1p/6p1/2ppP1P1/P7/BP1Q4/2R3P1/3R3K b - - bm d4; id \"Undermine.034\"; c0 \"d4=10, Qe7=1, Rcc7=1, c4=1\";'\n,'2r2rk1/1bb2ppp/p2ppn2/1p4q1/1PnNP3/P1N4P/2P1QPPB/3RRBK1 w - - bm a4; id \"Undermine.035\"; c0 \"a4=10, Nf3=4, Rb1=5, Rd3=5\";'\n,'2r2rk1/3q3p/p3pbp1/1p1pp3/4P3/2P5/PPN1QPPP/3R1RK1 b - - bm d4; id \"Undermine.036\"; c0 \"d4=10, Bg7=7, Qb7=6, Qd6=7\";'\n,'2r4k/pp3q1b/5PpQ/3p4/3Bp3/1P6/P5RP/6K1 w - - bm h4; id \"Undermine.037\"; c0 \"h4=10, Rg3=2, Rg4=2, Rg5=2\";'\n,'2r3k1/1b2b2p/r2p1pp1/pN1Pn3/1pPB2P1/1P5P/P3R1B1/5RK1 w - - bm g5; id \"Undermine.038\"; c0 \"g5=10, Rd1=4, Rff2=4, h4=5\";'\n,'2r3k1/5pp1/1pq4p/p7/P1nR4/2P2P2/Q5PP/4B1K1 b - - bm b5; id \"Undermine.039\"; c0 \"b5=10, Nd6=1, Ne3=1, Ne5=1\";'\n,'6k1/6pp/4r3/p1qpp3/Pp6/1n1P1B1P/1B2Q1P1/3R1K2 w - - bm d4; id \"Undermine.040\"; c0 \"d4=10, Bxe5=3, Qf2=2, Re1=3\";'\n,'r2qkb1r/1b1n1ppp/p3pn2/1pp5/3PP3/2NB1N2/PP3PPP/R1BQ1RK1 w kq - bm d5; id \"Undermine.041\"; c0 \"d5=10, Be3=3, a3=2, e5=3\";'\n,'r3r1k1/pn1bnpp1/1p2p2p/1q1pPP2/1BpP3N/2P2BP1/2P3QP/R4RK1 w - - bm f6; id \"Undermine.42\"; c0 \"f6=10, Bxe7=6, Rab1=5, g4=5\";'\n,'2r5/p3kpp1/1pn1p2p/8/1PP2P2/PB1R1KP1/7P/8 b - - bm a5; id \"Undermine.043\"; c0 \"a5=10, a6=1, e5=1, f5=1\";'\n,'2rq1rk1/1b2bppp/p2p1n2/1p1Pp3/1Pn1P3/5N1P/P1B2PP1/RNBQR1K1 w - - bm a4; id \"Undermine.044\"; c0 \"a4=10, Bb3=1, Nbd2=1, Nc3=1\";'\n,'2rqr1k1/1b2bp1p/ppn1p1pB/3n4/3P3P/P1NQ1N2/1PB2PP1/3RR1K1 w - - bm h5; id \"Undermine.045\"; c0 \"h5=10, Bc1=4, Nxd5=1, Rb1=1\";'\n,'3Rb3/5ppk/2r1r3/p5Pp/1pN2P1P/1P5q/P4Q2/K2R4 b - - bm a4; id \"Undermine.046\"; c0 \"a4=10, Rc7=7, Re7=6, Rxc4=7\";'\n,'3Rbrk1/4Q2p/6q1/pp3p2/4p2P/1P4P1/8/5R1K w - - bm g4; id \"Undermine.047\"; c0 \"g4=10, Kh2=5, Rc8=2, Rf2=3\";'\n,'3bn3/3r1p1k/3Pp1p1/1q6/Np2BP1P/3R2PK/8/3Q4 w - - bm h5; id \"Undermine.048\"; c0 \"h5=10, Bf3=6, Rd4=6, g4=6\";'\n,'3k1r1r/p2n1p1p/q2p2pQ/1p2P3/2pP4/P4N2/5PPP/2R1R1K1 w - - bm a4; id \"Undermine.049\"; c0 \"a4=10, Ng5=5, Qh4+=8, exd6=6\";'\n,'3r1bk1/1p2qp1p/p5p1/P1pPp3/2QnP3/3BB3/1P3PPP/2R3K1 w - - bm f4; id \"Undermine.050\"; c0 \"f4=10, Rb1=4, Rf1=4, h3=4\";'\n,'3r1bkr/2q3pp/1p1Npp2/pPn1P3/5B2/1P6/2P2PPP/R2QR1K1 w - - bm b4; id \"Undermine.051\"; c0 \"b4=10, Bd2=5, Qf3=4, exf6=3\";'\n,'3r2k1/p2q1pp1/1p2n1p1/2p1P2n/P4P2/2B1Q1P1/7P/1R3BK1 w - - bm a5; id \"Undermine.052\"; c0 \"a5=10, Bb5=3, Qe4=1, Ra1=3\";'\n,'3r4/8/pq3kr1/3Bp3/7p/1P3P2/P5PP/3RQ2K b - - bm h3; id \"Undermine.053\"; c0 \"h3=10, Kg7=5, Rd7=4, Rh6=5\";'\n,'3r4/pk1p3p/1p2pp2/1N6/2P1KP2/6P1/3R3P/8 w - - bm f5; id \"Undermine.054\"; c0 \"f5=10, Kd4=5, Ke3=5, Nc3=5\";'\n,'4k2r/1b2b3/p3pp1p/1p1p4/3BnpP1/P1P4R/1KP4P/5BR1 w k - bm g5; id \"Undermine.055\"; c0 \"g5=10, Be2=5, a4=6, c4=5\";'\n,'4k3/r2bbprp/3p1p1N/2qBpP2/ppP1P1P1/1P1R3P/P7/1KR1Q3 w - - bm a3; id \"Undermine.056\"; c0 \"a3=10, Qd2=3, Rc2=3, h4=3\";'\n,'4q1k1/pb5p/Nbp1p1r1/3r1p2/PP1Pp1pP/4P1P1/1BR1QP2/2R3K1 w - - bm b5; id \"Undermine.057\"; c0 \"b5=10, Ba1=3, Kg2=3, a5=3\";'\n,'4r1k1/1pb3qp/p1b1r1p1/P1Pp4/3P1p2/2BB4/1R1Q1PPP/1R4K1 b - - bm f3; id \"Undermine.058\"; c0 \"f3=10, Qd7=7, Qe7=7, Qf6=7\";'\n,'4r1k1/5p1p/p2q2p1/3p4/3Qn3/2P1RN2/Pr3PPP/R5K1 w - - bm c4; id \"Undermine.059\"; c0 \"c4=10, Ree1=5, a3=5, g3=5\";'\n,'4rr1k/pp1n2bp/7n/1Pp1pp1q/2Pp3N/1N1P1PP1/P5QP/2B1RR1K b - - bm f4; id \"Undermine.060\"; c0 \"f4=10, Nf7=3, Rf7=4, b6=1\";'\n,'4rrk1/p6p/2q2pp1/1p6/2pP1BQP/5N2/P4PP1/2R3K1 w - - bm h5; id \"Undermine.061\"; c0 \"h5=10, Bd2=1, Qg3=1, a4=1\";'\n,'5nk1/1bp1rnp1/pp1p4/4p1P1/2PPP3/NBP5/P2B4/4R1K1 w - - bm c5; id \"Undermine.062\"; c0 \"c5=10, Kf1=7, Kf2=7, d5=7\";'\n,'5r2/1p1k4/2bp4/r3pp1p/PRP4P/2P2PP1/2B2K2/7R b - - bm f4; id \"Undermine.063\"; c0 \"f4=10, Kc7=4, Raa8=4, Rf7=4\";'\n,'5r2/5p1Q/4pkp1/p7/1pb2q1P/5P2/P4RP1/3R2K1 w - - bm h5; id \"Undermine.064\"; c0 \"h5=10, Rb2=1, Rd7=1, Rdd2=1\";'\n,'5rk1/1Q3pp1/p2p3p/4p1b1/N3PqP1/1N1K4/PP6/3R4 b - - bm d5; id \"Undermine.065\"; c0 \"d5=10, Qf3+=1, Qxg4=1, h5=1\";'\n,'7r/3nkpp1/4p3/p1pbP3/1r3P1p/1P2B2P/P2RBKP1/7R b - - bm a4; id \"Undermine.066\"; c0 \"a4=10, Rc8=6, Rd8=6, Rhb8=6\";'\n,'8/1r1rq2k/2p3p1/3b1p1p/4p2P/1N1nP1P1/2Q2PK1/RR3B2 b - - bm f4; id \"Undermine.067\"; c0 \"f4=10, Rb4=3, c5=3, g5=3\";'\n,'8/1r2k3/4p2p/R3K2P/1p1P1P2/1P6/8/8 w - - bm f5; id \"Undermine.068\"; c0 \"f5=10, Ke4=4, Rc5=4, d5=3\";'\n,'8/3r1pp1/p7/2k2PpP/rp1pB3/2pK1P2/P1R5/1R6 w - - bm f6; id \"Undermine.069\"; c0 \"f6=10, Rg1=1, Rh1=1, f4=2\";'\n,'8/6k1/3P1bp1/2B1p3/1P6/1Q3P1q/7r/1K2R3 b - - bm e4; id \"Undermine.070\"; c0 \"e4=10, Qc8=1, Qf5+=1, g5=1\";'\n,'b2rrbk1/2q2p1p/pn1p2p1/1p4P1/2nNPB1P/P1N3Q1/1PP3B1/1K1RR3 w - - bm h5; id \"Undermine.071\"; c0 \"h5=10, Bc1=6, Na2=6, Qh3=6\";'\n,'b7/2pr1kp1/1p3p2/p2p3p/P1nP1N2/4P1P1/P1R2P1P/2R3K1 w - - bm e4; id \"Undermine.072\"; c0 \"e4=10, Rc3=5, Re2=6, f3=5\";'\n,'k1qbr1n1/1p4p1/p1p1p1Np/2P2p1P/3P4/R7/PP2Q1P1/1K1R4 w - - bm d5; id \"Undermine.073\"; c0 \"d5=10, Ra4=3, Rdd3=4, g4=3\";'\n,'r1b1rnk1/pp3pq1/2p3p1/6P1/2B2P1R/2P5/PP1Q2P1/2K4R w - - bm f5; id \"Undermine.074\"; c0 \"f5=10, Bd3=3, Rh8+=1, g4=4\";'\n,'r1bq1rk1/pp3pbp/3Pp1p1/2p5/4PP2/2P5/P2QB1PP/1RB1K2R b K - bm e5; id \"Undermine.075\"; c0 \"e5=10, Bd7=7, Qh4+=7, b6=6\";'\n,'r1bqr2k/pppn2bp/4n3/2P1p1p1/1P2Pp2/5NPB/PBQN1P1P/R4RK1 w - - bm c6; id \"Undermine.076\"; c0 \"c6=10, Nb3=5, Nc4=5, Rac1=5\";'\n,'r1br1k2/1pq2pb1/1np1p1pp/2N1N3/p2P1P1P/P3P1R1/1PQ3P1/1BR3K1 w - - bm h5; id \"Undermine.077\"; c0 \"h5=10, Ba2=4, Re1=4, Rf1=5\";'\n,'r1n2k1r/5pp1/2R5/pB2pPq1/P2pP3/6Pp/1P2Q2P/5RK1 w - - bm f6; id \"Undermine.078\"; c0 \"f6=10, Qd3=2, Rc5=2, Rg6=2\";'\n,'r1r2bk1/pp1n1p1p/2pqb1p1/3p4/1P1P4/1QN1PN2/P3BPPP/2RR2K1 w - - bm b5; id \"Undermine.079\"; c0 \"b5=10, Qc2=5, Rb1=4, a3=4\";'\n,'r2q1r2/pp1b2kp/2n1p1p1/3p4/3P1P1P/2PB1N2/6P1/R3QRK1 w - - bm h5; id \"Undermine.080\"; c0 \"h5=10, Qe3=3, Rb1=4, g3=4\";'\n,'r2q1rk1/pp2b1pp/1np1b3/4pp2/1P6/P1NP1BP1/2Q1PP1P/1RB2RK1 w - - bm b5; id \"Undermine.081\"; c0 \"b5=10, Be3=1, Bg2=1, Re1=1\";'\n,'r2q4/6k1/r1p3p1/np1p1p2/3P4/4P1P1/R2QBPK1/7R w - - bm e4; id \"Undermine.082\"; c0 \"e4=10, Qb2=5, Qc3=5, Rc2=2\";'\n,'r2qr1k1/pp3pbp/5np1/2p2b2/8/2PP1Q2/PPB3PP/RNB2RK1 b - - bm c4; id \"Undermine.083\"; c0 \"c4=10, Bg4=3, Ng4=2, Qd7=3\";'\n,'r3k2r/1bq1bpp1/p4n2/2p1pP2/2NpP2p/3B4/PPP3PP/R1B1QR1K b k - bm h3; id \"Undermine.084\"; c0 \"h3=10, Bc6=3, Bd8=1, Kf8=1\";'\n,'r3k2r/2q2p2/p2bpPpp/1b1p4/1p1B1PPP/8/PPPQ4/1K1R1B1R w kq - bm f5; id \"Undermine.085\"; c0 \"f5=10, Be3=6, Bxb5+=4, h5=4\";'\n,'r3k2r/ppq2p1p/2n1p1p1/3pP3/5PP1/2P1Q3/PP2N2P/3R1RK1 b k - bm h5; id \"Undermine.086\"; c0 \"h5=10, O-O=3, Qb6=1, Rc8=1, Rc8=3\";'\n,'r3r1k1/1pp1np1p/1b1p1p2/pP2p3/2PP2b1/P3PN2/1B3PPP/R3KB1R w KQ - bm c5; id \"Undermine.087\"; c0 \"c5=10, Be2=3, Rd1=3, dxe5=3\";'\n,'r3r1k1/1pq2pbp/p1ppbnp1/4n3/2P1PB2/1NN2P2/PP1Q2PP/R3RBK1 w - - bm c5; id \"Undermine.088\"; c0 \"c5=10, Bxe5=7, Nd1=7, Red1=7\";'\n,'r3r1k1/bpp1np1p/3p1p2/pPP1p3/3P2b1/P3PN2/1B3PPP/R3KB1R w KQ - bm b6; id \"Undermine.089\"; c0 \"b6=10, Rc1=3, Rd1=2, h3=5\";'\n,'r3r1k1/pp2q3/2b1pp2/6pN/Pn1P4/6R1/1P3PP1/3QRBK1 w - - bm f4; id \"Undermine.090\"; c0 \"f4=10, Qd2=4, b3=5, f3=3\";'\n,'r4r2/1p2pbk1/1np1qppp/p7/3PP2P/P1Q2NP1/1P3PB1/2R1R1K1 w - - bm h5; id \"Undermine.091\"; c0 \"h5=10, Qc5=5, Qe3=3, b4=2\";'\n,'r4r2/2p2kb1/1p1p2p1/qPnPp2n/2B1PP2/pP6/P1Q1N2R/1KB4R w - - bm f5; id \"Undermine.092\"; c0 \"f5=10, Bd2=5, Rg1=3, Rg2=4\";'\n,'r4rk1/2p5/p2p1n2/1p1P3p/2P1p1pP/1P4B1/1P3PP1/3RR1K1 w - - bm c5; id \"Undermine.093\"; c0 \"c5=10, Rc1=5, Rd2=4, Re2=6\";'\n,'r4rk1/2qnb1pp/4p3/ppPb1p2/3Pp3/1PB3P1/R1QNPPBP/R5K1 b - - bm a4; id \"Undermine.094\"; c0 \"a4=10, Bf6=6, Qc6=6, e5=6\";'\n,'r4rk1/p5pp/1p2b3/2Pn1p2/P2Pp2P/4P1Pq/2Q1BP2/R1BR2K1 w - - bm a5; id \"Undermine.095\"; c0 \"a5=10, Bc4=5, Bf1=5, Rb1=6\";'\n,'r4rk1/pbq2p2/2p2np1/1p2b2p/4P3/2N1BPP1/PPQ1B2P/R2R2K1 b - - bm h4; id \"Undermine.096\"; c0 \"h4=10, Rfd8=2, a5=3, a6=2\";'\n,'r4rk1/pp1b2b1/n2p1nq1/2pP1p1p/2P1pP2/PP4PP/1BQ1N1B1/R3RNK1 b - - bm h4; id \"Undermine.097\"; c0 \"h4=10, Rab8=1, Rae8=1, Rf7=1\";'\n,'rn3rk1/p1p1qp2/1pbppn1p/6p1/P1PP4/2PBP1B1/3N1P1P/R2QK1R1 w Q - bm h4; id \"Undermine.098\"; c0 \"h4=10, Qe2=1, a5=1, f4=1\";'\n,'rnbq1rk1/2p1p1bp/p3pnp1/1p6/3P4/1QN1BN2/PP3PPP/R3KB1R w KQ - bm a4; id \"Undermine.099\"; c0 \"a4=10, Rc1=6, g3=6, h3=6\";'\n,'rr3n1k/q3bpn1/2p1p1p1/2PpP2p/pP1P1N1P/2BB1NP1/P2Q1P2/6RK w - - bm g4; id \"Undermine.100\"; c0 \"g4=10, Kh2=4, Qc1=2, a3=3\";'\n -- STS2: Open Files and Diagonals\n,'1b1r4/3rkp2/p3p2p/4q3/P5P1/2RBP3/P1Q4P/1R3K2 b - - bm Ba7; c0 \"Ba7=10, Qf6+=3, a5=3, h5=5\"; id \"STS(v2.2) Open Files and Diagonals.001\";'\n,'1bq3rk/R6p/5n1P/1N1p4/1PnP2p1/6P1/5B2/2Q2BK1 w - - bm Re7; c0 \"Re7=10, Ra2=5, Rg7=2\"; id \"STS(v2.2) Open Files and Diagonals.002\";'\n,'1k1r3r/1p1b1Q1p/p7/q3p3/4p3/2P1N3/P4PPP/R4RK1 w - - bm Rad1; c0 \"Rad1=10, Qf6=7, Rfd1=7, a4=2\"; id \"STS(v2.2) Open Files and Diagonals.003\";'\n,'1Q6/1b4pk/2q2b1p/1p1ppP2/1Pp5/2P2P1P/2BB2P1/6K1 b - - bm Qa6; c0 \"Qa6=10, Bc8=5, Qd7=7\"; id \"STS(v2.2) Open Files and Diagonals.004\";'\n,'1qrr3k/1p2bp1p/1n2p1pP/p2pP3/P4B2/1PPB2P1/2R1QP2/3R2K1 w - - bm Bb5; c0 \"Bb5=10, Qe1=2, Qe3=2\"; id \"STS(v2.2) Open Files and Diagonals.005\";'\n,'1r1n1rk1/3qp2p/P2p2p1/1p6/5pP1/1p3P1P/5PB1/R1QR2K1 w - - bm Bf1; c0 \"Bf1=10, Qb2=7, Qc3=7, Qd2=6\"; id \"STS(v2.2) Open Files and Diagonals.006\";'\n,'1r1n2k1/5r1p/P2qp1p1/3p4/1p3pP1/1Q3P1P/R4P2/2R2BK1 w - - bm Rac2; c0 \"Rac2=10, Kg2=5, Qa4=4\"; id \"STS(v2.2) Open Files and Diagonals.007\";'\n,'1r1q1nk1/p3bpp1/b1p1p2p/4P3/1P2NB2/P4N2/5PPP/2Q1R1K1 w - - bm Be3; c0 \"Be3=10, Nd6=5, Rd1=7, h3=6\"; id \"STS(v2.2) Open Files and Diagonals.008\";'\n,'1r1q4/5p2/2p4k/1n2p1pP/4P3/P4BR1/3Q1PKP/8 w - - bm Qc1; c0 \"Qc1=10, Qa2=5, Qe3=6\"; id \"STS(v2.2) Open Files and Diagonals.009\";'\n,'1r1qbr1k/4bp1p/p3p2Q/3pP3/2pP4/P1N1PN2/1PR2RP1/6K1 b - - bm Rg8; c0 \"Rg8=10, Bc6=1, Bd7=4\"; id \"STS(v2.2) Open Files and Diagonals.010\";'\n,'1r3k2/8/R7/4pPP1/P1p5/1nP5/R5P1/3rB1K1 w - - bm Rh6; c0 \"Rh6=10, Kf1=6, Rf6+=6\"; id \"STS(v2.2) Open Files and Diagonals.011\";'\n,'1r3rk1/2b3pp/p4p2/2p5/P1Np4/1P1R2P1/1P3P1P/2R3K1 b - - bm Rfe8; c0 \"Rfe8=10, Rfc8=7, Rfd8=8\"; id \"STS(v2.2) Open Files and Diagonals.012\";'\n,'1r5k/p7/3pQ1p1/1Np5/2P3P1/7P/1PK5/7q b - - bm Qf1; c0 \"Qf1=10, Qg2+=2, Qh2+=2\"; id \"STS(v2.2) Open Files and Diagonals.013\";'\n,'1r6/4q3/2p2p1k/4p1pP/P2nP2P/5BR1/5PK1/2Q5 w - - bm Bg4; c0 \"Bg4=10, Bd1=6, a5=8\"; id \"STS(v2.2) Open Files and Diagonals.014\";'\n,'1r6/7k/1p4r1/1P2p3/2P1p2P/2RbB3/6P1/2R4K w - - bm Ra1; c0 \"Ra1=10, Kg1=7, Kh2=8\"; id \"STS(v2.2) Open Files and Diagonals.015\";'\n,'1r6/8/1r5p/p2pk3/4p3/2P4P/RP2B1n1/1RK5 b - - bm Rf6; c0 \"Rf6=10, Rf8=8, Rg6=6\"; id \"STS(v2.2) Open Files and Diagonals.016\";'\n,'1rbr2k1/pp3pp1/q6p/4P3/3p1P2/6P1/P2QP1BP/R1R3K1 w - - bm Be4; c0 \"Be4=10, Bf3=4, Qd3=5\"; id \"STS(v2.2) Open Files and Diagonals.017\";'\n,'2b1r1k1/2r5/p3pbp1/5p2/PN5P/1Pp2BP1/4PP2/2R2RK1 w - - bm Rfd1; c0 \"Rfd1=10\"; id \"STS(v2.2) Open Files and Diagonals.018\";'\n,'2r1k3/p5pp/1p2p3/7P/P2B2Q1/1bP5/R4PPK/4q3 w - - bm Re2; c0 \"Re2=10, Qxg7=4, Rb2=4\"; id \"STS(v2.2) Open Files and Diagonals.019\";'\n,'2r1q1k1/2p2rbp/p2p2p1/Q2P4/b3P3/3p2P1/3B1PBP/2R1R1K1 w - - bm Bh3; c0 \"Bh3=10, Bf1=7, e5=8\"; id \"STS(v2.2) Open Files and Diagonals.020\";'\n,'2r1q2k/7p/p1np1P1P/8/1pP2R2/8/PP1Q4/R1KN2r1 b - - bm Qg6; c0 \"Qg6=10, Ne5=4, Qe5=2\"; id \"STS(v2.2) Open Files and Diagonals.021\";'\n,'2r1q3/p1p1nk1p/4p2p/2R1Pp2/1P1Q4/P3N1P1/5P2/6K1 w - - bm Qh4; c0 \"Qh4=10, Rc1=6, Rc2=9, Rc4=6\"; id \"STS(v2.2) Open Files and Diagonals.022\";'\n,'2r2k2/R4bpp/2p2p2/1pN5/1n3PP1/1P2P2P/8/5BK1 w - - bm Bg2; c0 \"Bg2=10, e4=6\"; id \"STS(v2.2) Open Files and Diagonals.023\";'\n,'2r2rk1/1p1nbppp/p2p4/B2Pp1PP/5P2/1P6/P1P5/1K1R1B1R w - - bm Bh3; c0 \"Bh3=10, Bd2=5, Re1=6\"; id \"STS(v2.2) Open Files and Diagonals.024\";'\n,'2r2rk1/4q1pp/p7/1pb1Pp2/5P2/1P1QB3/b3N1PP/2R1K2R b K - bm Rfd8; c0 \"Rfd8=10, Bxe3=5, Kh8=3\"; id \"STS(v2.2) Open Files and Diagonals.025\";'\n,'2r3k1/1b1n1npp/1pq2p2/8/1P1QP3/6P1/1B1NBP1P/3R2K1 w - - bm Rc1; c0 \"Rc1=10, Bg4=7, f3=7, f4=5\"; id \"STS(v2.2) Open Files and Diagonals.026\";'\n,'2r3n1/p1p3kp/1q2p2p/4Pp2/1P4N1/P5P1/1Q3P2/2R3K1 w - - bm Qd2; c0 \"Qd2=10, Ne3=9, Nf6=5\"; id \"STS(v2.2) Open Files and Diagonals.027\";'\n,'2rq2k1/1p3pb1/1n4pp/pP2p3/P1b1P3/2N4P/2B1NPP1/R1Q3K1 b - - bm Bf8; c0 \"Bg7f8=10, Bg7f6=8, Qd8d6=7\"; id \"STS(v2.2) Open Files and Diagonals.028\";'\n,'2rq2k1/4rpp1/p3p3/P2n2pP/2pPR3/2P3B1/2Q2PP1/R5K1 b - - bm Rb7; c0 \"Rb7=10, Ra7=4, Rd7=3\"; id \"STS(v2.2) Open Files and Diagonals.029\";'\n,'2rr1b2/3q3k/p4n1p/1p1p2p1/2nNp3/P1N2PQ1/1PP3PP/R1BR2K1 b - - bm Bd6; c0 \"Bd6=10, Bc5=7, Bg7=5\"; id \"STS(v2.2) Open Files and Diagonals.030\";'\n,'3b2k1/1p1b4/4p2B/1n1p1p2/pN6/P2P4/1PR3PP/7K w - - bm Be3; c0 \"Be3=10, Bf4=7, Re2=7\"; id \"STS(v2.2) Open Files and Diagonals.031\";'\n,'3q2k1/5rpp/r1pPp3/1bQn4/p2B4/4P1P1/1P1R2BP/R5K1 w - - bm Bh3; c0 \"Bh3=10, Rc1=8, Rc2=7\"; id \"STS(v2.2) Open Files and Diagonals.032\";'\n,'3Q4/5pk1/4p1p1/3pb2p/P3q2P/1r4P1/2R2P1K/2R5 b - - bm Bf4; c0 \"Bf4=10, Ra3=3, Rd3=4\"; id \"STS(v2.2) Open Files and Diagonals.033\";'\n,'3q4/7k/3ppp2/p3n2B/P1r1P2P/8/1PPQ4/1K3R2 w - - bm Rg1; c0 \"Rg1=10, Qe3=7, Qg2=5\"; id \"STS(v2.2) Open Files and Diagonals.034\";'\n,'3r1k2/R4bpp/2p2p2/1pN5/1n3PP1/1P2P2P/6B1/6K1 w - - bm Be4; c0 \"Be4=10, Bf3=2, g5=3\"; id \"STS(v2.2) Open Files and Diagonals.035\";'\n,'3r1r2/p5k1/1pnpP2p/6p1/2P3P1/4P3/P1B1K1P1/3R3R w - - bm Ba4; c0 \"Ba4=10, Rdf1=6, Rhf1=7\"; id \"STS(v2.2) Open Files and Diagonals.036\";'\n,'3r2k1/4q1pp/p7/1p2Pp2/5P2/1P2Q3/b5PP/2N1K2R b K - bm Bb1; c0 \"Bb1=10\"; id \"STS(v2.2) Open Files and Diagonals.037\";'\n,'3r2k1/pp1q1ppp/4rnn1/3p4/P1pP4/2P1P2P/1BQN1PP1/RR4K1 w - - bm Ba3; c0 \"Ba3=10, Qd1=4, Qf5=4\"; id \"STS(v2.2) Open Files and Diagonals.038\";'\n,'3r2k1/R7/1p3np1/1P1b4/1p6/5PqP/2Q3P1/3R2K1 b - - bm Re8; c0 \"Re8=10, Rf8=4\"; id \"STS(v2.2) Open Files and Diagonals.039\";'\n,'3r3k/1p2R2p/pP4p1/8/2rp1p2/5P2/2P3PP/4R1K1 w - - bm Rc7; c0 \"Rc7=10\"; id \"STS(v2.2) Open Files and Diagonals.040\";'\n,'3r4/3pkpp1/4p3/2p3q1/6r1/1P6/P5B1/2R1RQK1 b - - bm Rh8; c0 \"Rh8=10, Ra8=1, f5=1\"; id \"STS(v2.2) Open Files and Diagonals.041\";'\n,'3r4/3q2bk/3rp1p1/1p5p/4QP2/R1Pp2P1/P2B1R1P/6K1 b - - bm Rc8; c0 \"Rc8=10, Rc6=6, Re8=6\"; id \"STS(v2.2) Open Files and Diagonals.042\";'\n,'3r4/p2rppk1/2R3p1/4q3/3b4/PP4P1/2QRNP2/5K2 b - - bm Qh5; c0 \"Qh5=10, Bb6=2, Qd5=2\"; id \"STS(v2.2) Open Files and Diagonals.043\";'\n,'3rr1k1/1p2bppp/p1p5/P2P3q/2B1PPb1/1P1R4/3B1QP1/4R1K1 w - - bm Bc3; c0 \"Bc3=10, b4=8, f5=4\"; id \"STS(v2.2) Open Files and Diagonals.044\";'\n,'3rr1k1/pp2q1bp/n1p1P1p1/5p2/P2N1Pb1/1BP5/6PP/R1B1QRK1 w - - bm Ba3; c0 \"Ba3=10, Ra2=5, h3=5\"; id \"STS(v2.2) Open Files and Diagonals.045\";'\n,'4b2k/1q2bprp/pr6/3pP3/2pP4/P4N2/1P3RPQ/3N1RK1 b - - bm Bd7; c0 \"Bd7=10, Bd8=8, Rg8=1\"; id \"STS(v2.2) Open Files and Diagonals.046\";'\n,'4k2r/p2n3p/4q1pQ/1p2b2P/8/P1P2R2/1P4P1/K4R2 w - - bm Rd1; c0 \"Rd1=10, Re1=9, Re3=5\"; id \"STS(v2.2) Open Files and Diagonals.047\";'\n,'4qrk1/pb4p1/2p1p2p/PpP1Pr2/1P2QP1R/2B3P1/6R1/6K1 w - - bm Rd2; c0 \"Rd2=10, Be1=9, Ra2=9\"; id \"STS(v2.2) Open Files and Diagonals.048\";'\n,'4r1k1/3q1ppb/2p5/2Pp1P1p/p2P3P/P3P1PB/5Q1K/4R3 w - - bm Rb1; c0 \"Rb1=10, Qf4=5, Re2=2, Re2=5\"; id \"STS(v2.2) Open Files and Diagonals.049\";'\n,'4r1k1/pbq2rpp/1p2p3/4P2P/P1p4Q/1nP1B3/R1B2PP1/1R4K1 w - - bm Bg6; c0 \"Bg6=10, Qg5=1, Rd1=3, a5=4\"; id \"STS(v2.2) Open Files and Diagonals.050\";'\n,'4r1k1/R5p1/4b2p/1p2P3/7P/P1nP4/6PK/4R3 w - - bm Rc1; c0 \"Rc1=10, Ra6=7, d4=6\"; id \"STS(v2.2) Open Files and Diagonals.051\";'\n,'4r2k/1pp1n1pp/pb3r2/6Nq/P2P4/2PQ2P1/1R3RKP/2B5 w - - bm Rbe2; c0 \"Rbe2=10, Rf3=4, Rxf6=3, a5=3, h3=4, h4=3\"; id \"STS(v2.2) Open Files and Diagonals.052\";'\n,'4rrk1/1b3pp1/1q3b1p/p2p1P2/3N4/2P3N1/1P3QPP/1R3R1K b - - bm Ba6; c0 \"Ba6=10\"; id \"STS(v2.2) Open Files and Diagonals.053\";'\n,'5b2/1p1q3n/pB1p2k1/P4N1p/6pP/4R3/6P1/5RK1 w - - bm Bd4; c0 \"Bd4=10\"; id \"STS(v2.2) Open Files and Diagonals.054\";'\n,'5k2/ppQbbp1p/8/5p2/P7/1P6/4KPPP/q4B1R b - - bm Bb4; c0 \"Bb4=10, Qa2+=2, Qb2+=2\"; id \"STS(v2.2) Open Files and Diagonals.055\";'\n,'5r1k/6p1/p1n1pr1p/2P1p2q/P5RN/4Q2P/5PP1/2R4K w - - bm Rb1; c0 \"Rb1=10, Qd3=6, Rd1=7\"; id \"STS(v2.2) Open Files and Diagonals.056\";'\n,'5rk1/p3qpb1/1p5p/5Q2/P7/1B2P3/1p3PPP/5RK1 b - - bm Rd8; c0 \"Rd8=10, Qb4=6, Qe5=5\"; id \"STS(v2.2) Open Files and Diagonals.057\";'\n,'5rk1/p7/1n1q1p2/1Prp1pNp/8/5NPP/P2Q1PB1/5RK1 w - - bm Re1; c0 \"Re1=10, Qe3=4, a4=3\"; id \"STS(v2.2) Open Files and Diagonals.058\";'\n,'5rk1/pp4p1/5rnp/3p1b2/2p2P2/P1P3P1/2P1B2P/R1B1R1K1 w - - bm Bf3; c0 \"Bf3=10, Bd1=2, Be3=7\"; id \"STS(v2.2) Open Files and Diagonals.059\";'\n,'5rrk/pR4p1/3p2q1/P6p/2Q1pn2/7P/1PP2PP1/R3N1K1 w - - bm Ra3; c0 \"Ra3=10, Kh2=6, Rb3=4\"; id \"STS(v2.2) Open Files and Diagonals.060\";'\n,'6k1/1b3p2/p2q2p1/P2Pp2p/1p2Pb1P/1Br5/Q4PP1/3RN1K1 b - - bm Bc8; c0 \"Bc8=10\"; id \"STS(v2.2) Open Files and Diagonals.061\";'\n,'6k1/1q3rpp/5n2/Rp2r3/4p3/1B5P/3BQPP1/6K1 w - - bm Be3; c0 \"Be3=10, Bc3=5, g3=5\"; id \"STS(v2.2) Open Files and Diagonals.062\";'\n,'6k1/1q5p/5np1/pb1pNp2/3P1B1P/1Q6/1P2PP2/6K1 w - - bm Qa3; c0 \"Qa3=10, Qa2=6, Qc3=7\"; id \"STS(v2.2) Open Files and Diagonals.063\";'\n,'6k1/2q4p/r3b1p1/2P1p3/r7/4QP2/p1RN2PP/R5K1 b - - bm Rb4; c0 \"Rb4=10, R6a5=8, Ra8=8\"; id \"STS(v2.2) Open Files and Diagonals.064\";'\n,'6k1/pb4p1/1p1b2q1/1P1p3p/3Pn3/P1r2N1P/4QPB1/2B1R1K1 b - - bm Bc8; c0 \"Bc8=10, Bb8=5, Rc4=7\"; id \"STS(v2.2) Open Files and Diagonals.065\";'\n,'6k1/q4p2/2b1p2p/4Pp2/pP3N2/Q4PP1/6KP/8 b - - bm Qd4; c0 \"Qd4=10, Bb5=9, Qb8=6\"; id \"STS(v2.2) Open Files and Diagonals.066\";'\n,'6r1/1R6/1bp1knp1/pp1n3p/4pP1P/1PN3B1/1P3PB1/5K2 w - - bm Bh3+; c0 \"Bh3+=10, Nxd5=6, Nxe4=6\"; id \"STS(v2.2) Open Files and Diagonals.067\";'\n,'6r1/4bbk1/p3p1p1/Pp1pPp2/3P1P2/2P2B2/3B2K1/1R6 b - - bm Rh8; c0 \"Rh8=10, Bd8=7, Be8=7, g5=7\"; id \"STS(v2.2) Open Files and Diagonals.068\";'\n,'6rk/1n4bp/p3R2r/1p1P1Pp1/1P6/P1pB2P1/5P2/2R3K1 b - - bm Rc8; c0 \"Rc8=10\"; id \"STS(v2.2) Open Files and Diagonals.069\";'\n,'8/2b1rk2/2b1p1p1/5n2/p1pP2Q1/2p3P1/P4P2/2B1RK2 w - - bm Bg5; c0 \"Bg5=10, Ba3=5, Bf4=4\"; id \"STS(v2.2) Open Files and Diagonals.070\";'\n,'8/3q1pk1/3p4/2pB2p1/P2n4/1P4BP/6P1/4R1K1 b - - bm Qf5; c0 \"Qf5=10, Kh6=3, g4=5\"; id \"STS(v2.2) Open Files and Diagonals.071\";'\n,'8/3r1k2/2p3p1/1pPb1p2/p7/P1B2P2/4BK2/3R4 w - - bm Rh1; c0 \"Rh1=10, Bd3=5, Rd4=6\"; id \"STS(v2.2) Open Files and Diagonals.072\";'\n,'8/5r1k/p3b1pp/4p1q1/P3Pn2/2B1N2P/3R1PPK/3Q4 w - - bm Qb1; c0 \"Qb1=10, Ba1=5, Bb2=5\"; id \"STS(v2.2) Open Files and Diagonals.073\";'\n,'8/5r2/1pp2p1R/p3n3/4Pp1p/2P2P1k/4K2P/R7 b - - bm Rg7; c0 \"Rg7=10, b5=3\"; id \"STS(v2.2) Open Files and Diagonals.074\";'\n,'8/p1r3kp/r3p1p1/PRp1n1P1/7R/8/4K2P/7B b - - bm Rd6; c0 \"Rd6=10, Nd7=5, Nf7=7\"; id \"STS(v2.2) Open Files and Diagonals.075\";'\n,'8/p1rb3k/1p1b1p1p/3q1p2/1P1P4/P1n1PPP1/3N3P/R1R2Q1K b - - bm Bb5; c0 \"Bb5=10, Kg6=5, Kh8=3, h5=3\"; id \"STS(v2.2) Open Files and Diagonals.076\";'\n,'b1r3k1/3n1pb1/p2q2p1/P2Pp2p/1p2P2P/1Rr1NN2/Q1B2PP1/3R2K1 b - - bm Bh6; c0 \"Bh6=10\"; id \"STS(v2.2) Open Files and Diagonals.077\";'\n,'b2r4/3qk3/1p1pp3/pN4b1/P3Pp1p/2P5/4BQPP/5R1K w - - bm Bg4; c0 \"Bg4=10, Rd1=1\"; id \"STS(v2.2) Open Files and Diagonals.078\";'\n,'q1b2k2/5ppp/2n5/P1N1n3/8/2PpB1P1/3N1P1P/R4RK1 w - - bm Rfb1; c0 \"Rfb1=10, Rfe1=7, a6=7\"; id \"STS(v2.2) Open Files and Diagonals.079\";'\n,'r1b2r1k/1p2qpb1/1np3pp/p7/3P4/PBN2N2/1PQ2PPP/3R1RK1 w - - bm Rfe1; c0 \"Rfe1=10, Qc1=7, Qd2=6, h3=7\"; id \"STS(v2.2) Open Files and Diagonals.080\";'\n,'r1b2rk1/4bpp1/7p/1B1pP3/3B4/8/1PP3PP/2KR3R b - - bm Bg4; c0 \"Bg4=10, Bf5=9, Ra5=8\"; id \"STS(v2.2) Open Files and Diagonals.081\";'\n,'r1b2rk1/pp3pb1/1npN1qpp/2P5/1PBp4/P4NPP/5P2/2RQ1RK1 w - - bm Re1; c0 \"Re1=10, Nxc8=7, Qd3=7\"; id \"STS(v2.2) Open Files and Diagonals.082\";'\n,'r1b3k1/4brp1/p6p/1p1p4/3B4/8/PPP3PP/2KR1B1R w - - bm Bd3; c0 \"Bd3=10, Be3=4, Kb1=2\"; id \"STS(v2.2) Open Files and Diagonals.083\";'\n,'r1b3k1/pp2qrpp/1n6/1Bb1Pp2/3p1P2/7Q/PP1BN1PP/R3K2R b KQ - bm Be6; c0 \"Be6=10, a6=2\"; id \"STS(v2.2) Open Files and Diagonals.084\";'\n,'r1b3kr/p3qpp1/1pn1p2p/3pP2P/7n/3B3Q/2P2PPN/1RB1R1K1 w - - bm Ba3; c0 \"Ba3=10, Qg3=4\"; id \"STS(v2.2) Open Files and Diagonals.085\";'\n,'r1br2k1/p4p2/1qp4p/1p2P1p1/6n1/5NP1/PP2QN1P/R1B2BK1 b - - bm Be6; c0 \"Be6=10, Bf5=3, b4=4\"; id \"STS(v2.2) Open Files and Diagonals.086\";'\n,'r3r1k1/1b3ppp/2p2n2/1p2b1B1/4P1B1/P6P/1PQ1NPP1/6K1 w - - bm Bf5; c0 \"Bf5=10, Bf3=3, Bxf6=3, f3=2\"; id \"STS(v2.2) Open Files and Diagonals.087\";'\n,'r3r1k1/2q2pp1/1pp2np1/4p3/nP2P1P1/P3Q2P/3R1PB1/B1R3K1 w - - bm Bf1; c0 \"Bf1=10, Bf3=5, Rdc2=6\"; id \"STS(v2.2) Open Files and Diagonals.088\";'\n,'r3r1k1/ppn2ppp/2p5/5P2/P7/2N4P/1PP5/R1B2RK1 w - - bm Bf4; c0 \"Bf4=10, Kg2=7, Rd1=7, f6=6\"; id \"STS(v2.2) Open Files and Diagonals.089\";'\n,'r3r2k/2R4p/3B2b1/p7/1p2p3/6PP/PPP4K/4R3 w - - bm Bc5; c0 \"Bc5=10, c3=7, c4=7\"; id \"STS(v2.2) Open Files and Diagonals.090\";'\n,'r4qk1/1p3rbp/3p1np1/2pPp3/b1P5/P1NBBPP1/3Q1R1P/4R1K1 w - - bm Rb1; c0 \"Rb1=10, Kg2=3, Qc1=3, Ree2=3\"; id \"STS(v2.0) Open Files and Diagonals.091\";'\n,'r4rk1/1p2pp1p/3p1np1/q2P1P2/2P3BQ/pP5R/P1R3PP/7K w - - bm Re2; c0 \"Re2=10, Be2=2, fxg6=4\"; id \"STS(v2.2) Open Files and Diagonals.092\";'\n,'r4rk1/1p2ppbp/1q1p2p1/p1nP1P2/2P3B1/5R2/PPRB2PP/1Q5K w - - bm Qe1; c0 \"Qe1=10, Bg5=4, Rh3=5\"; id \"STS(v2.2) Open Files and Diagonals.093\";'\n,'r4rk1/5pb1/2p3pp/pp2n3/1n3B2/1PN1PP1P/1P2BPK1/2R3R1 w - - bm Rgd1; c0 \"Rgd1=10\"; id \"STS(v2.2) Open Files and Diagonals.094\";'\n,'r4rk1/6b1/2p1N1p1/8/p2p3R/8/R4P1P/5K2 b - - bm Rfb8; c0 \"Rfb8=10, Rf6=6, c5=8\"; id \"STS(v2.2) Open Files and Diagonals.095\";'\n,'r4rk1/ppp1qp1p/1n4p1/4P3/6Q1/1N6/PP3PPP/2R1R1K1 b - - bm Rad8; c0 \"Rad8=10, Nd5=5, Rfd8=6\"; id \"STS(v2.2) Open Files and Diagonals.096\";'\n,'r5k1/p1q2pbp/Ppp1bnp1/4p1B1/Q1P1P3/2N4P/1P2BPP1/5RK1 w - - bm Rd1; c0 \"Rd1=10, Be3=1, Rc1=8, b4=1\"; id \"STS(v2.2) Open Files and Diagonals.097\";'\n,'r5k1/p4nbp/2qN2p1/2P2p2/3p1B2/6P1/P2Q1P1P/3R2K1 w - - bm Qe2; c0 \"Qe2=10, Nxf7=8, Qd3=7\"; id \"STS(v2.2) Open Files and Diagonals.098\";'\n,'r7/3b1pk1/6p1/3Pp2p/2P4P/p4B2/5PP1/2R3K1 b - - bm Bf5; c0 \"Bf5=10, Kf6=6, Kf8=5\"; id \"STS(v2.2) Open Files and Diagonals.099\";'\n,'rbbrqnk1/pp3pp1/2p2n1p/5N2/3P1P2/1BN4P/PPQB2P1/R4RK1 w - - bm Rae1; c0 \"Rae1=10, Rfe1=5\"; id \"STS(v2.2) Open Files and Diagonals.100\";'\n -- STS3: Knight Outposts \n,'1k2r2r/1bq2p2/pn4p1/3pP3/pbpN1P1p/4QN1B/1P4PP/2RR3K b - - bm Nd7; c0 \"Nd7=10, Bc5=8, Bc6=2, Be7=7\"; id \"STS: Knight Outposts/Repositioning/Centralization.001\";'\n,'1q2bn2/6pk/2p1pr1p/2Q2p1P/1PP5/5N2/5PP1/4RBK1 w - - bm Ne5; c0 \"Ne5=10, Nd4=8, Ra1=6, b5=9\"; id \"STS: Knight Outposts/Repositioning/Centralization.002\";'\n,'1r1q1rk1/1b1n1p1p/p2b1np1/3pN3/3P1P2/P1N5/3BB1PP/1R1Q1RK1 b - - bm Ne4; c0 \"Ne4=10, Bxa3=6, Nb6=6\"; id \"STS: Knight Outposts/Repositioning/Centralization.003\";'\n,'1r1r1bk1/1bq2p1p/pn2p1p1/2p1P3/5P2/P1NBB3/1P3QPP/R2R2K1 b - - bm Nd5; c0 \"Nd5=10, Ba8=8, Kg7=8, a5=9\"; id \"STS: Knight Outposts/Repositioning/Centralization.004\";'\n,'1r1r2k1/5pp1/p2p4/1p2pnqp/1BP1Q3/PP1R2P1/5P1P/3R2K1 b - - bm Nd4; c0 \"Nd4=10, Qf6=5, bxc4=3, h4=3\"; id \"STS: Knight Outposts/Repositioning/Centralization.005\";'\n,'1r1r4/R3pk2/4n1p1/2p2p2/8/4B3/Pn2BPPP/5RK1 b - - bm Nd4; c0 \"Nd4=10, Nd3=1, c4=4, f4=9\"; id \"STS: Knight Outposts/Repositioning/Centralization.006\";'\n,'1r2k2r/pp2ppb1/2n2np1/7p/4P3/P3BB1P/1P1N1PP1/R2R2K1 b k - bm Nd7; c0 \"Nd7=10, Bh6=6, a6=6\"; id \"STS: Knight Outposts/Repositioning/Centralization.007\";'\n,'1r2qrk1/3bn3/pp1p3p/n1p1p1p1/P1P5/B1PP1NPP/2Q2PB1/1R2R1K1 w - - bm Nd2; c0 \"Nd2=10, Bc1=6, Qe2=9, Rb2=2\"; id \"STS: Knight Outposts/Repositioning/Centralization.008\";'\n,'1r2r2k/2b2q1p/p4p2/3Pn2P/3N1N2/1P2R3/4Q3/1K1R4 w - - bm Nfe6; c0 \"Nfe6=10, Ka1=4, Nf5=6, Qxa6=2, Rc3=3, h6=3\"; id \"STS: Knight Outposts/Repositioning/Centralization.009\";'\n,'1r3rk1/8/3p3p/p1qP2p1/R1b1P3/2Np1P2/1P1Q1RP1/6K1 w - - bm Nd1; c0 \"Nd1=10, Na2=3\"; id \"STS: Knight Outposts/Repositioning/Centralization.010\";'\n,'1r6/1q2b1k1/pn1pb3/B1p1p1pp/2P1Pp2/NP3P1P/1R2Q1PN/6K1 b - - bm Nc8; c0 \"Nc8=10, Bg8=8, Kg8=8, Nd7=4\"; id \"STS: Knight Outposts/Repositioning/Centralization.011\";'\n,'1r6/2qnrpk1/2pp1np1/pp2P3/4P3/PBN2Q2/1PPR1PP1/3R2K1 b - - bm Nxe5; c0 \"Nxe5=10, Nxe4=8, Rxe5=7\"; id \"STS: Knight Outposts/Repositioning/Centralization.012\";'\n,'1rr2qk1/3p1pp1/1pb2n1p/4p3/p1P1P2P/P1NQ1BP1/1P3PK1/2RR4 w - - bm Nb5; c0 \"Nb5=10, Kh2=5, Rc2=7\"; id \"STS: Knight Outposts/Repositioning/Centralization.013\";'\n,'2b2rk1/1r1nbppp/4p3/1p2P3/p4P2/P1N1B3/BPP4P/R2R2K1 w - - bm Ne4; c0 \"Ne4=10, Rac1=1, Rd2=3, b4=3\"; id \"STS: Knight Outposts/Repositioning/Centralization.014\";'\n,'2b3n1/6kp/p1nB1pp1/8/1p2P1P1/4NP2/PP3K2/3B4 w - - bm Nd5; c0 \"Nd5=10, Ba4=8, Kg3=7\"; id \"STS: Knight Outposts/Repositioning/Centralization.015\";'\n,'2b5/2p1r2k/1pP2q1p/p2Pp3/4R3/1PN1Q2P/P2KP3/8 w - - bm Nb5; c0 \"Nb5=10, Kc1=7, Rc4=8, h4=9\"; id \"STS: Knight Outposts/Repositioning/Centralization.016\";'\n,'2k3r1/1b2bp2/2p2n2/ppn1p1Bp/2p1P2P/P4B2/1P1RN1P1/4K2R b K - bm Nd3+; c0 \"Nd3+=10, Kc7=9, Ne6=9\"; id \"STS: Knight Outposts/Repositioning/Centralization.017\";'\n,'2r2r1k/p3ppbp/qpnp2pn/5P2/2P1PP2/P1N1BB2/1PQ3RP/3R2K1 w - - bm Nb5; c0 \"Nb5=10, Be2=8, Nd5=9, fxg6=8\"; id \"STS: Knight Outposts/Repositioning/Centralization.018\";'\n,'2r2rk1/4bpp1/p2pbn1p/Pp2p3/1Pq1P2N/2P4P/1BB2PP1/R2QR1K1 w - - bm Nf5; c0 \"Nf5=10, Bb1=5, Qe2=5, Qf3=5\"; id \"STS: Knight Outposts/Repositioning/Centralization.019\";'\n,'2r3k1/3q1pp1/ppr1p1np/4P3/P1nPQ3/5N1P/5PPK/RRB5 b - - bm Ne7; c0 \"Ne7=10, Qc7=9, Qd8=8\"; id \"STS: Knight Outposts/Repositioning/Centralization.020\";'\n,'2r3k1/p1r1qpb1/1p2p1p1/nR2P3/P2B4/2P5/3NQPP1/R5K1 w - - bm Ne4; c0 \"Ne4=10, Nb3=8, f4=7\"; id \"STS: Knight Outposts/Repositioning/Centralization.021\";'\n,'2rq1rk1/1p2b1p1/pn2p3/2p1Pn2/2pP3p/5N1P/PPQ2BP1/1BRR2K1 b - - bm Nd5; c0 \"Nd5=10, Bg5=6, Qc7=6, Qe8=6\"; id \"STS: Knight Outposts/Repositioning/Centralization.022\";'\n,'r7/p1r2nk1/1pNq1np1/1P1p1p2/P2Qp3/4P1P1/2R1P1BP/2R3K1 b - - bm Ng5; id \"STS(v3.1) Knight Outposts/Centralization/Repositioning.023\"; c0 \"Ng5=10, Rac8=4, Rb7=3, Re8=3\";'\n,'2rq2k1/3nbppp/pprp1nb1/4p3/P1P1P3/1PN1BN1P/2Q1BPP1/R2R2K1 w - - bm Nh4; c0 \"Nh4=10, Ra2=5, Rab1=6, g3=6\"; id \"STS: Knight Outposts/Repositioning/Centralization.024\";'\n,'2rqr1k1/1p2bppp/p2p1n2/3P1P2/2Pp4/1P1B4/P3Q1PP/R1B2RK1 b - - bm Nd7; c0 \"Nd7=10, Qa5=7, h6=7\"; id \"STS: Knight Outposts/Repositioning/Centralization.025\";'\n,'2rr4/Bp3k1p/5pp1/8/2n3b1/P1N5/1PP2PPP/R1R3K1 w - - bm Ne4; c0 \"Ne4=10, Na4=9, f3=9, h3=9\"; id \"STS: Knight Outposts/Repositioning/Centralization.026\";'\n,'3R4/5pk1/2p4r/1p2p1p1/p3P1P1/P1P2P2/1P2B1K1/n7 b - - bm Nb3; c0 \"Nb3=10, Rf6=9, Rg6=9\"; id \"STS: Knight Outposts/Repositioning/Centralization.027\";'\n,'3q3r/2p2pk1/6p1/2p1p1Pn/1pBnP3/1P2BP1R/P5Q1/7K b - - bm Nf4; c0 \"Nf4=10, Qd7=5, c6=6\"; id \"STS: Knight Outposts/Repositioning/Centralization.028\";'\n,'3r1bk1/1rq2p2/2npb1p1/p3p2p/2P1P2P/1PN3P1/2N1QPBK/R2R4 w - - bm Nb5; c0 \"Nb5=10, Rdb1=5\"; id \"STS: Knight Outposts/Repositioning/Centralization.029\";'\n,'3r1rk1/1p4bp/2qPp1p1/p3n3/P2BN3/1PN4P/2PR2P1/4Q1K1 w - - bm Nb5; c0 \"Nb5=10, Qe3=5, Qh4=8\"; id \"STS: Knight Outposts/Repositioning/Centralization.030\";'\n,'3r2k1/2q2ppp/p1p1bn2/1p2b1B1/4P3/1PN2B1P/P1Q2PP1/2R4K w - - bm Nd5; c0 \"Nd5=10\"; id \"STS: Knight Outposts/Repositioning/Centralization.031\";'\n,'3r2k1/4qpn1/R2p3p/1Pp1p1p1/1rP1P1P1/6P1/3Q1P2/4RBK1 b - - bm Ne6; c0 \"Ne6=10, Kf8=5, Kh7=4, Rd7=4\"; id \"STS: Knight Outposts/Repositioning/Centralization.032\";'\n,'3r4/2p2pk1/2q1n1p1/2p1p1Pn/1pB1P3/1P2BP2/P6R/4Q1K1 b - - bm Nd4; c0 \"Nd4=10, Kg8=8, Nhf4=8\"; id \"STS: Knight Outposts/Repositioning/Centralization.033\";'\n,'3r4/bp1r2pk/p3npqp/P2Np3/1PR1P2B/5Q1P/2P3P1/5R1K b - - bm Nd4; c0 \"Nd4=10, Bb8=4, Kh8=3\"; id \"STS: Knight Outposts/Repositioning/Centralization.034\";'\n,'3r4/r1pb3p/1p4kB/2p3P1/4pP2/1P2NnKP/PR3R2/8 b - - bm Nd4; c0 \"Nd4=10, Bc8=2, Bf5=2, c4=2\"; id \"STS: Knight Outposts/Repositioning/Centralization.035\";'\n,'3rb1k1/4qpbp/1p2p1p1/1P3n2/Q1P2p2/2N2B1P/6PK/1NR2R2 b - - bm Ne3; c0 \"Ne3=10, Bd4=3, Rb8=7, Rc8=6\"; id \"STS: Knight Outposts/Repositioning/Centralization.036\";'\n,'3rr1k1/1p3ppp/p1q2b2/P4P2/2P1p3/1P6/2N1Q1PP/4RR1K w - - bm Nb4; c0 \"Nb4=10, Ne3=9, Qh5=9, b4=2\"; id \"STS: Knight Outposts/Repositioning/Centralization.037\";'\n,'3rr1k1/pb1n1pp1/2q2b1p/2p5/2P1p2N/1P2B1P1/P1QR1PBP/3R2K1 b - - bm Ne5; c0 \"Ne5=10, Bxh4=7, Nf8=7, g6=7\"; id \"STS: Knight Outposts/Repositioning/Centralization.038\";'\n,'3rr3/p3b1kp/2p2pp1/1q1np3/4Q1PB/1NP5/PP3P1P/R2R2K1 b - - bm Nf4; c0 \"Nf4=10, Kf7=3, Qa6=2, a5=4\"; id \"STS: Knight Outposts/Repositioning/Centralization.039\";'\n,'4b1nk/p1r1p1rp/Bpq5/n3Ppp1/8/5N1P/2P2BPQ/R3R1K1 w - - bm Nd4; c0 \"Nd4=10, Bd3=5, Rad1=3, e6=4\"; id \"STS: Knight Outposts/Repositioning/Centralization.040\";'\n,'4k2r/1r2np2/2q1p1p1/p2pP3/n1pP1PP1/1pP1NNK1/1P2Q3/R4R2 w k - bm Ng5; c0 \"Ng5=10, Qd2=3, Qg2=3, Rf2=4, Rh1=4\"; id \"STS: Knight Outposts/Repositioning/Centralization.041\";'\n,'4n3/1p1b1pk1/2n5/rN4p1/1p1Np3/1B2P1P1/PP3PK1/2R5 b - - bm Ne5; c0 \"Ne5=10\"; id \"STS: Knight Outposts/Repositioning/Centralization.042\";'\n,'4n3/1p1b1pk1/8/rNR1n1p1/1p1Np3/1B2P1P1/PP3PK1/8 b - - bm Nf3; c0 \"Nf3=10, Bxb5=3, f6=3\"; id \"STS: Knight Outposts/Repositioning/Centralization.043\";'\n,'4nk2/p4rr1/1pRp3b/1P1Pp2p/1P5P/2NBpP2/4R1P1/5K2 w - - bm Ne4; c0 \"Ne4=10, Kg1=1, Nd1=1, Rc8=7\"; id \"STS: Knight Outposts/Repositioning/Centralization.044\";'\n,'4r1k1/2pbqp1p/1r3p2/pP1p4/8/P1QBPN2/3P1PPP/4K2R w K - bm Nd4; c0 \"Nd4=10, Qxc7=6, a4=4\"; id \"STS: Knight Outposts/Repositioning/Centralization.045\";'\n,'4r1k1/3q1pp1/3p1n2/rp2nP1p/3B1R2/2N5/2PQ2PP/4R1K1 w - - bm Ne4; c0 \"Ne4=10, Kh1=8, Rb1=6, h3=7\"; id \"STS: Knight Outposts/Repositioning/Centralization.046\";'\n,'4r1k1/3r2p1/b1q2n1p/p7/Pp2P2Q/1N2BP2/1PP4P/2R1R2K w - - bm Nd4; c0 \"Nd4=10, Nc5=6, Nxa5=8\"; id \"STS: Knight Outposts/Repositioning/Centralization.047\";'\n,'4r3/1p3pk1/2p2n1p/2n1qP2/5bPQ/P3pB2/2R5/1R3N1K b - - bm Nfe4; c0 \"Nfe4=10, Nd3=9, Nh7=9, Qd4=2, Rd8=1\"; id \"STS: Knight Outposts/Repositioning/Centralization.048\";'\n,'4rrk1/p4pp1/1b1p3p/2pP4/6q1/5N2/PP3PPP/2RQ1R1K w - - bm Nd2; c0 \"Nd2=10, Kg1=7, Qd3=2, h3=7\"; id \"STS: Knight Outposts/Repositioning/Centralization.049\";'\n,'5k2/6p1/Bnp1p2p/5p2/3P1n2/2q2P2/7P/5RQK b - - bm Nbd5; c0 \"Nbd5=10, Kf7=7, Kg8=4, g6=3\"; id \"STS: Knight Outposts/Repositioning/Centralization.050\";'\n,'5r1k/2p3q1/1p1npr2/pPn1N1pp/P1PN4/R4PPP/4Q1K1/3R4 w - - bm Ndc6; c0 \"Ndc6=10, Kh1=1, Rb1=8, Rc1=8\"; id \"STS: Knight Outposts/Repositioning/Centralization.051\";'\n,'5r2/2r2kp1/3n1p2/1p1Pp2p/p3P2P/PnP4R/1BB2KP1/4R3 b - - bm Nc4; c0 \"Nc4=10, Ke7=9, Rb8=9\"; id \"STS: Knight Outposts/Repositioning/Centralization.052\";'\n,'5rk1/3nbp1p/2p1p3/2PpP1pN/3P2B1/q3PQ1P/6P1/5RK1 w - - bm Nf6+; c0 \"Nf6+=10, Qf2=1, Qg3=4, h4=4\"; id \"STS: Knight Outposts/Repositioning/Centralization.053\";'\n,'5rk1/6pp/pn1qp1r1/1p2R3/2pP1P2/P1P2Q1P/5P2/2B1R2K b - - bm Nd5; c0 \"Nd5=10, Nd7=9, Qd7=9, Rgf6=9\"; id \"STS: Knight Outposts/Repositioning/Centralization.054\";'\n,'5rk1/pb1qbppp/1p6/n1rpP3/7P/2P2NP1/P3QPB1/R1BR2K1 w - - bm Nd4; c0 \"Nd4=10, Bb2=2, Bd2=1\"; id \"STS: Knight Outposts/Repositioning/Centralization.055\";'\n,'6k1/3pbpp1/p3p2n/r3P2p/2rBNP2/2P3PP/P3R3/3R3K b - - bm Nf5; c0 \"Nf5=10, Rd5=3\"; id \"STS: Knight Outposts/Repositioning/Centralization.056\";'\n,'6k1/p2b3n/1p2pn1q/3r1p2/5P1B/P5NR/1Q2B1P1/4K3 b - - bm Ng4; c0 \"Ng4=10, Qf8=1\"; id \"STS: Knight Outposts/Repositioning/Centralization.057\";'\n,'7k/Rb4r1/3pPp1q/1pp2P2/3n2BP/4N1K1/1P3Q2/8 b - - bm Nc6; c0 \"Nc6=10, Kg8=8, Kh7=6, Qxe3+=6\"; id \"STS: Knight Outposts/Repositioning/Centralization.058\";'\n,'8/1b5p/1p1rrkp1/p2p1p2/P2P3P/1R1B1N2/nP3PPK/3R4 w - - bm Ne5; c0 \"Ne5=10, Bb5=4, h5=3\"; id \"STS: Knight Outposts/Repositioning/Centralization.059\";'\n,'8/1p2kp2/p3pn2/4n1p1/1P2P3/P1r1NB1P/5PPK/R7 b - - bm Ne8; c0 \"Ne8=10, Nxf3+=1, b5=3, b6=5\"; id \"STS: Knight Outposts/Repositioning/Centralization.060\";'\n,'8/1q6/3pn1k1/2p1p1p1/2P1P1Pp/1rBP1p1P/2Q2P2/R5K1 b - - bm Nf4; c0 \"Nf4=10, Kf7=4, Kg7=2\"; id \"STS: Knight Outposts/Repositioning/Centralization.061\";'\n,'8/2k2p2/pr1pbpn1/2p5/2P1P1P1/2P1KP1p/7P/R2N1B2 b - - bm Ne5; c0 \"Ne5=10, Kd7=5, Rb3=5\"; id \"STS: Knight Outposts/Repositioning/Centralization.062\";'\n,'8/pB1b2k1/1p2pn2/5p2/5P1B/P7/3K1NPn/8 b - - bm Ne8; c0 \"Ne8=10, Bb5=8, Kg6=7, Nf1+=8\"; id \"STS: Knight Outposts/Repositioning/Centralization.063\";'\n,'b1r2r1k/p2qp1bp/1p1pn1p1/8/1PP2P2/R1NBB3/P2Q2PP/5RK1 w - - bm Nb5; c0 \"Nb5=10, Be2=7, Kh1=3\"; id \"STS: Knight Outposts/Repositioning/Centralization.064\";'\n,'b4q2/1r5k/3p4/1p1Pn2B/1PpQP3/2N4P/6P1/B5K1 w - - bm Nd1; c0 \"Nd1=10, Ne2=6, Qe3=4\"; id \"STS: Knight Outposts/Repositioning/Centralization.065\";'\n,'q3n3/2rp1ppk/2b4p/4p2P/p3P3/Pr2NBP1/1P1R1PK1/2R1Q3 w - - bm Nd5; c0 \"Nd5=10, Kg1=3, Qe2=1\"; id \"STS: Knight Outposts/Repositioning/Centralization.066\";'\n,'r1b1k1nr/pp2p1bp/1q1p2p1/2pP4/2Pnp3/2NB1N1P/PP1B1PP1/R2QK2R w KQkq - bm Nxe4; c0 \"Nxe4=10, Bxe4=3, Na4=7, Nxd4=7\"; id \"STS: Knight Outposts/Repositioning/Centralization.067\";'\n,'r1b2r1k/pp3pbp/3n4/4p3/2N4R/2N5/PP3PPP/R1B3K1 b - - bm Nf5; c0 \"Nf5=10, Bf6=2, Nxc4=3, Rd8=2\"; id \"STS: Knight Outposts/Repositioning/Centralization.068\";'\n,'r1b2rk1/1pq1bppp/p2p4/P3p3/2N1n3/4B3/1PP1BPPP/R2QK2R w KQ - bm Nb6; c0 \"Nb6=10, O-O=9, f3=9\"; id \"STS: Knight Outposts/Repositioning/Centralization.069\";'\n,'r1b2rk1/p2q2b1/1nppp1pp/5pN1/P2P1B2/Q5P1/1P2PPBP/R1R3K1 b - - bm Nd5; c0 \"Nd5=10, Bb7=3, hxg5=7\"; id \"STS: Knight Outposts/Repositioning/Centralization.070\";'\n,'r1b2rk1/pp3pp1/2np2qp/b1p1p3/2P1P3/2NPB1P1/PP3PBP/R2Q1RK1 w - - bm Nd5; c0 \"Nd5=10, Qb3=1, Qc2=1, f4=3\"; id \"STS: Knight Outposts/Repositioning/Centralization.071\";'\n,'r1bq1rk1/ppp3bp/n2p1pp1/3P4/2P1Pp2/2N2N1P/PP2BPP1/R2QR1K1 w - - bm Nd4; c0 \"Nd4=10, Bf1=9, Qd2=4, Rc1=8\"; id \"STS: Knight Outposts/Repositioning/Centralization.072\";'\n,'r1r3k1/pb3p1p/1pqBp1p1/4P3/3b4/2P2P2/PR1N2PP/2RQ3K w - - bm Ne4; c0 \"Ne4=10\"; id \"STS: Knight Outposts/Repositioning/Centralization.073\";'\n,'r2b2k1/2pr4/1pn1b1qp/3Np1p1/p1P1p3/1P2B1P1/PQ2PP1P/R2R2NK b - - bm Nd4; c0 \"Nd4=10, Bf5=4, a3=5, h5=3\"; id \"STS: Knight Outposts/Repositioning/Centralization.074\";'\n,'r2br3/p2b1q1k/n2P2pp/1p1N1p2/4pP2/BP2Q1PN/P1R4P/3R2K1 w - - bm Nc7; c0 \"Nc7=10, Nf2=3, Qd4=2, Qe2=2\"; id \"STS: Knight Outposts/Repositioning/Centralization.075\";'\n,'r2q1bk1/1p1brpp1/p1np1n1p/4p3/PN2P3/1QPP1N1P/B2B1PP1/R3R1K1 w - - bm Nd5; c0 \"Nd5=10, Be3=4, Qb2=4\"; id \"STS: Knight Outposts/Repositioning/Centralization.076\";'\n,'r2q1k2/2p2pb1/p2n2rp/1p1RB1p1/8/2PQRN1P/P4PP1/6K1 w - - bm Nd4; c0 \"Nd4=10, Bxg7+=2, Re2=3, h4=6\"; id \"STS: Knight Outposts/Repositioning/Centralization.077\";'\n,'r2q1rk1/3nbpp1/p2p3p/8/1p1BP3/3B2Q1/PPP4P/2KR3R b - - bm Ne5; c0 \"Ne5=10, Bf6=1, Bg5+=4, g6=6\"; id \"STS: Knight Outposts/Repositioning/Centralization.078\";'\n,'r2q1rk1/pp1bp1bp/5np1/2pP1p2/8/2N2NP1/PP2PPBP/2RQ1RK1 w - - bm Ne5; c0 \"Ne5=10, Ng5=5, Qb3=7, e3=6\"; id \"STS: Knight Outposts/Repositioning/Centralization.079\";'\n,'r2q2kr/p3n3/1p1Bp1bp/3pP1pN/5PPn/3B3Q/2P2K2/1R5R w - - bm Nf6+; c0 \"Nf6+=10, Bxg6=3, Rbg1=2\"; id \"STS: Knight Outposts/Repositioning/Centralization.080\";'\n,'r2qk2r/1bpnnpbp/p2pp1p1/4P3/Pp1P1P2/2NBBN2/1PP3PP/R2Q1RK1 w kq - bm Ne4; c0 \"Ne4=10, Na2=2, Ne2=2, exd6=8\"; id \"STS: Knight Outposts/Repositioning/Centralization.081\";'\n,'r2qr1k1/pp3ppp/2n2nb1/1P4B1/3p4/P2B1P2/2P1N1PP/R2Q1RK1 b - - bm Ne5; c0 \"Ne5=10, Na5=9, Ne7=9\"; id \"STS: Knight Outposts/Repositioning/Centralization.082\";'\n,'r2r2k1/1bqn1pp1/1p1p1b1p/1B2n3/2P1P3/P1N1B3/1P1NQ1PP/4RR1K w - - bm Nd5; c0 \"Nd5=10, Bd4=9, Nb3=9\"; id \"STS: Knight Outposts/Repositioning/Centralization.083\";'\n,'r2r2k1/1p1n2q1/2ppbp2/6p1/2PBP2p/p1N2P2/Pb4PP/1R1RQBK1 b - - bm Ne5; c0 \"Ne5=10, Qf7=2, Qh7=5, h3=7\"; id \"STS: Knight Outposts/Repositioning/Centralization.084\";'\n,'r2rq3/pp1b3k/n2P1bpp/4pp2/8/BPN1Q1PN/P4P1P/2RR2K1 w - - bm Nd5; c0 \"Nd5=10, Bb2=5, Qd3=5, Qf3=5, f3=9\"; id \"STS: Knight Outposts/Repositioning/Centralization.085\";'\n,'r3r1k1/1b1nq2p/p2pNppQ/1ppP3n/P3P3/7P/1PB2PP1/R3RNK1 b - - bm Nf8; c0 \"Nf8=10, Ne5=4, Rec8=6\"; id \"STS: Knight Outposts/Repositioning/Centralization.086\";'\n,'r3r1k1/1p1q2bp/1n1p2p1/1PpPpp1n/p3P3/R1NQBN1P/1PP2PP1/4R1K1 w - - bm Ng5; c0 \"Ng5=10, Qf1=7, Rd1=8, exf5=7\"; id \"STS: Knight Outposts/Repositioning/Centralization.087\";'\n,'r3r1k1/3nbppp/p1q5/1pp1P2b/5B2/1P2QN2/1P1N1PPP/3RR1K1 w - - bm Ne4; c0 \"Ne4=10, Bg3=7, Rc1=7\"; id \"STS: Knight Outposts/Repositioning/Centralization.088\";'\n,'r3r1k1/4bppp/pnq5/1pp1P2b/4NB2/1P2QN2/1P3PPP/3RR1K1 w - - bm Nd6; c0 \"Nd6=10, Bg3=4, Qc1=5\"; id \"STS: Knight Outposts/Repositioning/Centralization.089\";'\n,'r3r2k/pp3pp1/1np4p/3p2q1/1P1P2b1/P1NBP3/2Q2PPP/R4RK1 w - - bm Ne2; c0 \"Ne2=10, Kh1=4\"; id \"STS: Knight Outposts/Repositioning/Centralization.090\";'\n,'r3r3/2P4k/3Bbbqp/ppQ2pp1/4pPP1/1P6/P1R2N1P/3R2K1 w - - bm Nxe4; c0 \"Nxe4=10, Qe3=4, Rcd2=5, Re2=4\"; id \"STS: Knight Outposts/Repositioning/Centralization.091\";'\n,'r3rnk1/1bpq1pp1/p2p3p/1p1Pp1b1/P3P1P1/1BP1N1P1/1P3P2/R1BQR1K1 w - - bm Nf5; c0 \"Nf5=10, Bc2=3, Kg2=4, Kg2=9, Qe2=3\"; id \"STS: Knight Outposts/Repositioning/Centralization.092\";'\n,'r4rk1/1b1q1ppp/pb1p1nn1/1pp1p3/1PP1P3/P2PNN1P/B2B1PP1/2RQR1K1 w - - bm Nf5; c0 \"Nf5=10, Bb1=7, Qb3=4\"; id \"STS: Knight Outposts/Repositioning/Centralization.093\";'\n,'r4rk1/1pq1bppp/1n2p3/p1n1P3/2PR4/2N1BN2/P3QPPP/1R4K1 w - - bm Nb5; c0 \"Nb5=10, Qd2=5, h4=9\"; id \"STS: Knight Outposts/Repositioning/Centralization.094\";'\n,'r4rk1/5p1p/p2qpnp1/1p2b3/3p4/3B1R2/PPQ3PP/R1BN3K b - - bm Nd7; c0 \"Nd7=10, Nd5=7, Nh5=5, Rac8=1, Rfc8=1\"; id \"STS: Knight Outposts/Repositioning/Centralization.095\";'\n,'r4rk1/ppp3b1/3p1q1p/3Ppn2/P1P3n1/2NQ1N2/1P1B1PP1/R3R1K1 w - - bm Ne4; c0 \"Ne4=10, Nb5=4, Nh2=1, Ra3=1\"; id \"STS: Knight Outposts/Repositioning/Centralization.096\";'\n,'r5r1/1pp2k1p/2bn4/2p3B1/p3pPP1/1P2N2P/P1P1R3/R5K1 b - - bm Nb5; c0 \"Nb5=10\"; id \"STS: Knight Outposts/Repositioning/Centralization.097\";'\n,'r6k/pp3pp1/1n6/1pQp1q2/3PrN1p/P3P2P/5PP1/2R2RK1 w - - bm Nd3; c0 \"Nd3=10, Ne2=2, Qxb5=2, Rce1=3\"; id \"STS: Knight Outposts/Repositioning/Centralization.098\";'\n,'r6r/1q1bbkp1/p1p1pn2/5p1p/N2Bp3/2Q3P1/PPP2PBP/R2R2K1 b - - bm Nd5; c0 \"Nd5=10, Rad8=5, h4=5\"; id \"STS: Knight Outposts/Repositioning/Centralization.099\";'\n,'rqr3k1/1p2bppp/3pn3/p3p1Pn/P3P3/1PNBBP2/1P1Q3P/2KR3R b - - bm Nd4; c0 \"Nd4=10, Nef4=6, Nhf4=5\"; id \"STS: Knight Outposts/Repositioning/Centralization.100\";'\n -- STS4: Square Vacancy \n,'6k1/p2pp2p/bp4n1/q1r4R/1RP1P3/2P2B2/P2Q2P1/4K3 w - - bm Rd5; c0 \"Rd5=10, Rf5=6, g4=7\"; id \"STS(v4.0) Square Vacancy.001\";'\n,'r2r2k1/pp3ppp/2p1qn2/5N1b/1n2PP2/4Q2P/PPP3B1/R1B2RK1 w - - bm Qc5; c0 \"Qc5=10, Qg3=3\"; id \"STS(v4.0) Square Vacancy.002\";'\n,'3r4/p4pk1/P1pr3p/3nb3/1p6/5B1P/1P3PP1/R1BR2K1 w - - bm Ra5; c0 \"Ra5=10, Kf1=2, g3=5\"; id \"STS(v4.0) Square Vacancy.003\";'\n,'1b1r3r/3pkpp1/3np1q1/2p5/2P1PPP1/5Q2/PP4B1/R1BR2K1 b - - bm Rh4; c0 \"Rh4=10, Nxc4=6, Rc8=7\"; id \"STS(v4.0) Square Vacancy.004\";'\n,'7k/1p6/1n1rrq1p/1R1p1p1p/3P1P2/QR2P2P/6PK/5B2 w - - bm Qa7; c0 \"Qa7=10, Kg1=7, R5b4=7\"; id \"STS(v4.0) Square Vacancy.005\";'\n,'5r1k/5rp1/p1n1p1qp/2P1p3/P7/4QN1P/5PP1/2R1R2K w - - bm Rc4; c0 \"Rc4=10, Qe2=5, Rc3=7\"; id \"STS(v4.0) Square Vacancy.006\";'\n,'6r1/1p2Q1pk/2p2p1p/3p1P1P/p1nP4/PqP1P3/1P2RN2/2K5 b - - bm Qa2; c0 \"Qa2=10, Qb5=5, b6=3\"; id \"STS(v4.0) Square Vacancy.007\";'\n,'6r1/1p2Q1pk/2p2p1p/n2p1P1P/p2P4/P1P1P3/1P1KR3/q2N4 b - - bm Qb1; c0 \"Qb1=10, Kh8=3, Nb3+=4\"; id \"STS(v4.0) Square Vacancy.008\";'\n,'5r1k/1b3pp1/p3pb2/4N2q/3R1B2/4P3/1PB2PPP/1K4R1 b - - bm Qe2; c0 \"Qe2=10, Bxe5=7, Kg8=4\"; id \"STS(v4.0) Square Vacancy.009\";'\n,'8/1b2r2p/1p1r1kp1/p2p1p2/Pn1P3P/1R1B1N2/1P3PPK/2R5 w - - bm Bb5; c0 \"Bb5=10, Bf1=2, Ne5=6\"; id \"STS(v4.0) Square Vacancy.010\";'\n,'1q1k2r1/p2bn3/1r3n2/2QPp1Rp/2P4P/2PB1P2/2K1N3/R7 w - - bm Qa5; c0 \"Qa5=10, Qa3=4, Rxg8+=5\"; id \"STS(v4.0) Square Vacancy.011\";'\n,'8/p3q1kp/1p1p1rp1/3Bn3/P1PQ1p2/1P6/6PP/4R2K b - - bm Rf5; c0 \"Rf5=10, Kh6=6, Rf8=3\"; id \"STS(v4.0) Square Vacancy.012\";'\n,'4r1rk/pp6/5q2/3pNp1P/2pPnQ2/2P1P2P/P6K/R5R1 w - - bm Rg6; c0 \"Rg6=10, Rab1=4, Rac1=4\"; id \"STS(v4.0) Square Vacancy.013\";'\n,'5r2/p1qn3k/bp1p1pp1/3P4/P2BPP2/2Pp4/3N2P1/R2Q2K1 w - - bm Qg4; c0 \"Qg4=10, Qe1=4, a5=5\"; id \"STS(v4.0) Square Vacancy.014\";'\n,'1r3q2/1n4pk/R4p1p/4p2P/2B1P1P1/2P1QPK1/8/8 w - - bm Be6; c0 \"Be6=10, Bd5=7, Rb6=8\"; id \"STS(v4.0) Square Vacancy.015\";'\n,'4r1k1/1pb3p1/p1p3q1/3n4/1P1P4/P3pRP1/4Q1K1/2B2R2 b - - bm Qe4; c0 \"Qe4=10, Bb6=5, Bd8=5\"; id \"STS(v4.0) Square Vacancy.016\";'\n,'3R4/pkn5/1p2qp2/1p5p/1P2P1pR/P5P1/1N3PP1/5K2 b - - bm Qb3; c0 \"Qb3=10, Qa2=5\"; id \"STS(v4.0) Square Vacancy.017\";'\n,'4r1k1/p5pp/4q3/P2R4/2p2P2/2N3P1/2nB1K1P/1R6 b - - bm Qh3; c0 \"Qh3=10, a6=5, h6=6\"; id \"STS(v4.0) Square Vacancy.018\";'\n,'1Q6/1p2p2k/1r4pp/p1p2P2/q2nr1P1/7R/1P1R4/5NK1 w - - bm Qf8; c0 \"Qf8=10, Kh2=7, Rg2=7\"; id \"STS(v4.0) Square Vacancy.019\";'\n,'4R3/p2q2k1/2p2r1p/6p1/8/P5P1/4QP1P/3rB1K1 b - - bm Qd4; c0 \"Qd4=10, Kf7=6, Kg6=6\"; id \"STS(v4.0) Square Vacancy.020\";'\n,'3q1r1k/5ppp/1pR1pn2/p7/B1PP4/P3QP1P/5PK1/8 w - - bm Qe5; id \"STS(v4.0) Square Vacancy.021\"; c0 \"Qe5=10, f4=1, Kf1=1, Kh2=1\";'\n,'8/Qpnbk2q/4pp2/1P1p4/P1r5/2P3P1/1K2N3/1R3B2 b - - bm Qd3; c0 \"Qd3=10, Qh2=2, e5=2\"; id \"STS(v4.0) Square Vacancy.022\";'\n,'2r2rk1/pb2qp1p/n3p1p1/2pp4/N1P1n3/1P2P1P1/PN3PBP/2R1QRK1 w - - bm Qa5; c0 \"Qa5=10, Qe2=6, Rd1=4\"; id \"STS(v4.0) Square Vacancy.023\";'\n,'r5k1/1p5p/p1p1qrnP/2B1pb2/R1P5/2P2B2/P2Q2P1/5RK1 w - - bm Qg5; c0 \"Qg5=10, Qb2=1, Rb4=6\"; id \"STS(4.0) Square Vacancy.024\";'\n,'Q7/2pq3k/1rp2b1p/2R5/8/1P1NP3/P2K1Pr1/5R2 w - - bm Qf8; c0 \"Qf8=10, Qa4=5, Rc2=4\"; id \"STS(v4.0) Square Vacancy.025\";'\n,'q5k1/p2p2bp/1p1p2r1/2p1np2/6p1/1PP2PP1/P2PQ1KP/4R1NR b - - bm Qd5; c0 \"Qd5=10, Re6=4, a5=1, c4=2\"; id \"STS(v4.0) Square Vacancy.026\";'\n,'4r1k1/1p5p/1nq1p1p1/4B3/6R1/P6P/3Q1PPK/8 w - - bm Qh6; c0 \"Qh6=10, Ba1=4, Qd3=4\"; id \"STS(v4.0) Square Vacancy.027\";'\n,'r5nk/p4p1r/qp1Rb2p/2p1Pp2/5P1Q/P4N2/2B3PP/5RK1 w - - bm Qh5; c0 \"Qh5=10, a4=2\"; id \"STS(v4.0) Square Vacancy.028\";'\n,'r2r2k1/1q2bpp1/4p2p/p6Q/N4P2/1P2R1P1/2P4P/2KR4 b - - bm Qb4; c0 \"Qb4=10, Qg2=5, Rdc8=5\"; id \"STS(v4.0) Square Vacancy.029\";'\n,'r4rk1/1b2bpp1/1P1p4/p1q1p2p/R3PPn1/3B3Q/2P1N1PP/1R1N3K b - - bm Qf2; c0 \"Qf2=10, d5=1\"; id \"STS(v4.0) Square Vacancy.030\";'\n,'1r5r/1p6/p2p2p1/P2P1pkq/1R1Qp3/2P1P1bP/1P2R3/5BK1 b - - bm Qf3; c0 \"Qf3=10, Be5=8, Rh6=5\"; id \"STS(v4.0) Square Vacancy.031\";'\n,'2r1r2k/q6p/6p1/3R1p2/1p1P1B2/2bQPBP1/5P1P/6K1 w - - bm Qb5; c0 \"Qb5=10, Kg2=5, Rb5=5\"; id \"STS(v4.0) Square Vacancy.032\";'\n,'1r3q1k/6p1/r6p/3P3b/2PQ1R2/pp4P1/5P2/R1B3K1 b - - bm Qb4; c0 \"Qb4=10, Qd6=1, Qe7=1\"; id \"STS(v4.0) Square Vacancy.033\";'\n,'5k2/pb3pp1/qp3n1p/2p5/2P2B2/8/P1PN1PPP/R3R1K1 b - - bm Qa4; c0 \"Qa4=10, Bc6=1\"; id \"STS(v4.0) Square Vacancy.034\";'\n,'2r1qr1k/1p4bp/p1n1bpp1/4p3/B3P3/4QN1P/PP1B1PP1/R1R3K1 w - - bm Qb6; c0 \"Qb6=10, Rc2=5, Rc3=5, a3=4\"; id \"STS(v4.0) Square Vacancy.035\";'\n,'6rk/5q1p/p2p4/P1nP1p2/2B2N1Q/1Pb1pPR1/7P/7K w - - bm Qh6; c0 \"Qh6=10, Rg5=3, Rxg8+=5\"; id \"STS(v4.0) Square Vacancy.036\";'\n,'3r2k1/p4rp1/1pRp3q/1P1Ppb2/7P/Q4P2/P5BP/2R4K b - - bm Qd2; c0 \"Qd2=10, Kh7=5, Qf4=4\"; id \"STS(v4.0) Square Vacancy.037\";'\n,'rq4k1/3bn1bp/3p2p1/3Pp1N1/4P1p1/2N1B1P1/1P2QP1P/4R1K1 b - - bm Qb3; c0 \"Qb3=10, Kh8=4, h5=4\"; id \"STS(v4.0) Square Vacancy.038\";'\n,'3rk3/2p1r1p1/7q/p1p1P1R1/2B4P/4P3/PPQ5/6K1 w - - bm Qe4; c0 \"Qe4=10, Kg2=4, b3=3\"; id \"STS(v4.0) Square Vacancy.039\";'\n,'2r2r1k/3q2np/p2P1pp1/1pP1p3/7N/5QP1/P4P1P/2R1R1K1 w - - bm Qd5; c0 \"Qd5=10, Qd1=7, Qd3=7\"; id \"STS(v4.0) Square Vacancy.040\";'\n,'r2r2k1/5p1p/6nQ/ppq5/2p1P3/P4P2/1P4PP/R1N2R1K b - - bm Qd4; c0 \"Qd4=10, Qd6=5, Qf2=1\"; id \"STS(v4.0) Square Vacancy.041\";'\n,'r3r1k1/ppq3p1/2p1n3/3pN1p1/Pb1P2P1/3QB2P/1P3P2/R1R3K1 w - - bm Qf5; c0 \"Qf5=10, Kg2=4, Ng6=3, Qg6=4, Rc2=4\"; id \"STS(v4.0) Square Vacancy.042\";'\n,'2bq1rk1/1r3p2/3p2pp/p1p1p3/PnP1P3/2QPP1N1/2B3PP/1R3RK1 b - - bm Qg5; c0 \"Qg5=10, Bd7=3, Qe8=3, h5=4\"; id \"STS(v4.0) Square Vacancy.043\";'\n,'2q5/5kp1/pP2p1r1/3b1p1Q/3P1P2/6P1/5K2/4RB2 b - - bm Qc3; c0 \"Qc3=10, Bb7=2, Qc2+=3, Qc6=1\"; id \"STS(v4.0) Square Vacancy.044\";'\n,'2q2r1k/7p/p2p1p2/1p1Np3/nP6/4Q2P/P4PP1/4R1K1 w - - bm Qh6; c0 \"Qh6=10, Qd2=2, Rc1=6, Re2=1\"; id \"STS(v4.0) Square Vacancy.045\";'\n,'8/3k4/2p5/3r4/1PQBp1pq/4P3/P4PpP/6K1 w - - bm Qa6; c0 \"Qa6=10, Kxg2=4, a4=6, b5=5\"; id \"STS(v4.0) Square Vacancy.046\";'\n,'8/7p/p2p1kqP/2r1b3/P1B1p1r1/1P6/4QP2/3R1K1R b - - bm Qf5; c0 \"Qf5=10, Qg5=1, Rf4=3, a5=3\"; id \"STS(v4.0) Square Vacancy.047\";'\n,'2b1rnk1/1p3pp1/r3p2p/1q2P3/p2PQ3/P1P2PB1/6PP/1BKR3R b - - bm Qb3; c0 \"Qb3=10, Bd7=5, Qa5=4, Rc6=4\"; id \"STS(v4.0) Square Vacancy.048\";'\n,'2r5/p4kp1/1pn2n2/3q1b2/3p4/P2P2Q1/2RB1PPP/4R1K1 b - - bm Qb3; c0 \"Qb3=10, Nd7=5, Nh5=3, Qb5=3\"; id \"STS(v4.0) Square Vacancy.049\";'\n,'r6k/1p2rR1P/2p3p1/4p1q1/8/pP6/P1P5/1K2Q2R w - - bm Qa5; c0 \"Qa5=10, Rf2=6, Rf3=6, Rff1=6\"; id \"STS(v4.0) Square Vacancy.050\";'\n,'r3r1k1/2q3p1/p2p1p2/3P2p1/n2B2P1/8/P1PQ3P/K2R1R2 b - - bm Qc4; c0 \"Qc4=10, Qc8=2, Rac8=6, Re4=6\"; id \"STS(v4.0) Square Vacancy.051\";'\n,'3r2k1/2p2pp1/p6p/1p5q/1PbB4/P1Q3P1/5P1P/4R1K1 b - - bm Qg4; c0 \"Qg4=10, Rd6=2, a5=2, f6=2\"; id \"STS(v4.0) Square Vacancy.052\";'\n,'r5k1/1q4b1/6n1/3pp1Nn/1N3p2/3P2Pp/2QBP2P/1R4K1 w - - bm Qc5; c0 \"Qc5=10, Nxh3=4\"; id \"STS(v4.0) Square Vacancy.053\";'\n,'6r1/4pp1k/3p3p/2qP1P2/r3P1PK/1R6/4Q3/1R6 b - - bm Qd4; c0 \"Qd4=10, Ra3=1, Rg5=1, Rga8=2, Rg7=1\"; id \"STS(v4.0) Square Vacancy.054\";'\n,'8/p3b1k1/2p5/3qp2p/P2p3P/1P1Q1PP1/3NP1K1/8 w - - bm Qf5; c0 \"Qf5=10, Nc4=7, Qa6=6, Qb1=5, Qc2=5\"; id \"STS(v4.0) Square Vacancy.055\";'\n,'1rb2rk1/2p3pp/p1p1p3/2N5/8/1PQ2PPq/P3P3/R2R2K1 w - - bm Qe5; c0 \"Qe5=10, Kf2=4, Ne4=6\"; id \"STS(v4.0) Square Vacancy.056\";'\n,'2rqrbk1/1b1n1p2/p2p1npp/1p6/4P2B/1B3NNP/PP1Q1PP1/3RR1K1 w - - bm Qf4; c0 \"Qf4=10, Re2=3, a3=1, a4=2\"; id \"STS(v4.0) Square Vacancy.057\";'\n,'r1k5/4qp2/P1p1b1p1/6Pp/n3P2P/6Q1/2N5/1K1R2R1 b - - bm Qc5; c0 \"Qc5=10, Rxa6=2\"; id \"STS(v4.0) Square Vacancy.058\";'\n,'6k1/3qbp1p/6p1/3Pp1P1/3n3P/pP1Q4/P7/1K2B2B b - - bm Qg4; c0 \"Qg4=10, Bd6=5, Kf8=3, h6=3\"; id \"STS(v4.0) Square Vacancy.059\";'\n,'3n4/p2rk3/3pq1p1/pR3p1p/2PQ1P2/1PB4P/6PK/8 w - - bm Qh8; c0 \"Qh8=10, Bb2=5, Kh1=5, Rb8=6, Rd5=5\"; id \"STS(v4.0) Square Vacancy.060\";'\n,'5b1k/r7/Pq5p/2p5/3p3N/R2Q2P1/5PK1/8 w - - bm Qf5; c0 \"Qf5=10, Ng6+=2, Qf3=8, Qg6=2\"; id \"STS(v4.0) Square Vacancy.061\";'\n,'5rk1/3n4/3Rp1p1/2P2q1p/1p1P2n1/6P1/1B1NQ2P/6K1 b - - bm Qc2; id \"STS(v4.0) Square Vacancy.062\"; c0 \"Qc2=10, Ndf6=4, Nxc5=4\";'\n,'2r3k1/5pbp/2pB2p1/p3P3/2R2P2/2Q3P1/5K1P/1q6 b - - bm Qh1; c0 \"Qh1=10, Qa2+=2, Qb6+=3, c5=2\"; id \"STS(v4.0) Square Vacancy.063\";'\n,'5r2/3q2pk/5n1p/3p1p1P/1p1P4/4PP2/1P2R1PQ/2rNR1K1 b - - bm Qb5; c0 \"Qb5=10, Re8=4\"; id \"STS(v4.0) Square Vacancy.064\";'\n,'5r1k/2pb1q2/1p1p4/pP1Pp1Rp/2P1P3/1KN4r/P7/4Q2R b - - bm Qf3; c0 \"Qf3=10, Qh7=4, Rg8=2, Rxh1=3\"; id \"STS(v4.0) Square Vacancy.065\";'\n,'7k/p4r2/b3p2q/Pp1p2pp/3P2p1/1P2P1P1/2Q2PBP/2R3K1 w - - bm Qc6; c0 \"Qc6=10, Bf1=5, Qe2=4, e4=6\"; id \"STS(v4.0) Square Vacancy.066\";'\n,'3r1k2/2q5/1p6/5P1p/pP2Q3/P2p4/3R4/1K6 b - - bm Qg3; c0 \"Qg3=10, Qc3=5, Qe7=7, Re8=4\"; id \"STS(v4.0) Square Vacancy.067\";'\n,'6k1/4bp2/4q3/3pP3/p1pr3p/P1NbQR2/1P4PR/3K4 b - - bm Qg4; c0 \"Qg4=10, Bc2+=4, Rg4=6\"; id \"STS(v4.0) Square Vacancy.068\";'\n,'5bk1/3r1p1p/3P1Pp1/1q4Pn/2pN3P/1P2B3/1K3Q2/R7 b - - bm Qe5; c0 \"Qe5=10, Qb8=7, Qc5=4, Qd5=8\"; id \"STS(v4.0) Square Vacancy.069\";'\n,'1r1n3k/1pq3pp/p2Nrn2/2P1p3/3p4/Q2P2P1/4PPB1/1RR3K1 w - - bm Rb6; c0 \"Rb6=10, Qa2=4, Qa4=4, Qb3=4, Rb3=5\"; id \"STS(v4.0) Square Vacancy.070\";'\n,'3r1q1k/6pp/4R3/8/n2p1PB1/3PpQP1/4P1K1/8 w - - bm Qc6; c0 \"Qc6=10, Bh3=3, Kh2=3, Re5=3, f5=3\"; id \"STS(v4.0) Square Vacancy.071\";'\n,'8/1p3q1k/p1p2b1P/2B1nP2/8/1Pn2PN1/2Q3P1/6K1 b - - bm Qd5; c0 \"Qd5=10, Bh4=3, Nd5=3, Nd7=5\"; id \"STS(v4.0) Square Vacancy.072\";'\n,'2r4k/7p/2q2nr1/p3R3/Ppp1P3/7P/P1B3P1/3R1Q1K w - - bm Qf5; c0 \"Qf5=10, Qf3=4, Rd2=4, Re7=2\"; id \"STS(v4.0) Square Vacancy.073\";'\n,'bq6/4bk1p/1B1p2p1/3Ppp2/2P5/7P/1Q1N1PP1/6K1 w - - bm Qb5; c0 \"Qb5=10, Qb1=2, Qb3=4, Qb4=2\"; id \"STS(v4.0) Square Vacancy.074\";'\n,'b3qbk1/B6p/1QNp2p1/3Pp3/2P2p2/5P1P/6P1/6K1 w - - bm Qc7; c0 \"Qc7=10, Kh2=2, Nd8=4, Qb5=2\"; id \"STS(v4.0) Square Vacancy.075\";'\n,'r3r1k1/1b3p1p/3b2p1/p2Pp1P1/1pq1B3/4B3/PPP3QP/1K1R1R2 w - - bm Rf6; c0 \"Rf6=10, Bd3=2, b3=1, h4=3\"; id \"STS(v4.0) Square Vacancy.076\";'\n,'r4q1k/1p2b2r/7P/p1pPp3/8/P2PP1R1/1P4Q1/1K5R w - - bm Qe4; c0 \"Qe4=10, Rf1=5, Rg4=5, Rg7=5\"; id \"STS(v4.0) Square Vacancy.077\";'\n,'2b1q3/p4rbk/1p1R2pp/1P1N4/P2pPp2/B4P1P/4Q1P1/6K1 w - - bm Qc4; c0 \"Qc4=10, Nb4=5, Qd2=2, Qd3=2\"; id \"STS(v4.0) Square Vacancy.078\";'\n,'r1b2rk1/p6p/1p1P1pp1/q1p5/2P1PQ2/P7/1R2B1PP/5R1K b - - bm Qc3; c0 \"Qc3=10, Bb7=3, Bd7=1, Be6=2\"; id \"STS(v4.0) Square Vacancy.079\";'\n,'2b2kn1/5pp1/r2q3p/p2pN3/2pP1PP1/5P2/P1Q4P/1B2R2K w - - bm Qh7; c0 \"Qh7=10, Kg1=6, Qc3=6, g5=6\"; id \"STS(v4.0) Square Vacancy.080\";'\n,'2r1r3/1Rpp2pk/2n4p/p1PNqp2/P3p3/2P1P1P1/4QP1P/3R2K1 w - - bm Qh5; c0 \"Qh5=10, Nf4=5, Qa6=2, Rb5=2\"; id \"STS(v4.0) Square Vacancy.081\";'\n,'r1b1k2r/2q1pp2/1p5p/p1pPp1p1/2P5/3B3P/PP2QPP1/4RRK1 w kq - bm Qh5; c0 \"Qh5=10, Bc2=4, Qxe5=4, a3=4\"; id \"STS(v4.0) Square Vacancy.082\";'\n,'1rr3k1/pp3p1p/6p1/1PPB4/4P2q/2Q2P2/P4P1P/2R2K2 w - - bm Qe5; c0 \"Qe5=10, Kg1=3, Kg2=3, Rd1=3\"; id \"STS(v4.0) Square Vacancy.083\";'\n,'r2bn1k1/1p3pp1/pqb1p2p/4B3/2B2Q1P/2N2P2/PPP3P1/1K1R4 b - - bm Qf2; c0 \"Qf2=10, Bf6=1, Qc5=2, Rc8=1\"; id \"STS(v4.0) Square Vacancy.084\";'\n,'7r/q3kp2/2rp1p2/3RpPb1/1p2P1P1/1P1N4/P4R1P/1K2Q3 b - - bm Qa3; c0 \"Qa3=10, Kd7=2\"; id \"STS(v4.0) Square Vacancy.085\";'\n,'1n2r1k1/1q4pp/4pp2/p1R5/Pp1Q4/4B2P/1P3PP1/6K1 w - - bm Qd6; c0 \"Qd6=10, Qc4=5, Qd3=5, Qg4=4\"; id \"STS(v4.0) Square Vacancy.086\";'\n,'2r5/p4p1k/1p5p/2qPnN2/P2R4/1P4Pp/7P/3Q2K1 b - - bm Qc3; c0 \"Qc3=10, Qc1=2\"; id \"STS(v4.0) Square Vacancy.087\";'\n,'4r1k1/1rp2ppp/p3b3/1n1p4/1q1P1B2/1P3P1P/P1Q3P1/3RRNK1 w - - bm Qc6; c0 \"Qc6=10, Ne3=4, Qd2=5, Qd3=5, Qf2=3\"; id \"STS(v4.0) Square Vacancy.088\";'\n,'r1b1n2r/1p1pqpkp/p1n1p3/4P3/4NP2/3B3P/PPP3P1/R2Q1R1K w - - bm Qh5; c0 \"Qh5=10, Qg4+=7, c4=7, f5=7\"; id \"STS(v4.0) Square Vacancy.089\";'\n,'6rk/5Qp1/7p/4p2P/1p1rq3/6R1/PP6/K5R1 b - - bm Qc2; c0 \"Qc2=10, Qd5=3, Qe2=5, Qf4=5\"; id \"STS(v4.0) Square Vacancy.090\";'\n,'3r2k1/5pb1/5qpp/1Np5/8/1P3P1P/1PQ3P1/1K5R b - - bm Qg5; c0 \"Qg5=10, Qa6=3, Qh4=3, Rb8=4\"; id \"STS(v4.0) Square Vacancy.091\";'\n,'5k2/q7/2p5/4pppn/1pP2nN1/1P2RPPP/3r1B1K/4Q3 b - - bm Qd4; c0 \"Qd4=10, Nxg3=2, Rxf2+=4\"; id \"STS(v4.0) Square Vacancy.092\";'\n,'2q2rk1/p1P1bppp/Pn3n2/3p1b2/3P1B2/1P3N1P/4BPP1/2Q2RK1 w - - bm Qc6; c0 \"Qc6=10, Nh4=7, Qe3=7, g4=6\"; id \"STS(v4.0) Square Vacancy.093\";'\n,'5rk1/1Q3pp1/p2ppq1p/6b1/N2NP1P1/8/PP2K1P1/3R4 b - - bm Qf4; c0 \"Qf4=10, Qe5=5, a5=6, d5=6\"; id \"STS(v4.0) Square Vacancy.094\";'\n,'2k3r1/1b1n1p2/5n2/1Rp1q2p/1pPpP1p1/1N3P2/4B1PP/Q4RK1 w - - bm Qa7; c0 \"Qa7=10, Qa5=1, Rf2=2, fxg4=3\"; id \"STS(v4.0) Square Vacancy.095\";'\n,'r3r1k1/5pp1/p2p3p/2nPP3/p5q1/2P1RNP1/2Q2P1P/2R3K1 b - - bm Qc4; c0 \"Qc4=10, Rac8=3, Rad8=3\"; id \"STS(v4.0) Square Vacancy.096\";'\n,'7k/ppr1qpb1/1n2pN1p/4P1p1/8/1B3QP1/PP3PKP/4R3 w - - bm Qh5; c0 \"Qh5=10, Re2=3, Re3=1, h3=2\"; id \"STS(v4.0) Square Vacancy.097\";'\n,'3r2k1/R5p1/2b2npp/1pP5/4pP1P/6Pq/1Q2BP2/4B1K1 w - - bm Qe5; c0 \"Qe5=10, Bf1=2, Ra6=3, Rc7=6\"; id \"STS(v4.0) Square Vacancy.098\";'\n,'3r4/k1pr4/npR1p3/p3Pp1p/P1QP2pN/q5P1/6PP/1R5K b - - bm Qe3; c0 \"Qe3=10, Kb7=4, Qe7=5, f4=4\"; id \"STS(v4.0) Square Vacancy.099\";'\n,'R7/2q3k1/p1r2p1n/2p1pPp1/P3P3/2PP4/7Q/5BK1 w - - bm Qh5; c0 \"Qh5=10, Be2=1, Qb2=1, Qe2=1\"; id \"STS(v4.0) Square Vacancy.100\";'\n -- STS5: Bishop vs Knight \n,'1b3rk1/5ppp/2p2rq1/1p1n4/3P2P1/1BPbBP2/1P1N2QP/R3R1K1 w - - bm Bxd5; c0 \"Bxd5=10, Ne4=6\"; id \"STS(v5.0) Bishop vs Knight.001\";'\n,'1k1r2r1/1p2bp2/4q2p/p1ppP3/6b1/2PQ2B1/PP2NPP1/R1R3K1 b - - bm Bxe2; c0 \"Bxe2=10, Bf5=3, Bg5=3, c4=4\"; id \"STS(v5.0) Bishop vs Knight.002\";'\n,'1q2n1k1/r4pb1/6p1/1bpPN1Pp/p1N1PP2/3B2KP/R3Q3/8 b - - bm Bxe5; c0 \"Bxe5=10\"; id \"STS(v5.0) Bishop vs Knight.003\";'\n,'1r1qr1k1/1b1nbpp1/ppnp3p/8/2P1PBB1/2N5/PPNQ2PP/2R2RK1 w - - bm Bxd7; c0 \"Bxd7=10, Be2=2, Ne3=3, Rcd1=3\"; id \"STS(v5.0) Bishop vs Knight.004\";'\n,'1r1r2k1/2qp1ppp/2pbpn2/8/3BP3/3B2P1/P1P2P1P/R2Q1RK1 w - - bm Bxf6; c0 \"Bxf6=10, Qd2=7, Qe1=6, a4=5\"; id \"STS(v5.0) Bishop vs Knight.005\";'\n,'1r1r2n1/1pb3pk/p1p3bp/4Np2/3P2P1/2N1RB1P/PP3PK1/4R3 w - - bm Nxg6; c0 \"Nxg6=10, Ne2=3, Rd1=2, d5=3\"; id \"STS(v5.0) Bishop vs Knight.006\";'\n,'1r2r1k1/2q3p1/3bp2p/p2nNp2/1ppP1P2/2P3Q1/PP1RN1PP/R5K1 b - - bm Bxe5; c0 \"Bxe5=10, Rb5=7, Rb7=6, a4=6\"; id \"STS(v5.0) Bishop vs Knight.007\";'\n,'1r2rbk1/1bqn1pp1/pp1p2np/3N1p2/2P1P3/PP2B1PB/4NQKP/2RR4 b - - bm Bxd5; c0 \"Bxd5=10, Qc6=6, Qc8=6, Qd8=3\"; id \"STS(v5.0) Bishop vs Knight.008\";'\n,'1r3bk1/1q2r1p1/pp1p3p/2nP2p1/3BP3/PP3QP1/4N1KP/2RR4 w - - bm Bxc5; c0 \"Bxc5=10, Bg1=5, Rc2=5, Re1=5\"; id \"STS(v5.0) Bishop vs Knight.009\";'\n,'1r4k1/2qnbpp1/r3p2p/3pP2b/1p1N4/3P1NP1/nBPQ1PBP/R3R1K1 b - - bm Bxf3; c0 \"Bxf3=10, Raa8=5, Rba8=6, Rbb6=5\"; id \"STS(v5.0) Bishop vs Knight.010\";'\n,'1r4k1/6pp/2b3n1/Nnq1p3/4Pp2/3B2PP/4QP1K/2B1R3 w - - bm Nxc6; c0 \"Nxc6=10, Bb2=2, Bc4+=3, Qa2+=6\"; id \"STS(v5.0) Bishop vs Knight.011\";'\n,'1rr4k/5p1p/4b1p1/pp1Nb3/4P3/PP1N1P2/K5RP/3R4 b - - bm Bxd5; c0 \"Bxd5=10, Bc3=4, Bd4=4, Bg7=6\"; id \"STS(v5.0) Bishop vs Knight.012\";'\n,'2b1rr2/4q1pk/p2ppb1p/1p2n3/4PNB1/P1N4Q/1PP3PP/R4R1K b - - bm Nxg4; c0 \"Nxg4=10, Bd7=4, Bg5=4, Qd7=3\"; id \"STS(v5.0) Bishop vs Knight.013\";'\n,'2b1rr2/4q1pk/p2ppb1p/1p5P/4PNQ1/P1N5/1PP3P1/R4R1K b - - bm Bxc3; c0 \"Bxc3=10, Bd4=4, Qc7=1, Rf7=1\"; id \"STS(v5.0) Bishop vs Knight.014\";'\n,'2b3k1/p3qpbp/2p3p1/1pn1p3/4P3/PBP1NN1P/1PQ2PP1/6K1 b - - bm Nxb3; c0 \"Nxb3=10, Qd6=6, a5=7, h6=6\"; id \"STS(v5.0) Bishop vs Knight.015\";'\n,'2k5/1p1nbqpp/pPprp1b1/P1p1p3/2P1P2N/4BP1P/1Q1N2P1/3R2K1 w - - bm Nxg6; c0 \"Nxg6=10, Bf2=7, Rb1=7, g3=7\"; id \"STS(v5.0) Bishop vs Knight.016\";'\n,'2k5/p7/1pp3r1/6b1/3P1p1p/P4NrP/1PP2R2/1K1R4 w - - bm Nxg5; c0 \"Nxg5=10, Rdf1=4, Re1=6, Rh1=6\"; id \"STS(v5.0) Bishop vs Knight.017\";'\n,'2kr1b1r/p1qn3p/Ppp3p1/4np2/8/2NBBP2/1PP3PP/RQ2R1K1 b - - bm Nxd3; c0 \"Nxd3=10, Bc5=4, Bd6=2, h5=2\"; id \"STS(v5.0) Bishop vs Knight.018\";'\n,'2kr3b/1pr2p1p/p1n1p1p1/2NpPn2/1P1P4/3RBP1B/1P2KP1P/6R1 w - - bm Bxf5; c0 \"Bxf5=10, Ra1=6, Rgd1=6, f4=5\"; id \"STS(v5.0) Bishop vs Knight.019\";'\n,'2krr3/pp1qbp2/4b3/1P2P2p/P1pPB1pN/4B1Q1/5PPP/3R2K1 b - - bm Bxh4; c0 \"Bxh4=10, c3=4\"; id \"STS(v5.0) Bishop vs Knight.020\";'\n,'2n2rk1/p2b2bp/3p2p1/q1pPp2n/P1P1P3/1QN5/3BBNPP/1R4K1 w - - bm Bxh5; c0 \"Bxh5=10, Qa2=5, Qb8=7, Qd1=5\"; id \"STS(v5.0) Bishop vs Knight.021\";'\n,'2q3k1/1b4r1/p2np2p/QnBpN3/3P1pPp/1P1BP3/8/R5K1 w - - bm Bxb5; c0 \"Bxb5=10, Qb6=1, Rf1=3, exf4=2\"; id \"STS(v5.0) Bishop vs Knight.022\";'\n,'2r1r1k1/1q1bp1bp/3p2p1/1pnP4/3NB3/1P2BP2/3Q2PP/1RR3K1 b - - bm Nxe4; c0 \"Nxe4=10, Rc7=1\"; id \"STS(v5.0) Bishop vs Knight.023\";'\n,'2r1r1k1/pp1q1pbp/2npbnp1/4p1N1/1P2P3/2P2N1P/P4PP1/R1BQRBK1 w - - bm Nxe6; c0 \"Nxe6=10, Bb2=4, Bd2=3, a3=4\"; id \"STS(v5.0) Bishop vs Knight.024\";'\n,'2r2nk1/1b3ppp/p2q1n2/1p1p4/3B1P1Q/1P1NP1P1/P5BP/2R3K1 w - - bm Bxf6; c0 \"Bxf6=10, Bc5=2, Rxc8=7, f5=4\"; id \"STS(v5.0) Bishop vs Knight.025\";'\n,'2r2rk1/4bp2/p6p/1p1R4/3nn1p1/4P1B1/PP1NBPPP/4R1K1 b - - bm Nxe2+; c0 \"Nxe2+=10, Nc2=4, Rc1=6\"; id \"STS(v5.0) Bishop vs Knight.026\";'\n,'2r2rk1/p2qbppp/5n2/3p1N2/1p2n3/1NP1BQ2/PP3PPP/R4RK1 w - - bm Nxe7+; c0 \"Nxe7+=10, Bd4=2, Rfe1=2, cxb4=4\"; id \"STS(v5.0) Bishop vs Knight.027\";'\n,'2r5/2q2pk1/3n1b1p/3Pp1p1/b1B1P1N1/P4N2/5PPP/2Q2RK1 w - - bm Nxf6; c0 \"Nxf6=10\"; id \"STS(v5.0) Bishop vs Knight.028\";'\n,'2r5/3n2k1/5p2/Pp2nB1r/1B1pP2P/P1pP2P1/6K1/3R2R1 w - - bm Bxd7; c0 \"Bxd7=10, Be6=5, Bh3=5, Rdf1=3\"; id \"STS(v5.0) Bishop vs Knight.029\";'\n,'2rq1rk1/1b2bppp/p3p3/n7/3P4/1BBQ1N1P/P4PP1/R3R1K1 b - - bm Nxb3; c0 \"Nxb3=10, Bf6=3, Bxf3=2, Qc7=2\"; id \"STS(v5.0) Bishop vs Knight.030\";'\n,'2rq1rk1/1p1npp1p/p2pb1p1/3N4/3QP3/1BP2P2/PP4PP/R4R1K b - - bm Bxd5; c0 \"Bxd5=10, Nc5=6, a5=5, b5=5\"; id \"STS(v5.0) Bishop vs Knight.031\";'\n,'2rq1rk1/1p1nppbp/p2pn1p1/6B1/2P1P3/1PN1Q1PP/P4PB1/2R2RK1 b - - bm Nxg5; c0 \"Nxg5=10, Bd4=1, Bxc3=1, Re8=4\"; id \"STS(v5.0) Bishop vs Knight.032\";'\n,'2rq1rk1/3bppbp/p4np1/n3Q3/Np6/1B3N1P/PPP2PP1/R1BR2K1 b - - bm Nxb3; c0 \"Nxb3=10, Nc4=7, Qc7=7, e6=7\"; id \"STS(v5.0) Bishop vs Knight.033\";'\n,'2rq1rk1/4bppp/p1p1pn2/1p1b4/3P4/2NB1NQ1/PPP2PPP/1K1RR3 b - - bm Bxf3; c0 \"Bxf3=10, Bd6=3, Nh5=3, a5=2\"; id \"STS(v5.0) Bishop vs Knight.034\";'\n,'2rq1rk1/pp1bppbp/3p1np1/8/2nNP3/1BN1BP2/PPP2QPP/R4RK1 w - - bm Bxc4; c0 \"Bxc4=10, Bc1=5, Nd1=7, Nde2=7\"; id \"STS(v5.0) Bishop vs Knight.035\";'\n,'2rqr1k1/1b3p1p/pn1p1bpB/2p5/3P4/1P3N1P/P2QBPP1/2RR2K1 b - - bm Bxf3; c0 \"Bxf3=10, Nd7=5, Qc7=6, cxd4=6\"; id \"STS(v5.0) Bishop vs Knight.036\";'\n,'2rqr1k1/1b3ppp/3b2n1/p2pN3/1p1P1B2/3BPP1P/P2Q2P1/1R1R2K1 b - - bm Nxf4; c0 \"Nxf4=10, Bxe5=4, Nxe5=2, Rc3=2\"; id \"STS(v5.0) Bishop vs Knight.037\";'\n,'2rr2k1/ppq1pp1p/2npbnpB/8/2PNP3/1QP2P2/P3B1PP/R4RK1 w - - bm Nxe6; c0 \"Nxe6=10, Qa4=4, Rab1=3, Rfb1=4\"; id \"STS(v5.0) Bishop vs Knight.038\";'\n,'2rr4/p3q1pk/bn2p2p/2b1Pp2/1pN4P/1P4Q1/P2BBPP1/2RR2K1 b - - bm Bxc4; c0 \"Bxc4=10, Bd4=4, Rc7=3, Rd4=6\"; id \"STS(v5.0) Bishop vs Knight.039\";'\n,'3b1k2/1b3p1p/pP4p1/3p4/1p1PnBP1/1K3B2/PP2N2P/8 w - - bm Bxe4; c0 \"Bxe4=10, Be3=2, h3=2\"; id \"STS(v5.0) Bishop vs Knight.040\";'\n,'3qr2k/p5r1/1pRp1n1b/1P1Pp2p/1P3p1P/2N1nP1Q/1R3BP1/5BK1 w - - bm Bxe3; c0 \"Bxe3=10\"; id \"STS(v5.0) Bishop vs Knight.041\";'\n,'3r1rk1/1b2p1bp/pp6/4Pp1n/B2n4/2NNBP1p/PP3KPP/3RR3 w - - bm Bxd4; c0 \"Bxd4=10, Bb3+=4, Ne2=6, gxh3=3\"; id \"STS(v5.0) Bishop vs Knight.042\";'\n,'3r2k1/1b3ppp/1p2pq2/p7/2P5/1Pn1QNP1/4PPBP/4R1K1 b - - bm Bxf3; c0 \"Bxf3=10, Rd6=6, a4=7, b5=6\"; id \"STS(v5.0) Bishop vs Knight.043\";'\n,'3r2k1/5p1p/p2qn1p1/P3N1r1/1P1pb1B1/2nN3P/5PPQ/2R1R2K b - - bm Bxd3; c0 \"Bxd3=10\"; id \"STS(v5.0) Bishop vs Knight.044\";'\n,'3r2k1/pr2bpp1/6bp/3nN3/2R3P1/4B2P/P3BP2/3R2K1 b - - bm Nxe3; c0 \"Nxe3=10, Bf6=7, Kh7=7, Nb6=8\"; id \"STS(v5.0) Bishop vs Knight.045\";'\n,'3rk2r/1p2bp2/p1n1q2p/3pPbp1/3B4/2P3Q1/BN3PPP/R3R1K1 b k - bm Nxd4; c0 \"Nxd4=10, O-O=3, Rd7=3, h5=2\"; id \"STS(v5.0) Bishop vs Knight.046\";'\n,'3rr1k1/p1p1p1bp/2p2pp1/3bP3/5P2/BPP2N2/P5PP/4RRK1 b - - bm Bxf3; c0 \"Bxf3=10\"; id \"STS(v5.0) Bishop vs Knight.047\";'\n,'3rr3/p3b1kp/2p2pp1/1q1npb2/4N1PB/1NP2Q2/PP3P1P/R2R2K1 b - - bm Bxe4; c0 \"Bxe4=10, Bc8=6, Bd7=4, Bxg4=6\"; id \"STS(v5.0) Bishop vs Knight.048\";'\n,'4qr1k/2bn1p1p/2N1p3/p2nP3/NpRQ1B2/1P4PP/P6K/8 b - - bm Nxf4; c0 \"Nxf4=10, Qc8=2, Rg8=2, h5=1\"; id \"STS(v5.0) Bishop vs Knight.049\";'\n,'4r1k1/p4bp1/1p1p1p2/1P1N2n1/4P1P1/4qP1P/P4RQ1/5BK1 b - - bm Bxd5; c0 \"Bxd5=10, Qc5=2, Qd4=6, Qe1=5\"; id \"STS(v5.0) Bishop vs Knight.050\";'\n,'4r1k1/p4p1p/1p2q1pB/1Q2Pn2/P3B2P/5P2/bR3P2/6K1 w - - bm Bxf5; c0 \"Bxf5=10, Bf4=7, Rxa2=7, a5=7\"; id \"STS(v5.0) Bishop vs Knight.051\";'\n,'4r1k1/pb6/2pbpp1B/2N2p2/3P4/1P6/P4KPP/R7 b - - bm Bxc5; c0 \"Bxc5=10, Ba8=2, Re7=5\"; id \"STS(v5.0) Bishop vs Knight.052\";'\n,'4r3/1p2rpk1/p1p1bqp1/2QnN1bp/1B1PB3/P6P/1P2RPP1/4R1K1 b - - bm Nxb4; c0 \"Nxb4=10, Bf4=4, Bh4=4, h4=5\"; id \"STS(v5.0) Bishop vs Knight.053\";'\n,'4r3/5pkp/2b1n1p1/3p3n/p1pP4/P1N1BP1B/1P3KPP/2R5 w - - bm Bxe6; c0 \"Bxe6=10, Ne2=7, g3=8, g4=5\"; id \"STS(v5.0) Bishop vs Knight.054\";'\n,'4rrk1/2q3pp/pp1p1bn1/2nR4/2P2B2/N4PP1/PP3Q1P/3R1BK1 b - - bm Nxf4; c0 \"Nxf4=10, Be7=6, Nb7=6\"; id \"STS(v5.0) Bishop vs Knight.055\";'\n,'5k2/p2b3r/1ppb1p2/1q1p1P2/1P1PrNpP/4P1P1/1RQ2BK1/2R5 b - - bm Bxf4; c0 \"Bxf4=10, Bb8=2\"; id \"STS(v5.0) Bishop vs Knight.056\";'\n,'5k2/p2q2p1/bp1p1p1p/3PnP1Q/1P1BP3/2P5/3N2P1/6K1 w - - bm Bxe5; c0 \"Bxe5=10, Kh2=7, Qd1=8, Qh3=7\"; id \"STS(v5.0) Bishop vs Knight.057\";'\n,'6k1/r2rbpp1/p1q2n2/1pp2PB1/5Q2/1PN1R2P/1P3P2/4R1K1 w - - bm Bxf6; c0 \"Bxf6=10, R3e2=2\"; id \"STS(v5.0) Bishop vs Knight.058\";'\n,'6k1/r6p/2pb1ppn/p1Np4/1P1PrPP1/P6P/2R5/3K1RB1 b - - bm Bxc5; c0 \"Bxc5=10, Re8=1, Ree7=5\"; id \"STS(v5.0) Bishop vs Knight.059\";'\n,'6n1/p6k/2R5/2p1rp2/p1P1n3/P3PB1P/5PP1/6K1 w - - bm Bxe4; c0 \"Bxe4=10, Bd1=1, Be2=4, Ra6=1\"; id \"STS(v5.0) Bishop vs Knight.060\";'\n,'6r1/r2Nbnk1/2R3pp/p4p2/PpB2PP1/1P6/6K1/3R4 w - - bm Bxf7; c0 \"Bxf7=10, Be6=1, Re6=4, gxf5=3\"; id \"STS(v5.0) Bishop vs Knight.061\";'\n,'8/1R3pp1/p3rnk1/3pBb1p/3P3P/1B1P1PP1/5K2/8 w - - bm Bxf6; c0 \"Bxf6=10, Ba4=3, Ke2=4, Ke3=4\"; id \"STS(v5.0) Bishop vs Knight.062\";'\n,'8/5p1k/2p3pp/2p1p3/2P2nPP/2Q2P2/1P1B1K2/q7 w - - bm Bxf4; c0 \"Bxf4=10, Qa3=7, b3=7, h5=7\"; id \"STS(v5.0) Bishop vs Knight.063\";'\n,'8/6k1/4ppp1/r2Pn2p/bpq1PB1P/6P1/R4PK1/1QN5 w - - bm Bxe5; c0 \"Bxe5=10, Nb3=1, Rb2=1, dxe6=5\"; id \"STS(v5.0) Bishop vs Knight.064\";'\n,'8/r2b1nk1/Np1qp2p/pP1pNrpP/Pp1P4/3Q1PP1/2R3K1/7R w - - bm Nxd7; c0 \"Nxd7=10\"; id \"STS(v5.0) Bishop vs Knight.065\";'\n,'q1r1r1k1/p2nppbp/1pnpb1p1/6N1/1PP1P3/P1N1Q2P/4BPPB/1R1R2K1 w - - bm Nxe6; c0 \"Nxe6=10\"; id \"STS(v5.0) Bishop vs Knight.066\";'\n,'q5k1/1pbb2pn/2ppNr1p/p3rP2/P1P1pNB1/1P5P/5PP1/1RQR2K1 b - - bm Bxe6; c0 \"Bxe6=10, Qb8=6, Qc8=5, Rfxe6=6\"; id \"STS(v5.0) Bishop vs Knight.067\";'\n,'r1b1r1k1/p1qn1ppp/2pb1n2/4pN2/Np2P3/7P/PPQ1BPP1/R1B2RK1 w - - bm Nxd6; c0 \"Nxd6=10, Be3=1, Rd1=1\"; id \"STS(v5.0) Bishop vs Knight.068\";'\n,'r1b1r1k1/ppq2ppp/2n5/3p4/P1pPn3/B1P1PN2/2B2PPP/R2Q1RK1 w - - bm Bxe4; c0 \"Bxe4=10, Bb2=7, Qb1=6, Qe1=4\"; id \"STS(v5.0) Bishop vs Knight.069\";'\n,'r1b2rk1/p3qppp/1pn5/2b5/3pN3/5NP1/PP2PPBP/R2Q1RK1 w - - bm Nxc5; c0 \"Nxc5=10, Ne1=1, Nfd2=1, Qd3=1\"; id \"STS(v5.0) Bishop vs Knight.070\";'\n,'r1bq2k1/pp3rbp/2n1p1p1/1BBpPn2/8/2N2N1P/PP3PP1/R2Q1RK1 w - - bm Bxc6; c0 \"Bxc6=10, Qe1=3, Qe2=3, Re1=1\"; id \"STS(v5.0) Bishop vs Knight.071\";'\n,'r1br4/pp3pk1/2p2npp/2n1N3/P2q4/2NB2QP/1PP2PP1/R3R1K1 b - - bm Nxd3; c0 \"Nxd3=10, Nh5=1, g5=5, h5=7\"; id \"STS(v5.0) Bishop vs Knight.072\";'\n,'r1r3k1/1nqb1ppp/3p4/pp1Pb3/1P2Pp2/R1PB1N1P/Q4PP1/1N2R1K1 w - - bm Nxe5; c0 \"Nxe5=10, Be2=2, Bf1=2, Rd1=3\"; id \"STS(v5.0) Bishop vs Knight.073\";'\n,'r1r3k1/1p1b1p2/1q1p3p/1NpPb1pB/PpP1Pp2/1P6/R4PPP/1Q1R3K b - - bm Bxb5; c0 \"Bxb5=10\"; id \"STS(v5.0) Bishop vs Knight.074\";'\n,'r1r4k/pb1nq1pp/1p1bp3/1N1p1p2/3Pn3/1P1NB1P1/PQ2PPBP/R4RK1 w - - bm Nxd6; c0 \"Nxd6=10, Rac1=7, Rfc1=7, a4=7\"; id \"STS(v5.0) Bishop vs Knight.075\";'\n,'r2q1rk1/2pb2b1/1p1p2pp/p1nP1p1n/2P5/2N1B1P1/PPQ1B2P/R3NRK1 w - - bm Bxh5; c0 \"Bxh5=10\"; id \"STS(v5.0) Bishop vs Knight.076\";'\n,'r2q1rk1/pb3pbp/1pn1p1p1/2pnN3/2N2B2/3P2P1/PPP2PBP/R2QR1K1 b - - bm Nxf4; c0 \"Nxf4=10, Nce7=2, Nd4=2, Rc8=2\"; id \"STS(v5.0) Bishop vs Knight.077\";'\n,'r2q1rk1/pppb1ppp/1b1p2n1/3Pp3/2N1P1n1/2PB1N2/PP3PPP/R1BQR1K1 w - - bm Nxb6; c0 \"Nxb6=10, Be3=4, Re2=1, Rf1=6\"; id \"STS(v5.0) Bishop vs Knight.078\";'\n,'r2r2k1/1p2qppp/2n1bn2/p2Bp1N1/2P5/R5P1/1P1NPP1P/1Q1R2K1 w - - bm Nxe6; c0 \"Nxe6=10, Bxc6=2, Bxe6=3\"; id \"STS(v5.0) Bishop vs Knight.079\";'\n,'r2r2k1/1pq2pp1/p1b1p2p/3n4/8/1QB3P1/PP2PPBP/R3R1K1 b - - bm Nxc3; c0 \"Nxc3=10, Qd7=7, Rac8=8, a5=7\"; id \"STS(v5.0) Bishop vs Knight.080\";'\n,'r2r2k1/ppp2pb1/2n1p1pp/1B2P3/3PNn1q/2Q1BP2/PP3P1P/2R1K2R w K - bm Bxf4; c0 \"Bxf4=10, Bc4=7, Bxc6=6, Rd1=6\"; id \"STS(v5.0) Bishop vs Knight.081\";'\n,'r3k2r/ppqbnpb1/n1p1p2p/P2pP1p1/3P4/1P1BBN1P/1NPQ1PP1/R3K2R w KQkq - bm Bxa6; c0 \"Bxa6=10\"; id \"STS(v5.0) Bishop vs Knight.082\";'\n,'r3kb1B/1p1b3p/pqnpp1p1/7n/8/2NRp3/PPP1B3/1K1RQ3 w q - bm Bxh5; c0 \"Bxh5=10, Ne4=2\"; id \"STS(v5.0) Bishop vs Knight.083\";'\n,'r3qrk1/1pp2bp1/p1n1p2p/2Pp1pbP/1P1P4/P1NBPN2/2Q2PP1/2R1K2R w K - bm Nxg5; c0 \"Nxg5=10, Ne2=7, Rd1=7, b5=2\"; id \"STS(v5.0) Bishop vs Knight.084\";'\n,'r3r1k1/p1q3bp/2p1bpp1/2nnp3/2N1N3/2PB2B1/PPQ2PPP/R3R1K1 b - - bm Nxd3; c0 \"Nxd3=10, Bf8=1, Nb7=1, Nxe4=2\"; id \"STS(v5.0) Bishop vs Knight.085\";'\n,'r3r1k1/pp3pbp/2p3p1/P3p3/1n2P1n1/2N1B3/1PPR1PPP/R3N1K1 b - - bm Nxe3; c0 \"Nxe3=10, Bf8=4, Na6=4, f6=3\"; id \"STS(v5.0) Bishop vs Knight.086\";'\n,'r3r1k1/ppq2pb1/2p1b1p1/P3n2p/2PN1B2/7P/1P1QBPP1/R2R2K1 w - - bm Nxe6; c0 \"Nxe6=10, Ra3=8, Rac1=7, a6=7\"; id \"STS(v5.0) Bishop vs Knight.087\";'\n,'r3r2k/6p1/q3pp1p/1b1pn2P/3Q2B1/1P6/1BP2PP1/1K1RR3 b - - bm Nxg4; c0 \"Nxg4=10, Nc6=1, Nf7=1, Qa2+=5\"; id \"STS(v5.0) Bishop vs Knight.088\";'\n,'r3rbk1/1p3pp1/1qp1b2p/p1Nn4/2Rp4/P2P1BP1/1P1BPP1P/2Q1R1K1 b - - bm Bxc5; c0 \"Bxc5=10, Bd6=4, Be7=5, Nc7=3\"; id \"STS(v5.0) Bishop vs Knight.089\";'\n,'r4r1k/1p2b1pp/pBq3n1/2PNp3/2N1Ppn1/1Q4P1/PP1R3P/5RK1 w - - bm Nxe7; c0 \"Nxe7=10, Nd6=3, Qa3=3, Rc2=4\"; id \"STS(v5.0) Bishop vs Knight.090\";'\n,'r4r2/p1n1q1bk/6pp/1pp2b2/2P1p3/P3N1P1/R2QPPBP/2BR2K1 w - - bm Nxf5; c0 \"Nxf5=10, Qa5=6, Qc2=2, Qd6=4\"; id \"STS(v5.0) Bishop vs Knight.091\";'\n,'r4r2/p3pp1k/1nR1b2p/5Np1/4P3/5NP1/Pb3PBP/5RK1 b - - bm Bxf5; c0 \"Bxf5=10, Rfc8=1\"; id \"STS(v5.0) Bishop vs Knight.092\";'\n,'r4rk1/1bq2pp1/1p1bpn1p/p2nN3/P1BP4/5NP1/1P1BQPKP/R3R3 b - - bm Bxe5; c0 \"Bxe5=10, Nb4=2, Ne7=3, Qe7=2\"; id \"STS(v5.0) Bishop vs Knight.093\";'\n,'r4rk1/1p2bppp/p2p1nn1/3P4/2PN1B2/8/PP2B1PP/R4R1K b - - bm Nxf4; c0 \"Nxf4=10, Ne4=1, Rae8=1\"; id \"STS(v5.0) Bishop vs Knight.094\";'\n,'r4rk1/1ppbq1bp/1n4p1/p1NPpp2/1n6/1PN1P1PP/PB3PB1/R2Q1RK1 w - - bm Nxd7; c0 \"Nxd7=10, N5a4=5, Nxb7=5, d6=4\"; id \"STS(v5.0) Bishop vs Knight.095\";'\n,'r4rk1/ppq1ppbp/1np1P1p1/2Nb4/Pn6/3B1N1P/1PP1QPP1/R1B1R1K1 b - - bm Nxd3; c0 \"Nxd3=10, Bxf3=6, Qd6=6, f5=6\"; id \"STS(v5.0) Bishop vs Knight.096\";'\n,'r5k1/pp1n1rpp/2pb1q2/2N5/1P3B2/P2P2P1/3Q1PKP/1R2R3 b - - bm Bxc5; c0 \"Bxc5=10, Bxf4=4, Nxc5=5, Qd4=7\"; id \"STS(v5.0) Bishop vs Knight.097\";'\n,'r5k1/pp2q1bp/n2p2p1/2pPpr2/2P1Nn2/PQ3N1P/1P1B1PP1/1R2R1K1 w - - bm Bxf4; c0 \"Bxf4=10, Kh2=7, Rbd1=6, g4=6\"; id \"STS(v5.0) Bishop vs Knight.098\";'\n,'r6r/4bkpp/2p1np2/p1p5/2P1NB2/6P1/PP2P2P/3R1R1K b - - bm Nxf4; c0 \"Nxf4=10\"; id \"STS(v5.0) Bishop vs Knight.099\";'\n,'rnq1k2r/p3ppbp/1p2bnp1/2p3N1/4P3/3BB2P/P1QN1PP1/1R3RK1 w kq - bm Nxe6; c0 \"Nxe6=10, Ndf3=4, Rfd1=4, f4=4\"; id \"STS(v5.0) Bishop vs Knight.100\";'\n -- STS6: Re-Capturing\n,'1k1r1r2/p1p5/Bpnbb3/3p2pp/3P4/P1N1NPP1/1PP4P/2KR1R2 w - - bm Ncxd5; id \"STS(v6.0) Recapturing.001\"; c0 \"Ncxd5=10, Nb5=4, Ne2=3, Nexd5=6\";'\n,'1k1r4/4rp2/1p1qbnp1/p2p3p/P2P4/1Nn2P2/1P1QBRPP/2R3K1 w - - bm Rxc3; id \"STS(v6.0) Recapturing.002\"; c0 \"Rxc3=10, Qxc3=5, Re1=8, bxc3=7\";'\n,'1k1rr3/pp2qpp1/1b2p3/4N2p/2R1n2P/P2R2P1/1PP1QP2/1K6 w - - bm Rxe4; id \"STS(v6.0) Recapturing.003\"; c0 \"Rxe4=10, Ng6=7, Rxd8+=3\";'\n,'1k3rn1/3r1p2/p2p1np1/Pp1P3p/1Pp1PP2/2P1R1bP/2B2K1B/6R1 w - - bm Bxg3; id \"STS(v6.0) Recapturing.004\"; c0 \"Bxg3=10, Kxg3=5, Rexg3=5, Rgxg3=3\";'\n,'1q2rnk1/5rb1/bp1p1np1/pNpP2Bp/P1P1Pp1P/3B2P1/3QNRR1/7K w - - bm gxf4; id \"STS(v6.0) Recapturing.005\"; c0 \"gxf4=10, Bxf4=8, Bxf6=7, Rxf4=7\";'\n,'1q4k1/1r3pp1/3p1n1p/2pPpP2/b1PnP3/rPB1R1NP/3Q2PK/1R3B2 b - - bm Bxb3; id \"STS(v6.0) Recapturing.006\"; c0 \"Bxb3=10, Raxb3=2, Rbxb3=3\";'\n,'1qr2rk1/4ppbp/6p1/pp1b4/2NP4/4B3/PPB2PPP/2RQR2K b - - bm bxc4; id \"STS(v6.0) Recapturing.007\"; c0 \"bxc4=10, Bxc4=3, Rfd8=6, Rxc4=5\";'\n,'1qrr3k/6p1/1p1pp2p/pNn5/Pn1bP1PP/5Q2/1PP1N3/1K1R2R1 w - - bm Nexd4; id \"STS(v6.0) Recapturing.008\"; c0 \"Nexd4=10, Nbxd4=4, Rg2=5\";'\n,'1r1q2k1/5pp1/2bp2rp/p1pNp2n/2PBP3/1P1B1P2/P2Q2PP/1R3RK1 b - - bm cxd4; id \"STS(v6.0) Recapturing.009\"; c0 \"cxd4=10, Bxd5=8, Ng3=8, exd4=7\";'\n,'1r1r2k1/5pb1/6p1/p1pb2Pp/PpB1PR2/7P/1PP5/2KR4 w - - bm exd5; id \"STS(v6.0) Recapturing.010\"; c0 \"exd5=10, Ba6=6, Bxd5=2\";'\n,'1r2r1k1/pb1n1pp1/1p1p2np/2P1p1q1/P1P1P3/2P2PP1/2QNBB1P/1R1R3K b - - bm Nxc5; id \"STS(v6.0) Recapturing.011\"; c0 \"Nxc5=10, Bc6=8, bxc5=7, dxc5=7\";'\n,'1r2r2k/1p3pbp/b5p1/p2np3/P1P1B1PP/1PN2P2/6K1/3R1R2 w - - bm Nxd5; id \"STS(v6.0) Recapturing.012\"; c0 \"Nxd5=10, Bxd5=4, Rxd5=5, cxd5=4\";'\n,'1r2rbk1/1b1q1p2/3pn1p1/1p5p/1p2P2P/P1P1BPP1/4QNBK/2R1R3 w - - bm axb4; id \"STS(v6.0) Recapturing.013\"; c0 \"axb4=10, Qa2=1, Qb2=2, cxb4=6\";'\n,'1r3nk1/3r1qb1/bp1p1np1/pNpP2Bp/P1P1Pp1P/7N/1P1QBR2/6RK w - - bm Rxf4; id \"STS(v6.0) Recapturing.014\"; c0 \"Rxf4=10, Bf3=1, Nc3=1, Qxf4=2\";'\n,'1r3r2/1b4bk/p1n2ppp/qp1p4/4PN2/1B2B1P1/P3QP2/1R1R2K1 w - - bm exd5; id \"STS(v6.0) Recapturing.015\"; c0 \"exd5=10, Bc5=3, Ne6=6, Nxg6=3\";'\n,'1r3rk1/p1qnppbp/p5p1/2pPP3/2P5/4R2P/PP2Q1P1/1RBN3K b - - bm Bxe5; id \"STS(v6.0) Recapturing.016\"; c0 \"Bxe5=10, Nxe5=8, Rb7=8, Rbe8=8\";'\n,'1r4k1/1rq2ppp/3p1n2/2pPp3/p1PnP3/PPB4P/3Q1PP1/1R2RBK1 b - - bm axb3; id \"STS(v6.0) Recapturing.017\"; c0 \"axb3=10, Nd7=4, Nxb3=3, Rxb3=8\";'\n,'1r4k1/pr3ppp/q2p1n2/2pPp3/b1PnP3/PPB3NP/3Q1PP1/1R2RBK1 b - - bm Nxb3; id \"STS(v6.0) Recapturing.018\"; c0 \"Nxb3=10, Bxb3=7, Nd7=7, Rxb3=6\";'\n,'1rq2rk1/4bp2/2np2p1/p1p1p3/P1PNP1P1/1PB2P2/1Q3K1P/R2R1N2 b - - bm exd4; id \"STS(v6.0) Recapturing.019\"; c0 \"exd4=10, Bh4+=7, Nxd4=5, cxd4=6\";'\n,'1rq2rk1/4bp2/2np2p1/p1p1p3/P1PNP1P1/1PB2P2/1Q4P1/R2R1NK1 b - - bm cxd4; id \"STS(v6.0) Recapturing.020\"; c0 \"cxd4=10, Nxd4=1, Rb7=7, exd4=2\";'\n,'1rq2rk1/4bp2/2np2p1/p1p1p3/P1PNP1P1/1PB2P2/1Q4PK/R2R1N2 b - - bm cxd4; id \"STS(v6.0) Recapturing.021\"; c0 \"cxd4=10, Nb4=7, Nxd4=2, exd4=4\";'\n,'1rq2rk1/4bp2/3pn1p1/p1p1p3/P1PNP1P1/1PB2P2/1Q5P/R2R1NK1 b - - bm Nxd4; id \"STS(v6.0) Recapturing.022\"; c0 \"Nxd4=10, Ng5=6, cxd4=6, exd4=1\";'\n,'2kr3r/p1p4p/1np2p2/3P4/1b2N3/1P4P1/PB3PP1/R2K1R2 b - - bm Nxd5; id \"STS(v6.0) Recapturing.023\"; c0 \"Nxd5=10, Rhe8=1, Rhf8=3, Rxd5+=3\";'\n,'2qr2r1/1p3pk1/p1np1np1/7p/2P1Pp2/1PN5/3QN1PP/4RR1K w - - bm Nxf4; id \"STS(v6.0) Recapturing.024\"; c0 \"Nxf4=10, Nd5=4, Qxf4=5, Rxf4=4\";'\n,'2r1rbk1/1p3p2/1qn3p1/p1Pp1b1p/5P2/2P1RNP1/PP1Q2BP/RN5K b - - bm Bxc5; id \"STS(v6.0) Recapturing.025\"; c0 \"Bxc5=10, Qa7=3, Qb5=2, Qxc5=6\";'\n,'2r2r1k/1q1nbpp1/p3p2p/2P1P3/1p1N1B1P/6Q1/PP3PP1/R2R2K1 b - - bm Nxc5; id \"STS(v6.0) Recapturing.026\"; c0 \"Nxc5=10, Nb8=6, Rxc5=7\";'\n,'2r2rk1/1p1q1pb1/p2p1np1/7p/2P1Pp1Q/1PN5/P2B2PP/4RR1K w - - bm Rxf4; id \"STS(v6.0) Recapturing.027\"; c0 \"Rxf4=10, Bxf4=1\";'\n,'2r2rk1/3bqppp/1p6/p2pb2Q/Pn1P1P2/1P2PN2/6PP/R1B2RK1 w - - bm fxe5; id \"STS(v6.0) Recapturing.028\"; c0 \"fxe5=10, Nxe5=1, Qxe5=2, dxe5=4\";'\n,'2r2rk1/3bqppp/2p5/p2pb2Q/Pn1P1P2/1P2PN2/6PP/R1B2RK1 w - - bm Qxe5; id \"STS(v6.0) Recapturing.029\"; c0 \"Qxe5=10, Nxe5=6, dxe5=3, fxe5=7\";'\n,'2r3k1/1bqnbpp1/1p2p2p/2P5/P7/4PN1B/1B2QPPP/R5K1 b - - bm Nxc5; id \"STS(v6.0) Recapturing.030\"; c0 \"Nxc5=10, Bxc5=4, Qxc5=2, bxc5=4\";'\n,'2r3k1/1p1nqp1p/1P4p1/Q2Pp3/1RbnP3/5P1P/3N2P1/5B1K w - - bm Rxc4; id \"STS(v6.0) Recapturing.031\"; c0 \"Rxc4=10, Bxc4=2, Nxc4=5, d6=1\";'\n,'2r5/4bkp1/p3q3/1b2p2n/N3PBp1/1p2Q3/1P3PPP/RB1R2K1 b - - bm Nxf4; id \"STS(v6.0) Recapturing.032\"; c0 \"Nxf4=10, Bxa4=7, Rc4=7\";'\n,'2rq1r1k/p2nb1p1/1p3P1p/3p4/8/1P1p3Q/P2B1PPP/1R1N1RK1 b - - bm Bxf6; id \"STS(v6.0) Recapturing.033\"; c0 \"Bxf6=10, Nxf6=3, gxf6=6\";'\n,'2rq1rk1/4ppbp/p5p1/1p1b4/1PNP4/4B3/P1B2PPP/2RQR1K1 b - - bm Rxc4; id \"STS(v6.0) Recapturing.034\"; c0 \"Rxc4=10, Bxc4=7, Bxg2=6, bxc4=6\";'\n,'2rq1rk1/4ppbp/p5p1/1p1b4/2NP4/P3B2P/1PB2PP1/2RQR1K1 b - - bm Rxc4; id \"STS(v6.0) Recapturing.035\"; c0 \"Rxc4=10, Bxc4=4, Bxg2=6, bxc4=6\";'\n,'2rq1rk1/4ppbp/p5p1/1p1b4/2NP4/P3B3/1P3PPP/1BRQR2K b - - bm Rxc4; id \"STS(v6.0) Recapturing.036\"; c0 \"Rxc4=10, Bxc4=5, Bxg2+=6, bxc4=5\";'\n,'2rqr1k1/1b2bp1n/1pnpp1pp/p7/P2pP2P/1NPB1NP1/1P2QPK1/1R2B1R1 w - - bm Nbxd4; id \"STS(v6.0) Recapturing.037\"; c0 \"Nbxd4=10, Bd2=6, Nfxd4=6, cxd4=6\";'\n,'2rr4/1pqb1ppk/p1Nppn1p/4n3/2P1P3/2N3P1/PP1QB1PP/R3BRK1 b - - bm Bxc6; id \"STS(v6.0) Recapturing.038\"; c0 \"Bxc6=10, Nxc6=4, Qxc6=4\";'\n,'3b2nk/p2Nqrpp/1pB1p3/3pPnp1/1P1P1P1P/P7/2R1QB1K/8 w - - bm fxg5; id \"STS(v6.0) Recapturing.039\"; c0 \"fxg5=10, Qf3=6, Qg4=6, hxg5=7\";'\n,'3q4/p2b2kp/1R1P1p2/b1p5/2B1rPp1/8/P5P1/B1Q2RK1 b - - bm Bxb6; id \"STS(v6.0) Recapturing.040\"; c0 \"Bxb6=10, Qxb6=7, Rxc4=7, axb6=8\";'\n,'3r1r2/pkp4p/1np1p3/3P4/1b2N3/1P3P2/1B4PP/2R2RK1 b - - bm exd5; id \"STS(v6.0) Recapturing.041\"; c0 \"exd5=10, Nxd5=3, Rxd5=3, cxd5=4\";'\n,'3r1rk1/ppp2ppp/1nnN4/7q/8/1B5P/PP1BRPP1/R3Q1K1 b - - bm cxd6; id \"STS(v6.0) Recapturing.042\"; c0 \"cxd6=10, Nd4=8, Nd7=8, Rxd6=8\";'\n,'3r4/pkp2r2/1np5/3P3p/1b1BN1p1/1P3PP1/6P1/2R2R1K b - - bm cxd5; id \"STS(v6.0) Recapturing.043\"; c0 \"cxd5=10, Nxd5=6, Rxd5=7\";'\n,'3r4/pkp2r2/1np5/3P3p/1b1BN1pP/1P3P2/6P1/2R2R1K b - - bm Rxd5; id \"STS(v6.0) Recapturing.044\"; c0 \"Rxd5=10, cxd5=7, gxf3=2\";'\n,'3rkb1r/p2npp1p/1p4p1/1Q1p4/P2p1B2/2q1PN2/2P2PPP/R4RK1 w k - bm exd4; id \"STS(v6.0) Recapturing.045\"; c0 \"exd4=10, Be5=7, Nxd4=6, a5=5\";'\n,'3rr1k1/p4bbp/1p1p4/3p1BPp/P2p1N1P/2P1P1K1/R1P5/3R4 w - - bm exd4; id \"STS(v6.0) Recapturing.046\"; c0 \"exd4=10, Kf2=7, a5=7, cxd4=8\";'\n,'3rr1k1/pR1n1p1p/5b2/3N4/6p1/P2bp1P1/3N1PBP/2R3K1 w - - bm Nxe3; id \"STS(v6.0) Recapturing.047\"; c0 \"Nxe3=10, Ne4=8, Nxf6+=8, fxe3=8\";'\n,'4q1k1/p2n1pp1/4p2p/3n4/1P1P4/P4P2/1B1QN1PP/2r2K2 w - - bm Bxc1; id \"STS(v6.0) Recapturing.048\"; c0 \"Bxc1=10, Kf2=7, Qxc1=4\";'\n,'4r1k1/2p2rp1/1pnp4/p2N3p/2P2p2/PP1RP1P1/6KP/5R2 w - - bm gxf4; id \"STS(v6.0) Recapturing.049\"; c0 \"gxf4=10, Nxf4=5, Rxf4=1, exf4=8\";'\n,'4rnk1/3r1qb1/bp1p1np1/pNpP2Bp/P1P1Pp1P/3B4/1P1QNR2/6RK w - - bm Nxf4; id \"STS(v6.0) Recapturing.050\"; c0 \"Nxf4=10, Qxf4=2, Rxf4=3\";'\n,'5r2/4k3/2qpp2b/pN2p2n/P3PR1p/2P5/6PP/QB2R2K b - - bm Bxf4; id \"STS(v6.0) Recapturing.051\"; c0 \"Bxf4=10, Nxf4=6, Rxf4=2, exf4=2\";'\n,'6k1/pp2npp1/2r1bq1p/3p4/PP3N1P/5BP1/4QP2/3R3K w - - bm Bxd5; id \"STS(v6.0) Recapturing.052\"; c0 \"Bxd5=10, Kg1=8, Nxd5=8, b5=8\";'\n,'6n1/1k1qn1r1/1p1p4/p1pPpPp1/2P3N1/2B2PP1/PP4Q1/KR6 b - - bm Nxf5; id \"STS(v6.0) Recapturing.053\"; c0 \"Nxf5=10, Qxf5=3, Rf7=7, Rh7=8\";'\n,'8/1p4k1/3p4/p1pbp1r1/P1P1P2p/1PK2B2/5R2/8 w - - bm exd5; id \"STS(v6.0) Recapturing.054\"; c0 \"exd5=10, Kd3=6, Rd2=6, cxd5=8\";'\n,'8/p1p2p1k/1p1pqn1p/7r/P1PPP1rP/2P1RQ2/3N1K2/6R1 b - - bm Rhxh4; id \"STS(v6.0) Recapturing.055\"; c0 \"Rhxh4=10, Kg6=5, Rgxh4=9, Rxg1=5\";'\n,'b2r1r2/6bk/p1n2ppp/q2p4/1p2PN2/1B2B1P1/P3QP2/1R1R2K1 w - - bm Rxd5; id \"STS(v6.0) Recapturing.056\"; c0 \"Rxd5=10, Bxd5=3, Ne6=4, exd5=4\";'\n,'b2r1r2/6bk/p1n2ppp/qp1p4/4PN2/1B2B1PP/P3Q3/1R1R2K1 w - - bm Nxd5; id \"STS(v6.0) Recapturing.057\"; c0 \"Nxd5=10, exd5=3\";'\n,'b4r1r/3kq1p1/p1p1p1p1/NpPpPP2/1P1P2P1/4Q2p/1K5P/4R2R w - - bm fxe6+; id \"STS(v6.0) Recapturing.058\"; c0 \"fxe6+=10, Ref1=1, Rhf1=1\";'\n,'br1r2k1/p2n1pp1/np1p4/2P1p1qp/2P1P3/P1P2PP1/2QNBB1P/2R2R1K b - - bm Naxc5; id \"STS(v6.0) Recapturing.059\"; c0 \"Naxc5=10, Ndxc5=7, bxc5=1, dxc5=1\";'\n,'q1rb2rk/1b3ppp/2n1p2n/p1BpP3/B2P1PP1/1p2RN1P/2PN1Q2/1R4K1 w - - bm Rexb3; id \"STS(v6.0) Recapturing.060\"; c0 \"Rexb3=10, Bxb3=7, Nxb3=6, c3=6\";'\n,'q1rb2rk/1b3ppp/2n1p2n/p2pP3/B2P1PP1/Bp2RN1P/1RPNQ3/6K1 w - - bm Nxb3; id \"STS(v6.0) Recapturing.061\"; c0 \"Nxb3=10, Rbxb3=3, Rexb3=6, c3=4\";'\n,'q2r2k1/1br1bpp1/pp3n2/2nN4/P1P4P/1P3P1B/1BQ4P/1R1RN1K1 b - - bm Nxd5; id \"STS(v6.0) Recapturing.062\"; c0 \"Nxd5=10, Bxd5=1, Qb8=7, Rxd5=5\";'\n,'r1b2rk1/4qppp/pp6/3pb2Q/Pn1P1P2/1P2PN2/6PP/R1B2RK1 w - - bm dxe5; id \"STS(v6.0) Recapturing.063\"; c0 \"dxe5=10, Nxe5=1, Qxe5=2, fxe5=6\";'\n,'r1b2rk1/p3qppp/Pp6/3pb2Q/1n1P1P2/1P2PN2/1B4PP/R4RK1 w - - bm dxe5; id \"STS(v6.0) Recapturing.064\"; c0 \"dxe5=10, Qxe5=1, fxe5=2\";'\n,'r1b3k1/5r2/p4n1p/3q2pP/2p1p3/P1PBB3/3N1PP1/R2QK2R b KQ - bm exd3; id \"STS(v6.0) Recapturing.065\"; c0 \"exd3=10, Bg4=6, Qxd3=2, cxd3=3\";'\n,'r1bq1rk1/1p1nbppp/p3pn2/P1p5/4p3/2NP2N1/BPPB1PPP/R2Q1RK1 w - - bm dxe4; id \"STS(v6.0) Recapturing.066\"; c0 \"dxe4=10, Bf4=3, Ncxe4=5, Ngxe4=4\";'\n,'r1q1k2r/1p1nbppp/p7/3bpP2/2P1P1P1/1PN1BQ2/7P/2KR3R w kq - bm Nxd5; id \"STS(v6.0) Recapturing.067\"; c0 \"Nxd5=10, Kb2=5, Rxd5=3, exd5=5\";'\n,'r1q1k2r/1p1nbppp/p7/Q2bpP2/2B1P1P1/1P2N3/PK5P/3R3R w kq - bm Qxd5; id \"STS(v6.0) Recapturing.068\"; c0 \"Qxd5=10, Bxd5=3, Nxd5=4, Rxd5=1\";'\n,'r1qr2k1/1b1nbpp1/1P6/p1B1p2p/4P3/3B3Q/2P1N1PP/RR1N3K b - - bm Nxc5; id \"STS(v6.0) Recapturing.069\"; c0 \"Nxc5=10, Bg5=6\";'\n,'r1qr2k1/4bp1p/2p1p1p1/2pb4/PP1P1P2/3NQ3/5BPP/R2R2K1 w - - bm Nxc5; id \"STS(v6.0) Recapturing.070\"; c0 \"Nxc5=10, Rdb1=4, bxc5=1, dxc5=1\";'\n,'r1qr2k1/4bp2/p1p1p1p1/2pb4/PP1P1P2/3NQ3/5BPP/R2R2K1 w - - bm bxc5; id \"STS(v6.0) Recapturing.071\"; c0 \"bxc5=10, Nxc5=7, dxc5=9, f5=2\";'\n,'r1qr2k1/p3bp1p/P1p1p1p1/2pb4/1P1P1P2/3NQ3/5BPP/R2R2K1 w - - bm dxc5; id \"STS(v6.0) Recapturing.072\"; c0 \"dxc5=10, Nxc5=8, Qe1=7, bxc5=8\";'\n,'r1r2nk1/5pp1/1pnpbq2/2B5/p1P1PN1p/8/PPNR1QP1/3R1BK1 b - - bm dxc5; id \"STS(v6.0) Recapturing.073\"; c0 \"dxc5=10, Bg4=6, Ne5=6, bxc5=6\";'\n,'r1r3k1/1p2q1pp/n2pp3/pN6/2nbP1P1/P1N2Q2/1PP4P/1K1R1R2 w - - bm Rxd4; id \"STS(v6.0) Recapturing.074\"; c0 \"Rxd4=10, Na4=6, Nxd4=3, g5=6\";'\n,'r2q1rk1/1b1pbppp/1pn1pn2/p7/P2pP3/2PB1N2/1P1NQPPP/R1B2RK1 w - - bm Nxd4; id \"STS(v6.0) Recapturing.075\"; c0 \"Nxd4=10, Rb1=7, Re1=7, cxd4=7\";'\n,'r2q1rk1/2pnbppp/p3p3/3b4/3P2P1/3QnN1P/PP1BPP2/RNR3K1 w - - bm Qxe3; id \"STS(v6.0) Recapturing.076\"; c0 \"Qxe3=10, Ne1=7\";'\n,'r2q1rk1/p1p1n1pp/1p1p4/P2Ppb2/1PP5/4b1P1/3QNPBP/R4RK1 w - - bm fxe3; id \"STS(v6.0) Recapturing.077\"; c0 \"fxe3=10, Qb2=7, Qd1=7, Qxe3=8\";'\n,'r2qk1r1/1b2bp2/3ppp1p/p1p5/2B1PP2/1nN5/PPPQ2PP/1K1R3R w q - bm axb3; id \"STS(v6.0) Recapturing.078\"; c0 \"axb3=10, Bb5+=5, Bxb3=5, cxb3=6\";'\n,'r2qk1r1/1b3pb1/2pppp1p/8/2B1PP2/1nN5/PPPQ2PP/1K1R3R w q - bm Bxb3; id \"STS(v6.0) Recapturing.079\"; c0 \"Bxb3=10, Qe3=4, axb3=5, cxb3=8\";'\n,'r2qk1r1/3bbp2/3ppp2/p7/2B1PP1p/1nN5/PPPQ2PP/1K1R3R w q - bm cxb3; id \"STS(v6.0) Recapturing.080\"; c0 \"cxb3=10, Bxb3=3, Qf2=4, axb3=8\";'\n,'r2r1k2/2b1npp1/p1np3p/1p6/3P1B2/P1N4P/1PBR1PP1/3qR1K1 w - - bm Bxd1; id \"STS(v6.0) Recapturing.081\"; c0 \"Bxd1=10, Nxd1=6, Rdxd1=5, Rexd1=6\";'\n,'r2r1nk1/1q2bp2/p3pnpp/2p1B3/2p5/1P2N1P1/P1QNPP1P/2R2RK1 w - - bm Ndxc4; id \"STS(v6.0) Recapturing.082\"; c0 \"Ndxc4=10, Bxf6=4, Nexc4=7, bxc4=3\";'\n,'r3b3/4kpp1/3p1n1p/5P2/1r2P1P1/1p2RN1P/2PN4/1R4K1 w - - bm Rbxb3; id \"STS(v6.0) Recapturing.083\"; c0 \"Rbxb3=10, Rexb3=5, cxb3=7, e5=6\";'\n,'r3r1k1/1p3pb1/6p1/p2b2Pp/PpB1PR2/1P6/2P4P/2KR4 w - - bm Rxd5; id \"STS(v6.0) Recapturing.084\"; c0 \"Rxd5=10, Bd3=7, Bxd5=5, exd5=4\";'\n,'r4r1k/p2nb1p1/1p2pPqp/3p4/P1pPn3/2P1BN1P/1QP1BPP1/R5RK b - - bm Qxf6; id \"STS(v6.0) Recapturing.085\"; c0 \"Qxf6=10, Bxf6=4, Ndxf6=5, Rxf6=8\";'\n,'r4r2/5pk1/1bR1n1p1/Pp1Np2p/1P1pP3/8/5PPP/2R3K1 w - - bm Nxb6; id \"STS(v6.0) Recapturing.086\"; c0 \"Nxb6=10, Kf1=5, axb6=3\";'\n,'r4rk1/1b1pq1pp/1p6/p1n1pp2/2PBN3/P3P3/1PQ1BPPP/3R1RK1 b - - bm Bxe4; id \"STS(v6.0) Recapturing.087\"; c0 \"Bxe4=10, Nxe4=6, exd4=6, fxe4=5\";'\n,'r4rk1/1p1bqpp1/2p4p/3pb2Q/Pn1P1P2/1P2PN2/6PP/R1B2RK1 w - - bm Nxe5; id \"STS(v6.0) Recapturing.088\"; c0 \"Nxe5=10, Qxe5=7, fxe5=5\";'\n,'r4rk1/1p5p/2p2p2/2P2Pp1/p5B1/PbR2n2/1P2PPKP/2R5 w - - bm Bxf3; id \"STS(v6.0) Recapturing.089\"; c0 \"Bxf3=10, Kxf3=3, Rxf3=5\";'\n,'r4rk1/3p1b2/2p2p2/1pP1pPp1/4P1B1/P1R2n2/1P3PKP/2R5 w - - bm Bxf3; id \"STS(v6.0) Recapturing.090\"; c0 \"Bxf3=10, Kxf3=6, Re3=6, Rxf3=7\";'\n,'r4rk1/pp1qppbp/2p1b1p1/n7/P2PpB1N/2P3P1/2P1QPBP/1R2R1K1 w - - bm Bxe4; id \"STS(v6.0) Recapturing.091\"; c0 \"Bxe4=10, Qd2=8, Qe3=8, Qxe4=8\";'\n,'r4rk1/ppp2ppp/1nnb4/8/1P1P3q/PBN1B2P/4bPP1/R2QR1K1 w - - bm Qxe2; id \"STS(v6.0) Recapturing.092\"; c0 \"Qxe2=10, Bxf7+=6, Nxe2=3, Rxe2=6\";'\n,'r4rn1/2q2p1k/p2p2np/4pb1Q/1pP1P3/4B2P/2P3PN/3R1R1K w - - bm Rxf5; id \"STS(v6.0) Recapturing.093\"; c0 \"Rxf5=10, Bxh6=6, Qxf5=3, exf5=4\";'\n,'r5b1/3rn1pk/p1n4p/1p1p1p1P/3P1B2/P1N3P1/1P1R1P2/3qRBK1 w - - bm Nxd1; id \"STS(v6.0) Recapturing.094\"; c0 \"Nxd1=10, Rdxd1=6, Rexd1=5, Rxe7=7\";'\n,'r5k1/5pbp/6P1/p2R4/1p5r/P5R1/1PP5/2KB4 b - - bm hxg6; id \"STS(v6.0) Recapturing.095\"; c0 \"hxg6=10, Bh6+=6, bxa3=2, fxg6=7\";'\n,'r6r/ppk1npp1/1b2p2p/2pnP2P/4N3/2p2N2/PPPB1PP1/1K1RR3 w - - bm Bxc3; id \"STS(v6.0) Recapturing.096\"; c0 \"Bxc3=10, Bc1=8, Nxc3=8, bxc3=6\";'\n,'rn1q1rk1/1b2bppp/1p1pp1n1/pN6/P2pP3/2PB1NP1/1P2QP1P/R1B2RK1 w - - bm cxd4; id \"STS(v6.0) Recapturing.097\"; c0 \"cxd4=10, Nbxd4=2, Nfxd4=5, Rd1=3\";'\n,'rq1r2k1/pb2npbp/4pnp1/3P2N1/Q6P/1B4N1/PP3PP1/R1BR2K1 b - - bm Bxd5; id \"STS(v6.0) Recapturing.098\"; c0 \"Bxd5=10, Nexd5=6, exd5=3\";'\n,'rqr3k1/3bb1p1/p1n2n1p/3p1p2/1P1NpP2/2N1B2P/1PPQB1P1/1K1R3R b - - bm Bxb4; id \"STS(v6.0) Recapturing.099\"; c0 \"Bxb4=10, Nxb4=4, Qb7=3, Qxb4=3\";'\n,'rqr3k1/4bpp1/pBbp1n1p/Pp2p3/3PPP2/2N1QNP1/1P4P1/R4R1K w - - bm fxe5; id \"STS(v6.0) Recapturing.100\"; c0 \"fxe5=10, Rae1=2, d5=1, dxe5=4\";'\n -- STS7: Offer of Simplification \n,'1R3b2/r4pk1/2qpn1p1/P1p1p2p/2P1P2P/5PP1/6K1/1Q1BB3 w - - bm Qb6; id \"STS(v7.0) Simplification.001\"; c0 \"Qb6=10, Bc3=7, Kf1=7, Qb5=9\";'\n,'1b4k1/6p1/pr2p2p/5p2/P2N4/P1Q1P1qP/6P1/5RK1 b - - bm Be5; id \"STS(v7.0) Simplification.002\"; c0 \"Be5=10, Bd6=3, Kh7=4, Qh2+=7\";'\n,'1k1r1b1r/ppqbnp2/4p1pp/n2pP3/2pP4/P1P3B1/1P1NBPPP/1R1QRNK1 b - - bm Nf5; id \"STS(v7.0) Simplification.003\"; c0 \"Nf5=10\";'\n,'1nb2rk1/2p1pqb1/1r2p2p/R6P/1PBP2p1/B4NN1/5PK1/3QR3 w - - bm Rf5; id \"STS(v7.0) Simplification.004\"; c0 \"Rf5=10\";'\n,'1nr3k1/1pr2pp1/p3bn2/P3p2p/1PP4P/3BNPP1/3RN1K1/R7 w - - bm Bf5; id \"STS(v7.0) Simplification.005\"; c0 \"Bf5=10, Nc3=1, Rdd1=2, b5=1\";'\n,'1q1rb1k1/5p1p/p3pnpb/P1r5/2B1P3/1P3P2/2R1N1PP/R2NQ2K b - - bm Bb5; id \"STS(v7.0) Simplification.006\"; c0 \"Bb5=10\";'\n,'1r1r2k1/2p1qpp1/pnP1b2p/1p2P3/3N4/P3P2P/1QB2PP1/3RR1K1 w - - bm Qb4; id \"STS(v7.0) Simplification.007\"; c0 \"Qb4=10, Bd3=7, Qc3=8, f4=9\";'\n,'1r2kbQ1/1r1q1p2/p2p2n1/6P1/N1pBP3/P1N5/1PPR4/K7 w - - bm Bg7; id \"STS(v7.0) Simplification.008\"; c0 \"Bg7=10, Bc5=7, Bf6=5, Rf2=5\";'\n,'1r2r1k1/5pp1/R2p3n/3P1P1p/2p2PP1/1qb2B1P/Q7/2BR1K2 b - - bm Bd2; id \"STS(v7.0) Simplification.009\"; c0 \"Bd2=10, Bb2=5, Bb4=5, hxg4=3\";'\n,'1r3qk1/rpb2pp1/2p2n1p/p1P1p3/P1bPP2Q/2N1PN1P/1RB3P1/1R5K w - - bm Bb3; id \"STS(v7.0) Simplification.010\"; c0 \"Bb3=10, Qe1=6, Qf2=6, g4=6\";'\n,'1r3rk1/1nqb1p1p/p3p1p1/1ppPb3/2P1N3/1P1Q2PP/P2B2BK/1RR5 w - - bm Bc3; id \"STS(v7.0) Simplification.011\"; c0 \"Bc3=10, Bf4=6, Qf3=5, Rf1=5\";'\n,'1r4k1/3b1pbp/R2Np1p1/4n3/1P1NP3/3BP3/4K1PP/8 w - - bm Nf3; id \"STS(v7.0) Simplification.012\"; c0 \"Nf3=10, Nc4=3, Ra7=1, b5=1\";'\n,'1r4k1/4qpp1/r1b4p/pp1pPB2/n1pP3P/2P2N2/R1P3P1/R3Q1K1 b - - bm Bd7; id \"STS(v7.0) Simplification.013\"; c0 \"Bd7=10, Be8=8, Rab6=8, Re8=7\";'\n,'1r4k1/5bpp/3b2p1/3PpqPn/1pB5/rP1NBP2/P4Q2/1K1R3R w - - bm Bc5; id \"STS(v7.0) Simplification.014\"; c0 \"Bc5=10, Rd2=1, Rh2=5, Rh4=1\";'\n,'1r4k1/pp1r1p1p/2np1np1/2q5/P3PB2/1QP2B2/5PPP/R2R2K1 w - - bm Qb5; id \"STS(v7.0) Simplification.015\"; c0 \"Qb5=10, Ra2=2, a5=3, h3=2\";'\n,'1rb1r1k1/2q1bp1p/3p1np1/p1nPp3/4P3/1PRB1N1P/3BQPP1/1R3NK1 w - - bm Be3; id \"STS(v7.0) Simplification.016\"; c0 \"Be3=10, Bc1=3, Rbc1=4, Rcc1=4\";'\n,'2b1r1k1/p1B1ppbp/1p4p1/8/4n3/7P/P1RRBPP1/6K1 w - - bm Rd8; id \"STS(v7.0) Simplification.017\"; c0 \"Rd8=10\";'\n,'2bq2k1/4pp2/p2p1n2/n1pP2p1/2P3Pp/P1Q1N2P/3NPPB1/6K1 w - - bm Be4; id \"STS(v7.0) Simplification.018\"; c0 \"Be4=10, Nc2=8, Nd1=7, Nef1=9\";'\n,'2br3k/2pqb2r/p1n1n3/P3PQ2/1pB5/5N2/1P1N1PPP/R3R1K1 b - - bm Ncd4; id \"STS(v7.0) Simplification.019\"; c0 \"Ncd4=10, Nc5=4, Ned4=5, Rf8=4\";'\n,'2q1r1k1/1p2rpp1/p1p3pb/2Pp2n1/3P1R2/1Q2P1P1/PP3NKP/2B2R2 b - - bm Ne4; id \"STS(v7.0) Simplification.020\"; c0 \"Ne4=10, Nh7=8, Qd7=7, Qd8=7\";'\n,'2r1r1k1/1bq1bpp1/pp1pp1n1/2n3P1/2P1PP1p/BPN1QB1P/P1R5/3RN1K1 w - - bm Bh5; id \"STS(v7.0) Simplification.021\"; c0 \"Bh5=10, Bg4=3, Ng2=9\";'\n,'2r1r1k1/1p1bn1p1/p2Bpb1p/5p1q/P2P4/5NQP/1P2BPP1/R2R2K1 w - - bm Ne5; id \"STS(v7.0) Simplification.022\"; c0 \"Ne5=10\";'\n,'2r1r1k1/pN2b1p1/2p4p/1p1nBp1P/3P2n1/1NP5/PP2KPP1/3R3R b - - bm Bf6; id \"STS(v7.0) Simplification.023\"; c0 \"Bf6=10\";'\n,'2r1r1k1/pb2bp1p/8/2p1Rp1q/P1N5/6P1/2Q2P1P/3R1BK1 w - - bm Bg2; id \"STS(v7.0) Simplification.024\"; c0 \"Bg2=10, Be2=5, Ne3=6, Rxf5=9\";'\n,'2r1rk2/1p2bpp1/p4nbp/4R3/P2R1P1B/2N5/1P2B1PP/5K2 b - - bm Red8; id \"STS(v7.0) Simplification.025\"; c0 \"Red8=10\";'\n,'2r2n2/6k1/1pNBbb2/3p1p2/3P1P2/P4KP1/2R5/4N3 w - - bm Ne5; id \"STS(v7.0) Simplification.026\"; c0 \"Ne5=10, Ke2=8, Ke3=8, Kf2=7\";'\n,'2r2rk1/p3qp1p/2b1pp1Q/2b5/1n6/2N2NP1/1P2PPBP/R2R2K1 w - - bm Nh4; id \"STS(v7.0) Simplification.027\"; c0 \"Nh4=10, Nd2=4, Ne1=4, Ra5=5\";'\n,'2r3k1/1p1b1pb1/1qn3p1/pN1p2Pp/P3r1nP/1NP3B1/1P2BPR1/R2Q2K1 b - - bm Be5; id \"STS(v7.0) Simplification.028\"; c0 \"Be5=10, Bf8=3, Na7=4, Re6=4\";'\n,'2r3k1/2q1bpp1/p1P2n1p/4pb2/8/2N1BB2/1rPR1QPP/R5K1 w - - bm Nd5; id \"STS(v7.0) Simplification.029\"; c0 \"Nd5=10, Na4=8, Nd1=8, Rxa6=8\";'\n,'2r3k1/p1q1bp1p/2p1p1p1/4P3/1p6/1P1QP1P1/PB3P1P/3R2K1 b - - bm Rd8; id \"STS(v7.0) Simplification.030\"; c0 \"Rd8=10, Qa5=3, a5=1, c5=1\";'\n,'2r3k1/p2q1pp1/2p4p/1p1p1b1n/2PP4/P1QP1PP1/3B3P/4RBK1 b - - bm Bh3; id \"STS(v7.0) Simplification.031\"; c0 \"Bh3=10\";'\n,'2r5/4k1p1/4p2p/1pnbPp2/3B4/2P5/1PB3PP/5R1K b - - bm Be4; id \"STS(v7.0) Simplification.032\"; c0 \"Be4=10, Kf7=4, Nb3=5, Rc7=4\";'\n,'2r5/p4k2/4bp2/Ppp3p1/4p3/B1P4r/2P2P1P/R3KNR1 w - - bm Rg3; id \"STS(v7.0) Simplification.033\"; c0 \"Rg3=10, Bb2=7, Bc1=8, Rg2=8\";'\n,'2rn4/2p1rpk1/p3n1p1/P3N1P1/BpN1b2P/1P4K1/2PR4/3R4 w - - bm Rd7; id \"STS(v7.0) Simplification.034\"; c0 \"Rd7=10\";'\n,'2rq1rk1/pb3p1p/1p1p2p1/4p3/1PPnP3/2N2P2/P2QB1PP/2RR2K1 w - - bm Nb5; id \"STS(v7.0) Simplification.035\"; c0 \"Nb5=10, Bd3=1, Kh1=1\";'\n,'2rr2k1/1p3pp1/p3b2p/3pP2Q/3B4/bqP5/1P1RB1PP/1K3R2 b - - bm Bc5; id \"STS(v7.0) Simplification.036\"; c0 \"Bc5=10\";'\n,'3Q4/2p2k1p/p3b1p1/2p3P1/4Pq2/1P2NP2/P5K1/8 w - - bm Nc4; id \"STS(v7.0) Simplification.037\"; c0 \"Nc4=10, Kf2=3, Nd1=2\";'\n,'3br1k1/r4pp1/p1qpbn1p/n1p1pN2/P1B1P3/2PPN2P/3BQPP1/R4RK1 w - - bm Bd5; id \"STS(v7.0) Simplification.038\"; c0 \"Bd5=10, Bxe6=7, Bxe6=8, Ng3=7, f3=7\";'\n,'3qr3/2n1rpbk/3p2np/R1pP2p1/P3P3/2N2P1P/2QB2P1/1R3B1K w - - bm Nb5; id \"STS(v7.0) Simplification.039\"; c0 \"Nb5=10, Nd1=7, Qa2=7, Ra7=6\";'\n,'3r1r2/1p2k1pp/p2ppn2/4n3/P3P3/1BN4P/1PP2RP1/5R1K b - - bm Nfd7; id \"STS(v7.0) Simplification.040\"; c0 \"Nfd7=10, Rb8=6, Rf7=6, g5=6\";'\n,'3r1rk1/4q1pp/1pb1p3/p1p1P3/P3pP2/1P2P3/4Q1PP/N2R1RK1 b - - bm Rd3; id \"STS(v7.0) Simplification.041\"; c0 \"Rd3=10, Bd5=1, Qb7=2, Rxd1=1\";'\n,'3r2k1/1R3ppp/8/p1p1r3/4n3/4P2P/PP2BP2/1K5R w - - bm Rd1; id \"STS(v7.0) Simplification.042\"; c0 \"Rd1=10\";'\n,'3r2k1/1b3qp1/pp2p1p1/4P1P1/2PN1P1P/b1NR2K1/P3Q3/8 w - - bm Nc2; id \"STS(v7.0) Simplification.043\"; c0 \"Nc2=10, Nb3=6, Ne4=3, Nf3=4\";'\n,'3r2k1/1p3ppp/p3nn2/Qbp4r/2N5/1B3PP1/PP3RKP/8 w - - bm Rd2; id \"STS(v7.0) Simplification.044\"; c0 \"Rd2=10\";'\n,'3r2k1/2rq2pp/4bp2/p1p1pn2/1n2N3/B2PP1P1/1R1Q1P1P/1R3BK1 b - - bm Nd6; id \"STS(v7.0) Simplification.045\"; c0 \"Nd6=10\";'\n,'3r3k/p3bppp/4q3/2p1P1Bb/3p4/P6P/1P1Q1PP1/1B2R1K1 w - - bm Ba2; id \"STS(v7.0) Simplification.046\"; c0 \"Ba2=10, Bd3=3, Bf5=4, g4=3\";'\n,'3r4/1R4bk/7p/p3p2p/3rP3/3p3Q/P1qN1PP1/1R4K1 b - - bm Rb4; id \"STS(v7.0) Simplification.047\"; c0 \"Rb4=10, Qc6=7, Qc8=7, Qxd2=8\";'\n,'3rr3/1k3p1p/p2P1np1/8/pn6/1bN1NP2/1P1RBKPP/7R w - - bm Bd1; id \"STS(v7.0) Simplification.048\"; c0 \"Bd1=10, Ra1=2, Rc1=1, g4=4\";'\n,'4qnk1/1p1rbppb/4p2p/1P2P2P/3N1P2/2Q2BP1/5BK1/2R5 w - - bm Qc8; id \"STS(v7.0) Simplification.049\"; c0 \"Qc8=10\";'\n,'4r1k1/1p1n1p1b/2n2q2/2P4p/1PBp1PpN/6P1/3Q2P1/3R1NK1 w - - bm Bd3; id \"STS(v7.0) Simplification.050\"; c0 \"Bd3=10\";'\n,'4r1k1/2R3p1/p4qnp/8/2P2p2/1Pn2Q2/5BPP/5N1K b - - bm Ne4; id \"STS(v7.0) Simplification.051\"; c0 \"Ne4=10, Rd8=4\";'\n,'4r1k1/4bp1p/p4np1/1r1p4/2NP1B1P/P7/1P3PP1/3RR1K1 w - - bm Bg5; id \"STS(v7.0) Simplification.052\"; c0 \"Bg5=10\";'\n,'4r1k1/p2n3p/1qp3p1/3rp3/6P1/2B1R3/PP2Q2P/4R2K b - - bm Qb5; id \"STS(v7.0) Simplification.053\"; c0 \"Qb5=10\";'\n,'4r1k1/p6p/2pB2pb/3pP1q1/8/1P5b/P1P2Q1P/3BR2K b - - bm Qd2; id \"STS(v7.0) Simplification.054\"; c0 \"Qd2=10, Bf5=3, Qd8=3, Qf5=7\";'\n,'4r1k1/pp3p2/2n1r1p1/2q4p/n3p3/4B1Q1/P1PRBPPP/3R2K1 b - - bm Qe5; id \"STS(v7.0) Simplification.055\"; c0 \"Qe5=10, Qb4=5, Qc3=6\";'\n,'4r3/q4pkp/2p1bnp1/p3p3/PbP1P2P/4NNP1/1RQ2P2/5BK1 b - - bm Ng4; id \"STS(v7.0) Simplification.056\"; c0 \"Ng4=10\";'\n,'4rb1k/3q1p2/2R4p/1P1npN2/4Q3/7P/1P3PP1/6K1 b - - bm Re6; id \"STS(v7.0) Simplification.057\"; c0 \"Re6=10, Nb4=4, f6=5, h5=3\";'\n,'4rk2/1b2rqb1/p4p2/1p1P1Pp1/2pRp1N1/P1N1R1PQ/1P4P1/6K1 w - - bm Nh6; id \"STS(v7.0) Simplification.058\"; c0 \"Nh6=10, Kf2=3, Qh2=3, Qh7=3\";'\n,'5k2/1p1n1pp1/p5bp/P2p4/1P1N4/2P2PP1/4QK1P/2q2B2 w - - bm Qe3; id \"STS(v7.0) Simplification.059\"; c0 \"Qe3=10\";'\n,'5k2/3q1pp1/pB6/4b2p/4N3/2N3P1/BP3P1P/6K1 b - - bm Bd4; id \"STS(v7.0) Simplification.060\"; c0 \"Bd4=10, Ke8=3, f5=4, h4=2\";'\n,'5k2/4rpp1/pp6/4b2p/4N1q1/2NRB1P1/BP3P1P/6K1 b - - bm Rd7; id \"STS(v7.0) Simplification.061\"; c0 \"Rd7=10, Qf5=2\";'\n,'5r1k/2q2rpp/2BbRn2/p1pP1P2/1p1p2PB/1P1P1Q1P/6K1/R7 w - - bm Bg3; id \"STS(v7.0) Simplification.062\"; c0 \"Bg3=10, Qf2=5, Ra2=6, Rae1=7\";'\n,'5r2/6pk/5qnp/4p3/2QpP3/P2R1NP1/1r3P1P/2R3K1 b - - bm Nf4; id \"STS(v7.0) Simplification.063\"; c0 \"Nf4=10, Nh4=9\";'\n,'5rk1/2p1q2p/1r2p2Q/3nNp2/8/6P1/1P3P1P/2RR2K1 w - - bm Rc6; id \"STS(v7.0) Simplification.064\"; c0 \"Rc6=10, Nc4=8, Rc2=9, Rd2=8\";'\n,'5rk1/p3qp1p/2r1p2Q/2b2p2/1n5N/2N3P1/1P2PP1P/R2R2K1 w - - bm e4; id \"STS(v7.0) Simplification.065\"; c0 \"e4=10, Kg2=4, Nf3=5, Rac1=4\";'\n,'5rk1/pb2qppp/1p2p3/7B/2P5/1P4QP/P4PP1/3R2K1 w - - bm Qd6; id \"STS(v7.0) Simplification.066\"; c0 \"Qd6=10, Be2=4, Qd3=4, Qe5=3\";'\n,'6bk/6p1/1b1q2n1/p6p/3N4/1P1Q4/P4PPP/3R2K1 w - - bm Nf3; id \"STS(v7.0) Simplification.067\"; c0 \"Nf3=10, Nc2=5, Ne2=4, Nf5=5\";'\n,'6k1/p4ppp/4p3/3n4/8/1Pn1PP1P/P3b1P1/R1B3K1 w - - bm Bd2; id \"STS(v7.0) Simplification.068\"; c0 \"Bd2=10, Bb2=9, Kf2=4, a4=5\";'\n,'6k1/pp3p1p/1q2r1p1/3p4/6n1/6P1/PPPQ1P1P/3R1BK1 w - - bm Qd4; id \"STS(v7.0) Simplification.069\"; c0 \"Qd4=10, Bh3=9, b3=5, c3=7\";'\n,'6rk/2R4p/Pp1pq3/1P2pp2/1P2b3/8/6PP/2Q2BK1 w - - bm Qc4; id \"STS(v7.0) Simplification.070\"; c0 \"Qc4=10, a7=5, g3=5, h4=4\";'\n,'7k/4r1p1/1p1b3p/p4q2/8/P5PP/1P1NQPK1/4R3 w - - bm Qf3; id \"STS(v7.0) Simplification.071\"; c0 \"Qf3=10, Ne4=7, Qd1=6, Qf1=1\";'\n,'7r/2q2pkp/2b1n1pN/3pP3/2pP4/4Q2P/2B2PP1/R5K1 w - - bm Bf5; id \"STS(v7.0) Simplification.072\"; c0 \"Bf5=10, Bd1=1\";'\n,'7r/p1P2kb1/1nB1b3/6pp/4p3/2P3BP/PP3PP1/R5K1 b - - bm Nd5; id \"STS(v7.0) Simplification.073\"; c0 \"Nd5=10, Nc4=7, e3=8, h4=7\";'\n,'8/p4k2/1p3r2/2pPnb2/2Pr3P/PPK3P1/4B1Q1/8 b - - bm Bg4; id \"STS(v7.0) Simplification.074\"; c0 \"Bg4=10, Bd3=7, Be4=7, Ng4=4\";'\n,'b5k1/q4p1p/3p1bp1/4p3/1NB1P3/3P3P/1Q3PP1/6K1 w - - bm Bd5; id \"STS(v7.0) Simplification.075\"; c0 \"Bd5=10, g3=4\";'\n,'b7/3r2bk/p2Np1p1/2B1p1Pp/qP2P2P/P2Q1RK1/8/8 w - - bm Rf7; id \"STS(v7.0) Simplification.076\"; c0 \"Rf7=10, Kh2=7, Qb1=7, Qe2=7\";'\n,'q1rr2k1/pbnn1pbp/1p4p1/4p1P1/2P1P3/1NN2B2/PP2QB1P/3RR1K1 w - - bm Bg4; id \"STS(v7.0) Simplification.077\"; c0 \"Bg4=10, Be3=6, Nc1=3, Nd5=4\";'\n,'r1b2kr1/pp1nbp2/4pn1p/2q3p1/B1P5/P1B2N1P/1P2QPP1/3R1KNR w - - bm Ne5; id \"STS(v7.0) Simplification.078\"; c0 \"Ne5=10, Nd2=6, Nh2=7, b4=5\";'\n,'r1b2rk1/1p2Bpbp/1np3p1/4P3/pn6/1N3N1P/1P1RBPP1/R5K1 b - - bm Nc2; id \"STS(v7.0) Simplification.079\"; c0 \"Nc2=10, N4d5=1\";'\n,'r1b2rk1/p1qn1ppp/2pb1n2/8/Np1NP3/7P/PPQ1BPP1/R1B2RK1 w - - bm Nf5; id \"STS(v7.0) Simplification.080\"; c0 \"Nf5=10, Nxc6=6, Rd1=7, f4=7\";'\n,'r1b2rk1/pp1p1ppp/4pn2/6q1/2PP4/P1N5/1PQ2PPP/R3KB1R w KQ - bm Qd2; id \"STS(v7.0) Simplification.081\"; c0 \"Qd2=10, Qc1=3, g3=6, h4=6\";'\n,'r1bR4/1p3pkp/1np3p1/4P3/pB6/1n3N1P/1P2BPP1/6K1 b - - bm Be6; id \"STS(v7.0) Simplification.082\"; c0 \"Be6=10, Bd7=6, Bf5=7, c5=8\";'\n,'r1bq1rk1/pp2ppbp/1n1n2p1/2p5/5B2/1PN2NP1/P1Q1PPBP/3R1RK1 w - - bm Nb5; id \"STS(v7.0) Simplification.083\"; c0 \"Nb5=10, Bxd6=2, Ng5=9, e4=4\";'\n,'r1bq2k1/ppbnr1p1/2p1ppBp/2Pp4/P2P3N/2Q5/1P1B1PPP/4RRK1 b - - bm Nf8; id \"STS(v7.0) Simplification.084\"; c0 \"Nf8=10, Rb8=4, a5=9, a6=3\";'\n,'r1q2r1k/1bBnbpp1/4p2p/pN1p3P/8/5BQ1/PPP2PP1/1K1R3R b - - bm Bc6; id \"STS(v7.0) Simplification.085\"; c0 \"Bc6=10\";'\n,'r2q1r1k/ppp3bp/3pb3/6p1/2Pn4/1PN3BP/P2QBPP1/3RR1K1 w - - bm Bg4; id \"STS(v7.0) Simplification.086\"; c0 \"Bg4=10, Bh5=6, Nb5=7, Nd5=6\";'\n,'r2q1rk1/1p3pp1/6p1/3Bn3/Ppp1P1P1/1n3P2/1P5P/1RBQ1RK1 w - - bm Bf4; id \"STS(v7.0) Simplification.087\"; c0 \"Bf4=10, Be3=8, Kh1=8, f4=7\";'\n,'r2r2k1/1q3pbp/p3b3/2pPN3/2p1RB2/7P/PP3PP1/R2Q2K1 w - - bm Nc6; id \"STS(v7.0) Simplification.088\"; c0 \"Nc6=10, Qe2=6, Qh5=3, Re2=3\";'\n,'r2r2k1/p2bppbp/1p4p1/2pP4/2q1P3/2P1B3/P1QN1PPP/2R2RK1 b - - bm Qa4; id \"STS(v7.0) Simplification.089\"; c0 \"Qa4=10, Qa6=2, Qb5=2, Qe2=6\";'\n,'r2r4/5kpp/p2q1n2/1p4B1/3b4/2Np1Q2/PP3PPP/3R1RK1 w - - bm Ne4; id \"STS(v7.0) Simplification.090\"; c0 \"Ne4=10, Bf4=1, Bxf6=2\";'\n,'r3k1r1/2q1bp2/2p1p1np/p1Pp2P1/Pp1Pn2P/1P2P3/1B2NNP1/R3QRK1 b q - bm Ng3; id \"STS(v7.0) Simplification.091\"; c0 \"Ng3=10, Nf6=1, Nxf2=3\";'\n,'r3kb1r/3n1ppp/p3p3/3bP3/Pp6/4B3/1P1NNPPP/R4RK1 w kq - bm Nf4; id \"STS(v7.0) Simplification.092\"; c0 \"Nf4=10, Bd4=8, Rac1=8, Rfc1=8\";'\n,'r3nbk1/1b3ppp/pr6/1pp1PBq1/P1P5/7P/1B1NQPP1/R3R1K1 w - - bm Be4; id \"STS(v7.0) Simplification.093\"; c0 \"Be4=10, Bg4=7, Qg4=4\";'\n,'r3r1k1/2q2np1/3p1pNp/p2P4/R4PP1/2P3K1/1P1Q4/7R w - - bm Re1; id \"STS(v7.0) Simplification.094\"; c0 \"Re1=10, Raa1=6\";'\n,'r3r1k1/5pp1/p1n2q1p/P1bp1P2/2p2P2/5N2/2BB3P/R2QRK2 b - - bm Nd4; id \"STS(v7.0) Simplification.095\"; c0 \"Nd4=10, Rad8=3, c3=6, d4=4\";'\n,'r4bk1/1p1nqp1p/p1p1b1p1/P3p3/2P1P3/1QN2PP1/1P5P/R4BBK b - - bm Qb4; id \"STS(v7.0) Simplification.096\"; c0 \"Qb4=10, Nc5=4, Qd6=1, Rb8=1\";'\n,'r4rk1/2pqbppp/p1n5/1p1pP3/3P4/1B2Bb1P/PP1Q1PP1/R1R3K1 w - - bm Qc3; id \"STS(v7.0) Simplification.097\"; c0 \"Qc3=10, Qc2=6, Rxc6=7, gxf3=1\";'\n,'r7/4pp1k/6pb/p1rPp2p/2P1P2q/7P/1RQ1BPP1/1R4K1 w - - bm Rb5; id \"STS(v7.0) Simplification.098\"; c0 \"Rb5=10, Bf1=6, Rb3=5, Rb8=6\";'\n,'rn3rk1/pp1q2bp/3ppnp1/2p3N1/2P1P3/8/PP2NPPP/R1BQ1RK1 w - - bm e5; id \"STS(v7.0) Simplification.099\"; c0 \"e5=10, Qd3=1\";'\n,'rq4k1/1b1nbpp1/4p2p/r1PnP3/Np6/1P1B1N2/1Q1B1PPP/R2R2K1 b - - bm Bc6; id \"STS(v7.0) Simplification.100\"; c0 \"Bc6=10, Bf8=4, Nxc5=6, Qa7=6\";'\n -- STS8: Advancement of f/g/h pawns\n,'1qr2k1r/pb3pp1/1b2p2p/3nP3/1p6/3B2QN/PP3PPP/R1BR2K1 b - - bm g5; id \"STS(v8.0) AKPC.001\"; c0 \"g5=10, Bd4=4, Kg8=4, Rd8=3\";'\n,'1r1qr1k1/p5b1/2p2ppp/3p4/1Pp5/P1Nn1Q2/3BN1PP/R4RK1 b - - bm f5; id \"STS(v8.0) AKPC.002\"; c0 \"f5=10, a5=6, d4=7, Rb7=5\";'\n,'1r1rq1k1/1p4p1/pNb1pp1p/1pP5/3P4/1PQ5/5PPP/R3R1K1 w - - bm f3; id \"STS(v8.0) AKPC.003\"; c0 \"f3=10, Qd3=4, Rad1=4, Red1=4\";'\n,'1r3r2/1p3q1k/1Q1p4/2pNbpp1/2P5/7P/PP2R1P1/3R3K b - - bm g4; id \"STS(v8.0) AKPC.004\"; c0 \"g4=10, f4=7, Ra8=3, Rbe8=6\";'\n,'1r4k1/2p2p1p/4n1p1/2qpP3/2nN4/1BPQ4/Pr3PPP/3RR1K1 w - - bm h4; id \"STS(v8.0) AKPC.005\"; c0 \"h4=10, g3=7, h3=8, Qh3=9\";'\n,'1r4k1/3q2pp/2np4/2p1pp2/2P1P3/R1BP1Q1P/5PP1/6K1 b - - bm f4; id \"STS(v8.0) AKPC.006\"; c0 \"f4=10, fxe4=8, Ne7=6, Rb1+=5\";'\n,'1r4k1/ppq2ppp/r4nn1/P2p4/2pP4/B1P1P1PP/1Q1N1PK1/RR6 b - - bm h5; id \"STS(v8.0) AKPC.007\"; c0 \"h5=10, h6=1, Ne7=1, Nh5=1\";'\n,'1rb1r1k1/4qpb1/p1np1npp/1pp5/2P1PN2/1P3PP1/PB4BP/1QRR1N1K b - - bm g5; id \"STS(v8.0) AKPC.008\"; c0 \"g5=10, Bb7=5, bxc4=5, Ne5=6\";'\n,'1rq1n3/2pr3k/2n1bppp/p1PNp3/Pp2P3/1P2Q1PP/3R1PBK/3RN3 w - - bm f4; id \"STS(v8.0) AKPC.009\"; c0 \"f4=10, Bf1=6, Nc2=5, Nd3=6\";'\n,'2b2kn1/5ppQ/1r5p/p2pN3/1qpP1PP1/5P2/P6P/1B4RK w - - bm g5; id \"STS(v8.0) AKPC.010\"; c0 \"g5=10, Bg6=8, Qc2=8, Rd1=7\";'\n,'2qn4/p5k1/1p1Qbpp1/1B1p3p/3P3P/2P5/P4PP1/4N1K1 w - - bm g3; id \"STS(v8.0) AKPC.011\"; c0 \"g3=10, Kf1=3, Nc2=3, Nd3=2\";'\n,'2r1r1k1/p2b2bp/1pn1p1pq/4Pp2/2BP4/P4N2/1P2NQPP/2R2RK1 w - - bm h4; id \"STS(v8.0) AKPC.012\"; c0 \"h4=10, Ba2=8, g3=7, h3=6\";'\n,'2r2bk1/p1q2p2/4p1p1/3nP1B1/1p2Q2P/1P3N2/Pr3PP1/R4RK1 w - - bm h5; id \"STS(v8.0) AKPC.013\"; c0 \"h5=10, Bc1=4, Qd4=2, Qg4=6\";'\n,'2r2k1r/1q1nbpp1/p2p4/1p1Pp3/8/P1B2BP1/1PP1QP2/3RR1K1 b - - bm f5; id \"STS(v8.0) AKPC.014\"; c0 \"f5=10, g6=8, Kg8=5\";'\n,'2r2rk1/1b1qb1pp/p2p4/1p1PpP2/4Q3/1P2BN1P/P4PP1/R3R1K1 w - - bm g4; id \"STS(v8.0) AKPC.015\"; c0 \"g4=10, a4=2\";'\n,'2r2rk1/2qbnppp/1p2p3/p2pPn2/P5QP/2PB1N2/2PB1PP1/1R2R1K1 w - - bm h5; id \"STS(v8.0) AKPC.016\"; c0 \"h5=10, g3=5, Kf1=5, Rb3=6\";'\n,'2r2rk1/p3ppbp/1pnp1np1/4q3/2P1P3/PPN1B2P/2Q1BPP1/R2R2K1 w - - bm f4; id \"STS(v8.0) AKPC.017\"; c0 \"f4=10, b4=6, Qd3=7, Rab1=6, Rac1=8\";'\n,'2r2rk1/p4qb1/1p1ppp2/2n1n1pp/2PN4/1PN2PPP/P1QBP1K1/2RR4 w - - bm f4; id \"STS(v8.0) AKPC.018\"; c0 \"f4=10, Be3=9, Kg1=5, Ndb5=6\";'\n,'2r2rk1/pq2ppbp/1pnp1np1/8/2P1P3/2N1BP2/PPQ1BPKP/3R1R2 w - - bm f4; id \"STS(v8.0) AKPC.019\"; c0 \"f4=10, b3=4, Rfe1=4, Rg1=6\";'\n,'2r3k1/p3np1p/1p1pp1p1/4b3/1PP5/P3B2P/2R2PP1/3R3K w - - bm g4; id \"STS(v8.0) AKPC.020\"; c0 \"g4=10, Bd4=5, g3=5, Kg1=5\";'\n,'2r3k1/pp2p1b1/q2pP1p1/3pnrPp/P7/1P5P/2PB1PB1/2RQR1K1 w - - bm f4; id \"STS(v8.0) AKPC.021\"; c0 \"f4=10, a5=5, Be3=2\";'\n,'2r5/1bq3kp/4pNp1/3pP1Q1/2pP4/7P/5PP1/R5K1 w - - bm h4; id \"STS(v8.0) AKPC.022\"; c0 \"h4=10, Nh5+=6, Ra3=5, Rc1=5\";'\n,'2r5/5k2/p1n3p1/P1Pqpp1p/3n4/4BPQN/6PP/3R3K w - - bm f4; id \"STS(v8.0) AKPC.023\"; c0 \"f4=10, Ng5+=6\";'\n,'2rr1bk1/p4pp1/1p2q2p/1PpN4/2Q1P3/P4PP1/3R3P/3R2K1 w - - bm f4; id \"STS(v8.0) AKPC.024\"; c0 \"f4=10, Kg2=8, Qc3=6, Rf1=5\";'\n,'2rr2k1/5ppp/p3p3/1p2P3/1Pn5/2B1PqP1/P1Q2P1P/3RR1K1 b - - bm h5; id \"STS(v8.0) AKPC.025\"; c0 \"h5=10, g5=6, h6=7, Rxd1=7\";'\n,'3bn1k1/1bq1npp1/3p3p/1p1Pp3/1Pp1P3/2P1B1NP/2BN1PPK/Q7 b - - bm f5; id \"STS(v8.0) AKPC.026\"; c0 \"f5=10, Bc8=3, Qc8=2\";'\n,'3q1r2/2r2ppk/5b1p/2pBpR2/P3P2P/1P4PK/5Q2/5R2 w - - bm g4; id \"STS(v8.0) AKPC.027\"; c0 \"g4=10, a5=6, Bc4=5, Qg1=5\";'\n,'3q2k1/rb1r3p/6p1/pQRp1p2/3N3P/1P2PBP1/P4P2/6K1 w - - bm h5; id \"STS(v8.0) AKPC.028\"; c0 \"h5=10, a3=7, Bg2=7, Qa4=8\";'\n,'3q3k/3r1p1p/4p3/p4p2/PbP2Q1P/1p3N2/1P2KPP1/1R6 b - - bm f6; id \"STS(v8.0) AKPC.029\"; c0 \"f6=10\";'\n,'3q3k/5p1p/3rp3/p4p1P/PbP2Q2/1p3N2/1P2KPP1/1R6 b - - bm f6; id \"STS(v8.0) AKPC.030\"; c0 \"f6=10, Kg8=9, Qd7=2, Qf6=2\";'\n,'3qr1k1/5r1p/p1p1n1p1/Ppp1Q3/4Pp2/1P1P1N1P/2P2RPK/R7 b - - bm g5; id \"STS(v8.0) AKPC.031\"; c0 \"g5=10, h6=1, Rff8=1, Rg7=1\";'\n,'3qrr1k/pp1n1ppp/2n3b1/2p5/3Pp1P1/P1P1P2P/BB2QPN1/2RR2K1 b - - bm f5; id \"STS(v8.0) AKPC.032\"; c0 \"f5=10, f6=5, h6=6, Qe7=6\";'\n,'3r1r1k/1p2q2b/p1p1p2p/2P1P3/PPQP1pPP/5B2/7K/4BR2 b - - bm h5; id \"STS(v8.0) AKPC.033\"; c0 \"h5=10, Kg7=4, Rd7=3, Rde8=5, Rf7=6\";'\n,'3r1rk1/pb1pb2p/1p2p1q1/1N2npp1/B1P5/4PPN1/PP2Q1PP/3R1RK1 b - - bm h5; id \"STS(v8.0) AKPC.034\"; c0 \"h5=10, Bc5=3, Bc6=3, Qf6=1\";'\n,'3r1rk1/pb2bppp/1pp1p3/2n1P2Q/2P1P3/1Pp2NP1/P4PBP/2R3K1 b - - bm g6; id \"STS(v8.0) AKPC.035\"; c0 \"g6=10, h6=2, Nxe4=3, Rd7=4\";'\n,'3r2k1/2q1rp2/4p1p1/2p1P2p/1p3Q2/1P1bP1PP/P4RBK/2R5 w - - bm g4; id \"STS(v8.0) AKPC.036\"; c0 \"g4=10, Qf6=7\";'\n,'3r2k1/3n1p1p/p1r3p1/q1P3Q1/P5B1/2R1B2P/5PP1/6K1 b - - bm h6; id \"STS(v8.0) AKPC.037\"; c0 \"h6=10, h5=6, Nf6=7, Nf8=4\";'\n,'3r2k1/p1r3pp/Q1p1pb2/2Pn1p1q/PpBPp3/1P2P1PP/1B2RPK1/4R3 b - - bm g5; id \"STS(v8.0) AKPC.038\"; c0 \"g5=10, Qe8=2, Qf7=2, Rb8=2\";'\n,'3r2r1/2qb2pk/1p2p2p/p1n1Pp2/P1PNpP2/1P2Q3/3RB1PP/3R2K1 b - - bm g5; id \"STS(v8.0) AKPC.039\"; c0 \"g5=10, Be8=8, g6=8, Rb8=8, Rc8=8\";'\n,'3r4/1pq3kp/2pp1pp1/p1n1r3/P1PNP3/1P2BPPB/2Q1N1K1/8 w - - bm f4; id \"STS(v8.0) AKPC.040\"; c0 \"f4=10, Bc1=2, Bd2=2, Nf4=1\";'\n,'3rb1k1/2q1b1p1/pp2p3/5p1p/1PP1p3/P3Q1PP/4P1RK/3N1R2 b - - bm h4; id \"STS(v8.0) AKPC.041\"; c0 \"h4=10, a5=6, Bf6=5, Kh7=4\";'\n,'3rb1k1/2q1b1pp/pp2p3/5p2/1PP1p3/P3Q1PP/4PR1K/3N1R2 b - - bm h5; id \"STS(v8.0) AKPC.042\"; c0 \"h5=10, a5=8, g6=6, Rc8=8\";'\n,'3rrk2/p2n1p1B/1pq4p/2ppB1p1/2bP4/PnN1PP2/1PQ3PP/3RR1K1 w - - bm f4; id \"STS(v8.0) AKPC.043\"; c0 \"f4=10, Bd3=6, Bg3=1, Bh8=5\";'\n,'4b1k1/pp1qbpp1/4p3/4Q2p/8/2P1N1P1/PP3PBP/6K1 b - - bm h4; id \"STS(v8.0) AKPC.044\"; c0 \"h4=10, b6=1, g6=3, Qd2=1\";'\n,'4qr1k/p4n1p/1p1p2p1/2pQ1n2/2P1NB2/P1P2P2/5KPP/3R4 w - - bm g4; id \"STS(v8.0) AKPC.045\"; c0 \"g4=10, g3=6, h3=7, Rd3=6, Re1=6\";'\n,'4r1k1/p4bpp/1p6/1P6/2PQ4/4rPq1/PR2PRB1/6K1 b - - bm h5; id \"STS(v8.0) AKPC.046\"; c0 \"h5=10, Qc7=1, R3e5=4\";'\n,'4r2k/6p1/2b2p2/pq5p/r2P2P1/2P1N1PP/B2Q1K2/4R3 b - - bm h4; id \"STS(v8.0) AKPC.047\"; c0 \"h4=10, Be4=3, Qb8=4, Rb8=2\";'\n,'4r3/2pq1pk1/1r4p1/p2pP1Np/1pnP4/2PQ3P/P3RPP1/4R1K1 w - - bm f4; id \"STS(v8.0) AKPC.048\"; c0 \"f4=10, cxb4=8, e6=8, Kh2=5\";'\n,'4r3/p4rk1/1p4p1/3Rp1q1/4P2p/2Q2P2/P5PP/3R1K2 w - - bm h3; id \"STS(v8.0) AKPC.049\"; c0 \"h3=10, Qd2=3, R1d3=5, Rd7=8\";'\n,'4rr1k/1pq3bp/p1b2np1/P1Ppp3/1P1N2P1/1B3PB1/Q6P/3RR1K1 b - - bm h5; id \"STS(v8.0) AKPC.050\"; c0 \"h5=10, h6=7, Qb8=7, Re7=6\";'\n,'4rr1k/2q5/1pnn1b1p/p1p2b2/N1PppPp1/PP1P4/2QBPPBP/3R1RNK b - - bm h5; id \"STS(v8.0) AKPC.051\"; c0 \"h5=10, Re6=4, Rf7=4, Rg8=8\";'\n,'5k1r/1b2rp2/pR4pp/1p3n2/2p5/2N5/PP3PPP/3Q2K1 w - - bm f3; id \"STS(v8.0) AKPC.052\"; c0 \"f3=10, g4=7, h4=3, Rxb7=5\";'\n,'5k2/q7/2p2pp1/4p1pn/1pP1PnN1/1P2RPPP/3r1B1K/5Q2 b - - bm f5; id \"STS(v8.0) AKPC.053\"; c0 \"f5=10, Ne6=1, Nxg3=4, Qa2=1\";'\n,'5r1k/2qb1ppp/6nb/3B4/pp1BQ3/5NP1/P1P2P1P/4R1K1 w - - bm h4; id \"STS(v8.0) AKPC.054\"; c0 \"h4=10, Ba1=5, Ne5=7, Rb1=7\";'\n,'5r1k/2qb1ppp/6nb/3B4/ppPBQ3/5NP1/P4P1P/4R1K1 w - - bm h4; id \"STS(v8.0) AKPC.055\"; c0 \"h4=10, Be5=5, c5=7, Ne5=5\";'\n,'5r2/3br1kp/3q2p1/1pNp4/1P1Pnp2/5B2/2P1R1PP/2Q2RK1 b - - bm g5; id \"STS(v8.0) AKPC.056\"; c0 \"g5=10, Bc8=6, Bf5=1, Rfe8=1\";'\n,'5rk1/2r1bpp1/p2p1n1p/1p2pP2/1P3q2/1BP4P/PB3PP1/R2QR1K1 w - - bm g4; id \"STS(v8.0) AKPC.057\"; c0 \"g4=10, a4=7, Qc2=6, Qe2=7\";'\n,'5rk1/5p2/pnB1p1pp/q3P3/2nP1P2/1R1N3P/6PK/2Q5 w - - bm f5; id \"STS(v8.0) AKPC.058\"; c0 \"f5=10, Bb7=3, Nc5=3, Rc3=3\";'\n,'5rk1/p1r3pp/1p2q3/1P1p4/1QnB2P1/2R1PP1P/4R1K1/8 b - - bm h5; id \"STS(v8.0) AKPC.059\"; c0 \"h5=10, Qf7=8, Re7=9, Rf4=7\";'\n,'6k1/2qn3p/pp1pprpB/5r2/1PP5/P4PbP/3QB1P1/2R2RK1 w - - bm f4; id \"STS(v8.0) AKPC.060\"; c0 \"f4=10, Be3=3, Kh1=3, Rc3=4\";'\n,'6k1/5p1p/1p1n2pP/1n6/q1rP4/2pQP3/r1N2PP1/BRR3K1 b - - bm f5; id \"STS(v8.0) AKPC.061\"; c0 \"f5=10, f6=3\";'\n,'6k1/p2nqpp1/Qp2p2p/8/3PNb2/P4N2/1Pr2PPP/4R1K1 w - - bm g3; id \"STS(v8.0) AKPC.062\"; c0 \"g3=10, b4=1, Qxa7=1, Rb1=3\";'\n,'8/3qpk2/1p3r1p/p1pPRp2/2P2P2/P4KPP/4Q3/8 w - - bm g4; id \"STS(v8.0) AKPC.063\"; c0 \"g4=10, Qc2=6, Qd1=6, Qd3=6\";'\n,'8/3r1pk1/p1pqp1p1/8/P1Pb4/5RPP/2Q5/4R2K b - - bm f5; id \"STS(v8.0) AKPC.064\"; c0 \"f5=10, a5=7, c5=1, e5=6, Re7=1\";'\n,'8/6pk/p5rp/2NpPq2/2bPp2b/P3P1P1/6Q1/1R2B1K1 b - - bm h5; id \"STS(v8.0) AKPC.065\"; c0 \"h5=10, a5=4, Be2=7, Qg4=4\";'\n,'b4rk1/2pq1pp1/3p3p/B1p5/2PpP1n1/3P2P1/PR1Q1PBP/6K1 b - - bm f5; id \"STS(v8.0) AKPC.066\"; c0 \"f5=10, Ne5=8\";'\n,'b4rk1/p2q1pp1/3p3p/B1p5/2PpP1n1/P2P2P1/1R1Q1PBP/6K1 b - - bm f5; id \"STS(v8.0) AKPC.067\"; c0 \"f5=10, Re8=1\";'\n,'b5k1/6bp/3qp1p1/3n2P1/5P1K/2rBB3/6NP/3R1Q2 b - - bm h6; id \"STS(v8.0) AKPC.068\"; c0 \"h6=10, Bb7=2, Ne7=5, Rb3=2\";'\n,'n1rr2k1/3qppbp/p1nP2p1/6P1/5P1Q/1P2B3/P4PBP/2RR2K1 w - - bm f5; id \"STS(v8.0) AKPC.069\"; c0 \"f5=10, Bc5=4, Qh3=6, Rc4=2\";'\n,'nr4k1/1p1qrpb1/p6p/P2p2p1/1P1N4/4B1P1/2RQ1PKP/2R5 w - - bm h4; id \"STS(v8.0) AKPC.070\"; c0 \"h4=10, h3=4, Qd3=7, Rc5=3\";'\n,'q5k1/4bpp1/r3p2p/2p5/1pP5/1P3NPP/1RQ1PP2/6K1 b - - bm f5; id \"STS(v8.0) AKPC.071\"; c0 \"f5=10, Bf6=5, g6=5, Ra3=5\";'\n,'r1b1r1k1/1p1nqpbp/2ppn1p1/1P6/2P1P3/2N1BPP1/2Q1N1BP/1R1R2K1 w - - bm f4; id \"STS(v8.0) AKPC.072\"; c0 \"f4=10, bxc6=5, h3=5, Kh1=5\";'\n,'r1b2rk1/1pp1q1b1/2nppn1p/pN3pp1/2PP4/1Q4PN/PP2PPBP/R1BR2K1 w - - bm f4; id \"STS(v8.0) AKPC.073\"; c0 \"f4=10, d5=3\";'\n,'r1b2rk1/p4pp1/1q2p2p/1p1n4/3b2N1/3B2Q1/PPP2PPP/R1B2RK1 b - - bm f5; id \"STS(v8.0) AKPC.074\"; c0 \"f5=10, h5=5, Kh8=6, Rd8=7\";'\n,'r1b2rk1/pp2qppp/n2p4/2pPp3/P1N1P3/3P4/1P2BPPP/R1Q2RK1 w - - bm f4; id \"STS(v8.0) AKPC.075\"; c0 \"f4=10, b3=1\";'\n,'r1b2rk1/pp3pp1/1q2p2p/3n4/3b2N1/3B2Q1/PPP2PPP/R1B2RK1 b - - bm h5; id \"STS(v8.0) AKPC.076\"; c0 \"h5=10, f5=5, Kh8=6, Rd8=5\";'\n,'r1b4r/pp3k1p/3R1p2/B1p5/2P4Q/5q2/PP2NP1P/2K5 b - - bm h5; id \"STS(v8.0) AKPC.077\"; c0 \"h5=10, Be6=6, Rg8=3\";'\n,'r1q1k2r/3n3p/p5p1/1pbpP3/2p2P2/8/PPB1QP1P/R1B2RK1 w kq - bm f5; id \"STS(v8.0) AKPC.078\"; c0 \"f5=10, a4=5, Bb3=4, Rd1=3\";'\n,'r1q2rk1/p3npb1/1pnBb1pp/2p1P3/8/2N2NPP/PP2QPB1/R4RK1 w - - bm g4; id \"STS(v8.0) AKPC.079\"; c0 \"g4=10, h4=1, Qe4=2, Rfd1=4\";'\n,'r1r3k1/1bqn1pbp/pp1pp1p1/4n3/2P2N1P/1PN1PP2/P2BB1P1/2R1QRK1 w - - bm h5; id \"STS(v8.0) AKPC.080\"; c0 \"h5=10, Qf2=6, Qg3=5, Rd1=6\";'\n,'r2q1rk1/1p2n1bp/p1npp1p1/2p1p3/4P3/N1PPB1PP/1P3PB1/R2QR1K1 w - - bm h4; id \"STS(v8.0) AKPC.081\"; c0 \"h4=10, Nc2=2, Qb3=4, Qg4=5, Rf1=4\";'\n,'r2q1rk1/1p2p3/2p2ppp/p2n1b2/P2P4/1B3N1P/1PP2PP1/R2QR1K1 b - - bm g5; id \"STS(v8.0) AKPC.082\"; c0 \"g5=10, Bc8=6, Bd7=6, Kh7=6\";'\n,'r2r2k1/1p3p1p/1qbppQp1/p7/4P3/P1NR4/1P3PPP/1R4K1 w - - bm h4; id \"STS(v8.0) AKPC.083\"; c0 \"h4=10, b4=5, Rbd1=4, Rf3=6\";'\n,'r2r2k1/2pq1pp1/p1p2b1p/5p2/P2P4/2N3P1/1PQ1PP1P/R2R2K1 b - - bm f4; id \"STS(v8.0) AKPC.084\"; c0 \"f4=10, g5=9, Qe6=8, Rab8=7\";'\n,'r2r2k1/pp1qppbp/2p1bnp1/4B3/3P2P1/4QN1P/PP2PPB1/R1R3K1 b - - bm h5; id \"STS(v8.0) AKPC.085\"; c0 \"h5=10, a5=5, Bd5=2, h6=2\";'\n,'r3k3/1p1n1p2/2p1r1p1/3bP3/3P3Q/8/p1B2PPP/R5K1 w q - bm f4; id \"STS(v8.0) AKPC.086\"; c0 \"f4=10, Be4=8, f3=7, Qh6=5\";'\n,'r3qrk1/1p4bp/1n1p1p1n/pPpPp1p1/P3P3/1P1N3P/3B1PP1/2QBRRK1 w - - bm h4; id \"STS(v8.0) AKPC.087\"; c0 \"h4=10, Bc2=6, Bf3=7, Kh2=6, Nb2=7\";'\n,'r3qrk1/2p3pp/np6/3pN3/p2P4/P5P1/1PQ1PP2/3R1RK1 w - - bm f4; id \"STS(v8.0) AKPC.088\"; c0 \"f4=10, e3=6, e4=5, Rd2=6\";'\n,'r3r1k1/1pq4p/p2b1pp1/3pnb2/3N3Q/2P5/PP1B1PPP/R3RBK1 b - - bm g5; id \"STS(v8.0) AKPC.089\"; c0 \"g5=10, Bd7=3, Be4=3, Qd7=6\";'\n,'r3r1k1/4qpp1/2p5/p1ppP2p/6P1/1PQ2P1P/P1P5/3RR1K1 w - - bm f4; id \"STS(v8.0) AKPC.090\"; c0 \"f4=10, a4=1, Kg2=2, Re2=1\";'\n,'r3r1k1/pn1bnpp1/1p2p2p/1q1pP3/2pP1P1N/B1P2BP1/2P3QP/R4RK1 w - - bm f5; id \"STS(v8.0) AKPC.091\"; c0 \"f5=10, Bxe7=6, g4=5, g4=6, Rfb1=4\";'\n,'r3rb2/1p3k2/p1p2p2/2q2bpp/2PR4/1PQ4P/P4PPB/3R1BK1 b - - bm h4; id \"STS(v8.0) AKPC.092\"; c0 \"h4=10, Be7=6, g4=5, Kg7=6\";'\n,'r4k2/1b1qbp2/2pnp1r1/pp2B2p/2pPP1pP/P1N2P2/1P2B1PQ/2RR2K1 b - - bm f5; id \"STS(v8.0) AKPC.093\"; c0 \"f5=10, f6=2, gxf3=4, Kg8=2\";'\n,'r4rk1/1b3pbp/1qp1p1p1/p2n2B1/3P3P/P2B1N2/1PQ2PP1/R3R1K1 w - - bm h5; id \"STS(v8.0) AKPC.094\"; c0 \"h5=10, Bd2=1, Rac1=7, Re2=1\";'\n,'r4rk1/1p1qn1bp/p1npp1p1/2p1p3/4P2P/N1PPB1P1/1P3PB1/R2QR1K1 w - - bm h5; id \"STS(v8.0) AKPC.095\"; c0 \"h5=10, Bh3=8, Nc4=8, Rf1=4\";'\n,'r4rk1/1p2qppp/1np5/p2pNb2/P2Pn3/2NBP3/1PQ2PPP/2R2RK1 b - - bm f6; id \"STS(v8.0) AKPC.096\"; c0 \"f6=10, g6=6, h6=7, Nxc3=7\";'\n,'r4rk1/1pq1p3/2p2ppp/p2n1b2/P2P4/1B3N1P/1PP2PP1/R2QR1K1 b - - bm g5; id \"STS(v8.0) AKPC.097\"; c0 \"g5=10, Bc8=7, Kh7=7, Rf7=7\";'\n,'r4rk1/3n1pbp/3Pq1p1/4p3/p7/2Q1B1N1/P2R1PPP/2R3K1 b - - bm f5; id \"STS(v8.0) AKPC.098\"; c0 \"f5=10, h6=4, Nf6=5, Rfd8=5\";'\n,'r4rk1/ppp1qp1p/2p3p1/4n3/4P2P/2N1QP2/PPP2P2/2KR3R w - - bm h5; id \"STS(v8.0) AKPC.099\"; c0 \"h5=10, b3=1, Nb1=5, Ne2=4\";'\n,'r5k1/p2b1r2/1p1p1q2/2pPbp1p/P1P1p3/1P4P1/2RQNPBP/4R1K1 b - - bm h4; id \"STS(v8.0) AKPC.100\"; c0 \"h4=10, Kh7=8, Qg7=8, Rg7=8\";'\n -- STS9: Advancement of a/b/c Pawns\n,'1b2r1k1/1bqn1pp1/p1p4p/Pp2p3/1P2B3/2B1PN1P/5PP1/1Q1R2K1 b - - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.001\"; c0 \"c5=10, Kf8=1, Nf8=2, g5=2\";'\n,'1k4nr/pppr1q2/3p2p1/3Nn1Qp/2P1PN2/1P6/P1P3PR/2KR4 w - - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.002\"; c0 \"c5=10, Nd3=5, Rf1=2, Rhh1=3\";'\n,'1n4k1/2pb2q1/1p1p3p/3P1p2/1PP1pP2/3rN3/4N1PP/1RQ3K1 w - - bm b5; id \"STS(v9.0) Advancement of a/b/c pawns.003\"; c0 \"b5=10\";'\n,'1nr5/p2p1qpk/1pb1p2p/5p1P/1PP2N2/P3PPQ1/6P1/3RKB2 w - - bm b5; id \"STS(v9.0) Advancement of a/b/c pawns.004\"; c0 \"b5=10, Kf2=5, Ng6=6, a4=5\";'\n,'1q2r1k1/1b2bpp1/p2ppn1p/2p5/P3PP1B/2PB1RP1/2P1Q2P/2KR4 b - - bm c4; id \"STS(v9.0) Advancement of a/b/c pawns.005\"; c0 \"c4=10, Bc6=5, Qa7=4, Qa8=5, Qc8=5, d5=5\";'\n,'1q2rb2/3b1r1k/p1p4p/B3p1p1/1PPpN3/3P1P1P/3QR1P1/4R1K1 w - - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.006\"; c0 \"c5=10, Kh1=7, Qb2=6, Ra1=7\";'\n,'1r1qr1k1/1p3pp1/p1n1bn1p/2NN4/4P3/6P1/PP3PB1/2RQR1K1 w - - bm b3; id \"STS(v9.0) Advancement of a/b/c pawns.007\"; c0 \"b3=10, Qd2=5, Rf1=7, a4=5\";'\n,'1r1r1bk1/1bq2ppp/pnp1p3/4P3/5P2/P1NBB3/1P4PP/R1QR2K1 b - - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.008\"; c0 \"c5=10, Nd5=5, Rbc8=5, h6=2\";'\n,'1r1r2k1/p1p1p3/4n1p1/5p2/8/R3B3/Pn2BPPP/4K2R b K - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.009\"; c0 \"c5=10, Kf7=5, Nd4=5, Rb4=3\";'\n,'1r1r2k1/pb3ppp/1p1ppn2/8/PPPP1P2/2NB2P1/3K3P/RR6 w - - bm a5; id \"STS(v9.0) Advancement of a/b/c pawns.010\"; c0 \"a5=10, Ke2=6, Nb5=8, Ra3=6\";'\n,'1r1r3k/p4pp1/3nb2p/2p1q3/8/P1PBPP2/2Q3PP/R1B2RK1 b - - bm c4; id \"STS(v9.0) Advancement of a/b/c pawns.011\"; c0 \"c4=10, Bb3=3, Nc8=4, Rb3=4\";'\n,'1r2r1k1/2qp1ppp/2p1pn2/8/8/2PBQ1P1/PP3P1P/R4RK1 w - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.012\"; c0 \"b4=10, Qd2=2, b3=4\";'\n,'1r2r1k1/2qp1ppp/2p2n2/4p3/1P6/2PBQ1P1/P4P1P/R4RK1 w - - bm a4; id \"STS(v9.0) Advancement of a/b/c pawns.013\"; c0 \"a4=10, Bc2=1\";'\n,'1r2rn2/1p3pk1/p4npp/P2p4/1P1N2P1/1P3P1P/4BK2/2R1R3 w - - bm b5; id \"STS(v9.0) Advancement of a/b/c pawns.014\"; c0 \"b5=10, Bf1=6, Rc2=6, Rc7=7\";'\n,'1r3rk1/2qnbppp/2p1p3/pbPpP3/8/PP2QNP1/3B1PBP/2R1R1K1 w - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.015\"; c0 \"b4=10, Bh1=4, Qd4=3, h4=2\";'\n,'1r4k1/p3pr1p/1qbp1pp1/2p5/2P5/1PN1Q2P/P2R1PP1/3R3K b - - bm a5; id \"STS(v9.0) Advancement of a/b/c pawns.016\"; c0 \"a5=10, Kg7=7, Qb7=8, a6=6\";'\n,'1rbr2k1/p1q2p1p/2n1p1p1/1p4Q1/2pPP3/2P3P1/P1B1N1PP/2R2RK1 b - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.017\"; c0 \"b4=10, Qe7=8, Rb6=6, a5=7\";'\n,'1rq2r2/Q3pp1k/1B1p2pb/4n2p/2PN4/PP5P/3nBPP1/R2R2K1 w - - bm a4; id \"STS(v9.0) Advancement of a/b/c pawns.018\"; c0 \"a4=10, Ra2=2, c5=2\";'\n,'1rr3k1/p2qbpnp/Ppp3p1/3pP3/3P4/1Q1B1P2/1P1B1P1P/2R3RK b - - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.019\"; c0 \"c5=10, Ne6=6, Nf5=4, Qe6=5\";'\n,'1rrqb3/1p3kp1/p3p2p/P1Rp1p1P/3P1P2/6P1/1P1QBPK1/2R5 w - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.020\"; c0 \"b4=10, Bd3=5, Qe1=5, b3=5\";'\n,'2r1n1k1/1p1R1r1p/2q1pp1B/p5p1/6P1/Q1P4P/PP6/1K1R4 b - - bm b5; id \"STS(v9.0) Advancement of a/b/c pawns.021\"; c0 \"b5=10, b6=7\";'\n,'2r1r1k1/1b1n1pp1/1q2p2p/3p3n/P2N4/BP1NPP1P/2B3P1/2R1Q1K1 w - - bm a5; id \"STS(v9.0) Advancement of a/b/c pawns.022\"; c0 \"a5=10\";'\n,'2r1r1k1/1b1q1pp1/4p2p/1Nnp3n/1N6/PP2PP1P/1BB2QP1/3R2K1 w - - bm a4; id \"STS(v9.0) Advancement of a/b/c pawns.023\"; c0 \"a4=10, Na7=1\";'\n,'2r1r1k1/1p1npp1p/p2pb1p1/q7/2PnP3/1PNN2PP/P2Q1PB1/2RR2K1 w - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.024\"; c0 \"b4=10, Nf4=5, Qb2=6, Qe3=3\";'\n,'2r2bk1/R4pp1/3pqnnp/R3p3/1P2P3/3Q1NNP/2rB1PPK/8 w - - bm b5; id \"STS(v9.0) Advancement of a/b/c pawns.025\"; c0 \"b5=10, R5a6=3, R7a6=3, Ra8=1\";'\n,'2r2r1k/1bqnbppp/p3p3/1p1pP3/3B1P2/P1NB4/1PP2QPP/R4R1K w - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.026\"; c0 \"b4=10, Qe3=4, Rad1=4, Rae1=5\";'\n,'2r2rk1/1p2bpp1/p3p3/4P1N1/PqB3P1/1Pn2NQ1/2b2P1P/R3R1K1 b - - bm b5; id \"STS(v9.0) Advancement of a/b/c pawns.027\"; c0 \"b5=10, Bg6=4, Rfd8=3, Rxc4=4\";'\n,'2r2rk1/pp3ppp/2nb1q2/P3pb2/2P5/1NB3P1/1Q2PPBP/R4RK1 w - - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.028\"; c0 \"c5=10, Nd2=3, Rfd1=4, f4=4\";'\n,'2r3k1/1pq1b1p1/p1b1pr1p/8/PP2pP2/2P1B3/4B1PP/RQR4K w - - bm b5; id \"STS(v9.0) Advancement of a/b/c pawns.029\"; c0 \"b5=10, Rd1=3, Rf1=3, g3=5\";'\n,'2r3k1/5p2/pr3p1p/8/3N2q1/P3P1P1/1P1Q1PP1/5RK1 w - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.030\"; c0 \"b4=10\";'\n,'2r5/1r2nkp1/p3p2p/1p1b1p1P/8/PP3P2/1KPRB1P1/R5B1 w - - bm a4; id \"STS(v9.0) Advancement of a/b/c pawns.031\"; c0 \"a4=10, Bd4=7, Bh2=8, g4=7\";'\n,'2r5/3npk1p/1p1p1r2/pP1P2p1/3N1pP1/1P3P2/2P1R2P/R5K1 w - - bm c4; id \"STS(v9.0) Advancement of a/b/c pawns.032\"; c0 \"c4=10, Kf2=6, Kg2=5, Nc6=3\";'\n,'2rqr1k1/5ppp/n4b2/pbP5/3p4/P4NP1/1N2PPBP/2RQR1K1 w - - bm a4; id \"STS(v9.0) Advancement of a/b/c pawns.033\"; c0 \"a4=10, Na4=2, Nd3=4, c6=2\";'\n,'2rr2k1/1b3ppp/pp2pn2/2n5/2BNP3/4KPNP/PP4P1/2R4R w - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.034\"; c0 \"b4=10\";'\n,'2rr2k1/1q3pp1/pp1pp2p/4n3/2PNP3/1P4P1/P1R1QPKP/3R4 b - - bm b5; id \"STS(v9.0) Advancement of a/b/c pawns.035\"; c0 \"b5=10, Nd7=7, Qc7=7, Rc5=7\";'\n,'3b2rk/5pp1/2q2n1p/1p2BP2/7P/2NQ4/1PP5/1K4R1 b - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.036\"; c0 \"b4=10, Bb6=1, Nd7=4, Re8=1\";'\n,'3q2k1/1p1bprbp/3pn1p1/3N4/1PP5/r3B3/3QBPPP/2R1R1K1 w - - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.037\"; c0 \"c5=10, Bd1=4, Bg4=4, Rb1=5\";'\n,'3r1nk1/pp2q2p/2p3p1/2NnPp2/5P2/1Q6/PP1rNRPP/2R3K1 b - - bm b6; id \"STS(v9.0) Advancement of a/b/c pawns.038\"; c0 \"b6=10, Nd7=3, Rb8=2, b5=1\";'\n,'3r1rk1/2pq2pp/p4pb1/1p6/4P1P1/2PnQN1P/PP1N1P2/RR4K1 b - - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.039\"; c0 \"c5=10, Qd6=3, Rfe8=1\";'\n,'3r1rk1/3n1pbp/1p1p2p1/pN1Ppn1q/2P3b1/PPN3P1/1B1Q1P1P/R3R1KB w - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.040\"; c0 \"b4=10, Na4=5, Ne4=6, Qc2=7\";'\n,'3r2k1/1p2bpp1/pNrppnqp/8/1PPBP3/P4Q1P/5PP1/3RR1K1 w - - bm b5; id \"STS(v9.0) Advancement of a/b/c pawns.041\"; c0 \"b5=10, Qd3=3, Rd3=2, a4=8\";'\n,'3r2k1/5p2/p1prb2p/1p2q3/4Pp2/1P1B1P2/P3Q1PP/2RR1K2 b - - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.042\"; c0 \"c5=10, Kh7=6, Qh5=4, R8d7=5\";'\n,'3rn1k1/1pqn1pp1/p3br1p/2P1p3/P3P3/3BBN1P/2P3PQ/RR5K w - - bm a5; id \"STS(v9.0) Advancement of a/b/c pawns.043\"; c0 \"a5=10, Ra3=3, Rb4=6\";'\n,'3rr1k1/1bqn1ppp/p1p5/1p2b3/4P3/P3BB1P/1PQ1NPP1/1R1R3K b - - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.044\"; c0 \"c5=10, h6=3\";'\n,'3rr1k1/1p5p/p2B1bp1/5b2/1RP2P2/1PN5/1P1R1K1P/8 w - - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.045\"; c0 \"c5=10, Kf3=6, Kg2=6, Rd5=1\";'\n,'3rr1k1/1q2bp1p/2b3pB/3npP2/1p6/5B2/NPP3PP/3RQR1K w - - bm c4; id \"STS(v9.0) Advancement of a/b/c pawns.046\"; c0 \"c4=10, Qe2=5, c3=3, fxg6=4\";'\n,'4b3/ppr1bpk1/2n1p1p1/1B1rP2p/3P3P/P1R1BNP1/5PK1/2R5 w - - bm a4; id \"STS(v9.0) Advancement of a/b/c pawns.047\"; c0 \"a4=10, Rb1=5\";'\n,'4q1k1/p5p1/1rp1p1p1/2R1Pp2/1PQ5/P5P1/5PK1/8 w - - bm a4; id \"STS(v9.0) Advancement of a/b/c pawns.048\"; c0 \"a4=10, Qc3=3\";'\n,'4r1k1/3bpr1p/1qpp1ppQ/p7/2P1N3/1P5P/P2R1PP1/3R3K b - - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.049\"; c0 \"c5=10, Bf5=6, Qa7=7, Qc7=5\";'\n,'4r1k1/p2bpr1p/1qpp2pQ/5p2/2P4P/1P4N1/P2R1PP1/3R3K b - - bm a5; id \"STS(v9.0) Advancement of a/b/c pawns.050\"; c0 \"a5=10, Qc5=5, Ref8=7, Rg7=7\";'\n,'4rk2/2p1rpp1/pbn3bp/1p2P3/PP6/1BP2NNP/5PP1/2R1R1K1 w - - bm a5; id \"STS(v9.0) Advancement of a/b/c pawns.051\"; c0 \"a5=10, Nh4=3, axb5=5, e6=5\";'\n,'4rrk1/1q4pp/4p3/2bp4/5P2/3Q4/1PP3PP/R1B2R1K w - - bm c3; id \"STS(v9.0) Advancement of a/b/c pawns.052\"; c0 \"c3=10, Ra4=6, Ra5=6, b3=8\";'\n,'4rrk1/p2n2pp/qp2pb2/2p5/2P2P2/P1BP1Q2/4N1PP/1R3RK1 w - - bm a4; id \"STS(v9.0) Advancement of a/b/c pawns.053\"; c0 \"a4=10, Bxf6=6, Qe4=2, h3=6\";'\n,'5nk1/1bq2pp1/rp1r1b1p/1R1p1B2/2pP4/2N1PN2/PQ3PPP/1R4K1 w - - bm a4; id \"STS(v9.0) Advancement of a/b/c pawns.054\"; c0 \"a4=10, Ne5=5, Rb4=6, h4=2\";'\n,'5r1k/1p2q1pp/p1p2n2/5r2/3Pp3/4P2R/PPB2PQP/6RK b - - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.055\"; c0 \"c5=10\";'\n,'5r2/5r1k/p2pN1p1/1p1Pn2p/2q1P2b/P4pR1/1PPQ1B1P/1K2R3 w - - bm b3; id \"STS(v9.0) Advancement of a/b/c pawns.056\"; c0 \"b3=10, Nxf8+=2\";'\n,'5rk1/1prn1qp1/p2p3p/3Ppp1P/7R/1NPQ1PP1/PP6/1K1R4 b - - bm b5; id \"STS(v9.0) Advancement of a/b/c pawns.057\"; c0 \"b5=10, Nc5=5, Re8=6, Rfc8=3\";'\n,'5rk1/2nq2pp/3p1p2/3P4/3B1Q2/PrN3P1/4PP1P/R5K1 w - - bm a4; id \"STS(v9.0) Advancement of a/b/c pawns.058\"; c0 \"a4=10, Qe4=4, e3=2, h4=4\";'\n,'5rk1/p2qp2p/1p1p1pp1/2nN1P1r/P1P1P3/1P2R1P1/1Q4KP/4R3 w - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.059\"; c0 \"b4=10, Qd2=6, Ra1=5, h4=5\";'\n,'6k1/1b2bp1p/p3p3/1p2P1p1/2r5/2N1BP2/PP4PP/3R2K1 b - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.060\"; c0 \"b4=10, Bc6=4, Kf8=4\";'\n,'6k1/1p1n1rbp/r2n1pp1/4p3/4P3/4B1P1/PP2N1BP/R4RK1 w - - bm b3; id \"STS(v9.0) Advancement of a/b/c pawns.061\"; c0 \"b3=10, Bf2=5, Rad1=2, Rfc1=6\";'\n,'6k1/1pr2rp1/p4q1p/2p1p3/2Q1P3/P6P/2P2PP1/3R1RK1 w - - bm a4; id \"STS(v9.0) Advancement of a/b/c pawns.062\"; c0 \"a4=10, Qc3=5, Rd3=5, Rd5=5\";'\n,'6k1/2rqbrpp/2n2n2/pBpppN2/Pp4P1/2PP3P/1P2QP2/R1B1R1K1 w - - bm c4; id \"STS(v9.0) Advancement of a/b/c pawns.063\"; c0 \"c4=10, Bg5=5, Bxc6=4, cxb4=4\";'\n,'6k1/4brpp/3p4/p1q1p3/1pN1Pr2/1P1R1P2/P1P3QP/1K4R1 b - - bm a4; id \"STS(v9.0) Advancement of a/b/c pawns.064\"; c0 \"a4=10, Bf8=5, Kh8=7, R4f6=3\";'\n,'6k1/5r2/p4pp1/Br1pp3/2b5/6NP/1P3RP1/2R4K w - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.065\"; c0 \"b4=10, Bc3=3, Bd8=5, Be1=6\";'\n,'8/5p2/bk2p3/1pr1Pp2/3p4/bP3BPP/P1nBN3/1R1K4 w - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.066\"; c0 \"b4=10, Bg5=7, Nf4=7, h4=7\";'\n,'8/r2b2pk/2p1pr1p/3nQp2/p7/qP3N2/P1PRBPPP/4R1K1 w - - bm c4; id \"STS(v9.0) Advancement of a/b/c pawns.067\"; c0 \"c4=10, Bd3=5, Red1=5, h3=5\";'\n,'b2qr2k/2p3pp/8/1p3p2/2p2B2/2Pp1PPP/5QB1/R6K b - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.068\"; c0 \"b4=10, Bc6=2, Bd5=2, h6=2\";'\n,'r1b2k2/ppq2p1p/1np3p1/4p3/2n5/3N2P1/P1Q1PPBP/R2R2K1 w - - bm a4; id \"STS(v9.0) Advancement of a/b/c pawns.069\"; c0 \"a4=10, Qb3=1, Qc3=3\";'\n,'r1bq1r2/1pp3bk/3p1npp/1N1Ppn2/PBP1N3/1Q1B4/5PPP/R4RK1 w - - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.070\"; c0 \"c5=10, Nxf6+=6, Rae1=6, Rfe1=5, a5=6\";'\n,'r1r3k1/3nqpp1/1pp1pn1p/p2pN3/2PP1Q2/1P4P1/P2BPPKP/2RR4 b - - bm a4; id \"STS(v9.0) Advancement of a/b/c pawns.071\"; c0 \"a4=10, Nxe5=6, Qe8=6, Ra7=7\";'\n,'r1r3k1/p3pp1p/3p2pb/R1nP4/4PP2/2Pp4/1P1N2PP/2BR2K1 w - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.072\"; c0 \"b4=10, Nc4=5, Rf1=2, g3=6\";'\n,'r1r4k/1q1nbpp1/2bp1n1p/pp2pP2/4P3/P1N2BQ1/1PPN1BPP/2R1R1K1 b - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.073\"; c0 \"b4=10, Nb6=7, Rc7=7, Rd8=7\";'\n,'r2q1nk1/1p2rppp/p1p5/3p3b/PP1P4/2NBP3/2Q2PPP/2R2RK1 w - - bm b5; id \"STS(v9.0) Advancement of a/b/c pawns.074\"; c0 \"b5=10, Ne2=7, Qb3=6, h3=6\";'\n,'r2rn1k1/3nqppp/1pp1p3/3p4/pPPP4/P2QN1P1/1B2PP1P/2RR2K1 w - - bm b5; id \"STS(v9.0) Advancement of a/b/c pawns.075\"; c0 \"b5=10, Re1=2, cxd5=3, f3=2\";'\n,'r3kr2/pp1b1pp1/2p1p2p/4q3/7Q/2PBPR2/PP4PP/2KR4 b q - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.076\"; c0 \"c5=10, Qg5=4, a5=2, g5=1\";'\n,'r3r1k1/1p3pp1/1qp1b2p/p1Rn4/3p4/P2P1BP1/1P1BPP1P/2Q1R1K1 b - - bm a4; id \"STS(v9.0) Advancement of a/b/c pawns.077\"; c0 \"a4=10, Kh7=1, Nf6=1, Red8=1\";'\n,'r3r1k1/1pb1qpp1/2p1b2p/p3P3/4Q3/2B1PN1P/PP3PP1/3RR1K1 w - - bm a3; id \"STS(v9.0) Advancement of a/b/c pawns.078\"; c0 \"a3=10, Qb1=5, a4=8, b3=4\";'\n,'r3r1k1/pn1qnppp/1p2p3/3pP3/b1pP4/B1P2N2/R1PQBPPP/R5K1 b - - bm b5; id \"STS(v9.0) Advancement of a/b/c pawns.079\"; c0 \"b5=10, Bc6=6, Nc6=2, Nc8=2\";'\n,'r3rbk1/1npq1pp1/p2p3p/1p6/1P1P4/P1R1BN1P/5PP1/3QR1K1 b - - bm c6; id \"STS(v9.0) Advancement of a/b/c pawns.080\"; c0 \"c6=10, Nd8=5, Rac8=6\";'\n,'r3rbk1/1qpn1pp1/p4n1p/1p2pN2/2P1P3/5N2/PPQB1PPP/R3R1K1 b - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.081\"; c0 \"b4=10, Nc5=5, Re6=2, bxc4=4\";'\n,'r3rn1k/1q2b1p1/pp1p1n1p/4pQ2/P3P3/1NN1BR2/1PP3PP/5R1K b - - bm b5; id \"STS(v9.0) Advancement of a/b/c pawns.082\"; c0 \"b5=10, N8h7=4, Rab8=5, Rac8=5\";'\n,'r4rk1/1p4bp/2qp1np1/p1n1p3/2P5/P1B1N3/1PB2PPP/R2Q1RK1 w - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.083\"; c0 \"b4=10, Qe1=5, Qe2=6, f3=3\";'\n,'r4rk1/2Q2ppp/4p3/p3P3/q1P5/P5P1/5P1P/2R1R1K1 w - - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.084\"; c0 \"c5=10, Qb7=6, Rc3=5, Re3=6\";'\n,'r4rk1/2qb1ppp/p2pp3/1pn3P1/3RPP2/P1N2Q2/1PP3BP/2KR4 b - - bm a5; id \"STS(v9.0) Advancement of a/b/c pawns.085\"; c0 \"a5=10, Bc6=7, Rac8=7, Rfc8=6\";'\n,'r4rk1/4bppp/b3pn2/1p1q2B1/3p4/3B1N2/PP2QPPP/R2R2K1 w - - bm a4; id \"STS(v9.0) Advancement of a/b/c pawns.086\"; c0 \"a4=10, Bf4=4, Bxf6=1, a3=2\";'\n,'r4rkb/p2bp2p/2nq2pP/1p6/2pP4/2P1B1N1/P1B2PP1/2RQR1K1 w - - bm a4; id \"STS(v9.0) Advancement of a/b/c pawns.087\"; c0 \"a4=10, Be4=6, Qe2=5, Rb1=6\";'\n,'r5k1/1pp1r1pp/3pbpq1/pB2n3/P1P5/1P2BP2/2PQ2PP/2KRR3 w - - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.088\"; c0 \"c5=10, Bf4=3, Bg1=5, f4=4\";'\n,'r5k1/1rpn1pbp/p2pp3/1p4Np/2PP4/1PN1P1P1/P4PK1/2RR4 w - - bm c5; id \"STS(v9.0) Advancement of a/b/c pawns.089\"; c0 \"c5=10, Nb1=3, Ne2=1, d5=3\";'\n,'r5k1/2p1qp2/1p1p2bp/p1nPr1p1/2P5/PP2P1N1/1Q1B2PP/3R1RK1 b - - bm b5; id \"STS(v9.0) Advancement of a/b/c pawns.090\"; c0 \"b5=10, Rb8=3, Re8=6, Rf8=3\";'\n,'r5k1/5q1p/2ppNr1b/2pPp1pP/p1P3P1/P7/1PQ1RPK1/1R6 w - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.091\"; c0 \"b4=10, Rd1=2, Rd2=2, b3=4\";'\n,'rr2q1k1/3bnpb1/ppp3pp/3p4/1P1P4/PQ1BP1NP/1NR2PP1/3R2K1 b - - bm a5; id \"STS(v9.0) Advancement of a/b/c pawns.092\"; c0 \"a5=10, Bf8=3, Ra7=4, h5=2\";'\n,'1r1rb1k1/pp3pbp/4p1p1/1P2P3/2PBQ3/q7/P3B1PP/2R2R1K b - - bm a6; id \"STS(v9.0) Advancement of a/b/c pawns.093\"; c0 \"a6=10, b6=3, h5=2, Rd7=4\";'\n,'2r1k2r/1n2ppb1/p2p2p1/1p1P3p/8/1P2BP1P/P1P1BP2/2KR2R1 w k - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.094\"; c0 \"b4=10, Bd4=2, Kb1=2\";'\n,'2r2rk1/1pqn3p/p2p1npb/N2Pp3/2P2p2/Q4PP1/PP2BBKP/3RR3 w - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.095\"; c0 \"b4=10\";'\n,'2r3k1/p1q1bpp1/2p2n2/2Np3r/1P1B3p/P1Q4P/5PP1/2R1R1K1 w - - bm b5; id \"STS(v9.0) Advancement of a/b/c pawns.096\"; c0 \"b5=10, Qb2=3, Qd3=2, Qe3=3\";'\n,'3r2k1/4rppp/2ppbn2/Nq2p3/4P3/1P2Q1PP/P1PR1PBK/4R3 w - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.097\"; c0 \"b4=10, Nc4=1, Nxc6=4, Qc3=4\";'\n,'r6k/p3Npb1/qp4pp/4p3/1B6/1PP3P1/P2R1P1P/3R2K1 b - - bm b5; id \"STS(v9.0) Advancement of a/b/c pawns.098\"; c0 \"b5=10, Kh7=6, Qb7=7, Re8=7\";'\n,'r6r/4p1k1/3q1p2/p1pPn1p1/1p2P2p/4Q3/PP2BPPP/1R2R1K1 b - - bm c4; id \"STS(v9.0) Advancement of a/b/c pawns.099\"; c0 \"c4=10, Rac8=5, Rhc8=2\";'\n,'rq4kb/5p1p/3p1Pp1/p2Pp1P1/3pP1bP/1P6/P1Q2R2/4BBK1 w - - bm b4; id \"STS(v9.0) Advancement of a/b/c pawns.100\"; c0 \"b4=10, Qc1=3, Qc4=3, Qc6=4\";'\n -- STS10: Simplification \n,'1b1qrr2/1p4pk/1np4p/p3Np1B/Pn1P4/R1N3B1/1Pb2PPP/2Q1R1K1 b - - bm Bxe5; id \"STS(v10.0) Simplification.001\"; c0 \"Bxe5=10, f4=3, Nc4=2\";'\n,'1k1r2r1/1b4p1/p4n1p/1pq1pPn1/2p1P3/P1N2N2/1PB1Q1PP/3R1R1K b - - bm Nxf3; id \"STS(v10.0) Simplification.002\"; c0 \"Nxf3=10, Rge8=7, Rgf8=6, Rh8=7\";'\n,'1k1r3r/pb1q2p1/B4p2/2p4p/Pp1bPPn1/7P/1P2Q1P1/R1BN1R1K b - - bm Bxa6; id \"STS(v10.0) Simplification.003\"; c0 \"Bxa6=10, Qc6=3, Qe6=3, Rde8=5\";'\n,'1k1r4/1br2p2/3p1p2/pp2pPb1/2q1P2p/P1PQNB1P/1P4P1/1K1RR3 b - - bm Qxd3+; id \"STS(v10.0) Simplification.004\"; c0 \"Qxd3+=10, Qa4=6, Qb3=5, Qc5=6\";'\n,'1k1r4/1br2p2/3p1p2/pp2pPb1/4P2p/P1PRNB1P/1P4P1/1K2R3 b - - bm Bxe3; id \"STS(v10.0) Simplification.005\"; c0 \"Bxe3=10, b4=7, Ka7=6, Rc5=6\";'\n,'1k1r4/5qp1/p1b2n1p/1p2p3/2p1P2P/P1N1P1P1/1PB1Q3/3R2K1 b - - bm Rxd1+; id \"STS(v10.0) Simplification.006\"; c0 \"Rxd1+=10, Qc7=4, Qe7=4, Qf8=4\";'\n,'1k1rr3/p1p4p/Bpnb4/3p1qp1/N2P4/P2Q1PPb/1PP3NP/2KR2R1 w - - bm Qxf5; id \"STS(v10.0) Simplification.007\"; c0 \"Qxf5=10, Bb5=3, Nc3=5, Qd2=1\";'\n,'1kr5/3n2p1/q2rpn1p/p7/Ppp2P2/5BP1/1PQ2B1P/2RR2K1 w - - bm Rxd6; id \"STS(v10.0) Simplification.008\"; c0 \"Rxd6=10, Kh1=4, Qe2=7, Rd4=4\";'\n,'1nr2qk1/pb1r1p1p/1b4pP/1p1Bp1B1/4P1Q1/2NR4/P1R2PP1/6K1 w - - bm Bxb7; id \"STS(v10.0) Simplification.009\"; c0 \"Bxb7=10, Rdd2=1\";'\n,'1qr3k1/p3bppp/4pn2/1B2n3/N7/P3P2P/1P2QPP1/2R1B2K w - - bm Rxc8+; id \"STS(v10.0) Simplification.010\"; c0 \"Rxc8+=10, Nc3=6, Rc3=6, Rd1=6\";'\n,'1r1q1n2/2p2ppk/p2p3p/P1b1p3/2P1P3/3P1N1P/1R1B1PP1/1Q4K1 b - - bm Rxb2; id \"STS(v10.0) Simplification.011\"; c0 \"Rxb2=10, Nd7=3, Ra8=2, Rc8=2\";'\n,'1r1qr1k1/2Q1bp1p/2n3p1/2PN4/4B3/2N3P1/5P1P/5RK1 b - - bm Qxc7; id \"STS(v10.0) Simplification.012\"; c0 \"Qxc7=10, Nb4=2, Rc8=1\";'\n,'1r1r2k1/6pp/1b2p2q/3b1p2/1BB1n3/P3PN1P/2Q2PP1/2R2RK1 w - - bm Bxd5; id \"STS(v10.0) Simplification.013\"; c0 \"Bxd5=10, Nd4=3, Qb3=3, Rfe1=2\";'\n,'1r1r3k/1qpn1pbp/p1n3pB/P2bp3/BpN3Q1/3P3P/1PPN1PP1/R3R1K1 w - - bm Bxg7+; id \"STS(v10.0) Simplification.014\"; c0 \"Bxg7+=10, Qg5=1, Qh4=4\";'\n,'1r2k2r/pp1npp2/2n3p1/7p/3bP3/P3BB1P/1P3PP1/1R1R1NK1 b k - bm Bxe3; id \"STS(v10.0) Simplification.015\"; c0 \"Bxe3=10, Bb6=6, Bc5=6, e5=6\";'\n,'1r3r2/3q2kp/p2p1pp1/2pPp3/4Pn2/P2P1N1P/2Q2PP1/1R2R1K1 w - - bm Rxb8; id \"STS(v10.0) Simplification.016\"; c0 \"Rxb8=10, Kh1=5, Kh2=5, Nd2=5\";'\n,'1r3rk1/pp3pp1/1np4p/2Nn2bq/3P3N/P2Q2PP/1P1BRP2/4R1K1 w - - bm Bxg5; id \"STS(v10.0) Simplification.017\"; c0 \"Bxg5=10, Qf3=2, Re4=2, Re5=2\";'\n,'1r4k1/1q2r2p/1n4pQ/2pp1pN1/7P/P5P1/1P3P2/3RR1K1 w - - bm Rxe7; id \"STS(v10.0) Simplification.018\"; c0 \"Rxe7=10, h5=4, Nf3=4, Nxh7=3\";'\n,'1r4k1/5ppp/1p3n2/5n2/NP1r4/1B3P2/1P4PP/3RR2K w - - bm Rxd4; id \"STS(v10.0) Simplification.019\"; c0 \"Rxd4=10, b5=1, Bc2=2, Nc3=2\";'\n,'1r4k1/p1rn1ppp/2p1p1b1/N1PpP3/3P1P2/1R4P1/P6P/R4BK1 w - - bm Rxb8+; id \"STS(v10.0) Simplification.020\"; c0 \"Rxb8+=10, Ba6=3, Rc1=3, Re1=3\";'\n,'1r4r1/4kp1p/3p1p1b/2q1pP2/Bn2P3/2N5/1PPNQ1PP/1K1R4 b - - bm Bxd2; id \"STS(v10.0) Simplification.021\"; c0 \"Bxd2=10, Rgd8=1\";'\n,'1r4rk/2q1b2p/pN6/P1p1Pp2/3n1p2/5N2/5QPP/R4RK1 b - - bm Nxf3+; id \"STS(v10.0) Simplification.022\"; c0 \"Nxf3+=10, Qb7=5, Rbd8=7, Rgd8=5\";'\n,'1r6/1R2bk2/P3p1pp/4Pp2/1r1P3P/1N2B1P1/5PK1/8 w - - bm Rxb4; id \"STS(v10.0) Simplification.023\"; c0 \"Rxb4=10, Rxb8=6\";'\n,'1r6/3n4/p2b3p/2nN1kpP/1BP1p3/3rP3/3NKP2/1R1R4 w - - bm Bxc5; id \"STS(v10.0) Simplification.024\"; c0 \"Bxc5=10, Bc3=3, Nxe4=2, Rf1=2\";'\n,'1r6/8/p2b3p/2nN1kpP/2P1p3/3rP3/3NKP2/1R1R4 w - - bm Rxb8; id \"STS(v10.0) Simplification.025\"; c0 \"Rxb8=10, Ne7+=6\";'\n,'1rb2nk1/8/1p1PNbrp/3Pp1pq/p3Pn1P/P2N1PB1/4B3/R2Q1R1K w - - bm Nxf8; id \"STS(v10.0) Simplification.026\"; c0 \"Nxf8=10, Nc7=4, Rc1=1\";'\n,'2br1rk1/2q3p1/1pp1p2p/p1n1b3/2BNN1Q1/4P3/PP3PP1/2RR3K w - - bm Nxc5; id \"STS(v10.0) Simplification.027\"; c0 \"Nxc5=10, Kg1=2, Nf3=2, Nxe6=3\";'\n,'2br2k1/r5p1/4p3/5p2/8/pP3B2/1q2RPPP/Q3R1K1 b - - bm Qxa1; id \"STS(v10.0) Simplification.028\"; c0 \"Qxa1=10, Qd4=1, Qxb3=1, Rd2=3\";'\n,'2brr1k1/2q1bpp1/pNnpp2p/P1p5/1P2PP2/2P1B1P1/4Q1BP/R2R2K1 w - - bm Nxc8; id \"STS(v10.0) Simplification.029\"; c0 \"Nxc8=10, b5=3, bxc5=4, Rab1=3\";'\n,'2r1n1k1/5ppp/1prp4/p3p1q1/2b1P3/P1B1QB1P/1PPR1PPK/R7 b - - bm Qxe3; id \"STS(v10.0) Simplification.030\"; c0 \"Qxe3=10, h6=2, Qe7=2, Qh4=2\";'\n,'2r1r1k1/1p1q1bbp/pn3pp1/n2p4/3P1B1P/2NB1N2/PPQ1RPP1/4R1K1 w - - bm Rxe8+; id \"STS(v10.0) Simplification.031\"; c0 \"Rxe8+=10, h5=8, Qb1=5\";'\n,'2r1r1k1/2qbppbp/pp1p2p1/n2P4/P1P4P/1P3N2/1BQ1BPP1/R2R2K1 w - - bm Bxg7; id \"STS(v10.0) Simplification.032\"; c0 \"Bxg7=10, Bd4=3, h5=3, Ng5=2\";'\n,'2r2nk1/pp3p2/5qpb/4p1Np/P3P2P/1P2B1P1/2r2P2/2RRQ1K1 w - - bm Rxc2; id \"STS(v10.0) Simplification.033\"; c0 \"Rxc2=10, Kg2=2\";'\n,'2r2r1k/1p1q2b1/pQn1b1pp/4pp2/B3P3/1P3N1P/P1RB1PP1/R5K1 w - - bm Bxc6; id \"STS(v10.0) Simplification.034\"; c0 \"Bxc6=10, Bb4=4, Be3=2, Rac1=1\";'\n,'2r3k1/4qpp1/4p2p/1P1bP3/4pPP1/4Q3/4B2P/2R3K1 b - - bm Rxc1+; id \"STS(v10.0) Simplification.035\"; c0 \"Rxc1+=10\";'\n,'2r3k1/pp3pp1/4q2p/4p3/bB2Pn2/P4P2/1P1Q2PP/2R2BK1 w - - bm Rxc8+; id \"STS(v10.0) Simplification.036\"; c0 \"Rxc8+=10, Bc5=4, Qe3=2, Rc3=4\";'\n,'2r5/4q1kp/1nB2pp1/p3p3/Pb2Q3/4P3/1B1r1PPP/1R1R2K1 b - - bm Rxd1+; id \"STS(v10.0) Simplification.037\"; c0 \"Rxd1+=10, Rcd8=2\";'\n,'2rk1br1/4np1p/p2pb3/1p1Npp2/P3P3/2PB2Pq/1PN2P1P/R2Q1R1K w - - bm Nxe7; id \"STS(v10.0) Simplification.038\"; c0 \"Nxe7=10, Nb6=4, Ncb4=6, Ndb4=3\";'\n,'2rnq2k/pb3pp1/1p5p/3B4/1P3Q2/P4N1P/2R2PP1/6K1 w - - bm Rxc8; id \"STS(v10.0) Simplification.039\"; c0 \"Rxc8=10, Bb3=3, Rc4=5, Rd2=1\";'\n,'2rq1r1k/3n2pp/1p2p3/1P1b2bn/p1BP4/P4NP1/1B1NQP2/2R1R1K1 w - - bm Bxd5; id \"STS(v10.0) Simplification.040\"; c0 \"Bxd5=10, Bd3=1, Nxg5=2, Rc3=2\";'\n,'2rq1rk1/1p2bpp1/4p3/pP1pP1np/P2P4/R3BP2/3Q2PP/1NR3K1 w - - bm Rxc8; id \"STS(v10.0) Simplification.041\"; c0 \"Rxc8=10, Ra2=1, Rac3=3, Rb3=1\";'\n,'2rr1bk1/3qnppp/pp6/3p4/2PP2Q1/PP5P/1B1N2P1/2R2R1K b - - bm Qxg4; id \"STS(v10.0) Simplification.042\"; c0 \"Qxg4=10, dxc4=2, f6=1, g6=2\";'\n,'2rr2k1/p4pp1/1p2pn1p/3b1P2/1qNP4/1P1B4/P2Q2PP/2RR2K1 b - - bm Qxd2; id \"STS(v10.0) Simplification.043\"; c0 \"Qxd2=10, a5=3, Qe7=2, Qf8=2\";'\n,'3b4/2q2pkp/p2p1np1/1b1Pp1B1/1pN1P3/1P5P/P1Q2PP1/5NK1 b - - bm Bxc4; id \"STS(v10.0) Simplification.044\"; c0 \"Bxc4=10, a5=1, Be7=1, h6=2\";'\n,'3n1r2/2r4p/p2bp2k/1p1p2pP/1P1P4/P1R1B1Pq/4QP2/1B2R1K1 w - - bm Rxc7; id \"STS(v10.0) Simplification.045\"; c0 \"Rxc7=10, Rec1=2\";'\n,'3q4/pp2b1k1/2r5/4p2p/P1RpN3/1P3PP1/1Q2P1K1/8 w - - bm Rxc6; id \"STS(v10.0) Simplification.046\"; c0 \"Rxc6=10, Nd2=3, Qb1=2, Qc2=4\";'\n,'3r1k2/p4ppp/1r2p3/n1p1P3/5P1P/P1PBK1P1/8/1R3R2 w - - bm Rxb6; id \"STS(v10.0) Simplification.047\"; c0 \"Rxb6=10, a4=5, h5=8, Rfd1=4\";'\n,'3r1q1k/Q2R1bpp/3b1r2/2p2p2/2N2P2/1Pp3P1/5PBP/4R1K1 w - - bm Rxd8; id \"STS(v10.0) Simplification.048\"; c0 \"Rxd8=10, h4=5, Nxd6=5, Rc1=6\";'\n,'3r1rk1/4b1p1/p3p3/4pbPp/2R4P/1PN5/PB3P2/3R2K1 w - - bm Rxd8; id \"STS(v10.0) Simplification.049\"; c0 \"Rxd8=10, Rc7=2\";'\n,'3r2k1/1b1rnp1p/p2qpbp1/1pR5/1P1PB2P/P3BN2/4QPP1/3R2K1 w - - bm Bxb7; id \"STS(v10.0) Simplification.050\"; c0 \"Bxb7=10, Bg5=7\";'\n,'3r4/5pk1/4rqp1/p2p4/Pb1Q3p/1Pp1P2P/2R1BPP1/3R2K1 b - - bm Qxd4; id \"STS(v10.0) Simplification.051\"; c0 \"Qxd4=10, g5=6, Re4=5, Red6=5\";'\n,'3rkb2/1p4rp/p4p2/2p2B2/2N1Pp2/3R2P1/PPP2P1P/6K1 b - - bm Rxd3; id \"STS(v10.0) Simplification.052\"; c0 \"Rxd3=10, Be7=2, fxg3=2, Rd4=3\";'\n,'3rr1k1/6p1/pb1p3p/1p1RnBqP/4PQN1/2P5/PP6/1K3R2 w - - bm Qxg5; id \"STS(v10.0) Simplification.053\"; c0 \"Qxg5=10, a3=3, Kc2=3, Nxe5=4\";'\n,'4qbk1/r1p1nbpp/1p3p2/1Q6/P2P4/2BN1BP1/5P1P/2R3K1 w - - bm Qxe8; id \"STS(v10.0) Simplification.054\"; c0 \"Qxe8=10, Bb2=5, h3=5, Nf4=5, Nf4=6\";'\n,'4r1k1/1p2qp1p/2p1n1pB/p3p3/P3P1B1/2N2Q1P/2P2PP1/6K1 w - - bm Bxe6; id \"STS(v10.0) Simplification.055\"; c0 \"Bxe6=10, Qd1=2, Qd3=1, Qe3=2\";'\n,'4r1k1/1p5p/1r4p1/2pq1p2/P4P2/3P2Q1/1bP3RP/4R1BK b - - bm Rxe1; id \"STS(v10.0) Simplification.056\"; c0 \"Rxe1=10, Ra8=2, Rbe6=3, Rc8=3\";'\n,'4r1k1/2r1bp2/1p4p1/3BP2p/nP5P/5K2/1B1R1P2/2R5 b - - bm Rxc1; id \"STS(v10.0) Simplification.057\"; c0 \"Rxc1=10, Ra7=1, Rcc8=3\";'\n,'4r1k1/2r2ppp/2nq1n2/1BbppP2/Q7/2P1BN1P/5PP1/RR4K1 w - - bm Bxc5; id \"STS(v10.0) Simplification.058\"; c0 \"Bxc5=10, Nd2=6, Qb3=6, Re1=6\";'\n,'4r2k/p1r1b1pp/1p1pqn2/4p3/1PP4B/P4B1P/4QPP1/2RR2K1 w - - bm Bxf6; id \"STS(v10.0) Simplification.059\"; c0 \"Bxf6=10, Qd2=6, Qe3=6, Re1=6\";'\n,'4r2k/p2n1pp1/4p2p/1q1r3P/2pR1BP1/P1P1R3/1P2QP2/2K5 b - - bm Rxd4; id \"STS(v10.0) Simplification.060\"; c0 \"Rxd4=10, Nc5=4, Rc8=2\";'\n,'4r3/1pn3k1/4p1b1/p1Pp3r/3P2NR/1P3B2/3K2P1/4R3 w - - bm Rxh5; id \"STS(v10.0) Simplification.061\"; c0 \"Rxh5=10, g3=3, Reh1=3\";'\n,'4rrk1/2pb3p/p7/1ppPq3/2P1P1pP/2N5/PP2Q2P/4RR1K w - - bm Rxf8+; id \"STS(v10.0) Simplification.062\"; c0 \"Rxf8+=10, a3=3, Kg2=4, Rf2=2\";'\n,'5B1k/p6p/1p2q1r1/2p1P1p1/3b1n2/PQ3R2/1P4P1/K2R4 w - - bm Qxe6; id \"STS(v10.0) Simplification.063\"; c0 \"Qxe6=10, g3=3, Qc2=1\";'\n,'5k2/4pp2/1N2n1pp/r3P3/P5PP/2rR1K2/P7/3R4 b - - bm Rxd3+; id \"STS(v10.0) Simplification.064\"; c0 \"Rxd3+=10, Rc6=4\";'\n,'5qk1/1p1rbrpp/pP3p2/P1pbp3/1n6/BN1P2P1/1Q2PPBP/R1R3K1 w - - bm Bxd5; id \"STS(v10.0) Simplification.065\"; c0 \"Bxd5=10, Bxb4=7, Rab1=6, Rc3=4\";'\n,'5rk1/8/3p3p/p1qP2p1/Rrb1P3/3p1P2/1P1Q1RP1/3N2K1 w - - bm Rxb4; id \"STS(v10.0) Simplification.066\"; c0 \"Rxb4=10, b3=3, Ra3=2\";'\n,'6k1/1r3pp1/4b2p/p2pP2P/1r1R1Q2/1Pq1N3/2P3P1/3R3K b - - bm Rxd4; id \"STS(v10.0) Simplification.067\"; c0 \"Rxd4=10, R7b5=5, R7b6=4, Rb8=5\";'\n,'6k1/3q2b1/p1rrnpp1/P3p3/4P3/1pBR3Q/1P4PP/1B1R3K b - - bm Rxd3; id \"STS(v10.0) Simplification.068\"; c0 \"Rxd3=10, Bf8=6, Nd4=5, Qc7=5\";'\n,'6k1/3qbppp/5n2/PQpPp3/4P3/5PP1/1P4KP/2B5 w - - bm Qxd7; id \"STS(v10.0) Simplification.069\"; c0 \"Qxd7=10\";'\n,'6k1/5p2/1q1bp1p1/1Pp1B2p/2Pn3P/6P1/1Q2BP2/6K1 w - - bm Bxd6; id \"STS(v10.0) Simplification.070\"; c0 \"Bxd6=10, Bf6=2, Bxd4=1, f4=2\";'\n,'6r1/4pp1k/3p3p/2qP1Pb1/r3P1PB/1R5K/4Q3/1R6 b - - bm Bxh4; id \"STS(v10.0) Simplification.071\"; c0 \"Bxh4=10, h5=5, Qd4=5, Rc8=2\";'\n,'7r/2r1kp2/3pp2p/p3q1p1/4B3/P5P1/1Q1B1P1P/4R1K1 w - - bm Qxe5; id \"STS(v10.0) Simplification.072\"; c0 \"Qxe5=10, Qb1=5, Qb3=3, Qb6=3\";'\n,'8/1p1bkq2/p2pp1n1/P1b1p1P1/4P1QN/1KNB4/1PP5/8 b - - bm Nxh4; id \"STS(v10.0) Simplification.073\"; c0 \"Nxh4=10, Bc6=5, Be8=4, Bf2=5\";'\n,'8/3n1nk1/q2b4/3p2p1/2pPp3/2P1P3/1Q4PN/3BB1K1 b - - bm Bxh2+; id \"STS(v10.0) Simplification.074\"; c0 \"Bxh2+=10, Bc7=4, Nf6=4, Nh6=4\";'\n,'8/p1r4p/1p1qnkpP/3Ppp2/8/P2Q2P1/BP3P2/2R3K1 w - - bm Rxc7; id \"STS(v10.0) Simplification.075\"; c0 \"Rxc7=10, Rc3=6, Rc4=6, Re1=6\";'\n,'8/r4p2/P1ppk3/2p4p/1rPb1BqP/RR1PpQP1/4P1K1/8 b - - bm Qxf3+; id \"STS(v10.0) Simplification.076\"; c0 \"Qxf3+=10, f5=2, Ra8=1, Rxb3=1\";'\n,'br2r1k1/5p1p/p7/nq4Pp/p3P3/P1PQ4/1P2R1B1/K1BR4 b - - bm Qxd3; id \"STS(v10.0) Simplification.077\"; c0 \"Qxd3=10, Nb3+=5, Rbc8=4, Rbd8=4\";'\n,'br3rk1/p2q1pp1/3p1n1p/2p1p3/2PnP3/P1BP1NP1/1R1Q1PBP/1R4K1 b - - bm Rxb2; id \"STS(v10.0) Simplification.078\"; c0 \"Rxb2=10, Nxf3+=4, Qc7=4, Rb7=5\";'\n,'q3b3/4Bpkp/6p1/3Pp3/r3r3/1Q5P/R4PP1/R5K1 w - - bm Rxa4; id \"STS(v10.0) Simplification.079\"; c0 \"Rxa4=10, Bd6=4, Kh1=5, Ra3=5\";'\n,'qr3nk1/r4p1p/2p1p1pP/p1PpPbP1/3P1P2/QR2R3/P2NB2K/8 w - - bm Rxb8; id \"STS(v10.0) Simplification.080\"; c0 \"Rxb8=10, Kg3=2, Qb2=4, Rb6=3\";'\n,'qr4k1/3b1pp1/4p2p/n2pP3/n1pP4/Q1P2NP1/3N1P1P/1R3BK1 b - - bm Rxb1; id \"STS(v10.0) Simplification.081\"; c0 \"Rxb1=10, Bc6=2, Be8=3, Rb7=2\";'\n,'R1b2b2/2kp1p1p/B2npp2/2p5/4P1r1/6P1/3N1P1P/3K3R w - - bm Bxc8; id \"STS(v10.0) Simplification.082\"; c0 \"Bxc8=10, f3=3, h3=3, Kc2=3\";'\n,'r1b2rk1/1p2bpp1/5n2/1Q2pq2/2P1N3/p3B1Pp/P2RPP1P/3R2KB w - - bm Nxf6+; id \"STS(v10.0) Simplification.083\"; c0 \"Nxf6+=10, Nc3=4, Ng5=2, Qb1=1\";'\n,'r1bq4/3n1pkp/2pRr1p1/8/nPP1PP2/6PP/2Q1N1B1/1R4K1 w - - bm Rxe6; id \"STS(v10.0) Simplification.084\"; c0 \"Rxe6=10, Rdd1=3\";'\n,'r1r1bnk1/5pp1/p2pp3/2q1n1P1/3QP2P/1PN4B/2P1NR1K/3R4 b - - bm Qxd4; id \"STS(v10.0) Simplification.085\"; c0 \"Qxd4=10, a5=5, Bb5=4, Rab8=3\";'\n,'r2qr1k1/2p2pp1/3p1n2/3P1n1p/1Q3P2/1B5P/PP4PB/2R1R2K w - - bm Rxe8+; id \"STS(v10.0) Simplification.086\"; c0 \"Rxe8+=10, Qc4=5, Ra1=4, Rb1=4\";'\n,'r2r2k1/1b1nqpp1/pp5p/2pNP3/P3Q3/5N2/1P3PPP/2RR2K1 b - - bm Bxd5; id \"STS(v10.0) Simplification.087\"; c0 \"Bxd5=10, Kh8=6, Qe6=6, Qe8=6\";'\n,'r2r2k1/4qp2/p5p1/2p4p/5P2/3RP1K1/PPQ4P/3R4 b - - bm Rxd3; id \"STS(v10.0) Simplification.088\"; c0 \"Rxd3=10, h4+=2, Rdb8=2, Re8=4\";'\n,'r3r1k1/2qn3p/1p2ppp1/3b4/p1PP1P2/4QN2/R5PP/1R3BK1 b - - bm Bxf3; id \"STS(v10.0) Simplification.089\"; c0 \"Bxf3=10, Bb7=4, Bc6=5, Bxc4=3\";'\n,'r3r1k1/5pbp/4bpp1/pp2q3/4P1PP/P1NR2Q1/1PP1B3/2KR4 b - - bm Qxg3; id \"STS(v10.0) Simplification.090\"; c0 \"Qxg3=10, Qb8=1, Qc5=2\";'\n,'r3r1k1/6p1/p2p1qp1/1p1P3p/4P1bP/P2Q3B/1PP5/1K2R2R b - - bm Bxh3; id \"STS(v10.0) Simplification.091\"; c0 \"Bxh3=10, Bc8=5, Qxh4=5, Rf8=5\";'\n,'r3r3/p5bk/2pq1ppp/1p1b4/3P4/P2N1N2/1P3PPP/2RQR1K1 b - - bm Rxe1+; id \"STS(v10.0) Simplification.092\"; c0 \"Rxe1+=10, a5=6, h5=7, Rac8=5\";'\n,'r3rbk1/p1qn1p1p/2p1n1p1/Pp2p1B1/1P2P3/2N1Q3/2PN1PPP/1R2R1K1 b - - bm Nxg5; id \"STS(v10.0) Simplification.093\"; c0 \"Nxg5=10, a6=3, Nb8=3, Rac8=4\";'\n,'r4r1k/1bq1bppp/p2p4/1p1Nn3/4PR2/PN1B3Q/1PP3PP/R5K1 b - - bm Bxd5; id \"STS(v10.0) Simplification.094\"; c0 \"Bxd5=10, Bc8=5, Qc8=5, Qd8=1\";'\n,'r4rk1/1p2bppp/p3bn2/8/Pq1BP3/1BN1Q3/1PP3PP/R3K2R w KQ - bm Bxe6; id \"STS(v10.0) Simplification.095\"; c0 \"Bxe6=10, e5=2, O-O-O=2, Rd1=1\";'\n,'r4rk1/pp1qppbp/2n3p1/3b4/3PB2B/2P5/3N1PPP/1R1QR1K1 b - - bm Bxe4; id \"STS(v10.0) Simplification.096\"; c0 \"Bxe4=10, e6=5, Rac8=3, Rfe8=4\";'\n,'r4rk1/pp5p/2pp2pb/2n1nq2/2P2P2/2N1B3/PP2B1PP/2RQR1K1 w - - bm Bxc5; id \"STS(v10.0) Simplification.097\"; c0 \"Bxc5=10, g4=6, Kh1=6, Rf1=6\";'\n,'r4rk1/pppb3p/8/2pPqp2/2P1P1nP/1QN4B/PP5P/4RRK1 w - - bm Bxg4; id \"STS(v10.0) Simplification.098\"; c0 \"Bxg4=10, Qc2=3, Rf4=5\";'\n,'r5k1/5p2/7p/5qP1/1P1QR3/5P2/r4RK1/8 b - - bm Rxf2+; id \"STS(v10.0) Simplification.099\"; c0 \"Rxf2+=10, h5=6, hxg5=6, R2a6=6\";'\n,'rr4k1/p2nBpp1/q1p1pn1p/7P/2pPN3/P1P5/1PQ2PP1/2KR3R b - - bm Nxe4; id \"STS(v10.0) Simplification.100\"; c0 \"Nxe4=10, Rb3=4, Rb5=4\";'\n -- STS11: Activity of the King\n,'1k2r3/1p1bP3/2p2p1Q/Ppb5/4Rp1P/2q2N1P/5PB1/6K1 b - - bm Kc7; id \"STS(v11.0) King Activity.001\"; c0 \"Kc7=10, Kc8=4, Qa1+=4\";'\n,'1k2r3/p7/Pp1pP1p1/4p2p/2r4P/5P1B/4RB1K/8 w - - bm Kg3; id \"STS(v11.0) King Activity.002\"; c0 \"Kg3=10, Kg2=5, Re1=5, Re3=3\";'\n,'1k5r/6p1/p2b4/7p/2r1p2P/R1B1P3/6P1/2R3K1 b - - bm Ka7; id \"STS(v11.0) King Activity.003\"; c0 \"Ka7=10, Bxa3=3, Kb7=4, Rc6=2\";'\n,'1n5k/3r2p1/2p1qp1p/3p1N1P/1P1P1rP1/p1R5/P7/1KRQ4 w - - bm Ka1; id \"STS(v11.0) King Activity.004\"; c0 \"Ka1=10, Re3=2, Rg3=3\";'\n,'1r2r3/1p1b3k/2p2n2/p1Pp4/P2N1PpP/1R2p3/1P2P1BP/3R2K1 b - - bm Kg6; id \"STS(v11.0) King Activity.005\"; c0 \"Kg6=10, Kh6=8, Ne4=8, Nh5=8\";'\n,'1r2rqk1/8/bn1p3p/B1p2p2/p1PnpP2/P3R2Q/1P3NPP/2R2BK1 b - - bm Kh7; id \"STS(v11.0) King Activity.006\"; c0 \"Kh7=10, Re6=3\";'\n,'1R3bk1/7p/6p1/8/1pN3P1/8/r4P1P/6K1 b - - bm Kf7; id \"STS(v11.0) King Activity.007\"; c0 \"Kf7=10, Kg7=1\";'\n,'1r3k2/2N2pp1/1pR2n1p/4p3/8/1P1K1P2/P5PP/8 w - - bm Kc4; id \"STS(v11.0) King Activity.008\"; c0 \"Kc4=10, a4=6, Ke3=2, Nb5=2\";'\n,'1r3k2/3n1p2/6pN/2p1PP2/p2q4/Pr1p2P1/1P1R1R1P/3Q2K1 b - - bm Ke7; id \"STS(v11.0) King Activity.009\"; c0 \"Ke7=10, Ke8=2, Kg7=2\";'\n,'2b4r/1p1k4/1pnbppp1/r2p3p/2pP1P1P/2P2NPB/PPN2P2/R3R1K1 b - - bm Ke7; id \"STS(v11.0) King Activity.010\"; c0 \"Ke7=10, Nd8=3, Re8=2\";'\n,'2k2r1r/1b4p1/1nq1p3/1p5p/5P2/1Pp1B1KP/2B1QRP1/R7 w - - bm Kh2; id \"STS(v11.0) King Activity.011\"; c0 \"Kh2=10, Bd3=7\";'\n,'2k3r1/1b2bp2/2p2n2/pp2p1Bp/2p1P2P/P2n1B2/1P1RN1P1/5K1R b - - bm Kc7; id \"STS(v11.0) King Activity.012\"; c0 \"Kc7=10, a4=3, Ba6=1, c5=2, Kb8=3\";'\n,'2kr1b1r/1bq2pp1/p3pn2/7p/1ppPN2P/4PQ2/PPBB1PP1/R1R3K1 b - - bm Kb8; id \"STS(v11.0) King Activity.013\"; c0 \"Kb8=10, a5=2, Bd5=2, e5=2, Rh6=3\";'\n,'2kr3r/p3p3/1pn2pp1/1R5p/4P2P/2P1BPP1/P3K3/7R b - - bm Kb7; id \"STS(v11.0) King Activity.014\"; c0 \"Kb7=10, Rd6=7, Rd7=7\";'\n,'2q2r2/3bbpkp/r2p4/p1pPp1P1/PpP1P2P/1P3QK1/4RN2/2B3R1 w - - bm Kh2; id \"STS(v11.0) King Activity.015\"; c0 \"Kh2=10, Ng4=6, Qh5=5\";'\n,'2r1b3/p3kpp1/7p/3P4/7P/2p1KPP1/P7/1BR5 w - - bm Kd4; id \"STS(v11.0) King Activity.016\"; c0 \"Kd4=10, Bc2=7, Bf5=7\";'\n,'2r1k2r/1q1bbp2/p4p2/1p2pP1p/8/1N1B2Q1/PPP3PP/1K1RR3 b k - bm Kf8; id \"STS(v11.0) King Activity.017\"; c0 \"Kf8=10, Kd8=6, Rf8=6\";'\n,'2r1r3/1k1b1p2/1p4p1/p3n3/2PRP2p/PP1NK2P/2R3B1/8 b - - bm Kc7; id \"STS(v11.0) King Activity.018\"; c0 \"Kc7=10, Bc6=9, Kc6=9, Rc7=9\";'\n,'2r2bk1/1Q3ppp/p6r/P2BP2q/5Pb1/1P1RR1P1/3B4/6K1 w - - bm Kf1; id \"STS(v11.0) King Activity.019\"; c0 \"Kf1=10, Bc3=8, Bg2=8, Bxf7+=8\";'\n,'2r2k2/4pp2/pp6/2pPn3/4PN1p/1P5P/P4P2/2R2K2 w - - bm Ke2; id \"STS(v11.0) King Activity.020\"; c0 \"Ke2=10, Ng2=3, Rc3=3\";'\n,'2r2k2/p4pp1/b3n2p/8/1pp1P2P/4NPP1/PPB3K1/3R4 w - - bm Kf2; id \"STS(v11.0) King Activity.021\"; c0 \"Kf2=10, Nd5=2, Rd2=1\";'\n,'2r3k1/1q6/4p3/p2p2bp/P2P1n2/2P1NP2/1PB4B/1R2R1K1 b - - bm Kf7; id \"STS(v11.0) King Activity.022\"; c0 \"Kf7=10, Kf8=3, Rf8=6\";'\n,'2r3k1/2r1b3/p3p2p/3n2p1/2N1KP2/P2N2PP/2R5/2R5 b - - bm Kg7; id \"STS(v11.0) King Activity.023\"; c0 \"Kg7=10, Kh7=1\";'\n,'2rb2k1/1p1q3p/1P2b1p1/1N3p2/3B4/4PP1P/1Q4P1/R5K1 w - - bm Kh2; id \"STS(v11.0) King Activity.024\"; c0 \"Kh2=10, Kh1=4, Ra7=3\";'\n,'2rk4/1Rp5/1bBp1r2/4p2p/8/6P1/P1P2P1P/5RK1 w - - bm Kg2; id \"STS(v11.0) King Activity.025\"; c0 \"Kg2=10, c4=4, h4=6\";'\n,'3b4/3k1p2/4p1p1/p1rpP1Pp/R4P2/1P3K2/P2B1P2/8 b - - bm Kc6; id \"STS(v11.0) King Activity.026\"; c0 \"Kc6=10, Bb6=4, Kc8=5\";'\n,'3b4/5p2/2k1p1p1/p1rpP1Pp/R4P2/1P6/P2BKP2/8 b - - bm Kb5; id \"STS(v11.0) King Activity.027\"; c0 \"Kb5=10, Bb6=6, Kb7=6\";'\n,'3k1b1r/pp3p1p/5P2/3Bn3/8/2N5/PP5P/2K4R b - - bm Kc7; id \"STS(v11.0) King Activity.028\"; c0 \"Kc7=10, b6=4, Kc8=4\";'\n,'3q1rk1/5p2/1pQ1p1p1/p2p4/P2P2P1/1P2P3/6RP/6K1 b - - bm Kg7; id \"STS(v11.0) King Activity.029\"; c0 \"Kg7=10, Kh7=3, Qe7=4, Qf6=4, Qh4=4\";'\n,'3q4/p2r1k2/1p1b2nP/1Pp5/2P1Q3/1P2B3/3R1K2/8 w - - bm Kg1; id \"STS(v11.0) King Activity.030\"; c0 \"Kg1=10, Kf1=8\";'\n,'3r1k2/4qp1p/6p1/p3p1P1/P2nQ2P/1B1R4/5PK1/8 b - - bm Kg7; id \"STS(v11.0) King Activity.031\"; c0 \"Kg7=10, Rc8=4, Rd7=4, Re8=4\";'\n,'3r1k2/p4pp1/2n1p2p/1NPr4/P7/6P1/5P1P/2R1RK2 b - - bm Ke7; id \"STS(v11.0) King Activity.032\"; c0 \"Ke7=10, a6=3, g5=4, g6=4\";'\n,'3r1r2/p3bpp1/1p2p1k1/4P2p/2P2P2/5K1P/PP3B2/3R1R2 b - - bm Kf5; id \"STS(v11.0) King Activity.033\"; c0 \"Kf5=10, f5=5, f6=1, Rfe8=5\";'\n,'3r1r2/p3bppk/1p2p2p/4P3/2P2P2/8/PP3BKP/3R1R2 b - - bm Kg6; id \"STS(v11.0) King Activity.034\"; c0 \"Kg6=10\";'\n,'3r2k1/1p4p1/p2P3p/1pPN4/1K4b1/8/2R4P/8 w - - bm Ka5; id \"STS(v11.0) King Activity.035\"; c0 \"Ka5=10, Rd2=5, Rf2=6, Rg2=5\";'\n,'3r2k1/1rq2p2/2bp2pP/p3p2n/4P3/1BN2P2/1PP5/R2RQK2 b - - bm Kh7; id \"STS(v11.0) King Activity.036\"; c0 \"Kh7=10, Nf4=5, Ra7=2\";'\n,'3r2k1/2p2ppp/8/P1b1N3/8/1Bn1nP2/5B1P/4K2R b - - bm Kf8; id \"STS(v11.0) King Activity.037\"; c0 \"Kf8=10, g6=3, Ncd5=1\";'\n,'3r2k1/4pp1p/2q3p1/8/1P6/r1P2P2/P3Q1PP/RKR5 w - - bm Kb2; id \"STS(v11.0) King Activity.038\"; c0 \"Kb2=10, h3=6, Qe1=6, Qe4=5\";'\n,'3r3r/ppk2pb1/4bn1p/3p2p1/3N4/2NR1BP1/PPP1P2P/5RK1 b - - bm Kb8; id \"STS(v11.0) King Activity.039\"; c0 \"Kb8=10, h5=2, Rhe8=1\";'\n,'3r4/6p1/5kBp/7P/6P1/4BP2/1p2K3/8 b - - bm Ke5; id \"STS(v11.0) King Activity.040\"; c0 \"Ke5=10, Ke6=6, Rd5=7, Rd7=7\";'\n,'3R4/6pk/p4p1p/1r1p3P/2pP4/2P1PN2/4bPP1/6K1 w - - bm Kh2; id \"STS(v11.0) King Activity.041\"; c0 \"Kh2=10, Kh1=2\";'\n,'3r4/p3k3/1p2bpp1/2p5/2P2q2/2Q2N2/PP4PP/4R2K w - - bm Kg1; id \"STS(v11.0) King Activity.042\"; c0 \"Kg1=10, b3=9, h3=9, Qc2=9\";'\n,'3rbk2/4pp1p/6p1/3PP3/p1PnN1P1/Nn5P/5PBK/1R6 w - - bm Kg3; id \"STS(v11.0) King Activity.043\"; c0 \"Kg3=10, Nc3=4, Re1=4\";'\n,'3rbk2/5p1p/1p2p3/pP1nr1p1/P2RN1P1/3BP3/3K3P/3R4 b - - bm Ke7; id \"STS(v11.0) King Activity.044\"; c0 \"Ke7=10, Bd7=4, h6=6, Rd7=8\";'\n,'3rr1k1/q4pp1/p1ppbR1p/2P4R/3PP3/2N1Q2P/6P1/6K1 b - - bm Kf8; id \"STS(v11.0) King Activity.045\"; c0 \"Kf8=10, dxc5=3\";'\n,'3rr3/p1k4p/1p3p1b/2p2p1n/5P2/2P1BR2/PP1N3P/1K2R3 b - - bm Kc6; id \"STS(v11.0) King Activity.046\"; c0 \"Kc6=10, Kb7=5, Kc8=5\";'\n,'4k3/1p4pp/p1b2p2/P4P2/1PNp2qN/2nP2P1/3Q1K1P/8 b - - bm Kd8; id \"STS(v11.0) King Activity.047\"; c0 \"Kd8=10, Kf8=2, Qd1=3\";'\n,'4k3/3p3p/p2Pn1p1/Pr2Pp2/5P1P/1NR3P1/5K2/8 w - - bm Ke3; id \"STS(v11.0) King Activity.048\"; c0 \"Ke3=10, h5=7, Ke1=5, Rc8+=4, Rd3=3\";'\n,'4r1k1/1p1q2pp/p4pn1/3p4/3N4/1PPK2RP/P2Q1PP1/8 w - - bm Kc2; id \"STS(v11.0) King Activity.049\"; c0 \"Kc2=10, Qc1=5, Qd1=5\";'\n,'4r1k1/1Q3ppp/2PB4/pb6/8/P1K5/6P1/1r6 w - - bm Kc2; id \"STS(v11.0) King Activity.050\"; c0 \"Kc2=10, c7=7, Kd4=1\";'\n,'4r1k1/2q1p3/2p2pp1/1p1b4/p7/P1Q3R1/1P3PP1/4R1K1 b - - bm Kg7; id \"STS(v11.0) King Activity.051\"; c0 \"Kg7=10, Bf7=8, g5=8, Kf7=8\";'\n,'4r1k1/3b1q2/2pn1p1b/1p3P2/p2PN1PP/P4Q2/1P4R1/4R1K1 b - - bm Kf8; id \"STS(v11.0) King Activity.052\"; c0 \"Kf8=10\";'\n,'4r1k1/5r2/p5p1/6p1/1PbB4/2P2B2/5PP1/R5K1 w - - bm Kh2; id \"STS(v11.0) King Activity.053\"; c0 \"Kh2=10, Be3=8, Ra5=6, Rd1=4\";'\n,'4r1k1/p4p1p/1bpp2p1/3p4/8/1P1Q2P1/P1P1rPKP/5R2 w - - bm Kf3; id \"STS(v11.0) King Activity.054\"; c0 \"Kf3=10, Kg1=2, Qc3=2\";'\n,'4r2r/1p6/2p2n2/p1Pp3k/P2NbPp1/4R3/1P2P2P/2R2BK1 b - - bm Kg6; id \"STS(v11.0) King Activity.055\"; c0 \"Kg6=10, Kh4=4, Ref8=3, Rh7=3\";'\n,'4r3/2R1pk2/3p2pp/2bP1p2/8/1R4P1/5PK1/8 b - - bm Kf6; id \"STS(v11.0) King Activity.056\"; c0 \"Kf6=10, Bd4=8, g5=9, h5=8, Ra8=8\";'\n,'4r3/5k2/2PB4/p4p2/8/1P1R2KP/2P5/5r2 w - - bm Kg2; id \"STS(v11.0) King Activity.057\"; c0 \"Kg2=10, Rd2=1\";'\n,'4r3/5k2/3p1npp/1p1P1p2/p4P2/P3N2P/1P2KP2/2R5 w - - bm Kf3; id \"STS(v11.0) King Activity.058\"; c0 \"Kf3=10, h4=8, Kf1=8, Rc7+=8\";'\n,'4r3/5k2/p2B2r1/2P2p2/1P5p/3R3P/1P3KP1/8 w - - bm Kf3; id \"STS(v11.0) King Activity.059\"; c0 \"Kf3=10\";'\n,'4R3/5pkp/b3p1p1/2Q5/1P6/P2qP3/K7/8 w - - bm Kb2; id \"STS(v11.0) King Activity.060\"; c0 \"Kb2=10, Qc1=4\";'\n,'4rbk1/p2R1p2/2p2p1p/5p2/8/PR2p3/2P3PP/5K2 w - - bm Ke2; id \"STS(v11.0) King Activity.061\"; c0 \"Ke2=10, g3=3, Rc3=3\";'\n,'4rnk1/1p2rp1p/2p3p1/3p1B1P/N4R2/pP2P1R1/P5P1/6K1 w - - bm Kf2; id \"STS(v11.0) King Activity.062\"; c0 \"Kf2=10, e4=5, hxg6=7, Rff3=6\";'\n,'4rrk1/7p/pn1p1npb/N2P4/1P6/5BP1/PB6/3R1RK1 w - - bm Kg2; id \"STS(v11.0) King Activity.063\"; c0 \"Kg2=10, Bxf6=2\";'\n,'5bk1/1r3p2/6p1/2pRP3/8/6P1/3N1PK1/8 b - - bm Kg7; id \"STS(v11.0) King Activity.064\"; c0 \"Kg7=10\";'\n,'5k2/p3np2/2b1p2p/2P2p1P/8/2N1PP2/2K1B1P1/8 b - - bm Ke8; id \"STS(v11.0) King Activity.065\"; c0 \"Ke8=10, Bd7=7, Nd5=8, Ng8=6\";'\n,'5n2/1p2r1kp/1Qp1r1p1/p3Pp2/P6P/4R1P1/1P6/5K2 w - - bm Kg2; id \"STS(v11.0) King Activity.066\"; c0 \"Kg2=10, b3=6, Kg1=7, Re1=9, Re2=8\";'\n,'5r2/1N6/2p2Pk1/p1P1P1p1/3b3p/KP1N2n1/P6R/8 b - - bm Kf5; id \"STS(v11.0) King Activity.067\"; c0 \"Kf5=10, Ne4=1, Nf1=1\";'\n,'5rk1/1p5p/3p2p1/qP1N1n2/2P2P2/8/P4Q1P/4R1K1 w - - bm Kg2; id \"STS(v11.0) King Activity.068\"; c0 \"Kg2=10, Kf1=3, Kh1=5, Rc1=2, Re4=5\";'\n,'5rrk/6qp/2R2b2/1P1pp2Q/5p2/7R/P2B1P2/5K2 w - - bm Ke2; id \"STS(v11.0) King Activity.069\"; c0 \"Ke2=10, Be1=9, Rc1=9, Rh1=9\";'\n,'6k1/5b1p/6p1/r1P5/3pNK2/5P1P/p5P1/R7 b - - bm Kf8; id \"STS(v11.0) King Activity.070\"; c0 \"Kf8=10, h6=6, Kg7=4, Rb5=6\";'\n,'6k1/8/p2Br1r1/2P2p1p/1P6/7P/1P1R2PK/8 w - - bm Kg1; id \"STS(v11.0) King Activity.071\"; c0 \"Kg1=10, Rc2=4, Rf2=2\";'\n,'6r1/1b1k4/2p2p2/ppB1p3/2p1P2P/P2n4/1P1R2P1/5K1R b - - bm Ke6; id \"STS(v11.0) King Activity.072\"; c0 \"Ke6=10, Kc7=4, Ke8=2\";'\n,'6r1/pb3pk1/1p2p3/1Bp1P3/2Pb4/P7/4RPPR/6K1 b - - bm Kf8; id \"STS(v11.0) King Activity.073\"; c0 \"Kf8=10, a6=8, Ba8=8, Rb8=7\";'\n,'6rk/q2p3p/4pp2/1P1n3P/2R5/p4NP1/P4P2/1Q4K1 w - - bm Kg2; id \"STS(v11.0) King Activity.074\"; c0 \"Kg2=10, Nd4=4, Rd4=4\";'\n,'7k/1b1n1pp1/p2Ppq1p/1p5Q/1P1N3P/P3P3/B5P1/6K1 b - - bm Kg8; id \"STS(v11.0) King Activity.075\"; c0 \"Kg8=10, Kh7=6, Nf8=1\";'\n,'7k/1q5p/5prP/1p1pr3/1PbR1QPK/2N3P1/2P5/3R4 w - - bm Kh3; id \"STS(v11.0) King Activity.076\"; c0 \"Kh3=10, R1d2=8, Ra1=9, Rb1=8\";'\n,'7k/3N1p2/p7/3p1rp1/8/1P2P2p/P4n2/2R2NK1 w - - bm Kh2; id \"STS(v11.0) King Activity.077\"; c0 \"Kh2=10, Ng3=6, Rc2=5, Rc8+=6\";'\n,'7k/3r1p2/p1r1p2p/1q1n3P/1PNRQP2/P7/K7/2R5 w - - bm Kb2; id \"STS(v11.0) King Activity.078\"; c0 \"Kb2=10\";'\n,'7r/5p2/3k4/1p1p4/rPnP3P/4P3/4RPN1/1R5K w - - bm Kh2; id \"STS(v11.0) King Activity.079\"; c0 \"Kh2=10, Kg1=7, Nf4=5, Rb3=4\";'\n,'7r/r1p2k1p/1p5B/1bp5/4pPP1/1P2Nn1P/PR3R2/7K b - - bm Kg6; id \"STS(v11.0) King Activity.080\"; c0 \"Kg6=10, Ne1=2, Ra3=2, Rd8=1, Rha8=2\";'\n,'8/1k1r3p/pp3p1R/2pn4/4r3/N1P5/PP5P/2KR4 b - - bm Kc7; id \"STS(v11.0) King Activity.081\"; c0 \"Kc7=10, b5=4, Ree7=4\";'\n,'8/1p2bk2/r7/p2P4/2P5/4B1R1/PP4Pn/1K6 w - - bm Kc2; id \"STS(v11.0) King Activity.082\"; c0 \"Kc2=10, Bd2=2, Bd4=7, Bg1=8\";'\n,'8/2kr3p/5p2/pppn4/4r3/1PP4R/P1N4P/2KR4 b - - bm Kc6; id \"STS(v11.0) King Activity.083\"; c0 \"Kc6=10, c4=4, Re2=5\";'\n,'8/3k3p/2p2p2/2B5/8/1r1b1P1P/3R1KP1/8 b - - bm Ke6; id \"STS(v11.0) King Activity.084\"; c0 \"Ke6=10, Kc7=7, Ke8=7\";'\n,'8/4q1k1/5pp1/pp2b3/2p1P3/P1P1Q1Pp/7P/3R2K1 w - - bm Kf1; id \"STS(v11.0) King Activity.085\"; c0 \"Kf1=10, Qd2=3, Rd5=4\";'\n,'8/4r1n1/1k5p/1p1prp1P/1PpN2p1/p1K1P1R1/P1B3PR/8 w - - bm Kd2; id \"STS(v11.0) King Activity.086\"; c0 \"Kd2=10, Bb1=9, Rh1=9, Rh4=9\";'\n,'8/4r2p/2k2p2/1p1nr3/1Pp5/2P2R2/2NR3P/1K6 b - - bm Kb6; id \"STS(v11.0) King Activity.087\"; c0 \"Kb6=10, f5=6, Rg7=5, Rh5=6\";'\n,'8/p1r1rk1p/2R1pb2/P4p2/1N4p1/1Pp1P1P1/5P1P/2R3K1 w - - bm Kf1; id \"STS(v11.0) King Activity.088\"; c0 \"Kf1=10, a6=7, Kg2=7, Rd6=7, Rxc7=6\";'\n,'8/p3p1k1/1p1p1pp1/4n3/3R3P/1Pr5/P5P1/3R2K1 b - - bm Kh6; id \"STS(v11.0) King Activity.089\"; c0 \"Kh6=10, a5=8, f5=8, Rc2=6\";'\n,'8/pQ3qk1/P2pp2p/2p2n2/2P2PB1/3P3P/8/7K b - - bm Kf6; id \"STS(v11.0) King Activity.090\"; c0 \"Kf6=10, h5=7, Kf8=7, Ng3+=6\";'\n,'8/pr3pbk/6p1/7p/R7/2p1P1P1/2R2P1P/6K1 w - - bm Kf1; id \"STS(v11.0) King Activity.091\"; c0 \"Kf1=10, Kg2=4, Ra5=4\";'\n,'8/R2n4/pr1k2p1/4pp1p/5P2/1N2P1PP/Pn2B1K1/8 w - - bm Kf1; id \"STS(v11.0) King Activity.092\"; c0 \"Kf1=10, Bxa6=3, Kf2=4, Kh2=3\";'\n,'b2q2r1/5p2/2prpkp1/1pN5/p2P1PP1/P3PQ1p/1PB4P/2R3K1 b - - bm Kg7; id \"STS(v11.0) King Activity.093\"; c0 \"Kg7=10, Ke7=4, Qa5=6, Re8=5, Rh8=4\";'\n,'br3rk1/2q1bpp1/pnnpp2p/1p3P2/4P3/PNN1BBQ1/1PPR2PP/1R4K1 b - - bm Kh7; id \"STS(v11.0) King Activity.094\"; c0 \"Kh7=10, Bf6=4, Kh8=8\";'\n,'r1b3qr/3kppb1/p2p4/2pPn1B1/1pP1P3/1N5P/1P2BQP1/1R3RK1 b - - bm Ke8; id \"STS(v11.0) King Activity.095\"; c0 \"Ke8=10\";'\n,'r2r2k1/p4pp1/b6p/8/1pp1Pn2/4NP2/PPB3PP/3RR1K1 w - - bm Kf2; id \"STS(v11.0) King Activity.096\"; c0 \"Kf2=10, g3=4, Nd5=2\";'\n,'r2r4/5qbk/2p3pp/pp2p3/Pn1P1p1Q/4P2N/1P1N1PPP/2RR2K1 b - - bm Kg8; id \"STS(v11.0) King Activity.097\"; c0 \"Kg8=10, Bf6=7, Qe8=2, Qf6=6\";'\n,'r4b1r/pp1k1pp1/4bn1p/3p4/4p3/1NN3P1/PPP1PPBP/3R1RK1 b - - bm Kc7; id \"STS(v11.0) King Activity.098\"; c0 \"Kc7=10, Kc6=7, Ke8=7\";'\n,'r5k1/4pp1p/6p1/3q4/1P6/r1P2P2/PKR1Q1PP/R7 w - - bm Kc1; id \"STS(v11.0) King Activity.099\"; c0 \"Kc1=10, Kb1=3, Kb1=9\";'\n,'R7/2k5/2p2p2/4p3/1pp1P1b1/n7/6P1/2R2K2 b - - bm Kb6; id \"STS(v11.0) King Activity.100\"; c0 \"Kb6=10\";'\n -- STS12: Center Control\n,'1k1r4/4bp2/p1q1pnr1/6B1/NppP3P/6P1/1P3P2/2RQR1K1 w - - bm Re5; id \"STS(v12.0) Center Control.001\";'\n,'1k5r/1pq1b2r/p2p1p2/4n1p1/R3P1p1/1BP3B1/PP1Q3P/1K1R4 w - - bm Bd5; id \"STS(v12.0) Center Control.002\";'\n,'1kb4r/1p3pr1/3b1p1p/q2B1p2/p7/P1P3P1/1P1Q2NP/K2RR3 b - - bm Be5; id \"STS(v12.0) Center Control.003\";'\n,'1kr5/1b3ppp/p4n2/3p4/2qN1P2/2r2B2/PQ4PP/R2R3K b - - bm Ne4; id \"STS(v12.0) Center Control.004\";'\n,'1n1r4/p1q2pk1/b2bp2p/4N1p1/3P1P2/1QN1P3/5PBP/1R5K w - - bm Ne4; id \"STS(v12.0) Center Control.005\";'\n,'1n1rr1k1/1pq2pp1/3b2p1/2p3N1/P1P5/P3B2P/2Q2PP1/R2R2K1 w - - bm Ne4; id \"STS(v12.0) Center Control.006\";'\n,'1n1rr1k1/5pp1/1qp4p/3p3P/3P4/pP1Q1N2/P1R2PP1/1KR5 w - - bm Ne5; id \"STS(v12.0) Center Control.007\";'\n,'1r1r1bk1/1bq2p1p/pn2p1p1/2p1P3/5P2/P1NBB3/1P3QPP/R2R2K1 b - - bm Nd5; id \"STS(v12.0) Center Control.008\";'\n,'1r2qrk1/2p3pp/2Qb1p2/2p1pP2/8/BP6/3P1PPP/R4RK1 w - - bm Qe4; id \"STS(v12.0) Center Control.009\";'\n,'1r2qrk1/4n3/ppbp3p/n1p1p1p1/2P5/B1PP2PP/Q2N1PB1/1R2R1K1 w - - bm Ne4; id \"STS(v12.0) Center Control.010\";'\n,'1r3b2/3R2pk/6q1/3Q1p2/p6P/4B2P/1P3P1K/8 w - - bm Bd4; id \"STS(v12.0) Center Control.011\";'\n,'1r3r1k/6pp/p2p4/q3pb2/2P4P/1P2Q1P1/P4PB1/R4K1R w - - bm Bd5; id \"STS(v12.0) Center Control.012\";'\n,'1r3r1k/7p/p1p1q3/1pP1P3/3P4/Pb6/3Q2BP/2R1R1K1 b - - bm Bd5; id \"STS(v12.0) Center Control.013\";'\n,'1r4k1/p1rnpp2/p2p1bp1/2qP4/4PQ2/1PN4P/P2B2P1/1R3R1K b - - bm Qd4; id \"STS(v12.0) Center Control.014\";'\n,'1rb2rnk/2qn4/pp1p3p/2pP1p2/PPPbp2B/1QN5/R2NBPPP/1R4K1 b - - bm Ne5; id \"STS(v12.0) Center Control.015\";'\n,'2b2q1k/2p4p/1rNn1p2/1p1P4/p3p3/P1P5/1P1Q2PP/1B1R2K1 w - - bm Qd4; id \"STS(v12.0) Center Control.016\";'\n,'2b3k1/1q3pp1/p2R3p/8/Q7/2P1r3/6PP/R5K1 w - - bm Qd4; id \"STS(v12.0) Center Control.017\";'\n,'2br4/2q2k1p/p2bp1p1/1r6/4BP2/2p1B3/P3Q1PP/2R2R1K w - - bm Bd4; id \"STS(v12.0) Center Control.018\";'\n,'2q1rbk1/1b3p2/p4Pp1/1p1p3p/3B4/1P1Q1N1P/1P3PP1/R5K1 w - - bm Ne5; id \"STS(v12.0) Center Control.019\";'\n,'2r1r1k1/p1qn1pp1/1p3n1p/3p4/3P3B/P1NQ4/1P3PPP/2RR2K1 b - - bm Ne4; id \"STS(v12.0) Center Control.020\";'\n,'2r1rbk1/pp2p2p/6p1/n4p2/1NbP4/4PBBP/P4PP1/2RR2K1 w - - bm Nd5; id \"STS(v12.0) Center Control.021\";'\n,'2r2k2/p1q1bpp1/2p2n2/2Np3r/1P5p/P1Q1B2P/5PP1/2R1R1K1 w - - bm Bd4; id \"STS(v12.0) Center Control.022\";'\n,'2r2rk1/1p3ppp/p2q1n2/3pn3/N7/4P2P/PP2BPP1/2RQ1RK1 w - - bm Qd4; id \"STS(v12.0) Center Control.023\";'\n,'2r2rk1/1pp2qpb/1n2p2p/pP1p1P2/P2PPBP1/7P/3NQ3/R1R3K1 w - - bm Be5; c0 \"Be5=10, Bg3=4, Ra3=4, Rf1=4\"; id \"STS(v12.0) Center Control.024\";'\n,'2r3k1/1b2q1pp/1pr1p3/4B3/2P1p3/4P3/4QPPP/1R1R2K1 w - - bm Rd4; c0 \"Rd4=10, h3=2, h4=2, Qg4=2\"; id \"STS(v12.0) Center Control.025\";'\n,'2r3k1/p2npp2/p2p1bp1/3P4/1qN1PQ1P/1P2B3/r5P1/1R3R1K b - - bm Ne5; c0 \"Ne5=10, a5=7, Bd4=10, Qb8=6, Rc7=6\"; id \"STS(v12.0) Center Control.026\";'\n,'2r3k1/ppr2p2/4b2p/4b1p1/P7/2N1P3/1PB2PPP/2RRK3 w - - bm Be4; c0 \"Be4=10, Bd3=6, h3=6, Rd3=6\"; id \"STS(v12.0) Center Control.027\";'\n,'2r4k/5p1p/1prp1q1P/2n1p1p1/p3P1P1/P3BP2/1PP5/1KRR3Q w - - bm Rd5; c0 \"Rd5=10, Qg2=3, Qh3=7, Qh5=5, Re1=6, Rf1=7\"; id \"STS(v12.0) Center Control.028\";'\n,'2r5/1b2kp1p/3qp1p1/1B6/3pn2N/8/PP2QPPP/4R1K1 b - - bm Qd5; c0 \"Qd5=10, Nf6=4, Qf4=5, Rc5=4\"; id \"STS(v12.0) Center Control.029\";'\n,'2r5/1bq2k2/p2pp2r/5p2/2PN1Pp1/1PB1Q3/P5PP/4R1K1 b - - bm Be4; c0 \"Be4=10, g3=1, Qc5=1, Qd7=2\"; id \"STS(v12.0) Center Control.030\";'\n,'2rq1k1r/pp3p2/7p/1BPp1bp1/1P6/P1N1P3/3Q1PPP/2R1K2n w - - bm Qd4; c0 \"Qd4=10, Ke2=4, Kf1=5, Nxd5=5\"; id \"STS(v12.0) Center Control.031\";'\n,'2rq1rk1/p3b1pp/2p1p3/8/P2Pp3/1P1bP1P1/3B3P/2RQRBK1 b - - bm Qd5; c0 \"Qd5=10, Bxf1=1, e5=1\"; id \"STS(v12.0) Center Control.032\";'\n,'2rq1rk1/pb2bppp/1p2pn2/4N3/3P1B2/2PB4/P4PPP/2RQR1K1 b - - bm Qd5; c0 \"Qd5=10, Ba3=7, Nd5=7, Rc7=6\"; id \"STS(v12.0) Center Control.033\";'\n,'2rq1rk1/pb3ppp/1p1p1b2/2n1p3/P1B1P3/1P3N2/2P1RPPP/R1BQ2K1 w - - bm Bd5; c0 \"Bd5=10, Bb2=6, Nd2=3, Rb1=5\"; id \"STS(v12.0) Center Control.034\";'\n,'2rr4/p1N1pk1p/1p4pb/n4p2/2bP4/4PB1P/P1R2PPB/3R2K1 w - - bm d5; c0 \"d5=10, Be5=4, Rdc1=5\"; id \"STS(v12.0) Center Control.035\";'\n,'3r1bk1/3q1p2/4bP1p/pp4pP/2pP4/2P3B1/P1Q3P1/4RRK1 w - - bm Re5; c0 \"Re5=10, a3=1, Re3=4, Rf3=3\"; id \"STS(v12.0) Center Control.036\";'\n,'3r1qk1/6pp/1p1np3/2n4Q/p7/P3N1P1/1B2PP1P/3R2K1 w - - bm Rd4; c0 \"Rd4=10, Bd4=6, f3=3, Nc4=5, Qg4=4, Qh4=3\"; id \"STS(v12.0) Center Control.037\";'\n,'3r1r2/2n3kp/1pp1p1p1/p2nP3/P7/2NR2PB/1P3P1P/3R2K1 w - - bm Ne4; c0 \"Ne4=10, f4=4, Rd4=3\"; id \"STS(v12.0) Center Control.038\";'\n,'3r1r2/2p3k1/1p3b1p/p7/2P1qP1P/1P1R2P1/P4P2/1Q1R2K1 b - - bm Bd4; c0 \"Bd4=10, Rde8=2, Rf7=2, Rxd3=2\"; id \"STS(v12.0) Center Control.039\";'\n,'3r2k1/1p1b1pp1/p1q4p/8/2nNRB2/2P3P1/P4P1P/4Q1K1 b - - bm Qd5; c0 \"Qd5=10, Qb6=2, Qc5=3, Qc8=2\"; id \"STS(v12.0) Center Control.040\";'\n,'3r2k1/3r1pp1/2QP4/pP5p/1qN5/4R1P1/4PK1P/8 w - - bm Re4; c0 \"Re4=10, Rd3=1\"; id \"STS(v12.0) Center Control.041\";'\n,'3r2k1/3r2p1/2q1p2p/1p1n1p2/p7/P3RQ1P/BPP2PP1/3R2K1 w - - bm Re5; c0 \"Re5=10, h4=3, Rd2=3, Rde1=2, Ree1=1\"; id \"STS(v12.0) Center Control.042\";'\n,'3r2r1/BpqP1pkp/6p1/3Qb3/8/2p3P1/PP1R1PBP/5K2 w - - bm Bd4; c0 \"Bd4=10, Bb6=3, bxc3=7, Rd1=5\"; id \"STS(v12.0) Center Control.043\";'\n,'3r4/1p4kp/p1b3p1/2q1p3/P1P5/1B3P1P/4Q1P1/1R5K b - - bm Rd4; c0 \"Rd4=10, a5=3, b6=4, Kf6=4, Kf7=4\"; id \"STS(v12.0) Center Control.044\";'\n,'3rbk2/4np1p/1p2p3/pP2r1p1/P1R1N1P1/3BP3/3K3P/3R4 b - - bm Nd5; c0 \"Nd5=10, Bd7=3, h6=4, Kg7=4\"; id \"STS(v12.0) Center Control.045\";'\n,'4k3/p1p3p1/1pbp2qp/n3p3/2P3PB/2PPQ2P/P3P1B1/6K1 w - - bm Bd5; c0 \"Bd5=10, Bf1=5, Bf2=5, Bxc6+=7\"; id \"STS(v12.0) Center Control.046\";'\n,'4r1k1/1b3pp1/p2pqb2/1p4r1/4PR2/PNN4P/1PP2QP1/5R1K w - - bm Nd4; c0 \"Nd4=10, Nd5=1, Qb6=3\"; id \"STS(v12.0) Center Control.047\";'\n,'4r1k1/1pb1qp2/p1b3p1/3p1rN1/P4P1p/1PPRB1P1/3Q3P/3R2K1 w - - bm Bd4; c0 \"Bd4=10, Bf2=4, Nf3=3, Re1=4, Rf1=4\"; id \"STS(v12.0) Center Control.048\";'\n,'4r1k1/3r1p1p/3p2p1/3P2Q1/4PR2/2n2B1P/5qPK/R7 b - - bm Qd4; c0 \"Qd4=10, Qd2=1, Qe3=1, Ra8=6, Rb7=1\"; id \"STS(v12.0) Center Control.049\";'\n,'4r1k1/4r1pp/p7/3n4/2p1P3/2P1BPN1/P1P4P/1K2R3 w - - bm Bd4; c0 \"Bd4=10, Bd2=7, Kc1=7, Nf5=7\"; id \"STS(v12.0) Center Control.050\";'\n,'4r1k1/p5b1/P2p1pp1/q1pP3p/2Pn1BbP/2NP2P1/3Q2BK/1R6 w - - bm Ne4; c0 \"Ne4=10, Be5=7, Kh1=6, Nb5=10, Rb7=7\"; id \"STS(v12.0) Center Control.051\";'\n,'4r1k1/pb2qp1p/4n2P/3p1pP1/1P1N1Q2/2N5/P1P5/5R1K w - - bm Qe5; c0 \"Qe5=10, Qd2=1\"; id \"STS(v12.0) Center Control.052\";'\n,'4r1k1/R3rpp1/1p3n1p/8/2Q5/4B2P/1q3PP1/3R2K1 w - - bm Bd4; c0 \"Bd4=10, Raa1=3, Rxe7=2\"; id \"STS(v12.0) Center Control.053\";'\n,'4r2k/1q4p1/p2Bp2p/P3P3/1PpN2P1/2Pb2b1/Q7/K2R4 b - - bm Qe4; c0 \"Qe4=10, Qa8=2, Qd7=1, Qf7=1\"; id \"STS(v12.0) Center Control.054\";'\n,'4r3/p4pk1/3p1n1p/1P4p1/4q3/1P4P1/1N1QP2P/4R1K1 b - - bm Qe5; c0 \"Qe5=10, d5=4, Qf5=4, Rb8=4\"; id \"STS(v12.0) Center Control.055\";'\n,'5n2/kbr3p1/5n1p/Pp2pP2/4P1PP/2p5/P1Br4/2RNRNK1 b - - bm Rd4; c0 \"Rd4=10, Ka6=5, Rd8=2, Rdd7=2\"; id \"STS(v12.0) Center Control.056\";'\n,'5r1k/p1r3np/1p3q2/2p4P/2Q2P2/8/PPB5/1K1R1R2 w - - bm Rd5; c0 \"Rd5=10, f5=2, Rfe1=2, Rg1=2\"; id \"STS(v12.0) Center Control.057\";'\n,'5rk1/p3pp1p/2Q2bp1/q1P5/3p4/5BP1/Pr2PP1P/2RR2K1 w - - bm Qe4; c0 \"Qe4=10, a4=6, h4=6, Kg2=3\"; id \"STS(v12.0) Center Control.058\";'\n,'5rk1/pb3ppp/1p3q2/2n5/2B1p3/2P5/P3QPPP/R2R2K1 w - - bm Rd4; c0 \"Rd4=10, a4=4, Bd5=5, Qe1=4, Qe3=5, Rac1=4\"; id \"STS(v12.0) Center Control.059\";'\n,'5rk1/qbrpnppp/p3p3/P2nP3/Np6/1N1B4/1PPQ1PPP/3RR1K1 w - - bm Re4; c0 \"Re4=10, c3=2, c4=2, g3=2\"; id \"STS(v12.0) Center Control.060\";'\n,'5rqk/3b2pp/1pnNp3/3r4/6P1/PQ2B1RP/5PK1/3R4 b - - bm Ne5; c0 \"Ne5=10, Na5=7, Ne7=7, Rxd1=6\"; id \"STS(v12.0) Center Control.061\";'\n,'6k1/1p2p3/2n1P2p/p3b3/2P2p2/1P4qP/P7/1B3QBK w - - bm Be4; c0 \"Be4=10, Bf2=4, Qg2=2\"; id \"STS(v12.0) Center Control.062\";'\n,'6k1/1p3pp1/p3q2p/3p3P/1Pn2Q2/P3PP2/4NKP1/8 w - - bm Qd4; c0 \"Qd4=10, g4=2\"; id \"STS(v12.0) Center Control.063\";'\n,'6k1/4qp2/p6p/1p6/2n2p2/P4Q2/1P4PP/6BK b - - bm Qe5; c0 \"Qe5=10, Qd6=3, Qf6=4, Qg5=1\"; id \"STS(v12.0) Center Control.064\";'\n,'6k1/5p2/p3b2p/1pp4q/4Pp2/1P3P2/P1Q3PP/3B1K2 b - - bm Qe5; c0 \"Qe5=10, c4=2, f6=1, Kh8=3\"; id \"STS(v12.0) Center Control.065\";'\n,'7k/1qr2p2/p3p2p/P1b1P1p1/2Q1n3/1p2BN1P/1P3PP1/2R3K1 w - - bm Nd4; c0 \"Nd4=10, Bd4=1, Kf1=1, Kh2=1\"; id \"STS(v12.0) Center Control.066\";'\n,'8/2p1r1pk/2pq2bp/2p5/2P3Q1/pP1P2NP/P3PRK1/8 b - - bm Qe5; c0 \"Qe5=10, Qd8=7, Re5=7, Re6=7\"; id \"STS(v12.0) Center Control.067\";'\n,'8/3n1kpp/1pr1p3/2n5/pR6/P3NPP1/1B2PK1P/8 w - - bm Bd4; c0 \"Bd4=10, f4=4, Nc4=4, Ng4=4\"; id \"STS(v12.0) Center Control.068\";'\n,'8/6k1/1b1p1pp1/1b1Pp3/2q1P3/6P1/2B2PKN/3Q4 b - - bm Qd4; c0 \"Qd4=10, Bc5=4, Bd4=4, Qa2=4\"; id \"STS(v12.0) Center Control.069\";'\n,'8/pp2r1kp/2prP3/5R2/2P5/3n2P1/P5BP/1R5K w - - bm Be4; c0 \"Be4=10, Bd5=6, Bf1=7, Rb3=7, Rf3=7\"; id \"STS(v12.0) Center Control.070\";'\n,'b4rk1/8/4pr1p/2q5/P4p2/2PB4/6PP/R3QR1K w - - bm Be4; c0 \"Be4=10, Be2=2, Qe4=5, Rb1=4, Rd1=3, Rg1=2\"; id \"STS(v12.0) Center Control.071\";'\n,'brr1n1k1/4bpp1/q2p4/Np2n3/1P1RP2p/2N4P/2P3PB/3RQB1K w - - bm Nd5; c0 \"Nd5=10, Be2=1, Qd2=1, Ra1=1\"; id \"STS(v12.0) Center Control.072\";'\n,'k2r4/2q3p1/p1Pr1p2/P1R1p2P/5pP1/8/1PQp1P2/1K1R4 b - - bm Rd4; c0 \"Rd4=10, Ka7=6, Kb8=6, Rd3=6\"; id \"STS(v12.0) Center Control.073\";'\n,'nr2q1k1/1p2rpb1/p2p2pp/P7/1PRN4/4BBPb/3Q1P1P/2R3K1 w - - bm Bd5; c0 \"Bd5=10, Kh1=5, Ne2=6, R4c2=5\"; id \"STS(v12.0) Center Control.074\";'\n,'r1q1r1k1/1p2b1pp/2p1P1b1/3p1p2/p2N1B2/P1Q1PP1P/1P4P1/2RR2K1 w - - bm Be5; c0 \"Be5=10, Kf2=1, Kh2=2, Rd2=2\"; id \"STS(v12.0) Center Control.075\";'\n,'r1q3k1/p2rnpb1/1pnBb1pp/2p1P3/6P1/2N2N1P/PP2QPB1/R2R2K1 w - - bm Qe4; c0 \"Qe4=10, Qe3=4, Rac1=5, Rd2=5\"; id \"STS(v12.0) Center Control.076\";'\n,'r1r3k1/pb3p1p/1pqBp1p1/4P3/3b4/2P2P2/PR1N2PP/2RQ3K w - - bm Ne4; c0 \"Ne4=10, Qe2=3, Rbb1=1, Rbc2=1\"; id \"STS(v12.0) Center Control.077\";'\n,'r2q1rk1/pp3pbp/3P2p1/4nb2/2p2N2/4B1P1/PP3PBP/R2Q1RK1 w - - bm Qd5; c0 \"Qd5=10, b3=2, Rc1=2, Re1=1\"; id \"STS(v12.0) Center Control.078\";'\n,'r2q3r/1p3pk1/2b1p1p1/2R1P2p/p2P1P1R/P1Q1N1P1/1P3K2/8 b - - bm Be4; c0 \"Be4=10, Rc8=4\"; id \"STS(v12.0) Center Control.079\";'\n,'r2qk2r/3nbpp1/2bBp2p/p3P3/1p6/8/PPPQBPPP/1NKR3R w kq - bm Qd4; c0 \"Qd4=10, f4=5, Qe3=7, Rhg1=5\"; id \"STS(v12.0) Center Control.080\";'\n,'r2r2k1/p2n1p2/4q2p/3p2p1/1PpB4/P1NnPP2/2Q3PP/R2R2K1 b - - bm N7e5; c0 \"N7e5=10, a5=6, a6=6, Nb8=5\"; id \"STS(v12.0) Center Control.081\";'\n,'r2r2k1/pN3p1p/2n1pp2/4q3/2P1P3/1Q6/P4PPP/R4RK1 b - - bm Rd4; c0 \"Rd4=10, Rd2=6, Rd7=7, Rdb8=6\"; id \"STS(v12.0) Center Control.082\";'\n,'r3k2r/2qb1ppp/p3p3/2PpP3/2p2P2/P1P5/4B1PP/1R1Q1RK1 w kq - bm Qd4; c0 \"Qd4=10, c6=7, Rb2=7, Rb6=7\"; id \"STS(v12.0) Center Control.083\";'\n,'r3kb1r/3n1ppp/p1bPp3/1q6/Npp1BB2/8/PP3PPP/2RQR1K1 w kq - bm Qd4; c0 \"Qd4=10, b3=2, Bxc6=4, Qc2=3, Qf3=7\"; id \"STS(v12.0) Center Control.084\";'\n,'r3q1k1/p3r1p1/3R3p/2p5/1p2P3/1P4P1/P1Q4P/4R1K1 b - - bm Re5; c0 \"Re5=10, Qb5=5, Qh5=5, Rc8=4\"; id \"STS(v12.0) Center Control.085\";'\n,'r3qrk1/4bpp1/Rp2pn1p/2p1N3/3P4/2P1P1B1/4QPPP/3R2K1 b - - bm Ne4; c0 \"Ne4=10, cxd4=2, Nd5=1, Rxa6=1\"; id \"STS(v12.0) Center Control.086\";'\n,'r3r1k1/1b2qpp1/p3pn1p/1pPp4/PP1Q3P/1B2PPB1/6P1/R3K2R w KQ - bm Be5; c0 \"Be5=10, axb5=3, Bd6=3, Qb2=3\"; id \"STS(v12.0) Center Control.087\";'\n,'r3r1k1/pp2qpb1/1n2b1pp/8/5B2/1P3NP1/P4PBP/R2QR1K1 w - - bm Be5; c0 \"Be5=10, Bd6=6, Nd2=6, Rc1=2\"; id \"STS(v12.0) Center Control.088\";'\n,'r3r3/2q1bp1k/2N3pp/p1p5/Pp2Q3/4P3/1P3PPP/2RR2K1 w - - bm Qd5; c0 \"Qd5=10, Nxe7=6, Qf3=5\"; id \"STS(v12.0) Center Control.089\";'\n,'r4r1k/p5p1/1qp1bp1p/8/3N4/P1Q1P3/1P4PP/2R2RK1 b - - bm Bd5; c0 \"Bd5=10, Bd7=4, Bf7=5, Bg8=5\"; id \"STS(v12.0) Center Control.090\";'\n,'r4rk1/1pp2qpb/1n2p2p/pP1p1P2/P2PPBP1/7P/3NQ3/R3R1K1 w - - bm Be5; c0 \"Be5=10, Bg3=3, Ra3=3, Rac1=2, Rec1=2, Rf1=1\"; id \"STS(v12.0) Center Control.091\";'\n,'r4rk1/2pb2b1/np1p3p/3P1p2/1PP1pP1q/4B3/2QNN1PP/1R3RK1 w - - bm Bd4; c0 \"Bd4=10, Nd4=1, Rf2=3\"; id \"STS(v12.0) Center Control.092\";'\n,'r4rk1/pb1p2pp/1q1Ppn2/2p5/2P2P2/3BB3/PP2Q1PP/R3K2R b KQ - bm Be4; c0 \"Be4=10, Ne4=6, Qxd6=6, Rab8=6\"; id \"STS(v12.0) Center Control.093\";'\n,'r5k1/3pppbp/6p1/4n3/1q2P3/4B3/P4PPP/2RQ1K1R w - - bm Qd5; c0 \"Qd5=10, h4=1, Qc2=4\"; id \"STS(v12.0) Center Control.094\";'\n,'r5k1/8/r6p/P1q1p3/5p2/2P5/6PP/R3QR1K w - - bm Qe4; c0 \"Qe4=10, Qb1=2, Rb1=2, Rd1=1\"; id \"STS(v12.0) Center Control.095\";'\n,'r5k1/p2b1pbp/6p1/2p5/1nn5/2N3P1/PP1N1P1P/R1B2RK1 b - - bm Ne5; c0 \"Ne5=10, Nb6=2, Nc2=2\"; id \"STS(v12.0) Center Control.096\";'\n,'r5r1/1pp4p/2bn1k1B/p1p1p3/5PP1/1P5P/P1P1R3/R3N1K1 b - - bm e4; c0 \"e4=10, exf4=3, Kg6=2, Nf7=2, Rae8=3\"; id \"STS(v12.0) Center Control.097\";'\n,'r6k/pp1q1pp1/1n6/1pQp4/3Pr2p/P2NP2P/5PP1/2R2RK1 w - - bm Ne5; c0 \"Ne5=10, Qb4=3, Qc7=4, Rb1=4\"; id \"STS(v12.0) Center Control.098\";'\n,'r6r/4kp2/1qbp1p1b/p3pP1N/1pB1P2p/8/PPP1Q1PP/1K2R2R b - - bm Qd4; c0 \"Qd4=10, Bg5=3, Qc5=3, Rac8=3\"; id \"STS(v12.0) Center Control.099\";'\n,'r7/4kp2/3Rp2b/2p1P3/bp3P1P/rB2N3/P1P5/1K1R4 w - - bm Bd5; c0 \"Bd5=10, Nc4=2\"; id \"STS(v12.0) Center Control.100\";'\n -- STS13: Pawn Play in the Center\n,'1k1r4/1p3p2/p1bq1p1p/4p3/3r1P1Q/P5P1/1PP1B2P/K2RR3 b - - bm e4; id \"STS(v13.0) Pawn Play in the Center.001\"; c0 \"e4=10, Qc5=7, Qe6=7, Qe7=7, Re8=7\";'\n,'1k2r1r1/ppp1q1b1/nn1pp3/1N3p1p/1PP2P2/PQ2B1PB/4PK1P/3R2R1 b - - bm e5; id \"STS(v13.0) Pawn Play in the Center.002\"; c0 \"e5=10, Rgf8=3\";'\n,'1kr3r1/1p1nqp2/p2p4/3PpBp1/1PP5/5R1P/P3QP2/R5K1 b - - bm e4; id \"STS(v13.0) Pawn Play in the Center.003\"; c0 \"e4=10\";'\n,'1q1r2k1/3n1bp1/1p2pp2/pNn5/P3PP2/1P2QB2/6NP/3R2K1 w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.004\"; c0 \"e5=10, Be2=5, Nd4=6, Nd6=3, Rb1=7\";'\n,'1q2rrk1/p5bp/2p1p1p1/3p4/5P2/4QBP1/PPP2R1P/1R4K1 b - - bm e5; id \"STS(v13.0) Pawn Play in the Center.005\"; c0 \"e5=10, a6=1, Qc7=2, Rf7=1\";'\n,'1qr1r1k1/5pp1/1p2p2p/1Qbn3b/2R5/3P1NPP/3NPPB1/1R4K1 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.006\"; c0 \"e4=10, d4=2, Ne4=2, Rbc1=1\";'\n,'1qr1r3/5ppk/1p2p2p/1Qbn3b/2R5/3P1NPP/3NPPB1/1R5K w - - bm d4; id \"STS(v13.0) Pawn Play in the Center.007\"; c0 \"d4=10, e3=3, Kg1=3, Ne4=4\";'\n,'1r1r2k1/1p3pp1/pNn1b2p/3p1q2/5B2/P7/1P1Q1PP1/2R1R1K1 b - - bm d4; id \"STS(v13.0) Pawn Play in the Center.008\"; c0 \"d4=10, Kh7=1\";'\n,'1r1r2k1/p1R2ppp/1p6/2n1p1q1/3P4/Q4PP1/PP2B2P/3R2K1 w - - bm d5; id \"STS(v13.0) Pawn Play in the Center.009\"; c0 \"d5=10\";'\n,'1r1rb1k1/2q1bp1p/3ppnp1/8/pn1NPP2/2N2R1P/1PP1B1P1/2QR2BK b - - bm d5; id \"STS(v13.0) Pawn Play in the Center.010\"; c0 \"d5=10, e5=2, Nc6=2\";'\n,'1r2r1k1/2qn1pb1/3p2pp/p1pP4/PpQ1PP2/1P4PP/1B4B1/3RR1K1 w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.011\"; c0 \"e5=10, Ba1=8, Bc1=8, Bxg7=9\";'\n,'1r2r1k1/p2bp1b1/2p1nnpp/qpP2p2/3P3P/P1N1PBPN/1BQ2P2/1R2R1K1 w - - bm d5; id \"STS(v13.0) Pawn Play in the Center.012\"; c0 \"d5=10, Na2=4, Rec1=4, Red1=4\";'\n,'1r2r2k/5pp1/1n2qn1p/3p4/p1pR4/Q3PBNP/PP3PP1/3R2K1 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.013\"; c0 \"e4=10, Ne2=5, Nh5=4, Qc3=6\";'\n,'1r3k1r/1q2bpp1/4pn2/1p4p1/p1pPP1P1/P3P2P/1PQ4R/K1R1BB2 w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.014\"; c0 \"e5=10, Bg2=8, Bg3=8, d5=6, Qe2=8\";'\n,'1r3rk1/1p1qbbp1/2n1pn1p/1Np5/2P5/2BPP1PB/2N1Q2P/1R3RK1 w - - bm d4; id \"STS(v13.0) Pawn Play in the Center.015\"; c0 \"d4=10, Bg2=1, Ne1=2\";'\n,'1r3rk1/1p3ppp/pN2bn2/P1p5/4P3/2P5/1P2B1PP/R4RK1 w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.016\"; c0 \"e5=10, Bf3=2, Rad1=1, Rfe1=1\";'\n,'1r4k1/1br3p1/1ppbp3/p2p1q1p/P1PP1Pp1/1P2P1P1/1Q3NBP/2RR2K1 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.017\"; c0 \"e4=10, cxd5=3, Nd3=6, Qa2=5, Qe2=9\";'\n,'1r6/pp1rqpbk/6p1/P2Bpb2/2P4p/1QN1P1P1/P2R1PKP/3R4 b - - bm e4; id \"STS(v13.0) Pawn Play in the Center.018\"; c0 \"e4=10, Bh6=7, h3+=7, hxg3=6, Rbd8=7, Rdd8=7\";'\n,'1rb1r1k1/2n1ppbp/pq1p2p1/1ppP4/2P1PP2/NP3B1P/P2B1QP1/2R1R1K1 w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.019\"; c0 \"e5=10, Kh1=1\";'\n,'1rb2r1k/2q1bppp/p1pppn2/P7/4P3/1PNQ4/2P1BPPP/R1B3RK b - - bm d5; id \"STS(v13.0) Pawn Play in the Center.020\"; c0 \"d5=10\";'\n,'1rb2rk1/2q2pb1/3p1np1/1pnP2Bp/4P3/1pN2PN1/3QB1PP/1RR3K1 w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.021\"; c0 \"e5=10, Be3=7, Kh1=7, Nxb5=7\";'\n,'1rnr2k1/2Rb2bp/3p2p1/2pPpp2/1p5P/1P1PP1P1/3B1PK1/R4BN1 b - - bm e4; id \"STS(v13.0) Pawn Play in the Center.022\"; c0 \"e4=10, Bb5=9, Be8=9, h6=8\";'\n,'1rnrbk2/2R3bp/3p2p1/1ppPpp2/7P/3PP1P1/1P1B1PK1/R2N1B2 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.023\"; c0 \"e4=10, Kf3=1\";'\n,'1rr5/p2bppkp/3p1np1/p1p5/Pq1PP3/1P2QN1P/2P1NPP1/2R1R1K1 w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.024\"; c0 \"e5=10, dxc5=4, Rcd1=1, Red1=3\";'\n,'2b1k1r1/3nppb1/2pp1npp/qp6/3PP2B/1RNB1N2/P1PQ1PPP/7K w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.025\"; c0 \"e5=10, h3=2\";'\n,'2b1r1k1/pp2rppp/2p3q1/3p4/1P1P4/P1N1PP2/5QPP/4RRK1 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.026\"; c0 \"e4=10, Nd1=8, Qd2=8, Qe2=7, Rc1=8\";'\n,'2br1r1k/4b1pp/pq2pn2/2p5/Pp2PN2/1B2BP2/1PQ2P1P/R5RK b - - bm e5; id \"STS(v13.0) Pawn Play in the Center.027\"; c0 \"e5=10, a5=7, Qc6=7, Qd6=7\";'\n,'2kr4/1p3p2/p1bqpp1p/8/3r1P1Q/3B2P1/PPP4P/K2RR3 b - - bm e5; id \"STS(v13.0) Pawn Play in the Center.028\"; c0 \"e5=10, Bf3=9, f5=7, Qe7=7\";'\n,'2r1r1k1/1pqn1pp1/p2b1n1p/P2Ppb2/R7/2NNB3/1PPQBPPP/3R2K1 b - - bm e4; id \"STS(v13.0) Pawn Play in the Center.029\"; c0 \"e4=10, Bh7=6, Nf8=6, Qb8=7, Qd8=7\";'\n,'2r1r1k1/3n2pp/b1p1pb2/1pPp1p1q/p2PnB1P/P4NP1/1PQNPPB1/R2R1K2 b - - bm e5; id \"STS(v13.0) Pawn Play in the Center.030\"; c0 \"e5=10, Bb7=1, h6=1, Kh8=1\";'\n,'2r1r1k1/5npp/3q4/1QpP1p2/1p6/4PP2/1B2R1PP/2R3K1 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.031\"; c0 \"e4=10, h3=6, Qd3=8, Rec2=8, Ree1=7\";'\n,'2r1r1k1/qp2ppb1/p1np1npp/5b2/2P5/PPN3PP/1BN1PPBK/1RQR4 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.032\"; c0 \"e4=10, e3=2, f3=5, Kg1=2, Rd2=3, Rf1=4\";'\n,'2r2nk1/2q1pp1p/3p2p1/pr6/2P1PP2/1PR3PP/3Q2B1/3R2K1 w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.033\"; c0 \"e5=10, cxb5=6, Qe2=7, Qe3=7, Re1=7\";'\n,'2r2rk1/pp2qpp1/2nbp2p/2Np1b2/1P1Pn3/P3PN2/3BBPPP/R1RQ2K1 b - - bm e5; id \"STS(v13.0) Pawn Play in the Center.034\"; c0 \"e5=10, a6=2, Nxd2=1, Rfd8=1, Rfe8=2\";'\n,'2r3k1/4n1b1/1p1pq1p1/4p3/2r2P1P/P2NP3/1B1Q3P/4RRK1 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.035\"; c0 \"e4=10, fxe5=9, Nb4=9, Qg2=9\";'\n,'2r3k1/4Qp1p/3p2p1/3q4/b1p5/P1b3P1/R3PP1P/1R3BK1 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.036\"; c0 \"e4=10\";'\n,'2r4r/2qb1nk1/3ppp2/p1p5/P3P3/1PR3P1/3NRPK1/3Q1B2 b - - bm d5; id \"STS(v13.0) Pawn Play in the Center.037\"; c0 \"d5=10, Rh6=1, Rh7=1\";'\n,'2rbr1k1/1p1nqp1p/4bn1P/pP2p1p1/N7/P1NRPP2/1Q2BBP1/1K5R w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.038\"; c0 \"e4=10, Bg3=2, Ka1=2\";'\n,'2rq1rk1/6bp/p1npb3/1p1Npp1Q/8/2PBN3/PP3PPP/R3K2R b KQ - bm e4; id \"STS(v13.0) Pawn Play in the Center.039\"; c0 \"e4=10, b4=3, Bxd5=1, Kh8=2, Qd7=1\";'\n,'2rqr2k/pp3pp1/1nb2n2/7p/3pPP2/1P1B2NP/P5P1/RQB2R1K w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.040\"; c0 \"e5=10, Ba3=3, Bb2=1, Re1=3\";'\n,'2rrb1k1/1p3pp1/p1p4p/P5q1/2BP4/1P1RPQP1/5P2/3R1K2 w - - bm d5; id \"STS(v13.0) Pawn Play in the Center.041\"; c0 \"d5=10, Ra1=6, Rc3=6\";'\n,'3qr1k1/1p2npb1/2ppb1pp/4p3/1PP5/R1NP2P1/2NQPPBP/6K1 b - - bm d5; id \"STS(v13.0) Pawn Play in the Center.042\"; c0 \"d5=10, f5=8, h5=2, Kh7=6, Qc7=9, Qd7=2, Rf8=2\";'\n,'3r1k2/5p2/1p2q1p1/p2p4/P7/1P1Q3P/4nPP1/B2R3K b - - bm d4; id \"STS(v13.0) Pawn Play in the Center.043\"; c0 \"d4=10, f5=8, Nf4=8, Rd7=8\";'\n,'3r1r2/1b2qpkp/p2p1np1/1pp5/4P3/P1N1QB2/1PP2PPP/3R1RK1 w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.044\"; c0 \"e5=10, h3=7, Qc1=7, Rfe1=7\";'\n,'3r1rk1/ppqnppb1/n1p3pp/8/N2P4/3QP1P1/PP1B1PBP/R4RK1 b - - bm e5; id \"STS(v13.0) Pawn Play in the Center.045\"; c0 \"e5=10, Ndb8=8, Nf6=8, Rfe8=8\";'\n,'3r2k1/1pp1q2p/p5pb/2n1p2r/5PQ1/P1PP3P/1P5K/1BBR1R2 w - - bm d4; id \"STS(v13.0) Pawn Play in the Center.046\"; c0 \"d4=10, Ba2+=1\";'\n,'3r2rk/1q2b2p/pNb2p2/P4Qn1/1p1p4/4PP2/1P1BB2P/2R2R1K w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.047\"; c0 \"e4=10, b3=7, Bxb4=9, exd4=7, Rc4=7\";'\n,'3rr1k1/1p3p1p/2b1pqp1/p3N3/2PP4/4R1P1/P2Q1P1P/4R1K1 w - - bm d5; id \"STS(v13.0) Pawn Play in the Center.048\"; c0 \"d5=10, a4=4, Rd1=5, Rd3=5\";'\n,'3rr1k1/pp4bp/2p3p1/P4p2/2qPP3/B1P4P/2P3P1/R3QRK1 w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.049\"; c0 \"e5=10, Bc5=1, Qg3=1, Rb1=1\";'\n,'4b3/3k1n2/2pB1p1p/1p3Pp1/1P2P1P1/8/r3BK2/3R4 w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.050\"; c0 \"e5=10, Bc5+=9, Bf8+=9\";'\n,'4r1k1/1p1r1ppb/1qpp1n1p/p7/P1PRPN2/2Q2P2/1P4PP/1B1R2K1 b - - bm d5; id \"STS(v13.0) Pawn Play in the Center.051\"; c0 \"d5=10, Qa7=6, Rdd8=6, Red8=6\";'\n,'4r1k1/1r2ppnp/1q4p1/ppp5/3nP3/1P2QP2/P2R1BPP/2R2B1K b - - bm e5; id \"STS(v13.0) Pawn Play in the Center.052\"; c0 \"e5=10, Rbb8=3, Rc7=3, Rd8=5\";'\n,'4r1k1/2qn1pb1/rn1p2pp/2p5/p1b1PPP1/R1N1B2P/1PP1NQB1/R6K b - - bm d5; id \"STS(v13.0) Pawn Play in the Center.053\"; c0 \"d5=10, Qb8=4, Ra5=3, Ra7=3\";'\n,'4r3/2qnr1k1/4ppp1/p1p4p/p1P2P1P/3PQNP1/1P2R3/4R1K1 b - - bm e5; id \"STS(v13.0) Pawn Play in the Center.054\"; c0 \"e5=10, Qb7=7, Qc6=9, Rb8=9, Rd8=4\";'\n,'4rrk1/p4p1p/1qb3p1/2pp4/8/1P3B2/P1PQ1PPP/R3R1K1 b - - bm d4; id \"STS(v13.0) Pawn Play in the Center.055\"; c0 \"d4=10, Qb7=9, Rd8=9, Rxe1+=9\";'\n,'5k2/4pp1p/r2p2p1/8/6P1/5P2/1R3B1P/2r2BK1 b - - bm e5; id \"STS(v13.0) Pawn Play in the Center.056\"; c0 \"e5=10, f6=9, Ra8=4, Rac6=9\";'\n,'5rk1/1ppqnr2/3p3p/1P4p1/3PPp2/5P2/P2QN2P/2R3RK w - - bm d5; id \"STS(v13.0) Pawn Play in the Center.057\"; c0 \"d5=10\";'\n,'5rk1/1r2bpp1/pp2qn1p/2p5/P7/2N1PPP1/1PQB2KP/2RR4 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.058\"; c0 \"e4=10, b3=1, Ne2=2\";'\n,'5rk1/6p1/2pp4/4q1p1/1PP1PnP1/4Q2P/R7/5BK1 b - - bm d5; id \"STS(v13.0) Pawn Play in the Center.059\"; c0 \"d5=10, Kh8=5\";'\n,'5rk1/rbqnbppp/1p2pn2/2p5/4P3/P1P2NPP/1B1N1P2/R2QRBK1 w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.060\"; c0 \"e5=10, Bb5=2, c4=1, Qc2=2\";'\n,'r1b1kb1r/1p1ppppp/p2q2n1/2pN3Q/8/8/PPPP1PPP/R1B1RBK1 w kq - bm d4; id \"STS(v13.0) Pawn Play in the Center.061\"; c0 \"d4=10, b3=2, c4=3, g3=2, Ne3=1\";'\n,'r1b1r1k1/4q1pp/1bp1pp2/np6/3PN3/3NP1PB/R1Q2P1P/3R2K1 b - - bm e5; id \"STS(v13.0) Pawn Play in the Center.062\"; c0 \"e5=10, Kh8=2, Ra7=2, Rd8=2\";'\n,'r1b1r1k1/ppq2pp1/2n1pn1p/8/2P5/PN4P1/1BP2PBP/R2Q1RK1 b - - bm e5; id \"STS(v13.0) Pawn Play in the Center.063\"; c0 \"e5=10, a5=2, Rb8=2\";'\n,'r1b1r3/pp1nq1kp/2pp2p1/5p2/1PP2P2/1Q2P1PP/P2N2B1/3R1RK1 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.064\"; c0 \"e4=10, Qb2+=2, Qc3+=3, Rfe1=4\";'\n,'r1b2rk1/1p1n1p1p/p5p1/q2p2B1/1bpP4/2N1PN1P/PPQ2PP1/2R2RK1 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.065\"; c0 \"e4=10, Bf4=1, Rfe1=2\";'\n,'r1b2rk1/1p3pb1/pq1Pp1p1/5n1p/2B2P2/1NP2Q2/PP1P2PP/R1B1K2R b KQ - bm e5; id \"STS(v13.0) Pawn Play in the Center.066\"; c0 \"e5=10, a5=7, Bd7=7, Nxd6=7, Qxd6=7\";'\n,'r1b2rk1/p1B1bpp1/q3pn1p/3p4/8/2N3PP/PPQ1PPB1/R3R1K1 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.067\"; c0 \"e4=10, Be5=2, Rac1=2, Rad1=2\";'\n,'r1b3k1/1p1n1qpp/2p1p3/3p1r2/2PP4/1PR5/2QNPPBP/5RK1 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.068\"; c0 \"e4=10, b4=1, Rf3=1\";'\n,'r1br2k1/1p3ppp/p1p5/P5q1/1bBP4/1P2P3/1BQ2PP1/R2R2K1 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.069\"; c0 \"e4=10, Bc3=7, Be2=7, Qe2=7\";'\n,'r1q1nrk1/pp2ppbp/2n3p1/8/Q3P3/N5P1/PB3PBP/3RR1K1 w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.070\"; c0 \"e5=10, Bc1=8, Qb3=8, Qc2=8\";'\n,'r1r1q1k1/1n1b2bp/p4pp1/1p6/2pNP2B/Q1P5/P1B2PPP/3RR1K1 w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.071\"; c0 \"e5=10, Bg3=5, h3=3, Qc1=4, Re2=2\";'\n,'r1r3k1/1pp2ppp/2np1n2/1N6/p1PP4/Q3RNPq/PP3P1P/2R3K1 w - - bm d5; id \"STS(v13.0) Pawn Play in the Center.072\"; c0 \"d5=10, Rce1=4, Re2=3, Ree1=2\";'\n,'r2q1kr1/1b2np2/p2p1p1p/4p3/2N1P3/3B4/PP3PPP/1R1Q1RK1 b - - bm d5; id \"STS(v13.0) Pawn Play in the Center.073\"; c0 \"d5=10\";'\n,'r2q1rk1/1p1n1ppp/6b1/n2B4/Ppp2NP1/4PP2/1P4KP/R1BQ1R2 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.074\"; c0 \"e4=10, Bd2=4, h4=4, Nxg6=3, Qe2=2\";'\n,'r2q1rk1/4nbbp/p2p4/1p3p1Q/4pN2/1BP1N3/PP3PPP/R3K2R b KQ - bm d5; id \"STS(v13.0) Pawn Play in the Center.075\"; c0 \"d5=10, b4=9, Be5=7, Qe8=7\";'\n,'r2qr1k1/1b3pb1/p2p2p1/8/2BNn1P1/2p1B3/P1P5/1NKRQR2 b - - bm d5; id \"STS(v13.0) Pawn Play in the Center.076\"; c0 \"d5=10\";'\n,'r2r1k2/4q1p1/2b2p1p/ppP1pQ2/8/1P2PB2/5PPP/R1R3K1 b - - bm e4; id \"STS(v13.0) Pawn Play in the Center.077\"; c0 \"e4=10\";'\n,'r2r2k1/1b2qppp/p3pn2/R7/2N5/1P1BP3/2Q2PPP/R5K1 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.078\"; c0 \"e4=10, f3=8, Ne5=2, Rd1=2\";'\n,'r2r2k1/1bq2p1p/p3nnpQ/P2pp3/8/2PNN3/1P3PPP/R2R1BK1 b - - bm d4; id \"STS(v13.0) Pawn Play in the Center.079\"; c0 \"d4=10, Ne8=1, Nh5=9, Rab8=6, Rac8=9, Rd7=1\";'\n,'r2r2k1/6bp/1P2q1p1/4pp2/p1N5/2Q5/PPR3PP/4R2K b - - bm e4; id \"STS(v13.0) Pawn Play in the Center.080\"; c0 \"e4=10, Qc6=6, Rab8=2, Rd7=4\";'\n,'r2r2k1/p1q3pp/1p1npp2/2p5/P1PP4/B3PP2/6PP/2RQ1RK1 w - - bm d5; id \"STS(v13.0) Pawn Play in the Center.081\"; c0 \"d5=10, dxc5=8, Qb3=8, Re1=7\";'\n,'r2r2k1/pbq2ppp/1p3n2/4p3/2PP4/PB1Q4/1B3PPP/R4RK1 w - - bm d5; id \"STS(v13.0) Pawn Play in the Center.082\"; c0 \"d5=10, f3=1, Rfd1=1\";'\n,'r2r2k1/pp2ppbp/2q3p1/2pnP3/2Q5/1P4P1/PB2PPNP/R2R2K1 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.083\"; c0 \"e4=10, a4=3, f4=2, Ne1=2, Rac1=8\";'\n,'r2r2k1/ppq1p2p/1np1p1p1/2B5/P7/3P3P/1P2QPP1/R3R1K1 b - - bm e5; id \"STS(v13.0) Pawn Play in the Center.084\"; c0 \"e5=10, Qc8=7, Qd7=7, Rf8=7\";'\n,'r2r2k1/ppq2pp1/2p1pnbp/8/3P3P/1QP2P2/P3P2P/R1B2BRK w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.085\"; c0 \"e4=10, Bd2=4, Be3=4, Rg2=4\";'\n,'r2r2k1/ppq2pp1/5nnp/1B3b2/2PPp3/P6P/1B1NQPP1/2R2RK1 w - - bm d5; id \"STS(v13.0) Pawn Play in the Center.086\"; c0 \"d5=10, Ba1=1, Ba4=2, Qe3=5\";'\n,'r2r3k/p2qppbp/1pn2np1/2p5/2P2P2/B1N1PN2/P2PQ1PP/3R1R1K w - - bm d4; id \"STS(v13.0) Pawn Play in the Center.087\"; c0 \"d4=10, d3=1\";'\n,'r2r4/2q1bp1k/1nb1p1pp/p1ppP3/P1P2P2/1P3BPP/1N2QB2/2RR2K1 b - - bm d4; id \"STS(v13.0) Pawn Play in the Center.088\"; c0 \"d4=10, dxc4=2, Rab8=1\";'\n,'r3kb1r/1q1n2p1/2bpp1Pp/pN3p2/1p1BP2P/P2B1P2/1PP5/2KR1Q1R b kq - bm e5; id \"STS(v13.0) Pawn Play in the Center.089\"; c0 \"e5=10\";'\n,'r3r1k1/1p2bppp/nqp2n2/p5B1/2bPP3/P1N3P1/1P2N1BP/R1Q2RK1 w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.090\"; c0 \"e5=10, Bf3=7, Kh1=7, Rf5=7\";'\n,'r3r1k1/1p2qpp1/1bp2n1p/2n1pP2/p5P1/B6P/PPPNQPB1/R2R2K1 b - - bm e4; id \"STS(v13.0) Pawn Play in the Center.091\"; c0 \"e4=10, Ba7=3, Bc7=6, Nd5=5, Qc7=5\";'\n,'r3r1k1/4npbp/bqnpp1p1/2p3P1/1p2PP2/3PN3/1PPQNBBP/1R3RK1 b - - bm d5; id \"STS(v13.0) Pawn Play in the Center.092\"; c0 \"d5=10\";'\n,'r3r1k1/5pp1/1qp3bp/p2pP3/8/P1Q3N1/1P3PPP/2R1R1K1 b - - bm d4; id \"STS(v13.0) Pawn Play in the Center.093\"; c0 \"d4=10\";'\n,'r3r1k1/pp4pp/2pnqpn1/3p1b2/3P4/P1NBPN2/1PQ2PPP/2R1R1K1 w - - bm e4; id \"STS(v13.0) Pawn Play in the Center.094\"; c0 \"e4=10\";'\n,'r4r1k/1bq3p1/pp1bpn1p/2pp4/3P3Q/1NP1B3/PP2BPPP/R4RK1 b - - bm e5; id \"STS(v13.0) Pawn Play in the Center.095\"; c0 \"e5=10, a5=5, Bc8=3, Kg8=3, Rac8=3, Rf7=2\";'\n,'r4rk1/1p1qppbp/1n1p2p1/1PpP3n/p3P3/2NQ1N1P/1PPB1PP1/R3R1K1 w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.096\"; c0 \"e5=10, Bg5=3, Ra2=3, Ra3=2\";'\n,'r4rk1/2p1bppp/p2p1n2/1p6/3PP3/1QN1BP1q/PP3P1P/2R1R1K1 w - - bm e5; id \"STS(v13.0) Pawn Play in the Center.097\"; c0 \"e5=10, Bf4=8, Nd5=7, Qd1=7\";'\n,'r4rk1/3qbppp/p1np1n2/1pp4b/3PP3/PB2BN1P/1P1N1PP1/RQ2R1K1 w - - bm d5; id \"STS(v13.0) Pawn Play in the Center.098\"; c0 \"d5=10, Bc2=1\";'\n,'r4rk1/pbp5/1p1p1n1p/5Bp1/P1PP4/4q3/1P1N2PP/2RQ1R1K w - - bm d5; id \"STS(v13.0) Pawn Play in the Center.099\"; c0 \"d5=10, Bb1=4, Nf3=1\";'\n,'rq3k2/1p3bp1/2p1pp1p/2P5/1P2PPP1/4Q2P/6BK/3R4 b - - bm e5; id \"STS(v13.0) Pawn Play in the Center.100\"; c0 \"e5=10, Kg8=8, Qa7=8, Qc7=8\";'\n -- STS14: Queens and Rooks 7th Rank\n,'1k5r/1p1b4/4pp1r/3p4/q4PQ1/3B1R1P/2P1R1PK/8 w - - bm Qg7; id \"STS(v14.0) 7th Rank.001\"; c0 \"Qg7=10, Qg3=3, Re1=3, Ree3=2, Ref2=2\";'\n,'1n1r1rk1/4bpp1/p2p3p/1q1Qp3/1P2P3/P3BN1P/5PP1/2R1R1K1 w - - bm Rc7; id \"STS(v14.0) 7th Rank.002\"; c0 \"Rc7=10, Nd2=6, Qxb5=8, Red1=6\";'\n,'1n2r3/ppb2kp1/5p1p/2p2N1P/6P1/2B5/PPP2P2/2KR4 b - g3 bm Re2; id \"STS(v14.0) 7th Rank.003\"; c0 \"Re2=10, Bb6=7, Bf4+=7, Re4=7\";'\n,'1r1n4/5pk1/Qp1r1qp1/3B3p/1R2P2P/6P1/5P2/1R4K1 w - - bm Qa7; id \"STS(v14.0) 7th Rank.004\"; c0 \"Qa7=10\";'\n,'1r1q2k1/3b1pb1/p2p2p1/3Np3/4P1P1/1P1Q1P2/KP1B4/2R5 w - - bm Rc7; id \"STS(v14.0) 7th Rank.005\"; c0 \"Rc7=10, g5=5, Rc2=7, Rc3=5\";'\n,'1r1r2k1/4pp2/1PR3p1/p2P1n1p/1p1q1Q2/5P1P/2B1RPPK/8 w - - bm Qc7; id \"STS(v14.0) 7th Rank.006\"; c0 \"Qc7=10, Qc1=1, Re4=1\";'\n,'1r1r4/5ppk/4pb2/7p/PN3P2/1Rp3P1/2P3P1/4RK2 b - - bm Rd2; id \"STS(v14.0) 7th Rank.007\"; c0 \"Rd2=10, Be7=5, h4=6, Rd4=7\";'\n,'1r1r4/6bk/p1Rp2p1/P6p/1q1pPB1P/5PP1/Q4K2/2R5 w - - bm Rc7; id \"STS(v14.0) 7th Rank.008\"; c0 \"Rc7=10, Bd2=7, Kg2=6, R1c4=6\";'\n,'1r2r1k1/1b1n1ppp/1p2p3/1N1pP3/Pb3P2/4BB2/1PR3PP/R6K w - - bm Rc7; id \"STS(v14.0) 7th Rank.009\"; c0 \"Rc7=10, Bd2=2, Kg1=1, Nd6=3, Rac1=1\";'\n,'1r2r2k/B1p2p1p/p2p2p1/4b3/n1P1P1P1/5B2/P4P1P/1R3RK1 b - - bm Rb2; id \"STS(v14.0) 7th Rank.010\"; c0 \"Rb2=10, Ra8=1, Rbc8=1, Rxb1=6\";'\n,'1r3rk1/qn2n2p/3p1p2/pp1Pp1p1/1N2P3/QP5P/P1R2PP1/2R2NK1 w - - bm Rc7; id \"STS(v14.0) 7th Rank.011\"; c0 \"Rc7=10, Nc6=3, Ne3=2, Ng3=3, Rd1=6\";'\n,'1r4k1/3b2pp/4p3/2bpq3/3N4/2PB4/P4QPP/5RK1 w - - bm Qf7+; id \"STS(v14.0) 7th Rank.012\"; c0 \"Qf7+=10, Kh1=8, Qc2=9, Re1=9\";'\n,'1r4k1/6b1/2r1n2p/2pRp1p1/2P3P1/4BK2/R2N1P1P/8 w - - bm Ra7; id \"STS(v14.0) 7th Rank.013\"; c0 \"Ra7=10, Kg3=8, Ne4=3, Ra5=7, Rd7=8\";'\n,'1r4k1/pp3p2/3p1B2/3P3p/2R5/7P/P1P3P1/2b4K w - - bm Rc7; id \"STS(v14.0) 7th Rank.014\"; c0 \"Rc7=10, Be7=8, g3=8, Kg1=4, Kh2=7\";'\n,'1r4k1/qr1p2p1/2n1p2p/2b1P2P/2BpPB2/p2P4/3Q1PPK/R1R5 b - - bm Rb2; id \"STS(v14.0) 7th Rank.015\"; c0 \"Rb2=10, Bb4=5, Kh7=4, Rb6=4\";'\n,'1r6/5pk1/Qp1rnqp1/3B3p/1R2P2P/6P1/5PK1/1R6 w - - bm Qa7; id \"STS(v14.0) 7th Rank.016\"; c0 \"Qa7=10, Qc4=6, Qe2=6, R4b2=6\";'\n,'1rb1k2r/2qpbppp/p3pn2/1p2n3/3QP3/PNN1BP2/1PP3PP/2KR1B1R w k - bm Qa7; id \"STS(v14.0) 7th Rank.017\"; c0 \"Qa7=10, Be2=3, h4=3, Kb1=3, Na5=3\";'\n,'1rbqr1k1/3n1pbp/p2Q2p1/2pN4/1pP1n3/5NPP/PP3PB1/1RB1R1K1 w - - bm Qc7; id \"STS(v14.0) 7th Rank.018\"; c0 \"Qc7=10, Qc6=2, Qf4=3\";'\n,'2b4r/5kpp/p2q4/1p1p1P2/2n3P1/8/PPP2Q1P/1K1RR3 w - - bm Qa7+; id \"STS(v14.0) 7th Rank.019\"; c0 \"Qa7+=10, b3=3, g5=2, Qd4=2, Rd3=1\";'\n,'2k5/p1pb1p2/1p4p1/2p1P3/2P2KPb/1P2N2r/PB1R1P2/8 b - - bm Rh2; id \"STS(v14.0) 7th Rank.020\"; c0 \"Rh2=10, a5=4, g5+=6, Rh1=4\";'\n,'2qb1rk1/1brn1pp1/3p3p/1B1Pp3/4P1P1/R3BN1P/4QP1K/1R6 w - - bm Ra7; id \"STS(v14.0) 7th Rank.021\"; c0 \"Ra7=10, Bd3=7, Bxd7=9, Nd2=9, Qb2=7\";'\n,'2r1kb1r/1b1p1ppp/p3pn2/qp6/3QPP2/2N1BB2/PPPR2PP/2K4R w k - bm Qa7; id \"STS(v14.0) 7th Rank.022\"; c0 \"Qa7=10, e5=2, Kb1=1, Rd3=3, Re1=3\";'\n,'2r1N3/pp3p1k/2p3p1/2n5/7P/5KP1/PP3P2/4R3 w - - bm Re7; id \"STS(v14.0) 7th Rank.023\"; c0 \"Re7=10, b4=2, Nd6=2, Re5=2\";'\n,'2r2k2/5p2/R1b2p2/1pP1p2p/1Pp1P2P/2K2P2/5BP1/8 w - - bm Ra7; id \"STS(v14.0) 7th Rank.024\"; c0 \"Ra7=10, Be3=5, Bg1=3, Kd2=3\";'\n,'2r2r1k/3n3p/3q2p1/4p1Q1/Pp1bp1NN/1P2B2P/4nPP1/1R1R3K b - - bm Rc2; id \"STS(v14.0) 7th Rank.025\"; c0 \"Rc2=10, Qe6=3\";'\n,'2r2rk1/4pp2/Qp3qp1/3B3p/3nP3/8/P4PPP/1R1R2K1 b - - bm Rc2; id \"STS(v14.0) 7th Rank.026\"; c0 \"Rc2=10, e6=3, h4=4, Kg7=3\";'\n,'2r2rk1/p4ppp/bp2p3/3pB3/1b1PP1P1/qP2Q3/P4PBP/R1R3K1 b - - bm Qb2; id \"STS(v14.0) 7th Rank.027\"; c0 \"Qb2=10, f6=6, Rxc1+=2\";'\n,'2r3k1/1qpbbppp/3p4/Qp1P4/3p4/1B1P4/1PPB1PPP/R5K1 w - - bm Qa7; id \"STS(v14.0) 7th Rank.028\"; c0 \"Qa7=10, f3=6, Qa6=8, Ra2=8\";'\n,'2r3k1/3q2p1/3b1p1p/1p1PpP2/1Pp1B3/2P4P/Q5P1/R5K1 w - - bm Qa7; id \"STS(v14.0) 7th Rank.029\"; c0 \"Qa7=10, Kf2=6, Kh2=6, Qa6=7\";'\n,'2r3k1/4bqp1/p3p3/1p5p/2n2P1P/P2Q1N2/1PP5/1KBR4 w - - bm Qd7; id \"STS(v14.0) 7th Rank.030\"; c0 \"Qd7=10, Ng5=4, Qe2=4, Re1=4, Rg1=4\";'\n,'2r3k1/4np2/p3p1p1/1q1r1n1p/1p1P4/PN5R/1P2NPPP/3RQ1K1 b - - bm Rc2; id \"STS(v14.0) 7th Rank.031\"; c0 \"Rc2=10, bxa3=6, Rd6=7, Rdd8=8\";'\n,'2r3k1/5pp1/p3n3/4p2p/1QP1P3/1PR2P2/P6q/1KB5 w - - bm Qb7; id \"STS(v14.0) 7th Rank.032\"; c0 \"Qb7=10, Qa3=8, Qa4=8, Qa5=8, Qd6=8, Rd3=8\";'\n,'2r3k1/p1q1np2/2P1pp1p/P7/8/3Q1BPP/5PK1/2R5 w - - bm Qd7; id \"STS(v14.0) 7th Rank.033\"; c0 \"Qd7=10, Qa6=5, Qd2=5, Qd4=7\";'\n,'3q1rk1/5b2/5Rp1/p1p1p1P1/2P1PP2/1P4Qp/4B2K/8 b - - bm Qd2; id \"STS(v14.0) 7th Rank.034\"; c0 \"Qd2=10, a4=8, Be8=8, exf4=7\";'\n,'3q1rk1/5ppp/pp1p4/6b1/2rNQ3/6P1/PP2PP1P/R2R2K1 w - - bm Qb7; id \"STS(v14.0) 7th Rank.035\"; c0 \"Qb7=10, b3=4, e3=3, Qd5=4\";'\n,'3q4/5ppk/2p1n2p/2n1pN1P/4P3/Q1P2PP1/6BK/8 w - - bm Qa7; id \"STS(v14.0) 7th Rank.036\"; c0 \"Qa7=10, Kg1=1, Kh1=1, Nh4=1, Qb2=1, Qb4=1\";'\n,'3qr3/2p1kp2/1p4pQ/1P1P3p/7P/6P1/5P2/3R2K1 w - - bm Qg7; id \"STS(v14.0) 7th Rank.037\"; c0 \"Qg7=10, d6+=7, Kg2=3, Qd2=2, Rd4=2\";'\n,'3qr3/5pkp/p1npb1p1/3N4/2PpPP2/6P1/PQ4BP/1R5K w - - bm Qb7; id \"STS(v14.0) 7th Rank.038\"; c0 \"Qb7=10, Qa3=2, Rf1=1\";'\n,'3r1k2/1p3p1Q/p1br1p2/2p1pB2/2P1PP2/2q5/P5PP/1R2R1K1 b - - bm Rd2; id \"STS(v14.0) 7th Rank.039\"; c0 \"Rd2=10, Ke7=2, Qxc4=2, Rd3=2\";'\n,'3r2k1/2R2pp1/p4n1p/1p3P2/1P6/5B1P/P5P1/6K1 b - - bm Rd2; id \"STS(v14.0) 7th Rank.040\"; c0 \"Rd2=10, Nd5=6, Rd3=8, Rd4=7\";'\n,'3r2k1/6pp/1pq5/p2pR3/3Q4/P5P1/1P3P1P/6K1 w - - bm Re7; id \"STS(v14.0) 7th Rank.041\"; c0 \"Re7=10, b4=6, h4=4, Kg2=3, Re3=5\";'\n,'3r2k1/p2n1p1p/2p1p1p1/P7/3P4/P2B4/5PPP/1R4K1 w - - bm Rb7; id \"STS(v14.0) 7th Rank.042\"; c0 \"Rb7=10, Bc2=8, Be2=8, Bf1=8, Kf1=8\";'\n,'3r2k1/p3pp1p/6p1/2p5/2P1n3/RP2P1P1/4KP1P/B7 b - - bm Rd2+; id \"STS(v14.0) 7th Rank.043\"; c0 \"Rd2+=10, f6=3, Nd2=2, Rd7=3\";'\n,'3r2k1/pp3bbp/3q1p2/2p5/5pQ1/1P3N2/P3R1PP/4R2K w - - bm Re7; id \"STS(v14.0) 7th Rank.044\"; c0 \"Re7=10\";'\n,'3r2r1/3kp1P1/2p5/1q1pP3/1p6/1Pb2Q2/PN4R1/1K1R4 w - - bm Qf7; id \"STS(v14.0) 7th Rank.045\"; c0 \"Qf7=10, Nd3=8, Qe3=4, Rc1=5\";'\n,'3r3k/p4p1p/b4Prp/1p2R3/1P1p4/6PP/P4PB1/3R2K1 w - - bm Re7; id \"STS(v14.0) 7th Rank.046\"; c0 \"Re7=10, Rd2=4, Re4=6, Rf5=7\";'\n,'3r4/3r2bk/1p4pp/pN2n3/P6P/4Q1P1/1P2B1K1/8 b - h3 bm Rd2; id \"STS(v14.0) 7th Rank.047\"; c0 \"Rd2=10, h5=7\";'\n,'3r4/3rq1k1/1R1p2pp/1Rp1p3/P3N3/2P1nP2/1Q4PP/6K1 w - - bm Rb7; id \"STS(v14.0) 7th Rank.048\"; c0 \"Rb7=10, Qa2=4, Qe2=5, Rc6=4\";'\n,'3rk3/1p3pQp/p4R2/3p4/2P5/1P2q1P1/P1K4P/8 b - - bm Qe2+; id \"STS(v14.0) 7th Rank.049\"; c0 \"Qe2+=10, Kd7=7, Qe4+=7, Qe7=7\";'\n,'3rkb1r/pp2pppp/1n2q3/8/7Q/2P5/PP3PPP/RNB2RK1 b k - bm Qe2; id \"STS(v14.0) 7th Rank.050\"; c0 \"Qe2=10, Qc6=1, Qd5=1, Qf5=1\";'\n,'4b3/p2nP1k1/1r2R1p1/q1p5/2Br2P1/1P2QP2/P1P5/4R1K1 b - - bm Qd2; id \"STS(v14.0) 7th Rank.051\"; c0 \"Qd2=10, Rb8=6, Rd2=5, Rdd6=6, Rxe6=6\";'\n,'4n3/7k/2Q3pb/1ppPp3/2q1P3/r5PP/1RB2BK1/8 b - - bm Qe2; id \"STS(v14.0) 7th Rank.052\"; c0 \"Qe2=10\";'\n,'4q1k1/2p2pp1/p6p/Pr1P4/2p1P3/2P3P1/r6P/3QRR1K b - - bm Rbb2; id \"STS(v14.0) 7th Rank.053\"; c0 \"Rbb2=10, c6=6, Qe7=4, Rbxa5=6\";'\n,'4r1k1/1p3p2/2p3p1/8/6P1/3r2P1/n5BP/N4RBK b - - bm Re2; id \"STS(v14.0) 7th Rank.054\"; c0 \"Re2=10\";'\n,'4r1k1/1p6/pB3p2/P1R2Pp1/1P2b1r1/4P3/2N4b/2KR4 b - - bm Rg2; id \"STS(v14.0) 7th Rank.055\"; c0 \"Rg2=10, Bc6=5, Be5=7, Bf3=5\";'\n,'4rk2/4p2p/3p1pp1/1p1P4/1Pq2P1P/P2RQ3/2r3P1/4R1K1 b - - bm Qa2; id \"STS(v14.0) 7th Rank.056\"; c0 \"Qa2=10, Kg7=3, Kg8=3, Qc8=6, Rb2=4\";'\n,'5k2/1p1b2p1/pq2p1Q1/3p2P1/8/8/PPP1N2P/1K6 b - - bm Qf2; id \"STS(v14.0) 7th Rank.057\"; c0 \"Qf2=10, Kg8=7, Qd6=7, Qe3=5\";'\n,'5k2/1p1r1pp1/6b1/q1r1pNPp/1Nn1P2P/p1P2Q2/P4P2/K1RR4 b - - bm Rd2; id \"STS(v14.0) 7th Rank.058\"; c0 \"Rd2=10, Nd2=2, Qc7=1, Rcc7=4, Rxd1=3\";'\n,'5k2/5p2/3p2p1/p3q1P1/6b1/P1NR4/1PP2r2/1KQ5 b - - bm Qh2; id \"STS(v14.0) 7th Rank.059\"; c0 \"Qh2=10, Be6=4, Bf5=1, Qf5=3, Rh2=1\";'\n,'5r1k/p2nq1pp/8/P7/1b1Pp3/1B3p1P/2Q2PP1/2B2RK1 w - - bm Qc7; id \"STS(v14.0) 7th Rank.060\"; c0 \"Qc7=10\";'\n,'5r2/6k1/3p3p/1p1Qbbp1/1PP5/6NP/1q5P/4RB1K w - - bm Qb7+; id \"STS(v14.0) 7th Rank.061\"; c0 \"Qb7+=10, Bg2=8, c5=8, cxb5=8\";'\n,'5rk1/5bpp/8/r2p1P2/3Bp1P1/1BR1P1K1/1n5P/2R5 w - - bm Rc7; id \"STS(v14.0) 7th Rank.062\"; c0 \"Rc7=10, Rc5=5, Rc6=4, Rc8=4\";'\n,'6k1/1b2bp2/p3p2p/4P1p1/1pr5/4BP1P/PP2N1P1/3R2K1 b - - bm Rc2; id \"STS(v14.0) 7th Rank.063\"; c0 \"Rc2=10, Bc5=3, Bd5=4, Kf8=2, Rc7=4\";'\n,'6k1/1p3pb1/p2qp1np/7p/Q7/4N1BP/PPP2PP1/6K1 b - - bm Qd2; id \"STS(v14.0) 7th Rank.064\"; c0 \"Qd2=10, Be5=2, Qb6=4, Qd8=2\";'\n,'6k1/2nr2p1/2R2p1p/R2n3P/p2P4/r4NN1/5PP1/6K1 w - - bm Ra7; id \"STS(v14.0) 7th Rank.065\"; c0 \"Ra7=10, Nf5=3, Rcc5=1\";'\n,'6k1/5p1p/4pPpP/3p4/qpnB1P2/rN4P1/2B3K1/3Q4 b - - bm Ra2; id \"STS(v14.0) 7th Rank.066\"; c0 \"Ra2=10\";'\n,'7k/4p1q1/3pnbr1/8/1N5p/1NPP1P2/PP6/K1R3BR b - - bm Rg2; id \"STS(v14.0) 7th Rank.067\"; c0 \"Rg2=10, Kg8=5, Nf4=7, Qh6=6, Qh7=6\";'\n,'7k/rr4p1/4qnQp/8/2P1p3/p3N2P/R4PP1/5RK1 b - - bm Rb2; id \"STS(v14.0) 7th Rank.068\"; c0 \"Rb2=10, Qe7=1\";'\n,'7r/4k1p1/p2pP1p1/n2P4/1p2N2r/1P3P2/P2R2K1/4R3 b - - bm Rh2+; id \"STS(v14.0) 7th Rank.069\"; c0 \"Rh2+=10, Nb7=7, Nxb3=7, Rc8=7\";'\n,'7r/8/5p1r/P3p1k1/1p1bP1p1/p2N4/P1PR2P1/1K3R2 b - - bm Rh2; id \"STS(v14.0) 7th Rank.070\"; c0 \"Rh2=10, Kg6=6, Rc8=6, Ra8=7, Rh1=9\";'\n,'8/5nkq/1rNp1pp1/2pPp1p1/1n2P1P1/1PN2P2/6P1/R2Q2K1 w - - bm Ra7; id \"STS(v14.0) 7th Rank.071\"; c0 \"Ra7=10, Na4=2, Nb1=2, Qd2=2, Ra8=2\";'\n,'8/5pk1/3p2p1/p1q3Pn/5rb1/1BN5/PPPQ4/1K2R3 b - - bm Rf2; id \"STS(v14.0) 7th Rank.072\"; c0 \"Rf2=10, Bf3=8, Bf5=8, Qxg5=8\";'\n,'qr4k1/6b1/r6p/P2p1pp1/1B1P4/Q2NP1P1/5P1P/2R3K1 w - - bm Rc7; id \"STS(v14.0) 7th Rank.073\"; c0 \"Rc7=10\";'\n,'r1b1k2r/pp2pp1p/1qnp2p1/8/2P1P1n1/2Q2P2/PPN3PP/1RB1KB1R b Kkq - bm Qf2+; id \"STS(v14.0) 7th Rank.074\"; c0 \"Qf2+=10, Nce5=8, Nf6=6, Nge5=8\";'\n,'r1b1k2r/ppp2p1p/2n2p2/1B1q4/8/6Q1/PPP2PPP/R3K1NR w KQkq - bm Qg7; id \"STS(v14.0) 7th Rank.075\"; c0 \"Qg7=10, Bxc6+=4, c4=3, Qe3+=4\";'\n,'r1b1k2r/ppp2p1p/2q2p2/8/8/6Q1/PPP2PPP/R3K1NR w KQkq - bm Qg7; id \"STS(v14.0) 7th Rank.076\"; c0 \"Qg7=10, Ne2=3, O-O-O=2, Qe3+=3\";'\n,'r1b1qrk1/pp2bppp/4pn2/4Q1B1/8/2N5/PPP2PPP/2KR1B1R w - - bm Qc7; id \"STS(v14.0) 7th Rank.077\"; c0 \"Qc7=10, Be2=4, h4=3, Qg3=4\";'\n,'r1b2rk1/1p2q1b1/1n4p1/pP1p4/3Pp3/6BN/P2QBPP1/2R1K2R w K - bm Rc7; id \"STS(v14.0) 7th Rank.078\"; c0 \"Rc7=10, Bc7=3, Be5=3\";'\n,'r1b2rk1/pp2ppbp/2n3p1/2pq4/8/P2P1NP1/1P2PPBP/1RBQ1RK1 b - - bm Qa2; id \"STS(v14.0) 7th Rank.079\"; c0 \"Qa2=10, b6=8, Bd7=6, Qh5=7\";'\n,'r1b5/pp2b1kp/3rpqp1/2Q2p2/3N4/1B2P1P1/PP3P1P/2RR2K1 w - - bm Qc7; id \"STS(v14.0) 7th Rank.080\"; c0 \"Qc7=10, Qc2=2, Qc3=2, Qc4=2\";'\n,'r1br3k/ppp3bp/2n3p1/4ppN1/2P5/1P4P1/PB2PPBP/R4RK1 b - - bm Rd2; id \"STS(v14.0) 7th Rank.081\"; c0 \"Rd2=10, Kg8=8, Rd7=9, Re8=6, Rf8=7\";'\n,'r2q1rk1/4bppp/3pb3/2n1pP2/1p2P1PP/1P3Q2/1BP1N1B1/2KR3R b - - bm Ra2; id \"STS(v14.0) 7th Rank.082\"; c0 \"Ra2=10\";'\n,'r2q1rk1/pp3pp1/2p2n1p/8/2B5/4PQ2/PP3PPP/2R2RK1 b - - bm Qd2; id \"STS(v14.0) 7th Rank.083\"; c0 \"Qd2=10, g6=1, Qb6=1, Qc7=1, Qe7=1\";'\n,'r3r1k1/3b2pp/2pP1q2/ppP2pp1/5N2/8/PP1Q1PPP/3RR1K1 w - - bm Re7; id \"STS(v14.0) 7th Rank.084\"; c0 \"Re7=10, Nd3=5, Nh5=2, Rxe8+=3\";'\n,'r4b1r/p4ppp/3kp3/1R6/8/2P2P2/P4P1P/2B1K2R w K - bm Rb7; id \"STS(v14.0) 7th Rank.085\"; c0 \"Rb7=10, a4=1\";'\n,'r4r1k/4bpp1/p2p1nbp/q1p5/2PnPPB1/P1NPB3/1R3N1P/3Q1RK1 w - - bm Rb7; id \"STS(v14.0) 7th Rank.086\"; c0 \"Rb7=10, Bd2=6, Bxd4=7, Nd5=8\";'\n,'r4rk1/1p5p/p3pp2/2b5/P7/2N5/1P3PPP/R2R2K1 w - - bm Rd7; id \"STS(v14.0) 7th Rank.087\"; c0 \"Rd7=10, Ne4=5, Rac1=1\";'\n,'r4rk1/p1p2pp1/2pp1q1p/4p3/4P1b1/2PP1N2/P1P2PPP/1R1Q1RK1 w - - bm Rb7; id \"STS(v14.0) 7th Rank.088\"; c0 \"Rb7=10, a4=4, c4=3, h3=3, Rb3=3\";'\n,'r4rk1/pp2bppp/2n3b1/3R4/8/1P2BN1P/1P2BPP1/R5K1 w - - bm Rd7; id \"STS(v14.0) 7th Rank.089\"; c0 \"Rd7=10, Nd4=2, Ne5=1, Rb5=1\";'\n,'r4rk1/pp2n2p/4P1p1/2Qp2q1/1P6/5R2/P5PP/4RBK1 w - - bm Rf7; id \"STS(v14.0) 7th Rank.090\"; c0 \"Rf7=10, Qe3=1\";'\n,'r4rk1/pp3ppp/2n1p3/4Pb2/2N5/3q1N2/PP3PPP/R1QR2K1 b - - bm Qc2; id \"STS(v14.0) 7th Rank.091\"; c0 \"Qc2=10, Nxe5=9, Qe2=6, Qe4=6\";'\n,'r4rk1/ppp1bppp/2np4/3Q1q2/2P5/2P2N2/PP3PPP/R1B1R1K1 b - - bm Qc2; id \"STS(v14.0) 7th Rank.092\"; c0 \"Qc2=10, Qd7=3, Qg4=3, Qg6=3\";'\n,'r5k1/1p2bppp/pB6/3rn3/4p3/1N2P2P/PP3PP1/2R2RK1 w - - bm Rc7; id \"STS(v14.0) 7th Rank.093\"; c0 \"Rc7=10\";'\n,'r5k1/4bpp1/7p/2Pp4/3Bp3/r2bPP1P/3N2P1/2R1K1R1 b - - bm Ra2; id \"STS(v14.0) 7th Rank.094\"; c0 \"Ra2=10, Bd8=7, Bh4+=7, R3a5=6\";'\n,'r5k1/5pp1/p2p1n1p/1q1Pp3/2R1P3/3Q1N1P/P4PPK/8 b - - bm Qb2; id \"STS(v14.0) 7th Rank.095\"; c0 \"Qb2=10, Kh7=6, Ne8=6, Rb8=5, Rd8=6\";'\n,'r7/4bpk1/p5p1/1p1RP2p/8/2r1B1PP/P4P2/3R2K1 w - - bm Rd7; id \"STS(v14.0) 7th Rank.096\"; c0 \"Rd7=10\";'\n,'rn1q1rk1/pb1nbppp/1p2p3/3pN3/3P4/6P1/PPQBPPBP/RNR3K1 w - - bm Qc7; id \"STS(v14.0) 7th Rank.097\"; c0 \"Qc7=10, Nd3=2, Nf3=2, Nxd7=2\";'\n,'rn1r2k1/pb2ppbp/1p4p1/8/3PP3/3B1N2/P2B1PPP/2R1K2R w K - bm Rc7; id \"STS(v14.0) 7th Rank.098\"; c0 \"Rc7=10, Bb1=6, Bg5=6, Ke2=1\";'\n,'rnb2k2/1p3ppp/4p3/1p6/4Q3/1Bq5/P3KPPP/R6R b - - bm Qb2+; id \"STS(v14.0) 7th Rank.099\"; c0 \"Qb2+=10, f5=8, Na6=8, Nc6=8, Nd7=8\";'\n,'Rr6/5kp1/1qQb1p1p/1p1PpP2/1Pp1B3/2P4P/6P1/5K2 w - - bm Qd7+; id \"STS(v14.0) 7th Rank.100\"; c0 \"Qd7+=10, Qxb6=4, Ra1=3, Ra2=2\";'\n -- STS15: Avoid Pointless Exchange\n,'rnb1r1k1/pp2bppp/2p2n2/8/1q1Q1B2/2N2NPP/PP2PPB1/R4RK1 w - - bm Qd2; id \"STS(v15.0) AT.001\"; c0 \"Qd2=10, Rfd1=1, Rfc1=3, Rab1=2, Qxb4=3\";'\n,'rn2kbnr/pp3pp1/q1p1p3/3pP2p/3P4/2NQ1N2/PPP2PPP/R1B2RK1 w kq - bm Qd1; id \"STS(v15.0) AT.002\"; c0 \"Qd1=10, Rb1=2, Qxa6=3, Qe3=2, Qe2=2, Qd2=5, Bd2=1\";'\n,'rn2k2r/p1pq1ppp/bp2pn2/8/Q2P4/P4N2/1P2PPPP/R1B1KB1R w KQkq - bm Qc2; id \"STS(v15.0) AT.003\"; c0 \"Qc2=10, Qd1=2\";'\n,'rn2k1r1/pbpqnp2/1p1pp3/6p1/Q1PP4/2P1P1B1/P2N1PP1/1R2KB1R w Kq - bm Qc2; id \"STS(v15.0) AT.004\"; c0 \"Qc2=10, Qxd7+=8, Qd1=9\";'\n,'rbb2r1k/1p3pp1/p3q2p/B7/4Q3/1N4P1/PP3P1P/3R1RK1 w - - bm Qb4; id \"STS(v15.0) AT.005\"; c0 \"Qb4=10, Rfe1=3, Qg2=5, Qd4=9\";'\n,'r7/4bpkp/4p1p1/pq1nP3/Q2P3P/5PP1/3BNK2/R7 b - - bm Qd3; id \"STS(v15.0) AT.006\"; c0 \"Qd3=10, Qb8=9, Qb7=9, Qb6=9, Qb2=8\";'\n,'r4rk1/ppqb1ppp/4p3/2Qnb3/4N3/P1P3PP/1P3PB1/R1B2R1K b - - bm Bc6; id \"STS(v15.0) AT.007\"; c0 \"Bc6=10, Qd8=4\";'\n,'r4rk1/pp2ppbp/1qp2np1/n2P4/1Q2P3/2N2B2/PP3PPP/R1B2RK1 w - - bm Qa4; id \"STS(v15.0) AT.008\"; c0 \"Qa4=10, Qxe7=1, Qa3=2\";'\n,'r4rk1/p4ppp/1pn1pn2/2p5/2PPq3/P2QPN1P/1B3PP1/2R1R1K1 w - - bm Qd1; id \"STS(v15.0) AT.009\"; c0 \"Qd1=10, Red1=1, Qf1=3, Qe2=3, Qc3=1, Qb3=5\";'\n,'r4k2/6b1/5qP1/2p2pQ1/p2p4/8/1P1N1PP1/4R1K1 w - - bm Qg3; id \"STS(v15.0) AT.010\"; c0 \"Qg3=10, Qh5=6, Qf4=9, Qe3=6\";'\n,'r3r1k1/p1pp1p2/1pn2n1p/2P3p1/3P4/2P1B1P1/P1Q1qPNP/2RR2K1 b - - bm Qf3; id \"STS(v15.0) AT.011\"; c0 \"Qf3=10, Qxc2=7, Qh5=9, Qg4=8, Qc4=1\";'\n,'r3r1k1/bb3pp1/pp2pn1p/2pqN3/3P4/2P1BQ2/PP3PPP/R2R1BK1 w - - bm Qg3; id \"STS(v15.0) AT.012\"; c0 \"Qg3=10, Qxd5=1, Qh3=7, Qf4=4, Qe2=3\";'\n,'r3qb2/2nkpQ2/3p1ppp/2p5/4PP2/2BP2P1/2PN2K1/1R6 w - - bm Qg8; id \"STS(v15.0) AT.013\"; c0 \"Qg8=10, Qh7=2, Qc4=4, Qb3=8\";'\n,'r3kb1r/ppp1pppp/2n2n2/8/2PPq3/5N2/PP2QPPP/RNB1K2R w KQkq - bm Be3; id \"STS(v15.0) AT.014\"; c0 \"Be3=10, a3=6, Qxe4=9, Nc3=7, Kf1=2, Bd2=2\";'\n,'r3k2r/5p2/p3p2p/3pPb1P/1q6/8/1PPQNP2/2KR3R b kq - bm Qa4; id \"STS(v15.0) AT.015\"; c0 \"Qa4=10\";'\n,'r2r2k1/5pp1/2bPp3/p1N4p/1qQ5/2P2P2/BP4PP/1K1R4 b - - bm Qb8; id \"STS(v15.0) AT.016\"; c0 \"Qb8=10, Qxc4=9, Qb6=9\";'\n,'r2q1rk1/pp3ppp/1np1b3/8/3Q4/bPN1B1PP/P3PPB1/R4RK1 b - - bm Qc8; id \"STS(v15.0) AT.017\"; c0 \"Qc8=10, f6=4, Re8=4, Rc8=1, Qxd4=1, Qe7=4, Qc7=2, Bf5=2\";'\n,'r2q1rk1/pp3pp1/2p2n1p/8/2BQ2b1/4PN2/PP3PPP/2R2RK1 w - - bm Qf4; id \"STS(v15.0) AT.018\"; c0 \"Qf4=10\";'\n,'r2q1rk1/pp2ppbp/2n3p1/2P1Pb2/1n6/2N1BNP1/PP3PBP/R2Q1RK1 w - - bm Qa4; id \"STS(v15.0) AT.019\"; c0 \"Qa4=10, a3=3, Rc1=3, Qb3=8, Ne2=2, Nd4=3, Bg5=2\";'\n,'r2q1rk1/4bppp/p1p1pn2/4B3/8/2N3P1/PPP2P1P/R2Q1RK1 w - - bm Qe2; id \"STS(v15.0) AT.020\"; c0 \"Qe2=10, Re1=8, Qf3=9\";'\n,'r1r3k1/p4ppp/4p3/3p4/3B3P/6P1/P1q2PB1/R2Q2K1 w - - bm Qg4; id \"STS(v15.0) AT.021\"; c0 \"Qg4=10, Qh5=5, Qf3=5, Qe1=8\";'\n,'r1r2bk1/5p1p/5qp1/2np4/2pN1Q2/1P2P3/P3NPPP/R4RK1 b - - bm Qa6; id \"STS(v15.0) AT.022\"; c0 \"Qa6=10, Qd8=8\";'\n,'r1bq2nr/pp2bkpp/2pp4/Q7/3PP3/5N2/P4PPP/RNB1K2R w KQ - bm Qa4; id \"STS(v15.0) AT.023\"; c0 \"Qa4=10, Qd2=5, Qc3=7, Qb4=6, Qa3=9\";'\n,'r1bq1rk1/pp2ppbp/2n3p1/2P1P3/1n6/2N2NP1/PP3PBP/R1BQ1RK1 w - - bm Qa4; id \"STS(v15.0) AT.024\"; c0 \"Qa4=10, a3=9, Qe2=4, Bg5=8, Bf4=7, Be3=7\";'\n,'r1bq1rk1/1p2bppp/p1p1p3/4P3/8/7N/PPP2PPP/R1BQR1K1 w - - bm Qg4; id \"STS(v15.0) AT.025\"; c0 \"Qg4=10, Qh5=6, Qf3=8, Qe2=5, Bf4=2, Be3=1\";'\n,'r1bq1rk1/1p2bppp/p1n1pn2/2P5/P1B5/2N1PN2/1P3PPP/R1BQ1RK1 w - - bm Bd2; id \"STS(v15.0) AT.026\"; c0 \"Bd2=10, e4=3, b3=7, Qe2=5, Qc2=7, Ne2=2\";'\n,'r1b3k1/pp2b1pp/2p1pn2/8/P1p1Pq2/2N5/1P2BP1P/R1Q2RK1 b - - bm Qe5; id \"STS(v15.0) AT.027\"; c0 \"Qe5=10, Qd6=3\";'\n,'r1b2rk1/pp2p1b1/nqpp1npp/5p2/2PP1B2/1QN2NP1/PP2PPBP/R2R2K1 w - - bm Qc2; id \"STS(v15.0) AT.028\"; c0 \"Qc2=10, Qxb6=3, Qa4=8, Qa3=9, Ne1=6, Bd2=9, Bc1=5\";'\n,'r1b2rk1/1p1nq1pp/p1pb1p2/8/4Q3/1P2PN2/PB2BPPP/1R2R1K1 w - - bm Qh4; id \"STS(v15.0) AT.029\"; c0 \"Qh4=10, Qxe7=7, Qc4+=9, Qc2=9, Nd2=8, Bc4+=9\";'\n,'r1b2k1r/pp4qp/4p2Q/PPbp4/8/2PB4/5PPP/RN3RK1 w - - bm Qf4+; id \"STS(v15.0) AT.030\"; c0 \"Qf4+=10, Qh5=9, Qh3=9\";'\n,'r1b2k1r/pp3ppp/4p3/1B6/1b6/2q5/P1Q2PPP/R1B2RK1 w - - bm Qa4; id \"STS(v15.0) AT.031\"; c0 \"Qa4=10, Qe2=6, Qb1=3\";'\n,'r1b1k2r/p2n1q2/3B1nQp/3p4/2pP4/2P1PN2/P4PPP/4RRK1 w kq - bm Qc2; id \"STS(v15.0) AT.032\"; c0 \"Qc2=10, Nh4=8\";'\n,'r1b1k1nr/pppq1pbp/6p1/4n3/Q1p5/4BNP1/PP1NPPBP/R3K2R w KQkq - bm Qa3; id \"STS(v15.0) AT.033\"; c0 \"Qa3=10, Qxd7+=6, Qc2=4, Qb4=4, Qa5=4\";'\n,'r1b1k1nr/1p1pqppp/p1nQ4/4p3/4P3/8/PPP2PPP/RNB1KB1R w KQkq - bm Qd1; id \"STS(v15.0) AT.034\"; c0 \"Qd1=10, Qxe7+=7, Qd3=7, Qd2=6, Qa3=3\";'\n,'b1r4r/4bpk1/1p1p1np1/p1q1p3/4P2p/PPN1QB1P/1BP2PP1/3RR1K1 w - - bm Qe2; id \"STS(v15.0) AT.035\"; c0 \"Qe2=10, a4=3, Re2=2, Qd3=5\";'\n,'8/r1q2p1k/1Q1p1p1p/p3pP2/4P1R1/1P5P/2P3PK/8 w - - bm Qe3; id \"STS(v15.0) AT.036\"; c0 \"Qe3=10, Qg1=2, Qf2=5, Qb5=5\";'\n,'8/6p1/qp2p2k/pQ1nPp2/P2P1Pn1/5NP1/1B2K3/8 b - - bm Qa8; id \"STS(v15.0) AT.037\"; c0 \"Qa8=10, Qc8=9, Qb7=7\";'\n,'8/3r2k1/p1rPp1p1/1q5p/p3NPnP/6PK/1P1RQ3/3R4 w - - bm Qe1; id \"STS(v15.0) AT.038\"; c0 \"Qe1=10, Re1=5, Qd3=2, Ng5=2, Kg2=3\";'\n,'8/1b6/1p3pk1/1Prp1pp1/3Nq3/4P3/5PPP/1Q1R2K1 w - - bm Qa1; id \"STS(v15.0) AT.039\"; c0 \"Qa1=10, g3=3, Qb3=5, Qb2=3\";'\n,'6rk/5r2/1p1npq1p/1Pp1p2p/P1PbP2Q/3R1PP1/B6K/3RB3 b - - bm Qg6; id \"STS(v15.0) AT.040\"; c0 \"Qg6=10, Qxh4+=3, Qg5=3, Qf4=6, Bg1+=3\";'\n,'6k1/ppp1rppp/7q/2Npr3/P4Q2/3B2P1/1PP4P/5RK1 b - - bm Qd6; id \"STS(v15.0) AT.041\"; c0 \"Qd6=10\";'\n,'6k1/pb1r1p1p/1b1r2pP/p3p1q1/4P3/PN1B1RN1/1RPQ4/7K b - - bm Qd8; id \"STS(v15.0) AT.042\"; c0 \"Qd8=10, Qh4+=3, Qg4=7, Qe7=5\";'\n,'6k1/5p1p/1pp1n1p1/p3P3/2P1P3/1PNq1Q1P/P5P1/7K b - - bm Qd4; id \"STS(v15.0) AT.043\"; c0 \"Qd4=10, Qd2=6, Qc2=2\";'\n,'6k1/3r3p/1pb2pp1/p1qpn3/P2Q1N2/1P2P2P/5PP1/1B1R2K1 w - - bm Qd2; id \"STS(v15.0) AT.044\"; c0 \"Qd2=10, h4=7, f3=5, Qxc5=9, Kf1=4, Ba2=4\";'\n,'6k1/1r2bppp/p3pn2/Pp2q3/2pN4/5P1P/1PP3P1/3RQRK1 b - - bm Qc5; id \"STS(v15.0) AT.045\"; c0 \"Qc5=10\";'\n,'6k1/1p3pp1/p1rpq2p/3Q4/P1P2P2/1P6/3R1KPP/8 w - - bm Qd4; id \"STS(v15.0) AT.046\"; c0 \"Qd4=10, h3=9, g3=9, a5=8, Rd3=9, Qd3=9, Kf3=9\";'\n,'6k1/1p3pp1/p1rpq2p/3Q4/2P5/1P6/P4PPP/3R2K1 w - - bm Qf3; id \"STS(v15.0) AT.047\"; c0 \"Qf3=10, a4=1, Qh5=3, Qd3=9, Qd2=2, Qa5=2, Kf1=3\";'\n,'5rk1/1p1r1pp1/2pNp2p/p1PnP2P/3P4/1Pq2Q2/P4P1K/3RR3 w - - bm Qe2; id \"STS(v15.0) AT.048\"; c0 \"Qe2=10\";'\n,'5rb1/p1r1p1kp/5pp1/p2n4/1qBPR2P/1P4P1/P2Q1PK1/2R1N3 w - - bm Qe2; id \"STS(v15.0) AT.049\"; c0 \"Qe2=10, Qf4+=9\";'\n,'5r2/6k1/Pb1pBn1p/p2Pq3/5pPP/5K2/4Q3/3N3R b - - bm Be3; id \"STS(v15.0) AT.050\"; c0 \"Be3=10, h5=4, Qxe2+=8, Qd4=7\";'\n,'5r1r/4k2p/p3qp2/2b1pQ1N/1p1p4/8/PPP3P1/1K2RR2 w - - bm Qe4; id \"STS(v15.0) AT.051\"; c0 \"Qe4=10, Qf3=9\";'\n,'5r1k/1r1q1p2/pp3Pp1/7p/3Q4/1P4P1/1P3P2/2R1R1K1 w - - bm Qf4; id \"STS(v15.0) AT.052\"; c0 \"Qf4=10, Qe4=6, Qc3=3\";'\n,'5b1k/1p1r3p/p1p5/3qpP2/4Q3/P5P1/2N2P1P/1R4K1 w - - bm Qe2; id \"STS(v15.0) AT.053\"; c0 \"Qe2=10\";'\n,'4rrk1/1p3pb1/2p1pqp1/p2n3p/P2P4/2P2QBP/1P2RPP1/1B1R2K1 w - - bm Qe4; id \"STS(v15.0) AT.054\"; c0 \"Qe4=10, Rd3=3, Qxf6=8, Qd3=2, Be4=2, Bd6=2\";'\n,'4rrk1/1p1n3p/3p1np1/p1pP2N1/1q3P2/1P3B1P/P2Q1RP1/1R4K1 w - - bm Qc1; id \"STS(v15.0) AT.055\"; c0 \"Qc1=10, g4=3, Qd3=6, Qd1=2, Qb2=2, Ne6=3\";'\n,'4rk2/5pp1/p3n2p/1prNR3/2q2P1P/6P1/PP2Q3/1K2R3 w - - bm Qd2; id \"STS(v15.0) AT.056\"; c0 \"Qd2=10\";'\n,'4rbk1/1r3p2/ppp3P1/nq4Bp/3pP3/Pb1Q1N2/1P4P1/1BR1R1K1 w - - bm Qd2; id \"STS(v15.0) AT.057\"; c0 \"Qd2=10\";'\n,'4r2k/3qbp2/p3bp1p/8/8/P1RQ4/1PP2PPP/2K1R3 b - - bm Qa4; id \"STS(v15.0) AT.058\"; c0 \"Qa4=10\";'\n,'4r1k1/p4pp1/4r1b1/q1pp2P1/5B1P/8/PPPQ1P2/1K1R2R1 b - - bm Qb5; id \"STS(v15.0) AT.059\"; c0 \"Qb5=10, Qxd2=1, Qa6=3, Qa4=4\";'\n,'4r1k1/4rppn/pNp5/3p1P2/PP2nqP1/4Q2P/2P1R1B1/4R1K1 b - - bm Qd6; id \"STS(v15.0) AT.060\"; c0 \"Qd6=10, Qc7=9, Qb8=9\";'\n,'4r1k1/3b1pp1/pB6/P2r3p/1q1P1P2/2Q5/1P2p1PP/2R1R2K b - - bm Qd6; id \"STS(v15.0) AT.061\"; c0 \"Qd6=10, Rb5=3, Qe7=7\";'\n,'4b2k/p5bp/Pp3q2/2p1p3/2P1B3/1P3QP1/3r1N1P/4R1K1 w - - bm Bf5; id \"STS(v15.0) AT.062\"; c0 \"Bf5=10, Re3=2, Re2=4, Qxf6=2, Qf5=1\";'\n,'3rrbk1/5ppp/b1q5/p1p2P2/p1P5/4BQN1/PP1R2PP/2R3K1 b - - bm Qf6; id \"STS(v15.0) AT.063\"; c0 \"Qf6=10, Rc8=4, Qc8=7, Qc7=6, Qb6=7\";'\n,'3rr3/1p3pkp/3qb2N/p2p1pPB/2nR4/2P3Q1/PP5P/4R2K w - - bm Qf2; id \"STS(v15.0) AT.064\"; c0 \"Qf2=10, Qh4=5, Qh3=5, Qg2=4, Qg1=5, Qf3=3\";'\n,'3r3k/1pq2bp1/p4p2/Q1p1pBb1/2P1P3/1PB4P/P4PK1/4R3 b - - bm Qd6; id \"STS(v15.0) AT.065\"; c0 \"Qd6=10, b6=2, Qxa5=3, Qe7=5\";'\n,'3r2rk/1p3Rpb/2nBp2p/p1P5/1pB1q3/1P2Q2P/5RPK/8 w - - bm Qg3; id \"STS(v15.0) AT.066\"; c0 \"Qg3=10, Re2=6, Qc1=3\";'\n,'3r2k1/1pbr1p2/p1q1p1pp/2P2n2/1PNPQP2/2B3P1/7P/3RR1K1 b - - bm Rd5; id \"STS(v15.0) AT.067\"; c0 \"Rd5=10\";'\n,'3r1rk1/p1qb2pp/1p6/5p2/2PNpQn1/1P4P1/P4PBP/R3R1K1 b - - bm Qc5; id \"STS(v15.0) AT.068\"; c0 \"Qc5=10, Qxf4=3, Qc8=1, Ne5=8\";'\n,'3r1rk1/1pp2ppp/2np2q1/p4Q2/2B1PP2/7R/PPP2RPP/6K1 w - - bm Qb5; id \"STS(v15.0) AT.069\"; c0 \"Qb5=10, Qxg6=5, Qd5=8\";'\n,'3r1r2/3q2bk/6pp/pQ3p2/P1p4P/2PnBNP1/1P3PK1/R2R4 b - - bm Qe6; id \"STS(v15.0) AT.070\"; c0 \"Qe6=10\";'\n,'3qr2k/3Q3p/p2p2pB/3P1p2/4p3/PPb3P1/2P1PP1P/5BK1 w - - bm Qc6; id \"STS(v15.0) AT.071\"; c0 \"Qc6=10, Qxd8=1, Qb7=5, Qa7=5, Qa4=9\";'\n,'2rrk3/pp1bppbp/2n3p1/q7/2BPPN2/4BP1P/P2Q2P1/2RR2K1 w - - bm Qf2; id \"STS(v15.0) AT.072\"; c0 \"Qf2=10, Qe2=5, Qd3=3, Qb2=9\";'\n,'2rr2k1/pp2pp1p/5bp1/P7/1B1Pq3/4P1P1/5PQ1/R1R3K1 b - - bm Qe6; id \"STS(v15.0) AT.073\"; c0 \"Qe6=10, Rxc1+=2, Qxg2+=6, Qg4=1, Qf5=5\";'\n,'2rr2k1/pp1bppbp/2n3p1/q7/2BPPN2/4BP2/P2Q2PP/2RR2K1 w - - bm Qb2; id \"STS(v15.0) AT.074\"; c0 \"Qb2=10, Rb1=3, Qxa5=9, Kf2=3\";'\n,'2rr2k1/4bppp/p3p3/4P3/2q1QBPn/2N5/PP3R1P/5R1K b - - bm Rd4; id \"STS(v15.0) AT.075\"; c0 \"Rd4=10, h6=6, Rf8=4, Rd7=7, Rd3=6, Qxe4+=5, Ng6=8\";'\n,'2rr2k1/4bppp/p3p1n1/4P3/2q1Q1P1/2N3B1/PP3R1P/5R1K b - - bm Rd4; id \"STS(v15.0) AT.076\"; c0 \"Rd4=10, Rf8=6, Rd3=7, Qxe4+=6\";'\n,'2rr2k1/4bppp/4p3/4P3/2q1QBPn/2N5/PP3R1P/5R1K b - - bm Qa6; id \"STS(v15.0) AT.077\"; c0 \"Qa6=10, Rd4=4\";'\n,'2rq2k1/R5pp/8/Q2pnp2/8/1P2P1P1/7P/5B1K w - - bm Qa1; id \"STS(v15.0) AT.078\"; c0 \"Qa1=10, Qd2=9, Qb5=4\";'\n,'2r3k1/pp3p2/1n2rPp1/4P2p/4R3/P1q4P/3Q2P1/2B1R1K1 w - - bm Qg5; id \"STS(v15.0) AT.079\"; c0 \"Qg5=10, Qh6=6, Qf4=5, Qd6=4\";'\n,'2r3k1/1p1rppbp/5np1/p4PB1/P1qN4/2PQ4/1P4PP/4RR1K w - - bm Qh3; id \"STS(v15.0) AT.080\"; c0 \"Qh3=10\";'\n,'2r3k1/1R3p2/5rp1/p2p3p/3P1B1P/2p1PP2/P2nq1P1/2RQ2K1 b - - bm Qc4; id \"STS(v15.0) AT.081\"; c0 \"Qc4=10, Qd3=4, Qa6=9\";'\n,'2r2rk1/1p2bpp1/p2p3p/P2Pp2n/4P3/1PqQB2P/3N1PP1/R4RK1 w - - bm Qb1; id \"STS(v15.0) AT.082\"; c0 \"Qb1=10, Qxc3=5, Qe2=5\";'\n,'2r2qkr/1p1b3p/p1n1p1pQ/P2pPp2/8/1PBR1N1P/2P2PP1/5RK1 w - - bm Qd2; id \"STS(v15.0) AT.083\"; c0 \"Qd2=10, Qxf8+=2, Qg5=5, Qf4=5, Qe3=8, Qc1=4\";'\n,'2r1r1k1/q4ppp/b2b1n2/p2p4/N2Q4/P3PPP1/1P4BP/R1BR3K b - - bm Qb8; id \"STS(v15.0) AT.084\"; c0 \"Qb8=10, Qe7=9, Qc7=5\";'\n,'2r1r1k1/1b3pp1/p3pn1p/P1b3q1/1pN5/4P1Q1/1P1BBPPP/1R3RK1 b - - bm Qf5; id \"STS(v15.0) AT.085\"; c0 \"Qf5=10, Qxg3=3, Ne4=2\";'\n,'2r1kb1r/5p2/p1npb2p/1p1NppqQ/4P3/N1PB4/PP3PPP/R3R1K1 w k - bm Qe2; id \"STS(v15.0) AT.086\"; c0 \"Qe2=10, Qf3=3, Qd1=8, Nc2=6\";'\n,'2r1k2r/1b2bppp/p3pn2/8/N2N1q1P/P4P2/1PPQ2P1/2KR1B1R b k - bm Qb8; id \"STS(v15.0) AT.087\"; c0 \"Qb8=10, Qg3=7, Qe5=5, Qd6=6, Qc7=6\";'\n,'1r6/8/1ppp1qkp/5pn1/2P2B2/2Q3R1/1P3PP1/6K1 w - - bm Qd2; id \"STS(v15.0) AT.088\"; c0 \"Qd2=10, Rd3=9, Qe3=9\";'\n,'1r6/5pk1/Q2q2p1/8/Pp1r3p/3B3P/2Pb2P1/1R1R3K b - - bm Qc5; id \"STS(v15.0) AT.089\"; c0 \"Qc5=10, b3=1, Rb6=3, Qxa6=2, Qc7=7, Bf4=1, Be3=1, Bc3=1\";'\n,'1r4k1/3b2b1/3pNp1p/3Pn1pB/pr2Pp1P/2Nq4/RPR2PP1/3Q2K1 w - - bm Rd2; id \"STS(v15.0) AT.090\"; c0 \"Rd2=10, Qc1=4\";'\n,'1r4k1/1brp1pp1/1p3n1p/2q1p3/2P1P3/1PNBQ3/P3RP1P/3R3K w - - bm Qh3; id \"STS(v15.0) AT.091\"; c0 \"Qh3=10, Red2=4, Qf3=8, Bc2=6, Bb1=5\";'\n,'1r3r1k/8/3p2p1/p1pQq1pp/N1P1P3/Pp3PP1/1Pn2K1P/1R3R2 b - - bm Qf6; id \"STS(v15.0) AT.092\"; c0 \"Qf6=10, g4=2, Qxd5=3\";'\n,'1r2kbr1/p4p2/b1ppp1p1/4qPP1/4P2P/2N3Q1/PPP5/2KR2RB w - - bm Qf2; id \"STS(v15.0) AT.093\"; c0 \"Qf2=10, Qe3=6, Bf3=9\";'\n,'1r1r2k1/5pp1/p2b2bp/1q1Pp3/1p6/1P2P1P1/R2NQPB1/2R3K1 w - - bm Qg4; id \"STS(v15.0) AT.094\"; c0 \"Qg4=10, Qd1=8, Nc4=9\";'\n,'1r1r1nk1/3q3p/1p2p1p1/pQp1Pp2/P2P4/2P3NP/5PP1/1R1R2K1 w - - bm Qb3; id \"STS(v15.0) AT.095\"; c0 \"Qb3=10, f4=6, f3=4, Qxd7=5, Qc4=8, Ne2=6\";'\n,'1k6/1r3p2/3p1b1p/pprPpPpP/5qP1/PRPB1Q2/1P6/1K2R3 w - - bm Qg2; id \"STS(v15.0) AT.096\"; c0 \"Qg2=10, Qh3=2, Qe2=4\";'\n,'1k1rr2b/2q2p2/p4p1P/1p3p2/PR2bQ2/3B4/1PP5/1K1RN3 w - - bm Qc1; id \"STS(v15.0) AT.097\"; c0 \"Qc1=10, Qf2=8, Qf1=8, Qd2=8\";'\n,'1k1rqb1r/ppp5/2n4n/3p2p1/3P3p/2PB4/PP2Q1PP/RN2BRK1 b - - bm Qd7; id \"STS(v15.0) AT.098\"; c0 \"Qd7=10\";'\n,'1k1r3r/1b2b3/p1p1Bp1p/6q1/N2pP3/1P6/P1PQ2P1/1K1R1R2 w - - bm Qe2; id \"STS(v15.0) AT.099\"; c0 \"Qe2=10, Qf2=5, Qe1=4, Qd3=8, Nb6=1, Nb2=2, Bc4=1\";'\n,'1R6/2r2bkp/p2q1rp1/4Np2/2pPp2P/Q5P1/PP1R1P1K/8 w - - bm Qe3; id \"STS(v15.0) AT.100\"; c0 \"Qe3=10\";');\n --\n\n\n\n  TYPE MiniTeoType IS VARRAY(2905) OF VARCHAR2(52); -- FROMTO format\n  MiniTeo CONSTANT MiniTeoType := MiniTeoType\n('a2a3b8c6d2d4d7d5g1f3g8f6c2c3c8f5b1d2e7e6f3h4f5e4d2e4'\n,'a2a3b8c6d2d4d7d5g1f3g8f6c2c3c8f5e2e3e7e6c3c4f8d6b1c3'\n,'a2a3c7c6g1f3g8f6b1c3d7d5d2d4g7g6g2g3f8g7f1g2e8g8e1g1'\n,'a2a3d7d5c2c3g7g6g1f3g8f6g2g3f8g7d2d4b8c6f1g2e8g8b1d2'\n,'a2a3d7d5d2d4g8f6c2c3b8c6g1f3c8f5b1d2g7g6g2g3f8g7f1g2'\n,'a2a3d7d5g1f3c7c5e2e3g8f6d2d4c5d4e3d4b8c6b1c3c8g4c1e3'\n,'a2a3d7d5g1f3c7c5e2e3g8f6d2d4e7e6c2c4a7a6b1d2b8c6f1d3'\n,'a2a3e7e5c2c4g8f6b1c3d7d5c4d5f6d5g1f3b8c6d2d3f8e7c1d2'\n,'a2a3e7e5e2e4f7f5e4f5g8f6g2g4f8c5b1c3e8g8d2d3d7d5f1g2'\n,'a2a3g8f6c2c3e7e5d2d4e5d4c3d4d7d5d1c2f8d6g1f3e8g8b1c3'\n,'b1c3c7c5e2e4b8c6f1b5c6d4b5c4e7e6g1e2g8f6e1g1a7a6a2a4'\n,'b1c3c7c5e2e4b8c6g1f3e7e5f1c4f8e7d2d3g8f6e1g1e8g8h2h3'\n,'b1c3c7c5e2e4b8c6g1f3g7g6d2d4c5d4f3d4f8g7c1e3g8f6f1c4'\n,'b1c3c7c5e2e4b8c6g2g3d7d6f1g2g7g6d2d3f8g7f2f4e7e6g1f3'\n,'b1c3c7c5e2e4d7d6g1f3g8f6d2d4c5d4f3d4a7a6f1c4e7e6d1e2'\n,'b1c3c7c5e2e4e7e6g1f3b8c6f1b5c6d4e1g1a7a6b5d3g8e7b2b3'\n,'b1c3c7c5g1f3b8c6e2e4e7e6f1b5g8e7e1g1a7a6b5c6e7c6d2d4'\n,'b1c3c7c5g1f3b8c6e2e4g7g6d2d4c5d4f3d4f8g7c1e3g8f6f1c4'\n,'b1c3c7c6e2e4d7d5g1f3d5e4c3e4g8f6e4f6e7f6d2d4f8d6f1d3'\n,'b1c3c7c6g1f3d7d5d2d4g8f6c1f4c8f5e2e3e7e6f1d3b8d7e1g1'\n,'b1c3c7c6g1f3d7d5d2d4g8f6g2g3g7g6f1g2f8g7c1f4c8f5f3h4'\n,'b1c3d7d5d2d4g8f6g1f3g7g6g2g3f8g7f1g2e8g8e1g1c7c6c1f4'\n,'b1c3d7d5e2e4d5d4c3d5e7e5d1h5f8d6f2f4b8d7g1f3g7g6h5h3'\n,'b1c3d7d5e2e4d5d4c3e2e7e5f2f4c8g4h2h3g4h5d2d3f8d6f4e5'\n,'b1c3d7d5e2e4d5e4c3e4b8d7g1f3g8f6e4f6d7f6f1c4c8f5e1g1'\n,'b1c3d7d5e2e4e7e6d2d4g8f6e4e5f6d7g1f3c7c5d4c5b8c6c1f4'\n,'b1c3e7e5e2e4g8f6g1f3b8c6f1b5c6d4b5a4c7c6f3e5d7d6e5f3'\n,'b1c3g8f6d2d4d7d5g1f3g7g6g2g3f8g7f1g2e8g8e1g1c7c6c1f4'\n,'b2b3c7c5c1b2d7d5e2e3g8f6g1f3e7e6f1e2b8c6e1g1f8d6d2d4'\n,'b2b3c7c6e2e4d7d5e4e5g7g6g1f3f8g7d2d4f7f6f1e2f6e5f3e5'\n,'b2b3c7c6g1f3g8f6g2g3d7d5c1b2c8f5f1g2e7e6c2c4b8d7b1c3'\n,'b2b3c7c6g2g3d7d5g1f3g8f6f1g2c8g4e1g1b8d7c1b2e7e6c2c4'\n,'b2b3c7c6g2g3h7h6g1f3d7d5f1g2c8f5e1g1e7e6c2c4g8f6c1b2'\n,'b2b3d7d5c1b2c7c5e2e3g8f6g1f3b8d7c2c4e7e6b1c3f8d6c4d5'\n,'b2b3d7d5c1b2c7c5e2e3g8f6g1f3e7e6c2c4b8c6c4d5e6d5f1b5'\n,'b2b3d7d5c1b2c7c5e2e3g8f6g1f3e7e6c2c4d5c4f1c4f8e7e1g1'\n,'b2b3d7d5c1b2c7c5e2e3g8f6g1f3e7e6d2d4c5d4e3d4f8b4c2c3'\n,'b2b3d7d5c1b2c7c5e2e3g8f6g1f3e7e6f3e5f8e7f2f4e8g8f1d3'\n,'b2b3d7d5c1b2c8g4f2f3g4h5g1h3d8d6e2e3g8f6h3f4h5g6c2c4'\n,'b2b3d7d5c1b2g8f6e2e3c7c5f2f4b8c6g1f3g7g6f1b5f8g7b1c3'\n,'b2b3d7d5c1b2g8f6f2f4c7c5g1f3c8f5e2e3b8c6f1b5e7e6e1g1'\n,'b2b3d7d5c1b2g8f6g1f3c7c5e2e3e7e6d2d4c5d4e3d4f8b4c2c3'\n,'b2b3d7d5c1b2g8f6g1f3c7c5g2g3e7e6c2c4f8e7f1g2b8c6e2e3'\n,'b2b3d7d5c1b2g8f6g1f3c8g4g2g3b8d7f1g2c7c6c2c4e7e6e1g1'\n,'b2b3d7d5c1b2g8f6g1f3c8g4g2g3b8d7f1g2c7c6e1g1e7e6c2c4'\n,'b2b3d7d5c1b2g8f6g1f3c8g4g2g3c7c6f1g2e7e6e1g1b8d7c2c4'\n,'b2b3d7d5c1b2g8f6g2g3c8g4f1g2e7e6g1f3b8c6e1g1f8b4d2d4'\n,'b2b3d7d5g1f3g8f6d2d4c8f5e2e3e7e6c1b2f8b4c2c3b4d6c3c4'\n,'b2b3e7e5c1b2b8c6c2c4g8f6e2e3f8c5g1f3d7d6b1c3e8g8f1e2'\n,'b2b3e7e5c1b2b8c6c2c4g8f6g1f3e5e4f3d4f8c5d4f5e8g8e2e3'\n,'b2b3e7e5c1b2b8c6e2e3d7d5f1b5f8d6c2c4g8e7g1f3e8g8c4d5'\n,'b2b3e7e5c1b2b8c6e2e3g8f6f1b5d7d6g1e2c8d7e1g1a7a6b5c6'\n,'b2b3e7e5c1b2b8c6g1f3d7d6e2e3g8f6d2d4e5e4d4d5c6b4f3g5'\n,'b2b3e7e5c1b2b8c6g1f3d7d6g2g3g8f6f1g2g7g6c2c4f8g7e1g1'\n,'b2b3e7e5c1b2b8c6g1f3e5e4f3d4c6d4b2d4d7d5e2e3c8f5b1c3'\n,'b2b3e7e5c1b2b8c6g1f3e5e4f3d4c6d4b2d4d7d5e2e3g8e7d4b2'\n,'b2b3e7e5c1b2b8c6g1f3e5e4f3d4g8f6e2e3f8c5d4c6d7c6d2d4'\n,'b2b3e7e5c1b2b8c6g1f3e5e4f3d4g8f6e2e3f8c5d4c6d7c6f1e2'\n,'b2b3e7e5c1b2b8c6g1f3e5e4f3d4g8f6e2e3f8c5d4f5e8g8c2c4'\n,'b2b3e7e6e2e4c7c5c1b2b8c6g1f3d7d6d2d4c5d4f3d4a7a6g2g3'\n,'b2b3g8f6c1b2d7d5e2e3c7c5g1f3e7e6f3e5b8d7f2f4d7e5f4e5'\n,'b2b3g8f6c1b2g7g6g2g3f8g7g1f3d7d5c2c4c7c6b1c3d5c4b3c4'\n,'b2b3g8f6c1b2g7g6g2g3f8g7g1f3d7d5c2c4c7c6f1g2e8g8e1g1'\n,'b2b3g8f6c1b2g7g6g2g3f8g7g1f3d7d5c2c4e8g8f1g2b8c6d2d4'\n,'b2b4e7e5a2a3g8f6c1b2a7a5b4b5f8c5e2e3d8e7g1f3d7d6b1c3'\n,'b2b4e7e6b4b5a7a6c2c4g8f6g1f3d7d5e2e3a6b5c4b5f8d6c1b2'\n,'c2c3d7d5h2h3e7e5d2d4b8d7c1e3e5e4e3f4d7f6e2e3f8d6g1e2'\n,'c2c3e7e5h2h3d7d5d2d4b8c6c1e3g8f6d4e5c6e5b1d2f8d6g1f3'\n,'c2c3e7e5h2h3d7d5d2d4b8d7c1e3g8f6d4e5d7e5b1d2f8d6g1f3'\n,'c2c3g8f6f2f4g7g6g1f3f8g7g2g3e8g8f1g2d7d5e1g1c7c5d2d3'\n,'c2c4c7c5b1c3b8c6d2d3g8f6e2e4d7d6f2f4g7g6g1f3f8g7f1e2'\n,'c2c4c7c5g1f3g8f6b1c3b8c6g2g3d7d5d2d4c5d4f3d4d5c4d4c6'\n,'c2c4c7c6b2b3g8f6g1f3c6c5c1b2g7g6g2g4h7h6b2f6e7f6h2h4'\n,'c2c4c7c6b2b3g8f6g2g3e7e5c1b2d7d5b2e5b8d7e5b2d5c4b3c4'\n,'c2c4c7c6d2d4d7d5b1c3g8f6e2e3e7e6b2b3c6c5g1f3c5d4f3d4'\n,'c2c4c7c6d2d4d7d5b1c3g8f6g1f3e7e6c1g5h7h6g5f6d8f6e2e3'\n,'c2c4c7c6d2d4d7d5b1c3g8f6g1f3e7e6e2e3b8d7d1c2f8d6c1d2'\n,'c2c4c7c6d2d4d7d5g1f3g8f6b1c3e7e6e2e3b8d7a2a4f6e4f3d2'\n,'c2c4c7c6d2d4d7d5g1f3g8f6b1c3e7e6e2e3b8d7f1d3d5c4d3c4'\n,'c2c4c7c6d2d4d7d5g1f3g8f6e2e3e7e6b1c3b8d7a2a4f8b4f1d3'\n,'c2c4c7c6e2e3d7d5f2f4g8f6g1f3g7g6b1c3f8g7d1b3e8g8d2d4'\n,'c2c4c7c6e2e4d7d5e4d5g8f6d2d4c6d5b1c3b8c6g1f3g7g6c1g5'\n,'c2c4c7c6g1f3d7d5b2b3g8f6c1b2c8g4e2e3e7e6f1e2b8d7e1g1'\n,'c2c4c7c6g1f3d7d5b2b3g8f6e2e3g7g6c1b2f8g7f1e2e8g8e1g1'\n,'c2c4c7c6g1f3d7d5d2d4g8f6b1c3d5c4a2a4c8f5f3e5e7e6f2f3'\n,'c2c4c7c6g1f3d7d5d2d4g8f6b1c3e7e6c1g5d5c4a2a4f8b4e2e4'\n,'c2c4c7c6g1f3d7d5d2d4g8f6b1c3e7e6e2e3b8d7d1c2f8d6g2g4'\n,'c2c4c7c6g1f3d7d5d2d4g8f6e2e3e7e6f1d3b8d7b1c3d5c4d3c4'\n,'c2c4c7c6g1f3d7d5e2e3g8f6b1c3e7e6f1e2f8d6d2d4e8g8d1c2'\n,'c2c4e7e5a2a3f8e7b1c3g8f6e2e3b8c6g1f3e8g8d1c2d7d5c4d5'\n,'c2c4e7e5b1c3d7d6g2g3f7f5d2d4f8e7d4e5d6e5d1d8e7d8f1g2'\n,'c2c4e7e5b1c3g8f6e2e3b8c6d1c2f8c5a2a3a7a5g1f3e8g8f1d3'\n,'c2c4e7e5b1c3g8f6g1f3b8c6d2d4e5d4f3d4f8b4g2g3e8g8f1g2'\n,'c2c4e7e5b1c3g8f6g1f3b8c6g2g3d7d5c4d5f6d5f1g2d5b6e1g1'\n,'c2c4e7e5b1c3g8f6g1f3b8c6g2g3f8b4f1g2e8g8e1g1e5e4f3g5'\n,'c2c4e7e5b1c3g8f6g1f3b8c6g2g3f8c5f1g2d7d6e1g1e8g8d2d3'\n,'c2c4e7e5b1c3g8f6g2g3d7d5c4d5f6d5f1g2d5b6b2b3f8b4g1f3'\n,'c2c4e7e5b1c3g8f6g2g3d7d5c4d5f6d5f1g2d5b6g1f3b8c6e1g1'\n,'c2c4e7e5b1c3g8f6g2g3f8b4f1g2e8g8d1b3b8c6g1f3e5e4f3g5'\n,'c2c4e7e5b1c3g8f6g2g3f8b4f1g2e8g8g1f3b8c6e1g1d7d6d2d3'\n,'c2c4e7e5b2b3g8f6g1f3e5e4f3d4f8c5c1b2b8c6d4c6d7c6e2e3'\n,'c2c4e7e5e2e3g8f6d1c2b8c6a2a3g7g6g1f3f8g7b1c3e8g8f1e2'\n,'c2c4e7e5e2e3g8f6d1c2b8c6b1c3f8b4g2g3d7d6f1g2b4c3b2c3'\n,'c2c4e7e5e2e3g8f6d1c2b8c6b1c3f8e7a2a3d7d5c4d5f6d5g1f3'\n,'c2c4e7e5g2g3b8c6b1c3g8f6g1f3f8c5f1g2d7d6e1g1e8g8d2d3'\n,'c2c4e7e5g2g3b8c6e2e4g8f6f1g2f8c5g1e2h7h5e1g1h5h4b1c3'\n,'c2c4e7e5g2g3g8f6b1c3d7d5c4d5f6d5f1g2d5b6e2e3b8c6g1e2'\n,'c2c4e7e5g2g3g8f6b1c3f8b4a2a3b4c3b2c3e8g8f1g2d7d6d2d4'\n,'c2c4e7e5g2g3g8f6f1g2c7c6d2d3d7d5d1c2b8a6g1f3a6b4c2a4'\n,'c2c4e7e5g2g3g8f6f1g2c7c6e2e4f8c5g1e2d7d5e4d5c6d5c4d5'\n,'c2c4e7e5g2g3g8f6f1g2d7d5c4d5f6d5b1c3d5b6b2b3f8e7c1b2'\n,'c2c4e7e5g2g3g8f6f1g2d7d5c4d5f6d5b1c3d5b6g1f3b8c6e1g1'\n,'c2c4e7e5g2g3g8f6f1g2d7d5c4d5f6d5b1c3d5b6g1f3b8c6e2e3'\n,'c2c4e7e5g2g3g8f6f1g2d7d5c4d5f6d5g1f3b8c6b1c3d5b6a2a3'\n,'c2c4e7e5g2g3g8f6f1g2d7d5c4d5f6d5g1f3b8c6b1c3d5b6e2e3'\n,'c2c4e7e5g2g3g8f6f1g2d7d5c4d5f6d5g1f3b8c6e1g1d5b6b1c3'\n,'c2c4e7e5h2h3b8c6b1c3g8f6e2e3f8b4g1e2e8g8a2a3b4c3e2c3'\n,'c2c4e7e5h2h3g8f6b1c3b8c6g1f3f8b4d1c2e8g8c3d5b4d6f3g5'\n,'c2c4e7e5h2h4b8c6b1c3g8f6g1f3f8b4c3d5b4c5e2e3e8g8f3g5'\n,'c2c4e7e6b1c3d7d5d2d4c7c6e2e4d5e4c3e4f8b4c1d2d8d4d2b4'\n,'c2c4e7e6b1c3f7f5g1f3g8f6g2g3d7d5c4d5f6d5f1g2b8c6d2d4'\n,'c2c4e7e6b1c3g8f6d2d4f8b4d1c2d7d5c4d5c7c5d5c6d8d4g1f3'\n,'c2c4e7e6d2d4d7d5b1c3c7c6e2e3g8f6g1f3b8d7a2a4f8d6f1e2'\n,'c2c4e7e6d2d4d7d5g1f3b8c6e2e3g8f6b2b3f8d6b1c3e8g8c1b2'\n,'c2c4e7e6d2d4g8f6b1c3d7d5c1g5f8e7e2e3e8g8g1f3h7h6g5h4'\n,'c2c4e7e6d2d4g8f6b1c3f8b4e2e3c7c5d4c5b4c3b2c3b8a6g2g3'\n,'c2c4e7e6d2d4g8f6b1c3f8b4e2e3e8g8f1d3d7d5g1f3c7c5e1g1'\n,'c2c4e7e6d2d4g8f6g1f3b7b6g2g3f8d6f1g2c8b7b1c3e8g8e1g1'\n,'c2c4e7e6d2d4g8f6g1f3d7d5g2g3d5c4f1g2a7a6f3e5f8b4b1c3'\n,'c2c4e7e6d2d4g8f6g1f3f8e7b1c3d7d5c1g5h7h6g5h4e8g8e2e3'\n,'c2c4e7e6d2d4g8f6g2g3c7c5d4d5e6d5c4d5b7b5f1g2d7d6b2b4'\n,'c2c4e7e6g1f3d7d5d2d4g8f6g2g3d5c4f1g2b8c6d1a4f8b4c1d2'\n,'c2c4e7e6g1f3g8f6d2d4b7b6g2g3c8a6b2b3a6b7f1g2f8b4c1d2'\n,'c2c4g7g6d2d4f8g7b1c3d7d6e2e4g8f6g1f3e8g8f1e2c7c5d4d5'\n,'c2c4g7g6d2d4f8g7g1f3g8f6b1c3e8g8c1g5c7c5e2e3d7d6d4d5'\n,'c2c4g8f6b1c3e7e5e2e3b8c6g1f3f8b4c3d5e5e4f3g1e8g8d1c2'\n,'c2c4g8f6b1c3e7e5g1f3b8c6d2d4e5e4f3g1f8b4e2e3d7d5c1d2'\n,'c2c4g8f6b1c3e7e6d2d4f8b4g1f3b7b6c1g5c8b7g5d2e8g8e2e3'\n,'c2c4g8f6d2d4d7d6b1c3c8f5g2g3e7e5g1f3b8d7f1g2c7c6e1g1'\n,'c2c4g8f6d2d4e7e6b1c3f8b4d1c2d7d5c4d5d8d5g1f3d5f5c2f5'\n,'c2c4g8f6d2d4e7e6b1c3f8b4e2e3e8g8f1d3d7d5g1f3c7c5e1g1'\n,'c2c4g8f6d2d4e7e6d1c2c7c5g1f3c5d4f3d4b8c6d4c6d7c6g2g3'\n,'c2c4g8f6d2d4e7e6g1f3d7d5b1c3c7c6c1g5d5c4e2e4b7b5d1c2'\n,'c2c4g8f6d2d4e7e6g1f3d7d5b1c3f8e7c1f4e8g8e2e3b8c6f3e5'\n,'c2c4g8f6d2d4e7e6g1f3d7d5e2e3c7c6b1c3b8d7d1c2f8d6f1d3'\n,'c2c4g8f6d2d4g7g6b1c3d7d5c4d5f6d5e2e4d5c3b2c3f8g7f1c4'\n,'c2c4g8f6g1f3c7c5g2g3b7b6b1c3c8b7f1g2g7g6b2b3d7d5c4d5'\n,'c2c4g8f6g1f3e7e6d2d4d7d5b1c3d5c4e2e3a7a6a2a4c7c5f1c4'\n,'c2c4g8f6g1f3e7e6d2d4d7d5d1b3c7c5b1c3c5d4f3d4b8c6c4d5'\n,'c2c4g8f6g1f3e7e6d2d4d7d5g2g3d5c4f1g2a7a6e1g1b8c6e2e3'\n,'c2c4g8f6g2g3e7e5b1c3d7d5c4d5f6d5f1g2d5b6g1f3b8c6e1g1'\n,'c2c4g8f6g2g3e7e5b1c3f8c5g1f3d7d6d2d4e5d4f3d4c5d4d1d4'\n,'d2d4b7b6e2e4g7g6g1f3f8g7b1c3e7e6h2h4g8e7h4h5e8g8h5h6'\n,'d2d4c7c5d4d5d7d6e2e4g8f6b1c3g7g6f2f4f8g7f1b5f6d7a2a4'\n,'d2d4c7c5d4d5d7d6e2e4g8f6b1c3g7g6g1f3f8g7f1e2e8g8e1g1'\n,'d2d4c7c5d4d5d7d6g1f3g8f6b1c3g7g6e2e4f8g7f1e2e8g8e1g1'\n,'d2d4c7c5d4d5e7e6c2c4g8f6b1c3e6d5c4d5d7d6g1f3g7g6e2e4'\n,'d2d4c7c5d4d5e7e6e2e4e6d5e4d5f8d6b1c3b8a6g1f3g8f6d1e2'\n,'d2d4c7c5d4d5g7g6c2c4b7b5c4b5a7a6e2e4f8g7b1c3d7d6d1a4'\n,'d2d4c7c5e2e4c5d4g1f3e7e6f3d4b8c6b1c3d8c7f2f3g8f6c1e3'\n,'d2d4c7c6b1c3d7d5c1f4c8f5g1f3g8f6e2e3b8d7f1e2h7h6e2d3'\n,'d2d4c7c6b1c3d7d5g1f3g8f6c1f4d8b6a1b1b8a6h2h3c8f5a2a3'\n,'d2d4c7c6c1g5d8b6b2b3h7h6g5c1g8f6g1f3d7d5e2e3c8f5f1d3'\n,'d2d4c7c6c2c4d7d5b1c3g8f6e2e3e7e6g1f3f8d6f1d3e8g8d1c2'\n,'d2d4c7c6c2c4d7d5b1c3g8f6g1f3e7e6c1g5d5c4e2e4b7b5e4e5'\n,'d2d4c7c6c2c4d7d5b1c3g8f6g1f3e7e6c1g5h7h6g5f6d8f6d1c2'\n,'d2d4c7c6c2c4d7d5b1c3g8f6g1f3e7e6c1g5h7h6g5h4d5c4e2e4'\n,'d2d4c7c6c2c4d7d5b1c3g8f6g1f3e7e6e2e3b8d7d1c2f8d6g2g4'\n,'d2d4c7c6c2c4d7d5b1c3g8f6g1f3e7e6e2e3h7h6f1d3f8d6e1g1'\n,'d2d4c7c6c2c4d7d5e2e3c8f5d1b3d8c7c4d5c6d5b1c3e7e6g1f3'\n,'d2d4c7c6c2c4d7d5e2e3e7e6b1c3g8f6g1f3b8d7a2a4f8b4f1d3'\n,'d2d4c7c6c2c4d7d5e2e3g8f6g1f3e7e6b1c3b8d7a2a4f6e4f3d2'\n,'d2d4c7c6c2c4d7d5g1f3e7e6e2e3g8f6b1c3b8d7d1c2f8d6g2g4'\n,'d2d4c7c6c2c4d7d5g1f3g7g6e2e3g8f6b1c3f8g7f1e2f6e4e1g1'\n,'d2d4c7c6c2c4d7d5g1f3g8f6b1c3e7e6a2a4d5c4e2e4f8b4d1c2'\n,'d2d4c7c6c2c4d7d5g1f3g8f6b1c3e7e6c1g5d5c4e2e4b7b5e4e5'\n,'d2d4c7c6c2c4d7d5g1f3g8f6b1c3e7e6c1g5h7h6g5f6d8f6a2a3'\n,'d2d4c7c6c2c4d7d5g1f3g8f6b1c3e7e6c1g5h7h6g5f6d8f6d1c2'\n,'d2d4c7c6c2c4d7d5g1f3g8f6b1c3e7e6c1g5h7h6g5h4d5c4e2e4'\n,'d2d4c7c6c2c4d7d5g1f3g8f6b1c3e7e6e2e3b8d7a2a4f6e4f1d3'\n,'d2d4c7c6c2c4d7d5g1f3g8f6b1c3e7e6e2e3b8d7f1d3d5c4d3c4'\n,'d2d4c7c6c2c4d7d5g1f3g8f6d1c2e7e6e2e3b8d7b1c3f8d6f1e2'\n,'d2d4c7c6c2c4d7d5g1f3g8f6e2e3e7e6b1c3b8d7f1d3d5c4d3c4'\n,'d2d4c7c6c2c4d7d5g1f3g8f6e2e3e7e6b1c3f8d6f1d3e8g8e1g1'\n,'d2d4c7c6c2c4d7d5g1f3g8f6e2e3e7e6f1d3b8d7b2b3f6e4e1g1'\n,'d2d4c7c6e2e4d7d5b1c3d5e4c3e4b8d7e4g5h7h6g5e6d8b6e6f8'\n,'d2d4c7c6e2e4d7d5b1c3d5e4c3e4b8d7e4g5h7h6g5e6d8b6f1d3'\n,'d2d4c7c6e2e4d7d5b1c3d5e4c3e4b8d7e4g5h7h6g5f3g8f6f1d3'\n,'d2d4c7c6e2e4d7d5b1c3d5e4c3e4b8d7f1c4d7b6c4b3g8f6d1d3'\n,'d2d4c7c6e2e4d7d5b1c3d5e4c3e4b8d7f1c4d7b6c4b3g8f6e4g3'\n,'d2d4c7c6e2e4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4c3g7g6f1d3'\n,'d2d4c7c6e2e4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4f6d7f6c1f4'\n,'d2d4c7c6e2e4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4f6d7f6f3e5'\n,'d2d4c7c6e2e4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4g3g7g6h2h4'\n,'d2d4c7c6e2e4d7d5b1c3d5e4c3e4c8f5e4g3f5g6g1f3g8f6f1c4'\n,'d2d4c7c6e2e4d7d5b1c3d5e4c3e4c8f5e4g3f5g6g1f3g8f6h2h4'\n,'d2d4c7c6e2e4d7d5b1c3d5e4c3e4c8f5e4g3f5g6h2h4h7h6g1f3'\n,'d2d4c7c6e2e4d7d5b1c3d5e4c3e4c8f5e4g3f5g6h2h4h7h6g1h3'\n,'d2d4c7c6e2e4d7d5b1c3h7h6g1f3d5e4c3e4g8f6e4f6e7f6f1c4'\n,'d2d4c7c6e2e4d7d5b1d2d5e4d2e4b8d7e4c3g8f6g1f3d7b6f1d3'\n,'d2d4c7c6e2e4d7d5b1d2d5e4d2e4b8d7g1f3g8f6e4c3d7b6f1d3'\n,'d2d4c7c6e2e4d7d5b1d2d5e4d2e4b8d7g1f3g8f6e4f6d7f6f3e5'\n,'d2d4c7c6e2e4d7d5b1d2d5e4d2e4b8d7g1f3g8f6e4g3g7g6f1c4'\n,'d2d4c7c6e2e4d7d5b1d2d5e4d2e4c8f5e4g3f5g6g1f3g8f6f1c4'\n,'d2d4c7c6e2e4d7d5b1d2d5e4d2e4c8f5e4g3f5g6h2h4h7h6g1f3'\n,'d2d4c7c6e2e4d7d5b1d2d5e4d2e4g8f6e4f6e7f6c2c3f8d6f1d3'\n,'d2d4c7c6e2e4d7d5e4d5c6d5c2c4g8f6b1c3b8c6c1g5c8e6c4c5'\n,'d2d4c7c6e2e4d7d5e4d5c6d5c2c4g8f6b1c3b8c6c1g5c8e6g1f3'\n,'d2d4c7c6e2e4d7d5e4d5c6d5c2c4g8f6b1c3b8c6c1g5c8e6g5f6'\n,'d2d4c7c6e2e4d7d5e4d5c6d5c2c4g8f6b1c3b8c6c1g5f6e4c3e4'\n,'d2d4c7c6e2e4d7d5e4d5c6d5f1d3b8c6c2c3g7g6g1f3g8f6c1f4'\n,'d2d4c7c6e2e4d7d5e4d5c6d5f1d3b8c6d3e2c8f5g1f3g8f6e1g1'\n,'d2d4c7c6e2e4d7d5e4e5c6c5d4c5b8c6f1b5e7e6c1e3g8e7c2c3'\n,'d2d4c7c6e2e4d7d5e4e5c8f5a2a3e7e6b1c3g8e7g1f3b8d7f1d3'\n,'d2d4c7c6e2e4d7d5e4e5c8f5b1c3e7e6g2g4f5g6g1e2c6c5e2f4'\n,'d2d4c7c6e2e4d7d5e4e5c8f5b1c3e7e6g2g4f5g6g1e2c6c5h2h4'\n,'d2d4c7c6e2e4d7d5e4e5c8f5b1c3e7e6g2g4f5g6g1e2g8e7f2f4'\n,'d2d4c7c6e2e4d7d5e4e5c8f5b1c3h7h6f1d3f5d3d1d3e7e6g1e2'\n,'d2d4c7c6e2e4d7d5e4e5c8f5b1c3h7h6g2g4f5h7e5e6f7e6f1d3'\n,'d2d4c7c6e2e4d7d5e4e5c8f5c1e3e7e6b1d2b8d7f2f4h7h5g1f3'\n,'d2d4c7c6e2e4d7d5e4e5c8f5c1e3e7e6b1d2b8d7g1f3g8e7f1e2'\n,'d2d4c7c6e2e4d7d5e4e5c8f5c2c3e7e6c1e3b8d7b1d2f7f6g1f3'\n,'d2d4c7c6e2e4d7d5e4e5c8f5f1d3f5d3d1d3e7e6b1c3h7h5g1f3'\n,'d2d4c7c6e2e4d7d5e4e5c8f5f1d3f5d3d1d3e7e6g1e2c6c5e1g1'\n,'d2d4c7c6e2e4d7d5e4e5c8f5g1f3e7e6f1e2b8d7e1g1f5g6b1c3'\n,'d2d4c7c6e2e4d7d5e4e5c8f5g1f3e7e6f1e2b8d7e1g1f5g6b1d2'\n,'d2d4c7c6e2e4d7d5e4e5c8f5g1f3e7e6f1e2b8d7e1g1f5g6c2c3'\n,'d2d4c7c6e2e4d7d5e4e5c8f5g1f3e7e6f1e2c6c5c1e3g8e7d4c5'\n,'d2d4c7c6e2e4d7d5e4e5c8f5g1f3e7e6f1e2g8e7b1c3e7g6h2h3'\n,'d2d4c7c6e2e4d7d5e4e5c8f5g1f3h7h6f3h4f5h7e5e6g8f6f1d3'\n,'d2d4c7c6e2e4d7d5e4e5h7h6g1f3c8f5f1e2e7e6e1g1g8e7b1c3'\n,'d2d4c7c6e2e4d7d5g1e2d5e4b1c3g8f6e2g3c8g4f1e2g4e2d1e2'\n,'d2d4c7c6e2e4h7h6g1f3d7d5b1d2d5e4d2e4g8f6e4f6e7f6f1d3'\n,'d2d4c7c6e2e4h7h6g1f3d7d5e4e5c8f5b1c3e7e6a2a3g8e7f1e2'\n,'d2d4c7c6e2e4h7h6g1f3d7d5e4e5c8f5f1e2e7e6e1g1b8d7c2c3'\n,'d2d4c7c6e2e4h7h6g1f3d7d5e4e5c8f5f1e2e7e6e1g1g8e7b1d2'\n,'d2d4c7c6g1f3d7d5c2c4g8f6d1b3e7e6g2g3c6c5c4d5e6d5d4c5'\n,'d2d4c7c6g1f3g8f6c2c4d7d5b1c3e7e6c1g5h7h6g5f6d8f6d1c2'\n,'d2d4d7d5b1c3g8f6c1g5b8d7f2f3e7e6e2e4h7h6g5h4d5e4f3e4'\n,'d2d4d7d5b1c3g8f6g1f3g7g6c1f4f8g7g2g3e8g8f1g2c7c6e1g1'\n,'d2d4d7d5b1c3g8f6g1f3g7g6g2g3b8c6f1g2f8g7f3e5e8g8e1g1'\n,'d2d4d7d5b2b3g8f6g1f3c8f5c1b2e7e6e2e3f8d6c2c4f5b1d1b1'\n,'d2d4d7d5c1f4g8f6g1f3g7g6b1c3f8g7e2e3e8g8f1d3c7c5e1g1'\n,'d2d4d7d5c1g5c7c6b1c3g8f6e2e3c8f5f1d3f6e4g1e2b8d7d3e4'\n,'d2d4d7d5c1g5g8f6b1c3b8d7e2e3e7e6g1f3f8e7f1d3c7c5e1g1'\n,'d2d4d7d5c1g5g8f6g5f6e7f6e2e3c8e6b1c3f8d6f1d3c7c6d1f3'\n,'d2d4d7d5c1g5g8f6g5f6e7f6e2e3c8e6f1d3c7c5c2c3c5c4d3c2'\n,'d2d4d7d5c1g5g8f6g5f6e7f6e2e3c8e6f1d3c7c5c2c3d8b6g1e2'\n,'d2d4d7d5c1g5g8f6g5f6e7f6e2e3c8e6f1d3c7c5d4c5f8c5g1e2'\n,'d2d4d7d5c1g5g8f6g5f6e7f6e2e3c8e6g1f3b8c6b1c3g7g5f1b5'\n,'d2d4d7d5c1g5h7h6g5f4g8f6b1c3g7g5f4g3f8g7e2e3e8g8g1f3'\n,'d2d4d7d5c1g5h7h6g5h4c7c6c2c3c8f5e2e3d8b6d1b3g8f6f1e2'\n,'d2d4d7d5c2c4c7c6b1c3d5c4g1f3g8f6a2a4d8a5c1d2a5f5e2e3'\n,'d2d4d7d5c2c4c7c6b1c3e7e6d1b3g8f6g1f3d5c4b3c4b7b5c4b3'\n,'d2d4d7d5c2c4c7c6b1c3e7e6e2e3g8f6g1f3b8d7a2a4f8b4f1d3'\n,'d2d4d7d5c2c4c7c6b1c3e7e6e2e3g8f6g1f3b8d7d1c2f8d6f1e2'\n,'d2d4d7d5c2c4c7c6b1c3e7e6e2e3g8f6g1f3b8d7f1d3d5c4d3c4'\n,'d2d4d7d5c2c4c7c6b1c3e7e6e2e4d5e4c3e4f8b4c1d2d8d4d2b4'\n,'d2d4d7d5c2c4c7c6b1c3e7e6g1f3d5c4a2a4f8b4e2e3b7b5c1d2'\n,'d2d4d7d5c2c4c7c6b1c3e7e6g1f3g8f6c1g5d5c4e2e4b7b5e4e5'\n,'d2d4d7d5c2c4c7c6b1c3e7e6g1f3g8f6c1g5h7h6g5f6d8f6d1c2'\n,'d2d4d7d5c2c4c7c6b1c3e7e6g1f3g8f6c1g5h7h6g5h4d5c4e2e4'\n,'d2d4d7d5c2c4c7c6b1c3e7e6g1f3g8f6e2e3b8d7f1d3d5c4d3c4'\n,'d2d4d7d5c2c4c7c6b1c3g8f6c4d5c6d5g1f3b8c6e2e3c8f5d1b3'\n,'d2d4d7d5c2c4c7c6b1c3g8f6e2e3a7a6g1f3e7e6c4c5b8d7b2b4'\n,'d2d4d7d5c2c4c7c6b1c3g8f6e2e3e7e6g1f3b8d7f1d3d5c4d3c4'\n,'d2d4d7d5c2c4c7c6b1c3g8f6g1f3c8f5e2e3e7e6f3h4f5e4f2f3'\n,'d2d4d7d5c2c4c7c6b1c3g8f6g1f3d5c4a2a4c8f5f3e5e7e6f2f3'\n,'d2d4d7d5c2c4c7c6b1c3g8f6g1f3e7e6c1g5d5c4e2e4b7b5e4e5'\n,'d2d4d7d5c2c4c7c6b1c3g8f6g1f3e7e6c1g5d5c4g2g3b8d7f3d2'\n,'d2d4d7d5c2c4c7c6b1c3g8f6g1f3e7e6c1g5h7h6g5f6d8f6d1c2'\n,'d2d4d7d5c2c4c7c6b1c3g8f6g1f3e7e6c1g5h7h6g5h4f8e7e2e3'\n,'d2d4d7d5c2c4c7c6b1c3g8f6g1f3e7e6e2e3b8d7a2a4f6e4f1d3'\n,'d2d4d7d5c2c4c7c6b1c3g8f6g1f3e7e6e2e3b8d7d1c2f8d6g2g4'\n,'d2d4d7d5c2c4c7c6b1c3g8f6g1f3e7e6e2e3b8d7f1d3d5c4d3c4'\n,'d2d4d7d5c2c4c7c6b1d2g8f6g2g3e7e6f1g2b8d7g1f3b7b6d1c2'\n,'d2d4d7d5c2c4c7c6c4d5c6d5b1c3g8f6g1f3b8c6c1f4a7a6e2e3'\n,'d2d4d7d5c2c4c7c6d1b3d5c4b3c4c8e6c4c2d8d4g1f3d4d6e2e4'\n,'d2d4d7d5c2c4c7c6d1c2g8f6g1f3d5c4c2c4c8f5g2g3e7e6b1c3'\n,'d2d4d7d5c2c4c7c6e2e3e7e6b1c3g8f6g1f3b8d7d1c2f8d6b2b3'\n,'d2d4d7d5c2c4c7c6e2e3e7e6b1c3g8f6g1f3b8d7f1d3d5c4d3c4'\n,'d2d4d7d5c2c4c7c6e2e3e7e6g1f3g8f6b1c3b8d7f1d3d5c4d3c4'\n,'d2d4d7d5c2c4c7c6e2e3g8f6b1c3e7e6g1f3b8d7f1d3d5c4d3c4'\n,'d2d4d7d5c2c4c7c6e2e3g8f6f1d3e7e5g1e2e5e4d3c2f8d6h2h3'\n,'d2d4d7d5c2c4c7c6e2e3g8f6g1f3e7e6b1c3b8d7a2a4f6e4f1d3'\n,'d2d4d7d5c2c4c7c6e2e3g8f6g1f3e7e6b1c3b8d7a2a4f8d6f1e2'\n,'d2d4d7d5c2c4c7c6e2e3g8f6g1f3e7e6b1c3b8d7f1d3d5c4d3c4'\n,'d2d4d7d5c2c4c7c6e2e3g8f6g1f3e7e6f1d3b8d7b2b3f6e4e1g1'\n,'d2d4d7d5c2c4c7c6g1f3e7e6b1c3g8f6c1g5d5c4e2e4b7b5e4e5'\n,'d2d4d7d5c2c4c7c6g1f3e7e6b1c3g8f6c1g5f8b4d1b3d8a5g5f6'\n,'d2d4d7d5c2c4c7c6g1f3e7e6b1c3g8f6c1g5h7h6g5h4d5c4e2e4'\n,'d2d4d7d5c2c4c7c6g1f3e7e6b1c3g8f6e2e3b8d7f1d3d5c4d3c4'\n,'d2d4d7d5c2c4c7c6g1f3e7e6e2e3g8f6b1c3b8d7a2a4f6e4d1c2'\n,'d2d4d7d5c2c4c7c6g1f3f7f5b1c3e7e6c1f4g8f6e2e3f8d6f1d3'\n,'d2d4d7d5c2c4c7c6g1f3f7f5b1c3e7e6e2e3g8f6f1d3f8d6e1g1'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3a7a6e2e3c8f5f3h4f5e6c4c5'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3d5c4a2a4c8f5e2e3e7e6f1c4'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3d5c4a2a4c8f5f3e5b8d7e5c4'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3d5c4a2a4c8f5f3e5e7e6f2f3'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3d5c4a2a4c8f5f3e5e7e6g2g3'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3d5c4e2e4b7b5e4e5f6d5a2a4'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6c1g5b8d7e2e3d8a5c4d5'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6c1g5b8d7e2e3h7h6g5h4'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6c1g5d5c4e2e4b7b5e4e5'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6c1g5f8e7e2e3b8d7f1d3'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6c1g5f8e7e2e3h7h6g5f4'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6c1g5f8e7e2e3h7h6g5h4'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6c1g5h7h6g5f6d8f6d1c2'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6c1g5h7h6g5f6d8f6e2e3'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6c1g5h7h6g5h4d5c4e2e4'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6d1d3b7b6c4d5c6d5c1f4'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6d1d3d5c4d3c4f8e7a2a3'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6d1d3f8d6e2e4d5e4c3e4'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6e2e3b8d7c4c5b7b6b2b4'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6e2e3b8d7d1c2f8d6f1d3'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6e2e3b8d7d1c2f8d6f1e2'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6e2e3b8d7d1c2f8d6g2g4'\n,'d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6e2e3b8d7f1d3d5c4d3c4'\n,'d2d4d7d5c2c4c7c6g1f3g8f6c4d5c6d5b1c3g7g6c1g5b8c6e2e3'\n,'d2d4d7d5c2c4c7c6g1f3g8f6d1c2e7e6g2g3c6c5c4d5e6d5d4c5'\n,'d2d4d7d5c2c4c7c6g1f3g8f6e2e3a7a6b1c3e7e6b2b3f8b4c1d2'\n,'d2d4d7d5c2c4c7c6g1f3g8f6e2e3c8f5b1c3e7e6f3h4f5e4f2f3'\n,'d2d4d7d5c2c4c7c6g1f3g8f6e2e3e7e6b1c3b8d7a2a4f8b4f1d3'\n,'d2d4d7d5c2c4c7c6g1f3g8f6e2e3e7e6b1c3b8d7a2a4f8d6f1e2'\n,'d2d4d7d5c2c4c7c6g1f3g8f6e2e3e7e6b1c3b8d7c1d2f8d6f1d3'\n,'d2d4d7d5c2c4c7c6g1f3g8f6e2e3e7e6b1c3b8d7d1c2f8d6b2b3'\n,'d2d4d7d5c2c4c7c6g1f3g8f6e2e3e7e6b1c3b8d7d1c2f8d6c1d2'\n,'d2d4d7d5c2c4c7c6g1f3g8f6e2e3e7e6b1c3b8d7d1c2f8d6f1e2'\n,'d2d4d7d5c2c4c7c6g1f3g8f6e2e3e7e6b1c3b8d7d1c2f8d6g2g4'\n,'d2d4d7d5c2c4c7c6g1f3g8f6e2e3e7e6b1c3b8d7f1d3b7b6e1g1'\n,'d2d4d7d5c2c4c7c6g1f3g8f6e2e3e7e6b1c3b8d7f1d3d5c4d3c4'\n,'d2d4d7d5c2c4c7c6g1f3g8f6e2e3e7e6b1d2b8d7a2a3f8d6b2b4'\n,'d2d4d7d5c2c4c7c6g1f3g8f6e2e3e7e6b1d2c6c5b2b3c5d4e3d4'\n,'d2d4d7d5c2c4c7c6g1f3g8f6e2e3e7e6f1d3b8d7e1g1d5c4d3c4'\n,'d2d4d7d5c2c4c7c6g1f3g8f6e2e3e7e6f1d3b8d7e1g1f8d6b1d2'\n,'d2d4d7d5c2c4c7c6g1f3g8f6e2e3e7e6f1d3d5c4d3c4c6c5b1c3'\n,'d2d4d7d5c2c4d5c4e2e4b8c6g1f3c8g4d4d5c6e5c1f4e5g6f4e3'\n,'d2d4d7d5c2c4d5c4e2e4g8f6e4e5f6d5f1c4d5b6c4b3b8c6g1e2'\n,'d2d4d7d5c2c4d5c4e2e4g8f6e4e5f6d5f1c4d5b6c4d3b8c6g1e2'\n,'d2d4d7d5c2c4e7e6a2a3g8f6b1c3b8d7e2e3c7c5g1f3f8e7c4d5'\n,'d2d4d7d5c2c4e7e6b1c3c7c6e2e3g8f6g1f3b8d7d1c2f8d6c1d2'\n,'d2d4d7d5c2c4e7e6b1c3c7c6e2e3g8f6g1f3b8d7d1c2f8d6f1e2'\n,'d2d4d7d5c2c4e7e6b1c3c7c6e2e3g8f6g1f3b8d7d1c2f8d6g2g4'\n,'d2d4d7d5c2c4e7e6b1c3c7c6e2e4d5e4c3e4f8b4c1d2d8d4d2b4'\n,'d2d4d7d5c2c4e7e6b1c3c7c6g1f3g8f6c1g5h7h6g5h4d5c4e2e4'\n,'d2d4d7d5c2c4e7e6b1c3g8f6c1g5f8e7g1f3h7h6g5h4e8g8e2e3'\n,'d2d4d7d5c2c4e7e6b1c3g8f6g1f3c7c6c1g5d5c4e2e4b7b5e4e5'\n,'d2d4d7d5c2c4e7e6b1c3g8f6g1f3c7c6e2e3b8d7d1c2f8d6f1e2'\n,'d2d4d7d5c2c4e7e6b1c3g8f6g1f3c7c6e2e3b8d7f1d3d5c4d3c4'\n,'d2d4d7d5c2c4e7e6b1c3g8f6g1f3f8b4c1g5b8d7c4d5e6d5e2e3'\n,'d2d4d7d5c2c4e7e6b1c3g8f6g1f3f8e7c1f4e8g8e2e3b8c6h2h3'\n,'d2d4d7d5c2c4e7e6b1c3g8f6g1f3f8e7c1f4e8g8e2e3c7c5d4c5'\n,'d2d4d7d5c2c4e7e6g1f3b8c6g2g3f8b4c1d2d8e7a2a3b4d2b1d2'\n,'d2d4d7d5c2c4e7e6g1f3c7c6b1c3d5c4a2a4f8b4e2e3b7b5c1d2'\n,'d2d4d7d5c2c4e7e6g1f3c7c6c4d5e6d5b1c3g8f6c1g5f8e7e2e3'\n,'d2d4d7d5c2c4e7e6g1f3c7c6e2e3g8f6b1c3b8d7d1c2f8d6g2g4'\n,'d2d4d7d5c2c4e7e6g1f3c7c6e2e3g8f6b1c3b8d7f1d3d5c4d3c4'\n,'d2d4d7d5c2c4e7e6g1f3g8f6b1c3f8b4d1a4b8c6e2e3e8g8c1d2'\n,'d2d4d7d5c2c4e7e6g1f3g8f6b1c3f8e7c1f4b8c6e2e3e8g8h2h3'\n,'d2d4d7d5c2c4e7e6g1f3g8f6b1c3f8e7c1f4e8g8e2e3c7c5d4c5'\n,'d2d4d7d5c2c4e7e6g1f3g8f6g2g3d5c4f1g2a7a6e1g1b8c6e2e3'\n,'d2d4d7d5c2c4e7e6g1f3g8f6g2g3f8b4b1d2c7c5a2a3b4d2d1d2'\n,'d2d4d7d5c2c4e7e6g1f3g8f6g2g3f8e7f1g2e8g8e1g1b8d7d1c2'\n,'d2d4d7d5e2e4d5e4b1c3g8f6f2f3e4f3g1f3g7g6f1b5c7c6b5c4'\n,'d2d4d7d5f2f4c7c5c2c3e7e6e2e3b8c6f1d3g8f6g1f3f8d6e1g1'\n,'d2d4d7d5g1f3c7c6c2c4e7e6b1c3d5c4a2a4f8b4e2e3b7b5c1d2'\n,'d2d4d7d5g1f3c7c6c2c4e7e6b1d2g8f6g2g3b8d7f1g2b7b6e1g1'\n,'d2d4d7d5g1f3c7c6c2c4g8f6b1c3e7e6e2e3b8d7f1d3d5c4d3c4'\n,'d2d4d7d5g1f3c7c6c2c4g8f6e2e3a7a6b1c3b7b5b2b3e7e6f1d3'\n,'d2d4d7d5g1f3g8f6b1c3g7g6c1f4f8g7g2g3e8g8f1g2b8c6e1g1'\n,'d2d4d7d5g1f3g8f6b1c3g7g6g2g3f8g7f1g2b8c6e1g1e8g8c1f4'\n,'d2d4d7d5g1f3g8f6c2c4b8c6c4d5d8d5b1c3d5a5c1d2c8g4d4d5'\n,'d2d4d7d5g1f3g8f6c2c4c7c6b1c3d5c4a2a4d8a5c1d2a5f5e2e3'\n,'d2d4d7d5g1f3g8f6c2c4c7c6b1c3e7e6c1g5d5c4e2e4b7b5e4e5'\n,'d2d4d7d5g1f3g8f6c2c4c7c6b1c3e7e6c1g5h7h6g5f6d8f6d1c2'\n,'d2d4d7d5g1f3g8f6c2c4c7c6b1c3e7e6c1g5h7h6g5h4d5c4e2e4'\n,'d2d4d7d5g1f3g8f6c2c4c7c6b1c3e7e6e2e3b8d7a2a4f8d6f1e2'\n,'d2d4d7d5g1f3g8f6c2c4c7c6b1c3e7e6e2e3b8d7c1d2f8d6f1d3'\n,'d2d4d7d5g1f3g8f6c2c4c7c6b1c3e7e6e2e3b8d7d1c2f8d6f1d3'\n,'d2d4d7d5g1f3g8f6c2c4c7c6b1c3e7e6e2e3b8d7d1c2f8d6g2g4'\n,'d2d4d7d5g1f3g8f6c2c4c7c6b1c3e7e6e2e3b8d7f1d3d5c4d3c4'\n,'d2d4d7d5g1f3g8f6c2c4c7c6c4d5c6d5b1c3b8c6c1f4c8f5e2e3'\n,'d2d4d7d5g1f3g8f6c2c4c7c6d1b3d5c4b3c4c8f5g2g3e7e6f1g2'\n,'d2d4d7d5g1f3g8f6c2c4c7c6e2e3a7a6b1c3b7b5b2b3c8g4f1e2'\n,'d2d4d7d5g1f3g8f6c2c4c7c6e2e3e7e6b1c3b8d7a2a4a7a6f1d3'\n,'d2d4d7d5g1f3g8f6c2c4c7c6e2e3e7e6b1c3b8d7a2a4f8d6f1e2'\n,'d2d4d7d5g1f3g8f6c2c4c7c6e2e3e7e6b1c3b8d7d1c2f8d6b2b3'\n,'d2d4d7d5g1f3g8f6c2c4c7c6e2e3e7e6b1c3b8d7d1c2f8d6g2g4'\n,'d2d4d7d5g1f3g8f6c2c4c7c6e2e3e7e6b1c3b8d7f1d3d5c4d3c4'\n,'d2d4d7d5g1f3g8f6c2c4c7c6e2e3e7e6b1c3f8d6a2a3b8d7f1e2'\n,'d2d4d7d5g1f3g8f6c2c4c7c6e2e3e7e6f1d3b8d7b2b3f8d6c1b2'\n,'d2d4d7d5g1f3g8f6c2c4d5c4b1c3c7c6e2e3b7b5a2a4b5b4c3a2'\n,'d2d4d7d5g1f3g8f6c2c4d5c4e2e3e7e6f1c4c7c5b1c3a7a6a2a4'\n,'d2d4d7d5g1f3g8f6c2c4d5c4e2e3e7e6f1c4c7c5e1g1a7a6c4b3'\n,'d2d4d7d5g1f3g8f6c2c4d5c4g2g3g7g6f1g2f8g7b1a3c7c5d1a4'\n,'d2d4d7d5g1f3g8f6c2c4e7e6b1c3c7c6c1g5d5c4e2e4b7b5e4e5'\n,'d2d4d7d5g1f3g8f6c2c4e7e6b1c3c7c6c1g5h7h6g5h4d5c4e2e4'\n,'d2d4d7d5g1f3g8f6c2c4e7e6b1c3c7c6e2e3b8d7f1d3d5c4d3c4'\n,'d2d4d7d5g1f3g8f6c2c4e7e6c1g5f8e7b1c3h7h6g5h4e8g8e2e3'\n,'d2d4d7d5g1f3g8f6c2c4e7e6c4d5e6d5h2h3f8d6b1c3b8c6e2e3'\n,'d2d4d7d5g1f3g8f6c2c4e7e6g2g3d5c4e2e3d8d5f1g2d5a5f3d2'\n,'d2d4d7d5g1f3g8f6c2c4e7e6g2g3d5c4f1g2b8c6d1a4f8b4c1d2'\n,'d2d4d7d5g1f3g8f6c2c4e7e6g2g3f8b4c1d2b4e7f1g2e8g8e1g1'\n,'d2d4d7d5g1f3g8f6e2e3e7e6f1d3c7c5c2c3b8c6b1d2f8d6e1g1'\n,'d2d4d7d5g1f3g8f6g2g3c7c6c2c4d5c4b1d2b7b5f1g2g7g6a2a4'\n,'d2d4d7d5g1f3g8f6g2g3c7c6f1g2g7g6b1c3f8g7e1g1e8g8c1f4'\n,'d2d4d7d5g1f3g8f6g2g3e7e6c2c4d5c4f1g2a7a6e1g1b8c6e2e3'\n,'d2d4d7d5g1f3g8f6g2g3e7e6f1g2f8d6b1c3e8g8e1g1b8c6f1e1'\n,'d2d4d7d5g1f3g8f6g2g3e7e6f1g2f8e7c1g5h7h6g5f6e7f6b1c3'\n,'d2d4d7d5g1f3g8f6g2g3g7g6f1g2f8g7c2c4e8g8e1g1c7c6c4d5'\n,'d2d4d7d5g1f3g8f6g2g3g7g6f1g2f8g7e1g1e8g8c2c4c7c6c4d5'\n,'d2d4d7d5g1f3g8f6h2h3b8c6c2c3g7g6c1f4f8g7e2e3c8f5b1d2'\n,'d2d4d7d5g1f3g8f6h2h3c7c5e2e3e7e6c2c3b8c6b1d2f8d6d4c5'\n,'d2d4d7d5g1f3g8f6h2h3g7g6c2c3b8c6c1f4e7e6e2e3f6h5f4h2'\n,'d2d4d7d5g2g3g8f6g1f3g7g6b1c3f8g7f1g2e8g8e1g1c7c6c1f4'\n,'d2d4d7d5h2h3c8f5c2c4d5c4b1c3g8f6g1f3c7c6e2e3b7b5f1e2'\n,'d2d4d7d5h2h3g8f6c2c3g7g6g1f3f8g7c1f4b8c6e2e3e8g8b1d2'\n,'d2d4d7d5h2h3g8f6c2c3g7g6g1f3f8g7c1f4c7c5e2e3e8g8b1d2'\n,'d2d4d7d5h2h3g8f6g1f3c7c5c2c3e7e6e2e3b8c6b1d2f8d6d4c5'\n,'d2d4d7d5h2h4g8f6g1f3b8c6c1f4c8f5e2e3e7e6f1b5f8d6e1g1'\n,'d2d4d7d6e2e4c7c5d4c5d8a5b1c3d6c5g1f3g8f6c1d2c8e6f1b5'\n,'d2d4d7d6e2e4g7g6b1c3g8f6f2f4f8g7g1f3c7c5f1b5c8d7b5d7'\n,'d2d4e7e6b1c3g8f6g2g3d7d5f1g2b8c6g1f3f8d6e1g1e8g8a2a3'\n,'d2d4e7e6c2c4c7c6e2e4d7d5b1c3d5e4c3e4f8b4c1d2d8d4d2b4'\n,'d2d4e7e6c2c4d7d5b1c3g8f6g1f3b8c6c1f4f8e7e2e3e8g8a2a3'\n,'d2d4e7e6c2c4d7d5b1c3g8f6g1f3b8c6c1g5f8e7e2e3e8g8a2a3'\n,'d2d4e7e6c2c4d7d5b1c3g8f6g1f3c7c6c1g5d5c4e2e4b7b5e4e5'\n,'d2d4e7e6e2e4d7d5b1c3b8c6c1e3d5e4c3e4f7f5e4c3f8d6g1f3'\n,'d2d4e7e6e2e4d7d5b1c3b8c6g1f3g8f6e4e5f6e4f1d3f8b4c1d2'\n,'d2d4e7e6e2e4d7d5b1c3f8b4e4e5c7c5a2a3b4c3b2c3d8c7d1g4'\n,'d2d4e7e6e2e4d7d5b1c3g8f6c1g5b8c6g1f3f8e7e4e5f6e4g5e7'\n,'d2d4e7e6e2e4d7d5b1c3g8f6c1g5d5e4c3e4b8d7e4f6d7f6g1f3'\n,'d2d4e7e6e2e4d7d5b1c3g8f6c1g5f8e7e4e5f6d7g5e7d8e7d1d2'\n,'d2d4e7e6e2e4d7d5b1c3g8f6c1g5f8e7e4e5f6d7g5e7d8e7f2f4'\n,'d2d4e7e6e2e4d7d5b1c3g8f6e4e5f6d7f2f4c7c5g1f3b8c6c1e3'\n,'d2d4e7e6e2e4d7d5b1d2g8f6e4e5f6d7c2c3c7c5f1d3b8c6g1e2'\n,'d2d4e7e6e2e4d7d5e4e5c7c5c2c3b8c6g1f3c8d7a2a3c5c4f1e2'\n,'d2d4e7e6e2e4d7d5e4e5c7c5c2c3b8c6g1f3c8d7d4c5f8c5b2b4'\n,'d2d4e7e6e2e4d7d5e4e5c7c5c2c3b8c6g1f3d8b6a2a3f7f6b2b4'\n,'d2d4e7e6e2e4d7d5e4e5c7c5c2c3b8c6g1f3d8b6a2a3f7f6f1d3'\n,'d2d4e7e6g1f3d7d5c2c4g8f6g2g3d5c4e2e3d8d5f1g2d5a5f3d2'\n,'d2d4e7e6g1f3d7d5e2e3g8f6f1d3c7c5b2b3b8c6e1g1f8e7c1b2'\n,'d2d4f7f5g1f3g8f6g2g3g7g6f1g2d7d6e1g1f8g7c2c4b8c6b1c3'\n,'d2d4f7f5g1f3g8f6g2g3g7g6f1g2f8g7e1g1e8g8c2c4c7c5b1c3'\n,'d2d4f7f5g2g3c7c5d4d5g8f6b1c3g7g6g1f3d7d6f1g2f8g7e1g1'\n,'d2d4f7f5g2g3c7c5g1f3g8f6d4d5g7g6f1g2d7d6c2c4f8g7b1c3'\n,'d2d4f7f5g2g3e7e6g1f3d7d6f1g2f8e7e1g1g8f6c2c4e8g8b1c3'\n,'d2d4f7f5g2g3g8f6g1h3b8c6b1c3d7d5f1g2e7e6e1g1f8e7a2a3'\n,'d2d4g7g6e2e4d7d6b1c3f8g7c1e3g8f6d1d2c7c6g1f3e8g8h2h3'\n,'d2d4g7g6e2e4d7d6b1c3g8f6c1e3f8g7f2f3e8g8d1d2b8c6e1c1'\n,'d2d4g7g6e2e4d7d6b1c3g8f6c1g5f8g7d1d2h7h6g5f4g6g5f4e3'\n,'d2d4g7g6e2e4d7d6b1c3g8f6f1e2d6d5e4e5f6e4c3e4d5e4c2c3'\n,'d2d4g7g6e2e4d7d6c2c4f8g7b1c3g8f6f2f3e8g8c1e3a7a6f1d3'\n,'d2d4g7g6e2e4d7d6g1f3f8g7b1c3g8f6f1e2e8g8e1g1c7c6a2a4'\n,'d2d4g7g6e2e4f8g7b1c3c7c5d4d5d7d6g1f3g8f6f1e2e8g8e1g1'\n,'d2d4g7g6g1f3d7d6e2e4f8g7f1e2g8f6b1c3e8g8e1g1c7c6h2h3'\n,'d2d4g8f6a2a3d7d5c1g5f6e4g5f4g7g5f4e3f8g7b1c3b8c6c3e4'\n,'d2d4g8f6b1c3d7d5f2f3c7c5e2e4e7e6c1g5d8b6g1e2b8c6g5f6'\n,'d2d4g8f6b1c3d7d5g1f3c7c6c1g5f6e4g5d2b8d7e2e3e4d2d1d2'\n,'d2d4g8f6b1c3d7d5g1f3g7g6g2g3f8g7f1g2e8g8e1g1c7c6c1f4'\n,'d2d4g8f6c1f4d7d5e2e3c7c5b1c3c5d4e3d4g7g6c3b5b8a6f1e2'\n,'d2d4g8f6c1g5d7d5b1c3c7c5e2e3b8c6f1b5c5d4d1d4c8d7b5c6'\n,'d2d4g8f6c1g5d7d5g5f6e7f6e2e3c8e6b1c3f8d6d1f3b8c6g1e2'\n,'d2d4g8f6c1g5d7d5g5f6e7f6e2e3c8e6f1d3c7c5c2c3c5c4d3c2'\n,'d2d4g8f6c1g5d7d5g5f6e7f6e2e3f8d6c2c4d5c4f1c4e8g8b1c3'\n,'d2d4g8f6c1g5d7d5g5f6e7f6e2e3f8d6f1d3e8g8b1c3c7c6d1d2'\n,'d2d4g8f6c1g5d7d5g5f6e7f6e2e3f8d6f1d3e8g8b1c3c7c6d1f3'\n,'d2d4g8f6c1g5e7e6e2e4h7h6g5f6d8f6g1f3b7b6f1d3c8b7b1d2'\n,'d2d4g8f6c1g5e7e6e2e4h7h6g5f6d8f6g1f3b8c6b1c3f8b4f1b5'\n,'d2d4g8f6c1g5f6e4g5f4c7c5d4d5d8b6f4c1e7e6f2f3b6a5c2c3'\n,'d2d4g8f6c1g5f6e4g5f4c7c5d4d5d8b6f4c1g7g6f2f3e4d6e2e4'\n,'d2d4g8f6c1g5f6e4g5f4c7c5f2f3d8a5c2c3e4f6d4d5a5b6e2e4'\n,'d2d4g8f6c1g5f6e4g5f4d7d5e2e3c7c5f2f3d8a5b1d2e4f6g1e2'\n,'d2d4g8f6c2c4b8c6g1f3e7e6b1c3d7d5a2a3f8d6e2e3b7b6d1c2'\n,'d2d4g8f6c2c4c7c5d4d5d7d6b1c3e7e5e2e4b8d7g1f3f8e7h2h3'\n,'d2d4g8f6c2c4c7c5d4d5d7d6b1c3e7e6g1f3e6d5c4d5d8a5e2e4'\n,'d2d4g8f6c2c4c7c5d4d5e7e6g2g3e6d5c4d5b7b5f1g2d7d6b2b4'\n,'d2d4g8f6c2c4c7c5d4d5g7g6b1c3f8g7e2e4d7d6g1f3e8g8f1e2'\n,'d2d4g8f6c2c4c7c5d4d5g7g6e2e3f8g7g1f3d7d6b1c3e8g8f1e2'\n,'d2d4g8f6c2c4c7c5g1f3c5d4f3d4e7e5d4b5d7d6c1g5c8e6b1d2'\n,'d2d4g8f6c2c4c7c6g1f3d7d5b1c3e7e6c1g5d5c4e2e4b7b5e4e5'\n,'d2d4g8f6c2c4c7c6g1f3d7d5b1c3e7e6e2e3b8d7d1c2f8d6f1d3'\n,'d2d4g8f6c2c4c7c6g1f3d7d5b1c3e7e6e2e3b8d7f1d3d5c4d3c4'\n,'d2d4g8f6c2c4c7c6g1f3d7d5b1c3e7e6e2e3f8d6f1d3b8d7c1d2'\n,'d2d4g8f6c2c4c7c6g1f3d7d5e2e3e7e6b1c3b8d7f1d3d5c4d3c4'\n,'d2d4g8f6c2c4c7c6g1f3d7d6b1c3b8d7e2e4e7e5f1e2f8e7e1g1'\n,'d2d4g8f6c2c4d7d5c4d5g7g6f2f3f6d5e2e4d5b6b1c3f8g7c1e3'\n,'d2d4g8f6c2c4d7d5g1f3e7e6b1c3c7c6e2e3b8d7f1d3f8e7e1g1'\n,'d2d4g8f6c2c4e7e5d4e5f6g4g1f3f8c5e2e3b8c6f1e2g4e5f3e5'\n,'d2d4g8f6c2c4e7e6b1c3d7d5c1g5f8e7g1f3e8g8e2e3b8c6a2a3'\n,'d2d4g8f6c2c4e7e6b1c3d7d5c4d5e6d5c1g5f8b4e2e3h7h6g5f6'\n,'d2d4g8f6c2c4e7e6b1c3d7d5c4d5e6d5c1g5f8b4g1f3b8d7e2e3'\n,'d2d4g8f6c2c4e7e6b1c3d7d5c4d5e6d5c1g5f8e7e2e3c7c6d1c2'\n,'d2d4g8f6c2c4e7e6b1c3d7d5c4d5e6d5c1g5f8e7e2e3e8g8f1d3'\n,'d2d4g8f6c2c4e7e6b1c3d7d5g1f3c7c5c4d5c5d4f3d4f6d5c1d2'\n,'d2d4g8f6c2c4e7e6b1c3d7d5g1f3c7c6c1g5b8d7e2e3d8a5f3d2'\n,'d2d4g8f6c2c4e7e6b1c3d7d5g1f3c7c6c1g5h7h6g5h4d5c4e2e4'\n,'d2d4g8f6c2c4e7e6b1c3d7d5g1f3c7c6e2e3b8d7d1c2f8d6f1e2'\n,'d2d4g8f6c2c4e7e6b1c3d7d5g1f3c7c6e2e3b8d7d1c2f8d6g2g4'\n,'d2d4g8f6c2c4e7e6b1c3d7d5g1f3c7c6e2e3b8d7f1d3d5c4d3c4'\n,'d2d4g8f6c2c4e7e6b1c3d7d5g1f3c7c6e2e3f8d6f1d3b8d7d1c2'\n,'d2d4g8f6c2c4e7e6b1c3d7d5g1f3f8e7c1f4e8g8e2e3c7c5d4c5'\n,'d2d4g8f6c2c4e7e6b1c3f8b4a2a3b4c3b2c3c7c5e2e3b8c6f1d3'\n,'d2d4g8f6c2c4e7e6b1c3f8b4d1c2c7c5d4c5e8g8a2a3b4c5g1f3'\n,'d2d4g8f6c2c4e7e6b1c3f8b4d1c2d7d5c4d5d8d5g1f3d5f5c2f5'\n,'d2d4g8f6c2c4e7e6b1c3f8b4d1c2d7d5c4d5e6d5c1g5h7h6g5h4'\n,'d2d4g8f6c2c4e7e6b1c3f8b4d1c2e8g8a2a3b4c3c2c3b7b6c1g5'\n,'d2d4g8f6c2c4e7e6b1c3f8b4d1c2e8g8a2a3b4c3c2c3b7b6g1f3'\n,'d2d4g8f6c2c4e7e6b1c3f8b4d1c2e8g8g1f3c7c5a2a3b4c3b2c3'\n,'d2d4g8f6c2c4e7e6b1c3f8b4d1d3e8g8g1f3d7d5g2g3c7c5a2a3'\n,'d2d4g8f6c2c4e7e6b1c3f8b4e2e3b7b6f1d3c8b7f2f3b8c6g1e2'\n,'d2d4g8f6c2c4e7e6b1c3f8b4e2e3b8c6g1e2e8g8a2a3b4e7e2g3'\n,'d2d4g8f6c2c4e7e6b1c3f8b4e2e3c7c5f1d3b8c6g1f3b4c3b2c3'\n,'d2d4g8f6c2c4e7e6b1c3f8b4e2e3c7c5f1d3e8g8g1f3d7d5e1g1'\n,'d2d4g8f6c2c4e7e6b1c3f8b4e2e3c7c5g1e2c5d4e3d4d7d5c4c5'\n,'d2d4g8f6c2c4e7e6b1c3f8b4e2e3c7c5g1e2c5d4e3d4e8g8a2a3'\n,'d2d4g8f6c2c4e7e6b1c3f8b4e2e3e8g8f1d3c7c5g1f3b8c6e1g1'\n,'d2d4g8f6c2c4e7e6b1c3f8b4e2e3e8g8f1d3c7c5g1f3d7d5e1g1'\n,'d2d4g8f6c2c4e7e6b1c3f8b4e2e3e8g8f1d3d7d5c4d5e6d5g1e2'\n,'d2d4g8f6c2c4e7e6b1c3f8b4e2e3e8g8f1d3d7d5g1f3c7c5a2a3'\n,'d2d4g8f6c2c4e7e6b1c3f8b4e2e3e8g8f1d3d7d5g1f3c7c5e1g1'\n,'d2d4g8f6c2c4e7e6b1c3f8b4e2e3e8g8g1f3c7c5f1d3d7d5e1g1'\n,'d2d4g8f6c2c4e7e6b1c3f8b4f2f3e8g8e2e4f6h5g1h3d7d6g2g4'\n,'d2d4g8f6c2c4e7e6b1c3f8b4g1f3b7b6c1g5c8b7e2e3h7h6g5h4'\n,'d2d4g8f6c2c4e7e6b1c3f8b4g1f3b7b6d1b3d8e7a2a3b4c3b3c3'\n,'d2d4g8f6c2c4e7e6b1c3f8b4g1f3b7b6d1c2c8b7a2a3b7e4c2a4'\n,'d2d4g8f6c2c4e7e6b1c3f8b4g1f3d7d5c1g5b8d7c4d5e6d5e2e3'\n,'d2d4g8f6c2c4e7e6b1c3f8b4g1f3d7d5c1g5d5c4e2e3b7b5f1e2'\n,'d2d4g8f6c2c4e7e6b1c3f8b4g2g3c7c5g1f3b8c6f1g2d8a5e1g1'\n,'d2d4g8f6c2c4e7e6c1g5f8b4b1c3h7h6g5h4c7c5d4d5d7d6e2e3'\n,'d2d4g8f6c2c4e7e6c1g5f8e7b1c3c7c5g1f3c5d4f3d4b8c6a2a3'\n,'d2d4g8f6c2c4e7e6c1g5f8e7b1c3d7d5a2a3h7h6g5f6e7f6e2e3'\n,'d2d4g8f6c2c4e7e6c1g5h7h6g5f6d8f6e2e4c7c5e4e5f6e7d4d5'\n,'d2d4g8f6c2c4e7e6d1c2c7c5e2e3b8c6g1f3g7g5h2h3d8b6d4c5'\n,'d2d4g8f6c2c4e7e6d1c2d7d5g1f3f8e7b1c3c7c5d4c5d5d4c3b5'\n,'d2d4g8f6c2c4e7e6g1f3a7a6b1c3d7d5c4d5e6d5c1g5b8c6e2e3'\n,'d2d4g8f6c2c4e7e6g1f3a7a6g2g3c7c5f1g2c5d4e1g1b8c6f3d4'\n,'d2d4g8f6c2c4e7e6g1f3b7b6a2a3c8b7b1c3d7d5c4d5f6d5d1c2'\n,'d2d4g8f6c2c4e7e6g1f3b7b6g2g3b8c6f1g2f8d6e1g1c8b7b1c3'\n,'d2d4g8f6c2c4e7e6g1f3b7b6g2g3c8a6b2b3f8b4c1d2b4e7f1g2'\n,'d2d4g8f6c2c4e7e6g1f3b7b6g2g3c8a6d1c2b8c6f1g2f8b4b1d2'\n,'d2d4g8f6c2c4e7e6g1f3b7b6g2g3c8a6d1c2c7c5d4d5e6d5c4d5'\n,'d2d4g8f6c2c4e7e6g1f3b7b6g2g3c8a6d1c2c7c5f1g2b8c6d4c5'\n,'d2d4g8f6c2c4e7e6g1f3b7b6g2g3c8b7f1g2f8e7b1c3f6e4d1c2'\n,'d2d4g8f6c2c4e7e6g1f3b7b6g2g3c8b7f1g2f8e7e1g1e8g8b1c3'\n,'d2d4g8f6c2c4e7e6g1f3b7b6g2g3c8b7f1g2f8e7e1g1e8g8d4d5'\n,'d2d4g8f6c2c4e7e6g1f3b7b6g2g3f8b4c1d2d8e7f1g2c8b7e1g1'\n,'d2d4g8f6c2c4e7e6g1f3b7b6g2g3f8d6f1g2b8c6e1g1e8g8b1c3'\n,'d2d4g8f6c2c4e7e6g1f3b7b6g2g3f8d6f1g2c8b7e1g1e8g8b1c3'\n,'d2d4g8f6c2c4e7e6g1f3b8c6b1c3d7d5a2a3f8e7e2e3f6e4f1d3'\n,'d2d4g8f6c2c4e7e6g1f3b8c6b1c3d7d5c1g5f8b4e2e3h7h6g5f6'\n,'d2d4g8f6c2c4e7e6g1f3b8c6b1c3d7d5c1g5f8b4e2e3h7h6g5h4'\n,'d2d4g8f6c2c4e7e6g1f3b8c6b1c3d7d5c1g5f8e7e2e3e8g8a2a3'\n,'d2d4g8f6c2c4e7e6g1f3b8c6b1c3f8b4d1c2e8g8a2a3b4c3c2c3'\n,'d2d4g8f6c2c4e7e6g1f3b8c6d4d5f8b4b1c3e6d5c4d5c6e7d1d4'\n,'d2d4g8f6c2c4e7e6g1f3b8c6g2g3d7d5f1g2f8b4c1d2d8e7e1g1'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3c7c6c1g5d5c4e2e4b7b5e4e5'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3c7c6c1g5h7h6g5f6d8f6d1c2'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3c7c6c1g5h7h6g5f6d8f6e2e3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3c7c6c1g5h7h6g5h4d5c4e2e4'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3c7c6c1g5h7h6g5h4f8e7e2e3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3c7c6c4d5c6d5c1f4b8c6e2e3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3c7c6e2e3b8d7a2a4f6e4d1c2'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3c7c6e2e3b8d7a2a4f6e4f1d3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3c7c6e2e3b8d7a2a4f8b4f1d3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3c7c6e2e3b8d7a2a4f8d6f1e2'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3c7c6e2e3b8d7d1c2f8d6f1d3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3c7c6e2e3b8d7d1c2f8d6f1e2'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3c7c6e2e3b8d7d1c2f8d6g2g4'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3c7c6e2e3b8d7d1c2f8e7b2b3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3c7c6e2e3b8d7f1d3d5c4d3c4'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3c7c6e2e3f8d6g2g4h7h6h1g1'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3f8b4c1g5b8d7c4d5e6d5e2e3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3f8b4c4d5e6d5c1g5b8d7d1c2'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3f8b4c4d5e6d5c1g5b8d7e2e3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3f8b4e2e3e8g8f1d3c7c5e1g1'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3f8e7c1f4e8g8e2e3b8c6f4g3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3f8e7c1f4e8g8e2e3b8d7d1c2'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3f8e7c1f4e8g8e2e3c7c5d4c5'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3f8e7c1g5e8g8e2e3h7h6g5h4'\n,'d2d4g8f6c2c4e7e6g1f3d7d5b1c3f8e7c1g5h7h6g5h4e8g8e2e3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5c1g5f8e7e2e3b8d7c4d5f6d5g5e7'\n,'d2d4g8f6c2c4e7e6g1f3d7d5c1g5f8e7e2e3e8g8b1c3h7h6g5h4'\n,'d2d4g8f6c2c4e7e6g1f3d7d5d1c2c7c6g2g3d5c4c2c4b7b5c4d3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5e2e3c7c6b1c3b8d7c1d2f8d6f1d3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5g2g3c7c6d1c2b8a6a2a3c6c5e2e3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5g2g3d5c4e2e3b7b5a2a4b5b4f1c4'\n,'d2d4g8f6c2c4e7e6g1f3d7d5g2g3d5c4e2e3d8d5f1g2d5a5f3d2'\n,'d2d4g8f6c2c4e7e6g1f3d7d5g2g3d5c4f1g2a7a6e1g1b8c6b1c3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5g2g3d5c4f1g2a7a6e1g1b8c6e2e3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5g2g3d5c4f1g2a7a6e2e3f6d5f3e5'\n,'d2d4g8f6c2c4e7e6g1f3d7d5g2g3d5c4f1g2a7a6f3e5c7c5b1a3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5g2g3d5c4f1g2a7a6f3e5c7c5c1e3'\n,'d2d4g8f6c2c4e7e6g1f3d7d5g2g3d5c4f1g2b8c6d1a4f8b4c1d2'\n,'d2d4g8f6c2c4e7e6g1f3d7d5g2g3d5c4f1g2c7c5e1g1b8c6d1a4'\n,'d2d4g8f6c2c4e7e6g1f3d7d5g2g3d5c4f1g2c7c5e1g1b8c6f3e5'\n,'d2d4g8f6c2c4e7e6g1f3d7d5g2g3d5c4f1g2c7c6b1c3b8d7e1g1'\n,'d2d4g8f6c2c4e7e6g1f3d7d5g2g3f8b4b1d2e8g8f1g2b7b6e1g1'\n,'d2d4g8f6c2c4e7e6g1f3d7d5g2g3f8b4c1d2b4e7f1g2e8g8e1g1'\n,'d2d4g8f6c2c4e7e6g1f3d7d5g2g3f8e7f1g2e8g8b1c3d5c4d1a4'\n,'d2d4g8f6c2c4e7e6g1f3d7d5g2g3f8e7f1g2e8g8e1g1d5c4d1c2'\n,'d2d4g8f6c2c4e7e6g1f3f8b4c1d2d8e7g2g3b8c6b1c3b4c3d2c3'\n,'d2d4g8f6c2c4e7e6g2g3c7c5d4d5e6d5c4d5b7b5f1g2d7d6g1f3'\n,'d2d4g8f6c2c4e7e6g2g3c7c5d4d5e6d5c4d5d7d6b1c3g7g6f1g2'\n,'d2d4g8f6c2c4e7e6g2g3c7c5d4d5e6d5c4d5d7d6g1f3g7g6b1c3'\n,'d2d4g8f6c2c4e7e6g2g3c7c5d4d5e6d5c4d5g7g6b1c3d7d6f1g2'\n,'d2d4g8f6c2c4e7e6g2g3c7c5d4d5e6d5c4d5g7g6b1c3d7d6g1f3'\n,'d2d4g8f6c2c4e7e6g2g3c7c5g1f3c5d4f1g2d8a5b1d2b8c6e1g1'\n,'d2d4g8f6c2c4e7e6g2g3c7c5g1f3c5d4f3d4b8c6b1c3d8b6d4b3'\n,'d2d4g8f6c2c4e7e6g2g3c7c5g1f3c5d4f3d4b8c6b1c3d8b6d4b5'\n,'d2d4g8f6c2c4e7e6g2g3c7c5g1f3c5d4f3d4b8c6d4c6b7c6f1g2'\n,'d2d4g8f6c2c4e7e6g2g3c7c5g1f3c5d4f3d4b8c6f1g2d8b6d4b3'\n,'d2d4g8f6c2c4e7e6g2g3c7c5g1f3c5d4f3d4b8c6f1g2d8b6d4b5'\n,'d2d4g8f6c2c4e7e6g2g3c7c5g1f3c5d4f3d4b8c6f1g2d8b6d4c2'\n,'d2d4g8f6c2c4e7e6g2g3c7c5g1f3c5d4f3d4d8b6b1c3b8c6e2e3'\n,'d2d4g8f6c2c4e7e6g2g3c7c5g1f3c5d4f3d4f8b4b1c3e8g8f1g2'\n,'d2d4g8f6c2c4e7e6g2g3d7d5c4d5e6d5a2a3f8d6b1c3e8g8f1g2'\n,'d2d4g8f6c2c4e7e6g2g3d7d5c4d5e6d5a2a3f8d6f1g2e8g8b1c3'\n,'d2d4g8f6c2c4e7e6g2g3d7d5c4d5e6d5a2a3f8e7f1g2b8c6b1c3'\n,'d2d4g8f6c2c4e7e6g2g3d7d5f1g2d5c4g1f3a7a6e1g1b8c6b1c3'\n,'d2d4g8f6c2c4e7e6g2g3d7d5f1g2d5c4g1f3b8c6e1g1a7a6b1c3'\n,'d2d4g8f6c2c4e7e6g2g3d7d5f1g2d5c4g1f3c7c5e1g1b8c6d1a4'\n,'d2d4g8f6c2c4e7e6g2g3d7d5f1g2d5c4g1f3c7c5e1g1b8c6d4c5'\n,'d2d4g8f6c2c4e7e6g2g3d7d5f1g2d5c4g1f3c7c6f3e5f8b4c1d2'\n,'d2d4g8f6c2c4e7e6g2g3d7d5f1g2d5c4g1f3c8d7f3e5d7c6e5c6'\n,'d2d4g8f6c2c4e7e6g2g3d7d5f1g2f8e7g1f3e8g8e1g1d5c4d1c2'\n,'d2d4g8f6c2c4e7e6g2g3d7d5f1g2f8e7g1f3e8g8e1g1d5c4f3e5'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3d5c4d1c2a7a6c2c4b7b5c4c2'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3d5c4e2e3b7b5a2a4b5b4f1c4'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3d5c4e2e3b7b5a2a4f8b4c1d2'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3d5c4e2e3d8d5f1g2b8d7e1g1'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3d5c4e2e3d8d5f1g2d5a5f3d2'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3d5c4f1g2a7a6e1g1b8c6b1c3'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3d5c4f1g2a7a6e1g1b8c6e2e3'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3d5c4f1g2a7a6f3e5c7c5b1a3'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3d5c4f1g2a7a6f3e5c7c5c1e3'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3d5c4f1g2b8c6d1a4f8b4c1d2'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3d5c4f1g2b8c6e1g1a7a6b1c3'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3d5c4f1g2b8c6e1g1f8e7d1a4'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3d5c4f1g2c7c5e1g1b8c6d1a4'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3d5c4f1g2c7c5e1g1b8c6d4c5'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3d5c4f1g2c7c5e1g1b8c6f3e5'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3d5c4f1g2c7c6f3e5b7b5e5c6'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3f8b4b1d2d5c4a2a3b4d2c1d2'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3f8b4b1d2d5c4f1g2c4c3b2c3'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3f8b4b1d2e8g8f1g2b7b6e1g1'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3f8b4c1d2b4e7f1g2e8g8e1g1'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3f8e7f1g2d5c4d1a4c8d7a4c4'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3f8e7f1g2d5c4d1a4d8d7a4c4'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3f8e7f1g2e8g8e1g1b8d7d1c2'\n,'d2d4g8f6c2c4e7e6g2g3d7d5g1f3f8e7f1g2e8g8e1g1d5c4d1c2'\n,'d2d4g8f6c2c4e7e6g2g3f8b4b1d2b8c6g1f3d7d5f1g2d5c4e1g1'\n,'d2d4g8f6c2c4e7e6g2g3f8b4b1d2c7c5a2a3b4d2d1d2b8c6d4c5'\n,'d2d4g8f6c2c4e7e6g2g3f8b4b1d2c7c5a2a3b4d2d1d2c5d4g1f3'\n,'d2d4g8f6c2c4e7e6g2g3f8b4b1d2d7d5f1g2e8g8g1f3b7b6e1g1'\n,'d2d4g8f6c2c4e7e6g2g3f8b4b1d2d7d5g1f3c7c5a2a3b4d2d1d2'\n,'d2d4g8f6c2c4e7e6g2g3f8b4b1d2d7d5g1f3d5c4f1g2c4c3b2c3'\n,'d2d4g8f6c2c4e7e6g2g3f8b4b1d2d7d5g1f3e8g8f1g2d5c4d1c2'\n,'d2d4g8f6c2c4e7e6g2g3f8b4c1d2b4e7f1g2d7d5g1f3e8g8e1g1'\n,'d2d4g8f6c2c4e7e6g2g3f8b4c1d2d8e7g1f3b8c6b1c3d7d5a2a3'\n,'d2d4g8f6c2c4e7e6g2g3f8b4c1d2d8e7g1f3b8c6f1g2b4d2b1d2'\n,'d2d4g8f6c2c4g7g6b1c3c7c5d4d5b8a6e2e4d7d6g1f3f8g7h2h3'\n,'d2d4g8f6c2c4g7g6b1c3d7d5c4d5f6d5e2e4d5c3b2c3f8g7f1c4'\n,'d2d4g8f6c2c4g7g6b1c3d7d5c4d5f6d5e2e4d5c3b2c3f8g7g1f3'\n,'d2d4g8f6c2c4g7g6b1c3d7d5f2f3c7c5d4c5d5d4c3b5b8c6e2e3'\n,'d2d4g8f6c2c4g7g6b1c3d7d5g1f3f8g7c1g5f6e4c4d5e4c3b2c3'\n,'d2d4g8f6c2c4g7g6b1c3d7d5g1f3f8g7c4d5f6d5e2e4d5c3b2c3'\n,'d2d4g8f6c2c4g7g6b1c3d7d5g1f3f8g7d1b3d5c4b3c4e8g8e2e4'\n,'d2d4g8f6c2c4g7g6b1c3f8g7e2e4d7d6f2f3e8g8c1e3e7e5d4d5'\n,'d2d4g8f6c2c4g7g6b1c3f8g7e2e4d7d6f2f3e8g8c1e3e7e5g1e2'\n,'d2d4g8f6c2c4g7g6b1c3f8g7e2e4d7d6g1f3e8g8f1e2e7e5e1g1'\n,'d2d4g8f6c2c4g7g6b1c3f8g7g1f3e8g8e2e4d7d6f1e2e7e5d4e5'\n,'d2d4g8f6c2c4g7g6c1g5f8g7b1c3e8g8g1f3c7c5e2e3d7d6f1e2'\n,'d2d4g8f6c2c4g7g6f2f3c7c5d4d5f8g7g1h3d7d6h3f2b8a6b1c3'\n,'d2d4g8f6c2c4g7g6f2f3c7c5d4d5f8g7g1h3d7d6h3f2e8g8b1c3'\n,'d2d4g8f6c2c4g7g6f2f3d7d5c4d5f6d5e2e4d5b6b1c3f8g7c1e3'\n,'d2d4g8f6c2c4g7g6f2f3f8g7e2e4e8g8b1c3d7d6c1e3b8d7g1h3'\n,'d2d4g8f6c2c4g7g6g1f3c7c5b1c3c5d4f3d4b8c6g2g3f8g7f1g2'\n,'d2d4g8f6c2c4g7g6g1f3f8g7b1c3d7d5d1b3d5c4b3c4e8g8e2e4'\n,'d2d4g8f6c2c4g7g6g1f3f8g7b1c3e8g8e2e4d7d6f1e2e7e5e1g1'\n,'d2d4g8f6c2c4g7g6g1f3f8g7g2g3e8g8f1g2c7c6b1c3d7d5c4d5'\n,'d2d4g8f6e2e3e7e6g1f3d7d5b1d2b8c6f1d3c6b4d3e2c7c5e1g1'\n,'d2d4g8f6f2f4d7d5b1c3b8c6e2e3g7g6g1f3f8g7f1d3c6b4d3b5'\n,'d2d4g8f6f2f4d7d5e2e3c7c5g1f3e7e6f1d3b8c6c2c3f8d6e1g1'\n,'d2d4g8f6g1f3d7d5a2a3g7g6e2e3b8c6c2c4f8g7b1c3e8g8f1d3'\n,'d2d4g8f6g1f3d7d5b1c3e7e6c1f4f8b4d1d3b8c6g2g3e8g8f1g2'\n,'d2d4g8f6g1f3d7d5b1c3e7e6c1g5b8d7e2e4h7h6g5h4g7g5h4g3'\n,'d2d4g8f6g1f3d7d5b1c3g7g6c1f4f8g7e2e3e8g8f1e2c7c5e1g1'\n,'d2d4g8f6g1f3d7d5b1c3g7g6c1f4f8g7g2g3e8g8f1g2c7c6e1g1'\n,'d2d4g8f6g1f3d7d5b2b3c7c5d4c5b8c6a2a3e7e5b3b4e5e4f3d4'\n,'d2d4g8f6g1f3d7d5b2b3c8f5g2g3e7e6f1g2f8b4c2c3b4e7b1d2'\n,'d2d4g8f6g1f3d7d5c1f4c7c5c2c3b8c6b1a3f6h5f4e3c5d4e3d4'\n,'d2d4g8f6g1f3d7d5c2c4c7c6b1c3d5c4a2a4c8f5f3e5b8d7e5c4'\n,'d2d4g8f6g1f3d7d5c2c4c7c6b1c3d5c4a2a4c8f5f3e5e7e6f2f3'\n,'d2d4g8f6g1f3d7d5c2c4c7c6b1c3e7e6c1g5d5c4e2e4b7b5e4e5'\n,'d2d4g8f6g1f3d7d5c2c4c7c6b1c3e7e6c1g5h7h6g5f6d8f6d1c2'\n,'d2d4g8f6g1f3d7d5c2c4c7c6b1c3e7e6c1g5h7h6g5h4d5c4e2e4'\n,'d2d4g8f6g1f3d7d5c2c4c7c6b1c3e7e6e2e3b8d7a2a4f8b4f1d3'\n,'d2d4g8f6g1f3d7d5c2c4c7c6b1c3e7e6e2e3b8d7d1c2f8d6f1d3'\n,'d2d4g8f6g1f3d7d5c2c4c7c6b1c3e7e6e2e3b8d7d1c2f8d6g2g4'\n,'d2d4g8f6g1f3d7d5c2c4c7c6b1c3e7e6e2e3b8d7f1d3d5c4d3c4'\n,'d2d4g8f6g1f3d7d5c2c4c7c6b1c3g7g6e2e3f8g7f1e2e8g8e1g1'\n,'d2d4g8f6g1f3d7d5c2c4c7c6c4d5c6d5b1c3b8c6c1f4c8f5d1b3'\n,'d2d4g8f6g1f3d7d5c2c4c7c6d1b3d5c4b3c4c8f5g2g3e7e6f1g2'\n,'d2d4g8f6g1f3d7d5c2c4c7c6e2e3c8f5b1c3e7e6f3h4f5e4f2f3'\n,'d2d4g8f6g1f3d7d5c2c4c7c6e2e3e7e6b1c3b8d7a2a4f6e4d1c2'\n,'d2d4g8f6g1f3d7d5c2c4c7c6e2e3e7e6b1c3b8d7d1c2f8d6g2g4'\n,'d2d4g8f6g1f3d7d5c2c4c7c6e2e3e7e6b1c3b8d7f1d3d5c4d3c4'\n,'d2d4g8f6g1f3d7d5c2c4c7c6e2e3e7e6f1d3d5c4d3c4c6c5d1e2'\n,'d2d4g8f6g1f3d7d5c2c4d5c4b1c3c7c6a2a4c8f5f3e5b8d7e5c4'\n,'d2d4g8f6g1f3d7d5c2c4d5c4b1c3c7c6g2g3g7g6a2a4c8e6e2e4'\n,'d2d4g8f6g1f3d7d5c2c4d5c4e2e3e7e6f1c4c7c5e1g1a7a6a2a4'\n,'d2d4g8f6g1f3d7d5c2c4d5c4g2g3b8c6b1c3e7e5f3e5c6e5d4e5'\n,'d2d4g8f6g1f3d7d5c2c4e7e6b1c3c7c6c1g5d5c4e2e4b7b5e4e5'\n,'d2d4g8f6g1f3d7d5c2c4e7e6b1c3c7c6c1g5h7h6g5f6d8f6d1c2'\n,'d2d4g8f6g1f3d7d5c2c4e7e6b1c3c7c6c1g5h7h6g5h4d5c4e2e4'\n,'d2d4g8f6g1f3d7d5c2c4e7e6b1c3c7c6d1d3b7b6c4d5c6d5c1f4'\n,'d2d4g8f6g1f3d7d5c2c4e7e6b1c3c7c6e2e3b8d7a2a4f6e4f1d3'\n,'d2d4g8f6g1f3d7d5c2c4e7e6b1c3c7c6e2e3b8d7a2a4f8b4f1d3'\n,'d2d4g8f6g1f3d7d5c2c4e7e6b1c3c7c6e2e3b8d7d1c2f8d6f1e2'\n,'d2d4g8f6g1f3d7d5c2c4e7e6b1c3c7c6e2e3b8d7d1c2f8d6g2g4'\n,'d2d4g8f6g1f3d7d5c2c4e7e6b1c3c7c6e2e3b8d7f1d3d5c4d3c4'\n,'d2d4g8f6g1f3d7d5c2c4e7e6b1c3c7c6e2e3b8d7f1e2f8d6a2a4'\n,'d2d4g8f6g1f3d7d5c2c4e7e6b1c3f8b4c1g5b8d7c4d5e6d5e2e3'\n,'d2d4g8f6g1f3d7d5c2c4e7e6b1c3f8b4e2e3e8g8f1d3c7c5e1g1'\n,'d2d4g8f6g1f3d7d5c2c4e7e6b1c3f8e7c1f4b8c6e2e3e8g8f4g3'\n,'d2d4g8f6g1f3d7d5c2c4e7e6b1c3h7h6g2g3b8c6f1g2f8d6c1e3'\n,'d2d4g8f6g1f3d7d5c2c4e7e6b1d2b8c6a2a3f8d6b2b4e8g8e2e3'\n,'d2d4g8f6g1f3d7d5c2c4e7e6c4d5e6d5b1c3c7c6c1f4f8e7e2e3'\n,'d2d4g8f6g1f3d7d5c2c4e7e6e2e3c7c6b1c3b8d7c1d2f8d6f1d3'\n,'d2d4g8f6g1f3d7d5c2c4e7e6g2g3d5c4d1a4b8d7f1g2a7a6a4c4'\n,'d2d4g8f6g1f3d7d5c2c4e7e6g2g3d5c4d1a4b8d7f1g2a7a6b1c3'\n,'d2d4g8f6g1f3d7d5c2c4e7e6g2g3d5c4f1g2a7a6e1g1b8c6b1c3'\n,'d2d4g8f6g1f3d7d5c2c4e7e6g2g3d5c4f1g2a7a6e1g1b8c6e2e3'\n,'d2d4g8f6g1f3d7d5c2c4e7e6g2g3d5c4f1g2b8c6d1a4f8b4c1d2'\n,'d2d4g8f6g1f3d7d5c2c4e7e6g2g3d5c4f1g2c7c5e1g1b8c6d1a4'\n,'d2d4g8f6g1f3d7d5c2c4e7e6g2g3d5c4f1g2c7c5e1g1b8c6f3e5'\n,'d2d4g8f6g1f3d7d5c2c4e7e6g2g3d5c4f1g2c7c6e1g1b7b5f3e5'\n,'d2d4g8f6g1f3d7d5c2c4e7e6g2g3f8d6f1g2e8g8e1g1b8c6a2a3'\n,'d2d4g8f6g1f3d7d5c2c4e7e6g2g3f8e7f1g2e8g8e1g1d5c4d1c2'\n,'d2d4g8f6g1f3d7d5d1d3b8c6c1f4g7g6b1c3a7a6f3e5f8g7e1c1'\n,'d2d4g8f6g1f3d7d5e2e3c7c5d4c5e7e6b2b4a7a5c2c3a5b4c3b4'\n,'d2d4g8f6g1f3d7d5e2e3c7c5h2h3b8c6f1d3g7g6e1g1f8g7b1c3'\n,'d2d4g8f6g1f3d7d5e2e3e7e6c2c4c7c6f1d3f8d6b1c3e8g8e1g1'\n,'d2d4g8f6g1f3d7d5g2g3b8c6f1g2g7g6c2c4f8g7c4d5f6d5b1c3'\n,'d2d4g8f6g1f3d7d5g2g3c7c6c2c4d5c4b1d2c8e6f1g2d8d5e1g1'\n,'d2d4g8f6g1f3d7d5g2g3c7c6f1g2c8f5e1g1e7e6c2c4h7h6b1d2'\n,'d2d4g8f6g1f3d7d5g2g3c8f5f1g2c7c6c2c4g7g6e1g1f8g7d1b3'\n,'d2d4g8f6g1f3d7d5g2g3e7e6c2c4d5c4f1g2c7c5e1g1b8c6d1a4'\n,'d2d4g8f6g1f3d7d5g2g3e7e6f1g2c7c5e1g1b8c6c2c4d5c4d1a4'\n,'d2d4g8f6g1f3d7d5g2g3g7g6f1g2f8g7b1c3e8g8c1f4b8c6e1g1'\n,'d2d4g8f6g1f3d7d5h2h3b8c6c2c3g7g6c1f4f8g7e2e3f6d7b1a3'\n,'d2d4g8f6g1f3d7d5h2h3c7c5e2e3b8c6f1e2e7e6e1g1f8e7d4c5'\n,'d2d4g8f6g1f3d7d5h2h3c7c5e2e3e7e6c2c3b8c6b1d2f8d6d4c5'\n,'d2d4g8f6g1f3d7d6c2c4g7g6b1c3f8g7e2e4c7c6f1e2e8g8e1g1'\n,'d2d4g8f6g1f3e7e6c2c4a7a6c1g5h7h6g5f6d8f6b1c3f8b4a1c1'\n,'d2d4g8f6g1f3e7e6c2c4b7b6a2a3c8a6d1c2a6b7b1c3c7c5e2e4'\n,'d2d4g8f6g1f3e7e6c2c4b7b6b1c3c8b7a2a3d7d5c4d5f6d5d1c2'\n,'d2d4g8f6g1f3e7e6c2c4b7b6g2g3c8a6d1a4a6b7f1g2c7c5d4c5'\n,'d2d4g8f6g1f3e7e6c2c4b7b6g2g3f8d6f1g2c8b7e1g1e8g8b1c3'\n,'d2d4g8f6g1f3e7e6c2c4d7d5b1c3c7c6c1g5d5c4e2e4b7b5e4e5'\n,'d2d4g8f6g1f3e7e6c2c4d7d5b1c3c7c6c1g5h7h6g5h4d5c4e2e4'\n,'d2d4g8f6g1f3e7e6c2c4d7d5b1c3c7c6e2e3b8d7f1d3d5c4d3c4'\n,'d2d4g8f6g1f3e7e6g2g3d7d5c2c4d5c4f1g2a7a6f3e5c7c5b1a3'\n,'d2d4g8f6g1f3g7g6b1c3d7d5c1f4f8g7e2e3e8g8f1d3f6h5f4g5'\n,'d2d4g8f6g1f3g7g6c2c4d7d5b1c3f8g7d1b3d5c4b3c4e8g8e2e4'\n,'d2d4g8f6g1f3g7g6c2c4f8g7b1c3d7d5c1g5f6e4c4d5e4g5f3g5'\n,'d2d4g8f6g1f3g7g6c2c4f8g7b1c3d7d5d1b3d5c4b3c4b8c6e2e4'\n,'d2d4g8f6g1f3g7g6c2c4f8g7g2g3c7c5b1c3c5d4f3d4b8c6f1g2'\n,'d2d4g8f6g1f3g7g6g2g3f8g7b1c3d7d5f1g2b8c6e1g1e8g8c1f4'\n,'d2d4g8f6h2h3b8c6c2c3d7d5g1f3e7e6c1f4f6h5f4h2f8d6e2e3'\n,'d2d4g8f6h2h3b8c6c2c3d7d5g1f3g7g6c1f4f8g7e2e3f6d7b1a3'\n,'d2d4g8f6h2h3b8c6c2c3d7d5g1f3g7g6c1f4f8g7e2e3f6d7d1b3'\n,'d2d4g8f6h2h3c7c5d4d5b7b5g1f3c8b7c2c4b8a6a2a3b5c4b1c3'\n,'d2d4g8f6h2h3d7d5c2c3b8c6g1f3c8f5c1f4e7e6b1d2f8d6e2e3'\n,'d2d4g8f6h2h3d7d5c2c3b8c6g1f3e7e6c1f4f6h5f4h2f8d6e2e3'\n,'d2d4g8f6h2h3d7d5c2c3b8c6g1f3g7g6c1f4f8g7e2e3c8f5b1d2'\n,'d2d4g8f6h2h3d7d5c2c3c8f5g2g4f5d7g1f3e7e6c1f4f8d6f3e5'\n,'d2d4g8f6h2h3d7d5c2c3e7e6g1f3f8d6e2e3e8g8f1d3b8c6b1d2'\n,'d2d4g8f6h2h3d7d5c2c3g7g6c1f4f8g7b1d2c7c5d4c5b8d7d1a4'\n,'d2d4g8f6h2h3d7d5c2c3g7g6g1f3b8c6c1f4e7e6e2e3f6h5f4h2'\n,'d2d4g8f6h2h3d7d5c2c3g7g6g1f3f8g7c1f4c7c5e2e3b8c6b1d2'\n,'d2d4g8f6h2h3d7d5c2c3g7g6g1f3f8g7c1f4c7c5e2e3e8g8b1d2'\n,'d2d4g8f6h2h3d7d5g1f3b8c6c2c3e7e6c1f4f6h5f4h2f8d6e2e3'\n,'d2d4g8f6h2h3d7d5g1f3c7c5c2c3b8c6d4c5e7e5c1e3f6e4b2b4'\n,'d2d4g8f6h2h3g7g6b1c3f8g7g1f3e8g8c1f4c7c5d4c5d8a5d1d2'\n,'d2d4g8f6h2h3g7g6g1f3f8g7c1f4d7d6e2e3e8g8f1e2b8d7e1g1'\n,'d2d4g8f6h2h3g7g6g1f3f8g7c2c3e8g8b1d2d7d5e2e3c8f5g2g4'\n,'d2d4g8f6h2h3h7h6g1f3d7d5b1c3e7e6e2e3c7c5f1d3f8e7e1g1'\n,'e2e3e7e5b1c3d7d5d1h5d8d6g1f3b8c6d2d4e5d4f3d4g8f6h5h4'\n,'e2e3e7e5e3e4g8f6b1c3f8b4g1e2d7d5c3d5f6d5e4d5d8d5e2c3'\n,'e2e4a7a6g1f3e7e6d2d4d7d5b1c3g8f6f1d3c7c5e1g1c5d4f3d4'\n,'e2e4b7b6d2d4c8b7b1c3e7e6f1d3g8e7g1f3e7g6h2h4h7h5e4e5'\n,'e2e4b7b6d2d4c8b7b1c3g7g6g1f3f8g7f1c4e7e6d4d5b8a6e1g1'\n,'e2e4b7b6d2d4c8b7f1d3g7g6b1c3f8g7g1f3b8c6d3e2e7e6e1g1'\n,'e2e4b7b6d2d4c8b7f1d3g7g6g1f3b8c6e1g1f8g7d4d5c6e5f3e5'\n,'e2e4b7b6d2d4c8b7f1d3g7g6g1f3f8g7c2c3d7d6e1g1g8f6e4e5'\n,'e2e4b7b6d2d4c8b7f1d3g7g6g1f3f8g7e1g1b8c6d4d5c6e5f3e5'\n,'e2e4b7b6d2d4c8b7f1d3g7g6g1f3f8g7e1g1e7e6b1c3g8e7c1g5'\n,'e2e4b7b6d2d4c8b7f1d3g8f6b1c3b8c6e4e5c6e5d4e5b7g2e5f6'\n,'e2e4b7b6d2d4c8b7f1d3g8f6b1c3e7e6g1f3f8b4d1e2d7d5e4d5'\n,'e2e4b7b6d2d4c8b7f1d3g8f6d1e2b8c6c2c3e7e5g1f3d7d6d4d5'\n,'e2e4b7b6d2d4c8b7f1d3g8f6d1e2b8c6c2c3e7e5g1f3d7d6e1g1'\n,'e2e4b7b6g1f3c8b7d1e2e7e6d2d4g8f6e4e5f6d5c2c4d5e7b1c3'\n,'e2e4b8c6d2d4d7d5b1c3d5e4d4d5c6b8c3e4c7c6f1c4g8f6e4f6'\n,'e2e4b8c6d2d4d7d5b1c3d5e4d4d5c6e5c1f4e5g6f4g3f7f5f1b5'\n,'e2e4b8c6d2d4d7d5b1c3d5e4d4d5c6e5d1d4e5g6c1e3e7e5d5e6'\n,'e2e4b8c6d2d4d7d5b1c3e7e6g1f3g8f6c1g5f8e7g5f6e7f6f1b5'\n,'e2e4b8c6d2d4d7d5b1c3g8f6e4e5f6e4c3e4d5e4c2c3c8e6g1h3'\n,'e2e4b8c6d2d4d7d5b1c3g8f6e4e5f6e4c3e4d5e4c2c3c8f5f1b5'\n,'e2e4b8c6d2d4d7d5b1c3g8f6e4e5f6e4c3e4d5e4c2c3g7g6g1h3'\n,'e2e4b8c6d2d4d7d5e4e5f7f6g1f3c8f5f1b5d8d7e1g1a7a6b5d3'\n,'e2e4b8c6d2d4d7d5e4e5f7f6g1f3c8f5f1d3d8d7e1g1e8c8b1c3'\n,'e2e4b8c6d2d4d7d6g1f3g8f6b1c3c8g4c1e3e7e5d4d5c6e7f1c4'\n,'e2e4b8c6d2d4e7e5d4d5c6e7b1c3e7g6g1f3g8f6h2h4h7h5f1e2'\n,'e2e4b8c6d2d4e7e5d4d5c6e7b1c3g8f6g1f3e7g6h2h4h7h5f1e2'\n,'e2e4b8c6d2d4e7e5d4e5c6e5b1c3f8c5c1f4e5g6f4g3h7h5h2h4'\n,'e2e4b8c6d2d4e7e5g1f3e5d4f3d4f8c5d4c6b7c6f1d3d8h4e1g1'\n,'e2e4b8c6d2d4e7e5g1f3e5d4f3d4g8f6d4c6b7c6e4e5d8e7d1e2'\n,'e2e4b8c6d2d4e7e6g1f3d7d5b1c3g8f6c1g5f8e7g5f6e7f6f1b5'\n,'e2e4b8c6d2d4e7e6g1f3g8f6b1c3d7d5e4e5f6e4f1d3f8b4c1d2'\n,'e2e4b8c6g1f3d7d5e4d5d8d5b1c3d5a5f1b5c8d7e1g1a7a6b5c6'\n,'e2e4b8c6g1f3d7d5e4d5d8d5b1c3d5f5d2d4g8f6f1b5a7a6b5c6'\n,'e2e4b8c6g1f3e7e5f1b5a7a6b5a4g7g6e1g1g8e7c2c3d7d6d2d4'\n,'e2e4b8c6g1f3e7e5f1b5a7a6b5a4g8e7c2c3d7d6d2d4c8d7d4d5'\n,'e2e4b8c6g1f3e7e5f1b5a7a6b5a4g8e7e1g1g7g6d2d3f8g7c2c4'\n,'e2e4b8c6g1f3e7e5f1b5a7a6b5a4g8f6e1g1b7b5a4b3d7d6c2c3'\n,'e2e4b8c6g1f3e7e5f1b5a7a6b5a4g8f6e1g1f6e4d2d4b7b5a4b3'\n,'e2e4b8c6g1f3e7e5f1b5a7a6b5a4g8f6e1g1f8e7f1e1b7b5a4b3'\n,'e2e4b8c6g1f3e7e5f1b5f7f5b1c3f5e4c3e4d7d5f3e5d5e4e5c6'\n,'e2e4b8c6g1f3e7e5f1b5f8c5c2c3g8f6e1g1e8g8d2d4c5b6c1g5'\n,'e2e4b8c6g1f3e7e5f1b5f8c5c2c3g8f6e1g1e8g8d2d4c5b6d4e5'\n,'e2e4b8c6g1f3e7e5f1b5f8d6e1g1g8e7c2c3a7a6b5e2e8g8d2d4'\n,'e2e4b8c6g1f3e7e5f1b5g7g6c2c3a7a6b5a4d7d6d2d4c8d7e1g1'\n,'e2e4b8c6g1f3e7e5f1b5g7g6c2c3d7d6e1g1f8g7d2d4c8d7f1e1'\n,'e2e4b8c6g1f3e7e5f1b5g8f6b1c3f8d6d2d3e8g8c1g5h7h6g5f6'\n,'e2e4b8c6g1f3e7e5f1b5g8f6e1g1d7d6d2d4e5d4f3d4c8d7b1c3'\n,'e2e4b8c6g1f3e7e5f1b5g8f6e1g1f6e4d2d4e4d6b5c6d7c6d4e5'\n,'e2e4b8c6g1f3e7e5f1b5g8f6e1g1f6e4f1e1e4d6f3e5f8e7b5d3'\n,'e2e4b8c6g1f3e7e5f1b5g8f6e1g1f8d6d2d4d8e7d4d5a7a6b5d3'\n,'e2e4b8c6g1f3e7e5f1b5g8f6e1g1f8e7b1c3e8g8b5c6d7c6f3e5'\n,'e2e4b8c6g1f3e7e6b1c3d7d5d2d4g8f6e4e5f6e4f1d3f8b4c1d2'\n,'e2e4b8c6g1f3e7e6d2d4d7d5b1c3g8f6c1g5f8b4e4e5h7h6e5f6'\n,'e2e4b8c6g1f3e7e6d2d4d7d5b1d2g8f6e4e5f6d7f1e2f7f6e5f6'\n,'e2e4b8c6g1f3g7g6d2d4f8g7b1c3d7d6c1e3g8f6d4d5c6b8f1c4'\n,'e2e4b8c6g1f3g7g6d2d4f8g7c2c4e7e5d4e5c6e5f3e5g7e5f1e2'\n,'e2e4c7c5a2a3g7g6f1c4f8g7b1c3d7d6d2d3g8f6g1f3b8c6h2h3'\n,'e2e4c7c5a2a4d7d6b1c3b8c6g1f3e7e5f1c4f8e7d2d3g8f6e1g1'\n,'e2e4c7c5a2a4e7e6b1c3b8c6f1b5g8e7g1f3a7a6b5c4g7g6e1g1'\n,'e2e4c7c5a2a4g7g6g1f3b8c6b1c3g8f6d2d4c5d4f3d4f8g7d4c6'\n,'e2e4c7c5b1c3a7a6g1e2g8f6d2d4c5d4e2d4d7d6c1e3e7e5d4b3'\n,'e2e4c7c5b1c3b8c6b2b3g7g6f2f4f8g7c1b2d7d6f1b5c8d7g1f3'\n,'e2e4c7c5b1c3b8c6f2f4g7g6g2g3d7d6g1f3f8g7f1g2e7e6d2d3'\n,'e2e4c7c5b1c3b8c6g1e2d7d6d2d4c5d4e2d4c8d7c1e3g8f6f2f3'\n,'e2e4c7c5b1c3b8c6g1e2d7d6d2d4c5d4e2d4e7e5d4b5a7a6b5a3'\n,'e2e4c7c5b1c3b8c6g1e2d7d6d2d4c5d4e2d4e7e6c1e3g8f6f2f3'\n,'e2e4c7c5b1c3b8c6g1e2d7d6d2d4c5d4e2d4g8f6c1g5d8b6f1b5'\n,'e2e4c7c5b1c3b8c6g1e2d7d6d2d4c5d4e2d4g8f6c1g5e7e6d1d2'\n,'e2e4c7c5b1c3b8c6g1e2d7d6d2d4c5d4e2d4g8f6f1b5c8d7c1g5'\n,'e2e4c7c5b1c3b8c6g1e2d7d6d2d4c5d4e2d4g8f6f2f3e7e5d4b3'\n,'e2e4c7c5b1c3b8c6g1e2d7d6d2d4c5d4e2d4g8f6f2f3e7e5d4e2'\n,'e2e4c7c5b1c3b8c6g1e2d7d6d2d4c8d7d4d5c6a5e2f4g8f6a2a3'\n,'e2e4c7c5b1c3b8c6g1e2d7d6d2d4c8d7d4d5c6a5e2f4g8f6a2a4'\n,'e2e4c7c5b1c3b8c6g1e2e7e5c3d5g8f6e2c3f6d5c3d5f8e7f1c4'\n,'e2e4c7c5b1c3b8c6g1e2e7e6d2d4c5d4e2d4a7a6f1e2g8e7e1g1'\n,'e2e4c7c5b1c3b8c6g1e2e7e6d2d4c5d4e2d4g8f6d4b5d7d6c1f4'\n,'e2e4c7c5b1c3b8c6g1e2g7g6d2d4c5d4e2d4f8g7c1e3g8f6f1c4'\n,'e2e4c7c5b1c3b8c6g1e2g8f6d2d4c5d4e2d4e7e6d4b5f8b4a2a3'\n,'e2e4c7c5b1c3b8c6g1f3d7d6d2d4c5d4f3d4e7e5d4b5a7a6b5a3'\n,'e2e4c7c5b1c3b8c6g1f3d7d6d2d4c5d4f3d4g8f6c1g5a7a6d1d2'\n,'e2e4c7c5b1c3b8c6g1f3d7d6d2d4c5d4f3d4g8f6c1g5c8d7d1d2'\n,'e2e4c7c5b1c3b8c6g1f3d7d6d2d4c5d4f3d4g8f6c1g5e7e6d1d2'\n,'e2e4c7c5b1c3b8c6g1f3d7d6d2d4c5d4f3d4g8f6c3d5f6d5e4d5'\n,'e2e4c7c5b1c3b8c6g1f3d8c7f1d3g7g6b2b3f8g7c1b2g8f6c3d5'\n,'e2e4c7c5b1c3b8c6g1f3e7e6d2d4c5d4f3d4d8c7f1e2a7a6e1g1'\n,'e2e4c7c5b1c3b8c6g1f3e7e6h2h3g8e7d2d4c5d4f3d4c6d4d1d4'\n,'e2e4c7c5b1c3b8c6g1f3g7g6d2d4c5d4f3d4f8g7c1e3g8f6f1c4'\n,'e2e4c7c5b1c3b8c6g1f3g7g6f1b5f8g7e1g1e7e5d2d3g8e7c1g5'\n,'e2e4c7c5b1c3b8c6g1f3g7g6f1c4f8g7e1g1d7d6h2h3g8f6d2d3'\n,'e2e4c7c5b1c3b8c6g1f3g8f6f1b5d8c7e1g1c6d4f1e1a7a6b5f1'\n,'e2e4c7c5b1c3b8c6g1f3g8f6f1b5e7e5b5c6d7c6f3e5f6e4c3e4'\n,'e2e4c7c5b1c3b8c6g2g3d7d6f1g2g7g6d2d3f8g7f2f4e7e6g1f3'\n,'e2e4c7c5b1c3b8c6g2g3g7g6f1g2d7d6g1f3f8g7e1g1g8f6d2d3'\n,'e2e4c7c5b1c3d7d6f1c4g7g6g1f3f8g7e1g1b8c6f3g5e7e6g5f3'\n,'e2e4c7c5b1c3d7d6f2f4b8c6f1b5c8d7g1f3g7g6b5c6d7c6e1g1'\n,'e2e4c7c5b1c3d7d6f2f4b8c6f1b5g7g6b5c6b7c6g1f3f8g7e1g1'\n,'e2e4c7c5b1c3d7d6f2f4b8c6g1f3g7g6f1b5c8d7b5c6d7c6e1g1'\n,'e2e4c7c5b1c3d7d6f2f4b8c6g1f3g7g6f1b5c8d7e1g1f8g7b5c4'\n,'e2e4c7c5b1c3d7d6f2f4b8c6g1f3g7g6f1b5c8d7e1g1f8g7d2d3'\n,'e2e4c7c5b1c3d7d6f2f4b8c6g1f3g7g6f1b5f8g7b5c6b7c6d2d3'\n,'e2e4c7c5b1c3d7d6f2f4b8c6g1f3g7g6f1b5f8g7b5c6b7c6e1g1'\n,'e2e4c7c5b1c3d7d6f2f4b8c6g1f3g7g6f1b5f8g7e1g1a7a6b5c6'\n,'e2e4c7c5b1c3d7d6f2f4b8c6g1f3g7g6f1b5f8g7e1g1c8d7b5c4'\n,'e2e4c7c5b1c3d7d6f2f4b8c6g1f3g7g6f1c4f8g7e1g1e7e6d2d3'\n,'e2e4c7c5b1c3d7d6f2f4b8c6g1f3g7g6g2g3f8g7f1g2g8f6e1g1'\n,'e2e4c7c5b1c3d7d6f2f4e7e6g1f3g8f6f1b5c8d7b5d7b8d7e1g1'\n,'e2e4c7c5b1c3d7d6f2f4g7g6g1f3b8c6f1b5c8d7b5c6d7c6e1g1'\n,'e2e4c7c5b1c3d7d6f2f4g7g6g1f3b8c6f1b5c8d7e1g1f8g7b5c4'\n,'e2e4c7c5b1c3d7d6f2f4g7g6g1f3b8c6f1b5f8g7e1g1a7a6b5c6'\n,'e2e4c7c5b1c3d7d6f2f4g7g6g1f3b8c6f1b5f8g7e1g1c8d7b5c4'\n,'e2e4c7c5b1c3d7d6f2f4g7g6g1f3b8c6f1c4f8g7e1g1g8f6d2d3'\n,'e2e4c7c5b1c3d7d6f2f4g7g6g1f3b8c6g2g3f8g7f1g2e7e6d2d3'\n,'e2e4c7c5b1c3d7d6g1e2b8c6d2d4c5d4e2d4c8d7c1e3g8f6f2f3'\n,'e2e4c7c5b1c3d7d6g1e2b8c6d2d4c5d4e2d4g8f6c1g5e7e5d4b5'\n,'e2e4c7c5b1c3d7d6g1e2b8c6d2d4c5d4e2d4g8f6c1g5e7e6d1d2'\n,'e2e4c7c5b1c3d7d6g1e2b8c6d2d4c5d4e2d4g8f6f2f3c6d4d1d4'\n,'e2e4c7c5b1c3d7d6g1e2b8c6d2d4c5d4e2d4g8f6f2f3e7e5d4e2'\n,'e2e4c7c5b1c3d7d6g1e2b8c6d2d4c8d7d4d5c6a5e2f4g8f6f1e2'\n,'e2e4c7c5b1c3d7d6g1e2e7e5c3d5f8e7e2c3g8f6f1c4b8c6e1g1'\n,'e2e4c7c5b1c3d7d6g1e2g8f6d2d4b8d7f2f3g7g6d4c5d7c5c1e3'\n,'e2e4c7c5b1c3d7d6g1e2g8f6d2d4c5d4e2d4a7a6c1e3e7e5d4b3'\n,'e2e4c7c5b1c3d7d6g1e2g8f6d2d4c5d4e2d4a7a6c1e3e7e5d4f3'\n,'e2e4c7c5b1c3d7d6g1e2g8f6d2d4c5d4e2d4a7a6c1e3e7e6d1f3'\n,'e2e4c7c5b1c3d7d6g1e2g8f6d2d4c5d4e2d4a7a6c1e3e7e6f2f3'\n,'e2e4c7c5b1c3d7d6g1e2g8f6d2d4c5d4e2d4a7a6f1e2e7e5d4b3'\n,'e2e4c7c5b1c3d7d6g1e2g8f6d2d4c5d4e2d4a7a6f2f3e7e5d4b3'\n,'e2e4c7c5b1c3d7d6g1e2g8f6d2d4c5d4e2d4a7a6g2g3e7e5d4b3'\n,'e2e4c7c5b1c3d7d6g1e2g8f6d2d4c8d7d4c5d6c5e2g3b8c6f1b5'\n,'e2e4c7c5b1c3d7d6g1e2g8f6g2g3e7e5f1g2f8e7d2d3e8g8e1g1'\n,'e2e4c7c5b1c3d7d6g1e2g8f6g2g3g7g6f1g2f8g7e1g1e8g8d2d3'\n,'e2e4c7c5b1c3d7d6g1f3b8c6d2d4c5d4f3d4e7e6g2g4h7h6c1e3'\n,'e2e4c7c5b1c3d7d6g1f3b8c6d2d4c5d4f3d4g8f6c1g5a7a6d1d2'\n,'e2e4c7c5b1c3d7d6g1f3b8c6d2d4c5d4f3d4g8f6c1g5d8b6d4b3'\n,'e2e4c7c5b1c3d7d6g1f3b8c6d2d4c5d4f3d4g8f6c1g5e7e6d1d2'\n,'e2e4c7c5b1c3d7d6g1f3g8f6d2d4c5d4f3d4a7a6c1e3e7e5d4b3'\n,'e2e4c7c5b1c3d7d6g1f3g8f6d2d4c5d4f3d4a7a6c1e3e7e6f2f3'\n,'e2e4c7c5b1c3d7d6g1f3g8f6d2d4c5d4f3d4a7a6c1e3f6g4e3g5'\n,'e2e4c7c5b1c3d7d6g1f3g8f6d2d4c5d4f3d4a7a6c1g5b8c6d1d2'\n,'e2e4c7c5b1c3d7d6g1f3g8f6d2d4c5d4f3d4a7a6c1g5b8d7f2f4'\n,'e2e4c7c5b1c3d7d6g1f3g8f6d2d4c5d4f3d4a7a6c1g5e7e5g5f6'\n,'e2e4c7c5b1c3d7d6g1f3g8f6d2d4c5d4f3d4a7a6c1g5e7e6d1f3'\n,'e2e4c7c5b1c3d7d6g1f3g8f6d2d4c5d4f3d4a7a6c1g5e7e6f2f4'\n,'e2e4c7c5b1c3d7d6g1f3g8f6d2d4c5d4f3d4a7a6f1e2e7e5d4b3'\n,'e2e4c7c5b1c3d7d6g1f3g8f6d2d4c5d4f3d4a7a6f1e2e7e6e1g1'\n,'e2e4c7c5b1c3d7d6g1f3g8f6d2d4c5d4f3d4a7a6f2f3b7b5a2a4'\n,'e2e4c7c5b1c3d7d6g1f3g8f6d2d4c5d4f3d4a7a6f2f3e7e5d4b3'\n,'e2e4c7c5b1c3d7d6g1f3g8f6d2d4c5d4f3d4a7a6f2f3e7e6c1e3'\n,'e2e4c7c5b1c3d7d6g1f3g8f6d2d4c5d4f3d4a7a6g2g3e7e6f1g2'\n,'e2e4c7c5b1c3d7d6g1f3g8f6d2d4c5d4f3d4a7a6h2h3b8d7c1e3'\n,'e2e4c7c5b1c3d7d6g1f3g8f6d2d4c5d4f3d4b8c6c1g5e7e6d1d2'\n,'e2e4c7c5b1c3d7d6g1f3g8f6d2d4c5d4f3d4h7h6c1e3b8c6f2f3'\n,'e2e4c7c5b1c3d7d6g1f3g8f6e4e5d6e5f3e5e7e6g2g3d8c7e5c4'\n,'e2e4c7c5b1c3d7d6g1f3g8f6f1c4b8c6e1g1e7e6d2d4c5d4f3d4'\n,'e2e4c7c5b1c3d7d6g1f3g8f6f1c4e7e6d2d3b8c6e1g1a7a6c1f4'\n,'e2e4c7c5b1c3d7d6g1f3g8f6f1c4e7e6d2d4c5d4f3d4a7a6c4b3'\n,'e2e4c7c5b1c3d7d6g1f3g8f6f1c4e7e6e1g1b8c6h2h3d8b6d2d3'\n,'e2e4c7c5b1c3d7d6g1f3g8f6h2h3e7e5f1c4f8e7e1g1b8c6d2d3'\n,'e2e4c7c5b1c3d7d6g2g3b8c6f1g2g7g6d2d3f8g7f2f4e7e6g1f3'\n,'e2e4c7c5b1c3d7d6g2g3b8c6f1g2g7g6h2h3f8g7d2d3g8f6c1e3'\n,'e2e4c7c5b1c3d7d6g2g3b8c6f1g2g7g6h2h3f8g7g1e2g8f6e1g1'\n,'e2e4c7c5b1c3d7d6g2g3e7e6g1f3e6e5f1c4f8e7e1g1g8f6c3d5'\n,'e2e4c7c5b1c3e7e5f1c4b8c6g1f3f8e7d2d3d7d6e1g1g8f6h2h3'\n,'e2e4c7c5b1c3e7e5g1e2g8f6e2g3f8e7f1c4b8c6e1g1e8g8a2a4'\n,'e2e4c7c5b1c3e7e5g1f3d7d6f1c4b8c6a2a3f8e7b2b4g8f6e1g1'\n,'e2e4c7c5b1c3e7e5g1f3d7d6f1c4b8c6d2d3f8e7e1g1g8f6h2h3'\n,'e2e4c7c5b1c3e7e6g1e2b8c6d2d4c5d4e2d4d8c7c1e3a7a6d1d2'\n,'e2e4c7c5b1c3e7e6g1e2b8c6d2d4c5d4e2d4g8f6d4b5f8b4a2a3'\n,'e2e4c7c5b1c3e7e6g1f3a7a6d2d4c5d4f3d4b7b5f1d3d7d6c1e3'\n,'e2e4c7c5b1c3e7e6g1f3a7a6d2d4c5d4f3d4d8c7f1d3g8f6e1g1'\n,'e2e4c7c5b1c3e7e6g1f3b8c6d2d4c5d4f3d4a7a6f1e2d8c7e1g1'\n,'e2e4c7c5b1c3e7e6g1f3b8c6d2d4c5d4f3d4d8c7c1e3a7a6d1d2'\n,'e2e4c7c5b1c3e7e6g1f3b8c6d2d4c5d4f3d4d8c7c1e3a7a6d1f3'\n,'e2e4c7c5b1c3e7e6g1f3b8c6d2d4c5d4f3d4d8c7c1e3a7a6d4c6'\n,'e2e4c7c5b1c3e7e6g1f3b8c6d2d4c5d4f3d4d8c7c1e3a7a6f1d3'\n,'e2e4c7c5b1c3e7e6g1f3b8c6d2d4c5d4f3d4d8c7f1e2a7a6e1g1'\n,'e2e4c7c5b1c3e7e6g1f3b8c6d2d4c5d4f3d4g8f6d4b5d7d6c1f4'\n,'e2e4c7c5b1c3e7e6g1f3b8c6d2d4c5d4f3d4g8f6d4b5f8b4a2a3'\n,'e2e4c7c5b1c3e7e6g1f3d7d6d2d4c5d4f3d4g8f6c1e3a7a6f2f3'\n,'e2e4c7c5b1c3g7g6g1f3b8c6d2d4c5d4f3d4f8g7c1e3g8f6f1c4'\n,'e2e4c7c5b2b3b8c6b1c3g8f6c1a3d7d6g1f3g7g6f1c4f8g7a1b1'\n,'e2e4c7c5b2b3b8c6f1e2g8f6b1c3e7e6g1f3d7d5e4d5e6d5e1g1'\n,'e2e4c7c5b2b3d7d6c1b2b8c6g1f3g8f6b1c3e7e6f1c4d6d5e4d5'\n,'e2e4c7c5b2b3d7d6g1f3e7e6b1c3b8c6d2d4c5d4f3d4g8f6h2h3'\n,'e2e4c7c5b2b4c5b4a2a3d7d5e4d5d8d5g1f3c8g4a3b4b8c6b1c3'\n,'e2e4c7c5b2b4c5b4a2a3d7d5e4d5d8d5g1f3e7e5a3b4f8b4c2c3'\n,'e2e4c7c5b2b4c5b4a2a3e7e6a3b4f8b4c2c3b4e7d2d4d7d6f1d3'\n,'e2e4c7c5b2b4c5b4a2a3g8f6e4e5f6d5a3b4b8c6d2d4c6b4c2c4'\n,'e2e4c7c5b2b4c5b4a2a3g8f6e4e5f6d5g1f3b8c6f1c4d8a5c1b2'\n,'e2e4c7c5b2b4c5b4g1f3e7e6d2d4d7d5e4e5b8c6a2a3c8d7c2c3'\n,'e2e4c7c5c2c3b8c6d2d4d7d5d4c5d5e4d1d8c6d8f1b5d8c6b1d2'\n,'e2e4c7c5c2c3b8c6d2d4d7d5d4c5d5e4d1d8e8d8b1a3e7e5b2b4'\n,'e2e4c7c5c2c3b8c6d2d4d7d5d4c5d5e4d1d8e8d8b1a3e7e5c1e3'\n,'e2e4c7c5c2c3b8c6d2d4d7d5d4c5d5e4d1d8e8d8b1a3g8f6b2b4'\n,'e2e4c7c5c2c3b8c6d2d4d7d5e4d5d8d5g1f3g8f6c1e3c8g4f1e2'\n,'e2e4c7c5c2c3b8c6d2d4d7d5e4e5e7e6g1f3c8d7f1e2g8e7b1a3'\n,'e2e4c7c5c2c3b8c6d2d4d7d5e4e5e7e6g1f3d8b6a2a3c5c4g2g3'\n,'e2e4c7c5c2c3b8c6d2d4d7d5e4e5g8h6g1f3c5d4c3d4c8g4c1h6'\n,'e2e4c7c5c2c3b8c6g1f3d7d5e4d5d8d5d2d4g8f6f1e2c8f5c3c4'\n,'e2e4c7c5c2c3d7d5e4d5d8d5b1a3g8f6g1f3c8g4f1c4d5e4c4e2'\n,'e2e4c7c5c2c3d7d5e4d5d8d5d2d4b8c6g1f3g8f6f1e2c8f5e1g1'\n,'e2e4c7c5c2c3d7d5e4d5d8d5d2d4g7g6d4c5d5d1e1d1b8c6g1f3'\n,'e2e4c7c5c2c3d7d5e4d5d8d5d2d4g7g6g1f3f8g7b1a3c5d4f1c4'\n,'e2e4c7c5c2c3d7d5e4d5d8d5d2d4g8f6b1a3c5d4a3b5b8a6d1d4'\n,'e2e4c7c5c2c3d7d5e4d5d8d5d2d4g8f6g1f3b8c6d4c5d5c5c1e3'\n,'e2e4c7c5c2c3d7d5e4d5d8d5d2d4g8f6g1f3b8c6f1e2c8f5c3c4'\n,'e2e4c7c5c2c3d7d5e4d5d8d5d2d4g8f6g1f3b8c6f1e2c8g4h2h3'\n,'e2e4c7c5c2c3d7d5e4d5d8d5d2d4g8f6g1f3c8g4d4c5d5d1e1d1'\n,'e2e4c7c5c2c3d7d5e4d5d8d5d2d4g8f6g1f3e7e6b1a3f8e7a3b5'\n,'e2e4c7c5c2c3d7d5e4d5d8d5g1f3b8c6b1a3c8g4f1e2e8c8d2d3'\n,'e2e4c7c5c2c3d7d5e4d5d8d5g1f3b8c6b1a3c8g4f1e2g8f6d2d3'\n,'e2e4c7c5c2c3d7d5e4d5d8d5g1f3b8c6b1a3c8g4f1e2g8f6e1g1'\n,'e2e4c7c5c2c3d7d5e4d5d8d5g1f3b8c6d2d4g8f6f1e2c8f5d4c5'\n,'e2e4c7c5c2c3d7d5e4d5d8d5g1f3e7e6b1a3g8f6f1c4d5e4c4e2'\n,'e2e4c7c5c2c3d7d5e4d5d8d5g1f3g7g6b1a3g8f6f1c4d5e4c4e2'\n,'e2e4c7c5c2c3d7d5e4d5d8d5g1f3g8f6b1a3b8c6f1c4d5d7e1g1'\n,'e2e4c7c5c2c3d7d5e4d5d8d5g1f3g8f6b1a3c8g4a3c4b8c6c4e3'\n,'e2e4c7c5c2c3d7d5e4d5d8d5g1f3g8f6b1a3c8g4f1c4d5e4c4e2'\n,'e2e4c7c5c2c3d7d5e4d5d8d5g1f3g8f6b1a3c8g4f1e2b8c6d2d3'\n,'e2e4c7c5c2c3d7d5e4d5d8d5g1f3g8f6b1a3c8g4f1e2b8c6e1g1'\n,'e2e4c7c5c2c3d7d5e4d5d8d5g1f3g8f6b1a3e7e6f1c4d5d8e1g1'\n,'e2e4c7c5c2c3d7d5e4e5b8c6d2d4e7e6g1f3c8d7f1e2g8h6c1h6'\n,'e2e4c7c5c2c3d7d5e4e5b8c6d2d4e7e6g1f3d8b6f1e2c5d4c3d4'\n,'e2e4c7c5c2c3d7d6f1c4e7e6g1f3g8f6d2d3f8e7e1g1e8g8c4b3'\n,'e2e4c7c5c2c3g7g6g1f3f8g7d2d4c5d4c3d4d7d5e4e5c8g4d1b3'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4b8c6g1f3c5d4c3d4d7d6f1c4'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4b8c6g1f3c5d4f1c4d5b6c4b3'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4c5d4c3d4b8c6b1c3d8a5g1f3'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4c5d4c3d4b8c6g1f3d7d6f1c4'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4c5d4c3d4d7d6g1f3b8c6f1c4'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4c5d4c3d4d7d6g1f3e7e6c1d2'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4c5d4c3d4d7d6g1f3e7e6f1c4'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4c5d4c3d4d8a5c1d2a5b6g1f3'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4c5d4c3d4d8a5d1d2b8c6d2a5'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4c5d4c3d4e7e6g1f3b7b6f1d3'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4c5d4c3d4e7e6g1f3d7d6f1e2'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4c5d4g1f3b8c6c3d4d7d6f1c4'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4c5d4g1f3b8c6f1c4d5b6c4b3'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4c5d4g1f3e7e6c3d4b7b6b1c3'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4c5d4g1f3e7e6c3d4b7b6f1d3'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4c5d4g1f3e7e6c3d4d7d6a2a3'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4c5d4g1f3e7e6c3d4d7d6f1c4'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4c5d4g1f3e7e6c3d4d7d6f1e2'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4d7d6g1f3b8c6f1c4d6e5d4e5'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4e7e6f1c4b8c6g1f3d7d6e1g1'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4e7e6g1f3d7d6c3c4d5b4d4d5'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4e7e6g1f3d7d6d4c5d6e5c3c4'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4e7e6g1f3d7d6f1c4c5d4c3d4'\n,'e2e4c7c5c2c3g8f6e4e5f6d5d2d4e7e6g1f3d7d6f1d3b8c6e1g1'\n,'e2e4c7c5c2c3g8f6e4e5f6d5g1f3b8c6d2d4c5d4c3d4d7d6b1c3'\n,'e2e4c7c5c2c3g8f6e4e5f6d5g1f3b8c6d2d4c5d4c3d4d7d6f1c4'\n,'e2e4c7c5c2c3g8f6e4e5f6d5g1f3b8c6d2d4c5d4f1c4d5b6c4b3'\n,'e2e4c7c5c2c3g8f6e4e5f6d5g1f3b8c6d2d4d7d6f1c4d5b6c4b5'\n,'e2e4c7c5c2c3g8f6e4e5f6d5g1f3b8c6f1c4d5b6c4b3c5c4b3c2'\n,'e2e4c7c5c2c3g8f6e4e5f6d5g1f3b8c6f1c4d5b6c4b3d7d6e5d6'\n,'e2e4c7c5c2c3g8f6e4e5f6d5g1f3e7e6f1c4d5b6c4b3d7d6e5d6'\n,'e2e4c7c5c2c3g8f6e4e5f6d5g1f3e7e6f1c4d7d6d2d4c5d4c3d4'\n,'e2e4c7c5c2c3g8f6e4e5f6d5g1f3e7e6f1c4f8e7e1g1e8g8d2d4'\n,'e2e4c7c5c2c4b8c6b1c3g7g6g2g3d7d6g1f3g8f6d2d3f8g7f1g2'\n,'e2e4c7c5c2c4b8c6b1c3g7g6g2g3g8f6d2d3f8g7f1g2e8g8g1f3'\n,'e2e4c7c5c2c4b8c6g1f3g7g6d2d3f8g7h2h3d7d6b1c3e7e6f1e2'\n,'e2e4c7c5c2c4b8c6g1f3g7g6d2d4c5d4f3d4f8g7c1e3d8b6d4b3'\n,'e2e4c7c5c2c4g7g6g1f3f8g7d2d4d8a5b1c3g8f6f1d3c5d4f3d4'\n,'e2e4c7c5d2d3b8c6b1d2e7e6g2g3d7d5g1f3f8d6f1g2g8e7e1g1'\n,'e2e4c7c5d2d3e7e6b1d2d7d5g2g3b8c6g1f3f8d6f1g2g8e7e1g1'\n,'e2e4c7c5d2d4c5d4c2c3d4c3b1c3b8c6g1f3d7d6f1c4a7a6e1g1'\n,'e2e4c7c5d2d4c5d4c2c3d4c3b1c3b8c6g1f3g8f6f1c4e7e6e1g1'\n,'e2e4c7c5d2d4c5d4c2c3d4c3b1c3d7d6g1f3b8c6f1c4a7a6e1g1'\n,'e2e4c7c5d2d4c5d4c2c3d4c3g1f3c3b2c1b2b8c6b1c3g8f6f1c4'\n,'e2e4c7c5d2d4c5d4c2c3g8f6e4e5f6d5g1f3b8c6c3d4d7d6f1c4'\n,'e2e4c7c5d2d4c5d4g1f3d7d6f3d4g8f6b1c3a7a6f1e2d8c7f2f4'\n,'e2e4c7c5f1e2b8c6g1f3g7g6d2d4c5d4f3d4f8g7d4c6b7c6b1c3'\n,'e2e4c7c5f1e2d7d6g1f3b8c6c2c3g8f6d1c2e7e5e1g1f8e7b1a3'\n,'e2e4c7c5f2f4b8c6b1c3d7d6g1f3g7g6f1c4f8g7e1g1e7e6d2d3'\n,'e2e4c7c5f2f4b8c6b2b3g8f6b1c3g7g6c1b2f8h6e4e5f6h5g2g3'\n,'e2e4c7c5f2f4b8c6d2d3d7d6a2a4g7g6f1e2g8f6g1f3f8g7e1g1'\n,'e2e4c7c5f2f4b8c6d2d3d7d6g1f3g8f6c2c3g7g6f1e2f8g7e1g1'\n,'e2e4c7c5f2f4d7d5e4d5g8f6f1b5c8d7b5d7d8d7c2c4e7e6d1e2'\n,'e2e4c7c5f2f4d7d5e4d5g8f6f1b5c8d7b5d7d8d7c2c4e7e6g1f3'\n,'e2e4c7c5f2f4e7e6g1f3d7d5e4d5e6d5f1b5c8d7d1e2d8e7f3e5'\n,'e2e4c7c5f2f4e7e6g1f3d7d5e4e5h7h5c2c3g8h6b1a3b8c6a3c2'\n,'e2e4c7c5f2f4e7e6g1f3d7d5f1b5c8d7b5d7b8d7e4d5e6d5d1e2'\n,'e2e4c7c5f2f4g7g6g1f3f8h6b1c3h6f4f1c4g8f6d2d3f4c1d1c1'\n,'e2e4c7c5f2f4g8f6b1c3d7d5e4e5f6d7g1f3e7e6d2d4b8c6c1e3'\n,'e2e4c7c5g1e2a7a6b1c3d7d6d2d4c5d4e2d4g8f6c1e3e7e5d4b3'\n,'e2e4c7c5g1e2a7a6b1c3g8f6d2d4c5d4e2d4d7d6c1e3e7e5d4b3'\n,'e2e4c7c5g1e2a7a6d2d4c5d4e2d4d7d6b1c3g8f6d1e2e7e5d4f5'\n,'e2e4c7c5g1e2b7b6d2d4g8f6b1c3d7d6g2g3b8c6d4d5c6a5e2f4'\n,'e2e4c7c5g1e2b8c6b1c3d7d6d2d4c5d4e2d4g8f6c1g5a7a6d1d2'\n,'e2e4c7c5g1e2b8c6b1c3d7d6d2d4c5d4e2d4g8f6c1g5e7e6d1d2'\n,'e2e4c7c5g1e2b8c6b1c3e7e6d2d4c5d4e2d4d8c7f1e2a7a6e1g1'\n,'e2e4c7c5g1e2b8c6b1c3g7g6d2d4c5d4e2d4f8g7c1e3g8f6f1c4'\n,'e2e4c7c5g1e2b8c6b1c3g8f6d2d3d7d6d3d4c8d7d4d5c6e5e2g3'\n,'e2e4c7c5g1e2b8c6b1c3g8f6d2d4c5d4e2d4d7d6c1g5e7e6d1d2'\n,'e2e4c7c5g1e2b8c6c2c4g8f6b1c3e7e6d2d4d7d5c4d5e6d5c1g5'\n,'e2e4c7c5g1e2b8c6d2d4c5d4e2d4d7d6b1a3g7g6f2f3f8g7c1e3'\n,'e2e4c7c5g1e2d7d6b1c3b8c6d2d4c5d4e2d4g8f6c1g5a7a6d1d2'\n,'e2e4c7c5g1e2d7d6b1c3b8c6d2d4c5d4e2d4g8f6c1g5e7e6d1d2'\n,'e2e4c7c5g1e2d7d6b1c3g8f6d2d4c5d4e2d4a7a6c1e3e7e5d4b3'\n,'e2e4c7c5g1e2d7d6b1c3g8f6d2d4c5d4e2d4a7a6f2f3e7e5d4b3'\n,'e2e4c7c5g1e2d7d6b1c3g8f6d2d4c5d4e2d4b8c6c1g5e7e6d1d2'\n,'e2e4c7c5g1e2d7d6c2c3b8c6d2d4c8d7c1e3g8f6f2f3g7g6d4c5'\n,'e2e4c7c5g1e2d7d6c2c3b8c6d2d4g8f6e2g3c5d4c3d4d8b6d4d5'\n,'e2e4c7c5g1e2d7d6d2d4g8f6b1c3c5d4e2d4a7a6f2f3e7e5d4b3'\n,'e2e4c7c5g1e2e7e6b1c3b8c6d2d4c5d4e2d4d7d6c1e3g8f6f2f3'\n,'e2e4c7c5g1e2e7e6b1c3b8c6d2d4c5d4e2d4d8c7c1e3a7a6d1d2'\n,'e2e4c7c5g1e2g7g6b1c3b8c6d2d4c5d4e2d4f8g7c1e3g8f6f1c4'\n,'e2e4c7c5g1e2g8f6b1c3b8c6d2d4c5d4e2d4d7d6c1g5e7e6d1d2'\n,'e2e4c7c5g1e2g8f6b1c3d7d6d2d4c5d4e2d4a7a6c1e3e7e5d4b3'\n,'e2e4c7c5g1e2g8f6b1c3d7d6d2d4c5d4e2d4a7a6c1e3e7e6d1f3'\n,'e2e4c7c5g1e2g8f6b1c3d7d6d2d4c5d4e2d4a7a6c1e3e7e6f1c4'\n,'e2e4c7c5g1e2g8f6b1c3d7d6d2d4c5d4e2d4a7a6c1e3e7e6f2f3'\n,'e2e4c7c5g1e2g8f6b1c3d7d6d2d4c5d4e2d4a7a6c1e3f6g4e3g5'\n,'e2e4c7c5g1e2g8f6b1c3d7d6d2d4c5d4e2d4a7a6c1g5b8c6d1d2'\n,'e2e4c7c5g1e2g8f6b1c3d7d6d2d4c5d4e2d4a7a6c1g5b8c6d4c6'\n,'e2e4c7c5g1e2g8f6b1c3d7d6d2d4c5d4e2d4a7a6c1g5e7e6f2f4'\n,'e2e4c7c5g1e2g8f6b1c3d7d6d2d4c5d4e2d4a7a6d1f3g7g6c1e3'\n,'e2e4c7c5g1e2g8f6b1c3d7d6d2d4c5d4e2d4a7a6f1c4e7e6c1e3'\n,'e2e4c7c5g1e2g8f6b1c3d7d6d2d4c5d4e2d4a7a6f1c4e7e6c4b3'\n,'e2e4c7c5g1e2g8f6b1c3d7d6d2d4c5d4e2d4a7a6f1c4g7g6c1e3'\n,'e2e4c7c5g1e2g8f6b1c3d7d6d2d4c5d4e2d4a7a6f1e2e7e6e1g1'\n,'e2e4c7c5g1e2g8f6b1c3d7d6d2d4c5d4e2d4a7a6f2f3e7e5d4b3'\n,'e2e4c7c5g1e2g8f6b1c3d7d6g2g3g7g6d2d4c5d4e2d4f8g7f1b5'\n,'e2e4c7c5g1e2g8f6b1c3d7d6g2g3g7g6f1g2f8g7e1g1b8c6d2d3'\n,'e2e4c7c5g1e2g8f6b1c3d7d6g2g3g7g6f1g2f8g7h2h3b8c6e1g1'\n,'e2e4c7c5g1e2g8f6b1c3e7e5e2g3f8e7f1c4e8g8e1g1b8c6a2a4'\n,'e2e4c7c5g1e2g8f6b1c3e7e5e2g3f8e7g3h5e8g8h5f6e7f6f1c4'\n,'e2e4c7c5g1e2g8f6b1c3e7e5g2g3f8e7f1g2h7h5d2d3h5h4c3d5'\n,'e2e4c7c5g1e2g8f6b1c3e7e6d2d4d7d5e4d5e6d5c1e3c5c4g2g3'\n,'e2e4c7c5g1e2g8f6d2d3g7g6c2c3b8c6b1d2f8g7g2g3c6e5d1c2'\n,'e2e4c7c5g1f3a7a6b1c3d7d6d2d4c5d4f3d4g8f6c1e3e7e5d4b3'\n,'e2e4c7c5g1f3a7a6c2c3d7d6d2d4b8d7f1d3d8c7e1g1g8f6b1d2'\n,'e2e4c7c5g1f3a7a6c2c4e7e6b1c3d7d6d2d4c5d4f3d4g8f6f1e2'\n,'e2e4c7c5g1f3b7b6d2d4c5d4f3d4c8b7b1c3a7a6f1d3e7e6e1g1'\n,'e2e4c7c5g1f3b8c6b1c3d7d6d2d4c5d4f3d4g8f6c1g5e7e6d1d2'\n,'e2e4c7c5g1f3b8c6b1c3d7d6f1c4g8f6h2h3f6e4c3e4d6d5d1e2'\n,'e2e4c7c5g1f3b8c6b1c3d7d6g2g3e7e5d2d3g8f6f1g2f8e7e1g1'\n,'e2e4c7c5g1f3b8c6b1c3e7e5f1c4f8e7d2d3d7d6e1g1g8f6f3g5'\n,'e2e4c7c5g1f3b8c6b1c3e7e6d2d4c5d4f3d4d8c7f1e2a7a6e1g1'\n,'e2e4c7c5g1f3b8c6b1c3e7e6d2d4c5d4f3d4g8f6d4b5d7d6c1f4'\n,'e2e4c7c5g1f3b8c6b1c3g7g6d2d4c5d4f3d4a7a6f1c4e7e6e1g1'\n,'e2e4c7c5g1f3b8c6b1c3g7g6d2d4c5d4f3d4f8g7c1e3g8f6d4c6'\n,'e2e4c7c5g1f3b8c6b1c3g7g6d2d4c5d4f3d4f8g7c1e3g8f6f1c4'\n,'e2e4c7c5g1f3b8c6b1c3g7g6d2d4c5d4f3d4f8g7c1e3g8f6f1e2'\n,'e2e4c7c5g1f3b8c6b1c3g7g6f1b5f8g7e1g1e7e5d2d3g8e7h2h4'\n,'e2e4c7c5g1f3b8c6b1c3g7g6f1b5f8g7e1g1g8f6e4e5f6g4b5c6'\n,'e2e4c7c5g1f3b8c6b1c3g7g6f1c4f8g7e1g1d7d6d2d3g8f6h2h3'\n,'e2e4c7c5g1f3b8c6b1c3g7g6f1c4f8g7e1g1d7d6f1e1g8f6h2h3'\n,'e2e4c7c5g1f3b8c6b1c3g7g6f1c4f8g7e1g1d7d6h2h3g8f6d2d3'\n,'e2e4c7c5g1f3b8c6b1c3g7g6h2h3f8g7f1c4e7e6d2d3g8e7c1g5'\n,'e2e4c7c5g1f3b8c6b1c3g7g6h2h3f8g7f1c4e7e6d2d3g8e7e1g1'\n,'e2e4c7c5g1f3b8c6b1c3g8f6d2d4c5d4f3d4d7d6c1g5e7e6d1d2'\n,'e2e4c7c5g1f3b8c6b1c3g8f6d2d4c5d4f3d4d7d6f1b5c8d7c1g5'\n,'e2e4c7c5g1f3b8c6b1c3g8f6d2d4c5d4f3d4e7e5d4b5f8b4a2a3'\n,'e2e4c7c5g1f3b8c6b1c3g8f6f1b5d8c7e1g1c6d4f1e1a7a6b5f1'\n,'e2e4c7c5g1f3b8c6c2c3d7d5e4d5d8d5d2d4g8f6f1e2c8f5c3c4'\n,'e2e4c7c5g1f3b8c6c2c3g8f6d2d3e7e6f1e2d7d6e1g1f8e7b1d2'\n,'e2e4c7c5g1f3b8c6c2c3g8f6e4e5f6d5d2d4c5d4f1c4d5b6c4b3'\n,'e2e4c7c5g1f3b8c6c2c3g8f6e4e5f6d5f1c4d5b6c4b3c5c4b3c2'\n,'e2e4c7c5g1f3b8c6c2c3g8f6f1d3d7d5e4e5c5c4d3c2f6g4c2a4'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4d7d6b1c3c8d7c1e3g7g6d1d2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4d7d6b1c3g8f6c1g5c8d7d1d2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4d7d6b1c3g8f6c1g5e7e6d1d2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4d8a5b1c3g8f6d4b3a5c7f1e2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4d8c7b1c3e7e6c1e3a7a6f1e2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4d8c7b1c3e7e6f1e2g8f6c1e3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4d8c7c2c4g8f6b1c3e7e6c1e3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4e7e5d4b5d7d6b1c3a7a6b5a3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4e7e5d4b5d7d6b1c3g8f6c1g5'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4e7e5d4b5d7d6c1e3a7a6b5c3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4e7e5d4b5d7d6c2c4f8e7b1c3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4e7e5d4b5d7d6c2c4g8f6f1d3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4e7e6b1c3a7a6c1e3d8c7d1d2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4e7e6b1c3a7a6f1e2d8c7e1g1'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4e7e6b1c3a7a6f1e2f8b4d4c6'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4e7e6b1c3a7a6f1e2g8f6d4c6'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4e7e6b1c3d7d6c1e3g8f6f2f3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4e7e6b1c3d8c7c1e3a7a6d1d2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4e7e6b1c3d8c7c1e3a7a6d1f3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4e7e6b1c3d8c7c1e3a7a6f1e2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4e7e6b1c3d8c7f1e2a7a6e1g1'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4e7e6b1c3d8c7f1e2g8f6e1g1'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4e7e6b1c3g8f6d4b5d7d6c1f4'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6b1c3d7d6c1e3f8g7d1d2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6b1c3f8g7c1e3d7d6d1d2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6b1c3f8g7c1e3g8f6d4c6'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6b1c3f8g7c1e3g8f6f1c4'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6b1c3f8g7c1e3g8f6f1e2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6b1c3f8g7c1e3g8f6f2f3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6b1c3f8g7d4b3g7c3b2c3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6b1c3f8g7d4e2g8f6g2g3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6c1e3f8g7b1c3g8f6d4c6'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6c1e3f8g7b1c3g8f6f2f3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6c1e3f8g7c2c4d7d6b1c3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6c2c4d8b6d4c6d7c6c1e3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6c2c4f8g7c1e3d7d6b1c3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6c2c4f8g7c1e3d7d6f1e2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6c2c4f8g7c1e3d8b6d4b3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6c2c4f8g7c1e3d8b6d4b5'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6c2c4f8g7c1e3g8f6b1c3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6c2c4f8g7d4c2d7d6f1e2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6c2c4f8g7d4c6b7c6f1e2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g7g6c2c4g8f6b1c3d7d6f1e2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g8f6b1c3d7d6c1g5a7a6f1e2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g8f6b1c3d7d6c1g5c8d7d1d2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g8f6b1c3d7d6c1g5e7e6d1d2'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g8f6b1c3d7d6c3d5f6d5e4d5'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g8f6b1c3d7d6f1c4e7e6c1e3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g8f6b1c3d7d6f1c4e7e6e1g1'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g8f6b1c3d7d6f1e2g7g6c1e3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g8f6b1c3d7d6h2h3a7a6c1e3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g8f6b1c3e7e5d4b5d7d6c1g5'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g8f6b1c3e7e5d4b5d7d6c3d5'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g8f6b1c3e7e5d4b5f8b4a2a3'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g8f6b1c3e7e5d4b5f8b4c1g5'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g8f6b1c3e7e6d4b5d7d6c1f4'\n,'e2e4c7c5g1f3b8c6d2d4c5d4f3d4g8f6b1c3e7e6d4b5f8b4a2a3'\n,'e2e4c7c5g1f3b8c6f1b5d7d6b1c3e7e5b5c4f8e7e1g1g8f6d2d3'\n,'e2e4c7c5g1f3b8c6f1b5d7d6e1g1c8d7c2c3a7a6b5a4g8f6f1e1'\n,'e2e4c7c5g1f3b8c6f1b5e7e6b1c3c6d4e1g1g8e7f3d4c5d4c3e2'\n,'e2e4c7c5g1f3b8c6f1b5g7g6e1g1f8g7f1e1e7e5b5c6d7c6d2d3'\n,'e2e4c7c5g1f3b8c6f1b5g8f6e4e5f6d5e1g1d5c7b5c6d7c6h2h3'\n,'e2e4c7c5g1f3b8c6f1e2g8f6b1c3e7e5e1g1f8e7e2c4f6e4c3e4'\n,'e2e4c7c5g1f3b8c6g2g3g7g6b1c3f8g7f1g2d7d6e1g1g8f6d2d4'\n,'e2e4c7c5g1f3b8c6h2h3d7d6b1c3g8f6d2d4c5d4f3d4e7e6g2g4'\n,'e2e4c7c5g1f3d7d6a2a3b8c6b1c3g7g6d2d4c5d4f3d4g8f6f2f3'\n,'e2e4c7c5g1f3d7d6a2a3g7g6b1c3g8f6d2d4c5d4f3d4f8g7c1e3'\n,'e2e4c7c5g1f3d7d6b1c3a7a6d2d4c5d4f3d4g8f6c1e3e7e5d4b3'\n,'e2e4c7c5g1f3d7d6b1c3a7a6d2d4c5d4f3d4g8f6f2f3e7e5d4b3'\n,'e2e4c7c5g1f3d7d6b1c3a7a6f1c4g8f6e1g1b7b5c4d5f6d5e4d5'\n,'e2e4c7c5g1f3d7d6b1c3b8c6d2d4c5d4f3d4a7a6d4c6b7c6f1c4'\n,'e2e4c7c5g1f3d7d6b1c3b8c6d2d4c5d4f3d4e7e6g2g4e6e5d4c6'\n,'e2e4c7c5g1f3d7d6b1c3b8c6d2d4c5d4f3d4g8f6c1g5c8d7f1b5'\n,'e2e4c7c5g1f3d7d6b1c3b8c6d2d4c5d4f3d4g8f6c1g5e7e6d1d2'\n,'e2e4c7c5g1f3d7d6b1c3b8c6f1c4e7e5a2a3f8e7b2b4g8f6e1g1'\n,'e2e4c7c5g1f3d7d6b1c3e7e5f1c4b8c6d2d3f8e7e1g1g8f6f3g5'\n,'e2e4c7c5g1f3d7d6b1c3e7e6d2d4c5d4f3d4f8e7c1e3g8f6g2g4'\n,'e2e4c7c5g1f3d7d6b1c3g8f6d2d4c5d4f3d4a7a6c1e3b8c6f2f3'\n,'e2e4c7c5g1f3d7d6b1c3g8f6d2d4c5d4f3d4a7a6c1e3e7e5d4b3'\n,'e2e4c7c5g1f3d7d6b1c3g8f6d2d4c5d4f3d4a7a6c1e3e7e6d1f3'\n,'e2e4c7c5g1f3d7d6b1c3g8f6d2d4c5d4f3d4a7a6c1e3e7e6f2f3'\n,'e2e4c7c5g1f3d7d6b1c3g8f6d2d4c5d4f3d4a7a6c1g5b8d7f2f4'\n,'e2e4c7c5g1f3d7d6b1c3g8f6d2d4c5d4f3d4a7a6c1g5e7e6d1f3'\n,'e2e4c7c5g1f3d7d6b1c3g8f6d2d4c5d4f3d4a7a6c1g5e7e6f2f4'\n,'e2e4c7c5g1f3d7d6b1c3g8f6d2d4c5d4f3d4a7a6d1f3e7e6c1e3'\n,'e2e4c7c5g1f3d7d6b1c3g8f6d2d4c5d4f3d4a7a6f1e2e7e5d4b3'\n,'e2e4c7c5g1f3d7d6b1c3g8f6d2d4c5d4f3d4a7a6f2f3d8b6a2a4'\n,'e2e4c7c5g1f3d7d6b1c3g8f6d2d4c5d4f3d4a7a6f2f3e7e5d4b3'\n,'e2e4c7c5g1f3d7d6b1c3g8f6d2d4c5d4f3d4a7a6f2f3e7e6c1e3'\n,'e2e4c7c5g1f3d7d6b1c3g8f6d2d4c5d4f3d4b8c6c1g5e7e6d1d2'\n,'e2e4c7c5g1f3d7d6b1c3g8f6d2d4c5d4f3d4g7g6c1e3a7a6f2f3'\n,'e2e4c7c5g1f3d7d6b1c3g8f6d2d4c5d4f3d4h7h6c1e3b8c6f2f3'\n,'e2e4c7c5g1f3d7d6b1c3g8f6f1b5c8d7b5d7b8d7d2d4c5d4d1d4'\n,'e2e4c7c5g1f3d7d6b1c3g8f6f1c4b8c6d2d4c5d4f3d4e7e6e1g1'\n,'e2e4c7c5g1f3d7d6b1c3g8f6f1c4b8c6e1g1e7e6d2d4c5d4f3d4'\n,'e2e4c7c5g1f3d7d6b1c3g8f6f1c4e7e6d2d3b8c6e1g1a7a6c1f4'\n,'e2e4c7c5g1f3d7d6b1c3g8f6f1c4e7e6e1g1a7a6d2d4c5d4f3d4'\n,'e2e4c7c5g1f3d7d6b1c3g8f6f1d3b8c6e1g1e7e5c3d5f8e7d5f6'\n,'e2e4c7c5g1f3d7d6b1c3g8f6g2g3b8c6f1g2e7e5d2d3f8e7e1g1'\n,'e2e4c7c5g1f3d7d6b2b3b8c6d2d4c5d4f3d4d8a5c1d2a5e5d2e3'\n,'e2e4c7c5g1f3d7d6b2b4c5b4a2a3d8a5c1b2g8f6f1d3b8c6e1g1'\n,'e2e4c7c5g1f3d7d6b2b4c5b4d2d4g7g6a2a3g8f6f1d3b4a3e1g1'\n,'e2e4c7c5g1f3d7d6b2b4c5b4d2d4g8f6f1d3e7e6a2a3b8c6e1g1'\n,'e2e4c7c5g1f3d7d6b2b4c5b4d2d4g8f6f1d3g7g6a2a3b4a3c1d2'\n,'e2e4c7c5g1f3d7d6b2b4g8f6b4c5f6e4c5d6d8d6f1d3d6f6d3e4'\n,'e2e4c7c5g1f3d7d6c2c3g8f6f1e2b8c6d2d3g7g6e1g1f8g7d3d4'\n,'e2e4c7c5g1f3d7d6c2c3g8f6f1e2b8c6d2d3g7g6e1g1f8g7h2h3'\n,'e2e4c7c5g1f3d7d6d2d4b8c6d4d5c6e5f3e5d6e5d1h5g8f6h5e5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4d1d4b8c6f1b5c8d7b5c6d7c6b1c3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4d1d4b8c6f1b5c8d7b5c6d7c6c2c4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4d1d4g8f6b1c3b8c6f1b5c8d7b5c6'\n,'e2e4c7c5g1f3d7d6d2d4c5d4d1d4g8f6b1c3b8c6f1b5c8d7d4d3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f1b5b8c6d1d4c8d7b5c6d7c6b1c3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f1b5c8d7b5d7b8d7d1d4g8f6b1c3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f1c4d8a5c2c3b8c6e1g1d4c3b1c3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3b8c6c1e3g8f6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3e7e5d4b3g8f6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3e7e5d4f3b8c6f1c4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3e7e5d4f3g8f6f1c4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3e7e5d4f5b8c6f5e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g7g6f1c4f8g7e1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6c1e3b7b6c3d5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6c1e3b7b6f1c4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6c1e3b7b6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6c1e3b8c6f1e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6c1e3b8c6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6c1e3e7e5d4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6c1e3e7e5d4e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6c1e3e7e6f1e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6c1e3e7e6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6c1e3f6g4e3g5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6c1g5b8c6d1d2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6c1g5b8d7f2f4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6c1g5e7e5g5f6'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6c1g5e7e6f2f4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6f1c4g7g6e1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6f1e2e7e5d4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6f2f3b8c6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6f2f3e7e5d4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6h2h3e7e6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6b1c3g8f6h2h3e7e6g2g4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6c2c4g7g6b1c3g8f6f1e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6c2c4g7g6b1c3g8f6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6f1c4g8f6b1c3e7e6c4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4a7a6f1c4g8f6b1c3e7e6e1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4b8c6b1a3g7g6c1e3f8g7f1b5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4b8c6b1a3g7g6f2f3f8g7f1b5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4b8c6b1c3e7e5d4b5g8f6c1g5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4b8c6b1c3e7e6g2g4g8e7c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4b8c6b1c3g8f6c1g5a7a6d1d2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4b8c6b1c3g8f6c1g5c8d7d1d2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4b8c6b1c3g8f6c1g5c8d7f1b5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4b8c6b1c3g8f6c1g5d8b6d4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4b8c6b1c3g8f6c1g5e7e6d1d2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4b8c6b1c3g8f6c1g5h7h6g5f6'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4b8c6b1c3g8f6c3d5f6d5e4d5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4b8c6b1c3g8f6f1b5c8d7c1g5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4b8c6b1c3g8f6f1c4c8d7d4c6'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4b8c6b1c3g8f6f1c4d8b6d4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4b8c6d4c6b7c6f1c4g7g6b1c3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4b8d7b1c3g8f6c1e3a7a6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4b8d7b1c3g8f6c1e3g7g6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4c8d7b1c3g8f6c1e3b8c6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4c8d7b1c3g8f6c1g5a7a6f1e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4d8b6b1c3g8f6f1b5c8d7e1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4d8b6f1b5c8d7b1c3g8f6e1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4e7e5f1b5c8d7b5d7d8d7d4f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4e7e6b1c3a7a6c1e3g8f6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4e7e6b1c3b8c6f1e2g8f6e1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4e7e6b1c3f8e7c1e3g8f6f2f4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g7g6b1c3f8g7c1e3g8f6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g7g6b1c3g8f6c1e3b8c6f1e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g7g6b1c3g8f6c1e3f8g7f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6a2a3b8d7c1g5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3b7b5c3d5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3b7b6c3d5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3b7b6f1c4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3b7b6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3b8c6d4c6'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3b8c6f1e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3b8c6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3b8c6h2h3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3b8d7f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3c8d7f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3d8c7a2a4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3d8c7f1e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3d8c7f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3e7e5d4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3e7e5d4e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3e7e5d4f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3e7e6a2a3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3e7e6a2a4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3e7e6d1d2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3e7e6d1f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3e7e6f1d3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3e7e6f1e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3e7e6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3e7e6g2g4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3e7e6h1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3e7e6h2h3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3f6g4e3c1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3f6g4e3g5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3g7g6f1c4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3g7g6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3h7h5f1c4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5b7b5g5f6'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5b8c6d1d2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5b8c6d4c6'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5b8c6f1e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5b8c6f2f4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5b8c6g5f6'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5b8d7d1d2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5b8d7f1c4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5b8d7f1e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5b8d7f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5b8d7f2f4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5c8d7d1d2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5c8d7f1e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5d8a5d1d2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5e7e5d4f5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5e7e5g5f6'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5e7e6d1f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5e7e6f1e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5e7e6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5e7e6f2f4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5e7e6g5e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5g7g6g5f6'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5h7h6g5f6'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6d1f3c8g4f3g3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6d1f3d8b6d4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6d1f3e7e6c1g5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6d1f3g7g6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1c4b8d7e1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1c4e7e6a2a4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1c4e7e6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1c4e7e6c4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1c4e7e6c4e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1c4e7e6e1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1c4g7g6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1e2d8c7c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1e2d8c7e1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1e2d8c7f2f4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1e2e7e5d4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1e2e7e5d4f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1e2e7e6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1e2e7e6e1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1e2e7e6f2f4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1e2g7g6a2a4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1e2g7g6e1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f2f3b7b5c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f2f3b8c6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f2f3b8d7c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f2f3d8b6a2a3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f2f3d8b6d4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f2f3d8b6f1c4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f2f3d8b6g2g4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f2f3d8c7g2g4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f2f3e7e5d4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f2f3e7e6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f2f3g7g6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f2f3h7h5c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f2f3h7h6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f2f4d8c7f1e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6f2f4e7e6f1e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6g2g3e7e5d4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6g2g3e7e6f1g2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6g2g3g7g6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6g2g3g7g6f1g2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6h1g1b7b5g2g4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6h1g1b8c6g2g4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6h2h3b7b5a2a4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6h2h3b8c6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6h2h3b8c6d4c6'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6h2h3b8c6g2g4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6h2h3e7e5d4e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6h2h3e7e5d4f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6h2h3e7e6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6h2h3e7e6d1f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6h2h3e7e6g2g4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3a7a6h2h3g7g6f1e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6c1e3a7a6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6c1e3e7e6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6c1g5a7a6d1d2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6c1g5c8d7d1d2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6c1g5c8d7f1b5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6c1g5d8b6d4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6c1g5d8b6f1b5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6c1g5d8b6g5e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6c1g5e7e6d1d2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6c1g5e7e6d1d3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6c1g5e7e6d4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6c1g5h7h6g5f6'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6c3d5f6d5e4d5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6f1b5c8d7c1g5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6f1c4c8d7c4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6f1c4d8b6d4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6f1c4e7e6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6f1c4e7e6e1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6f2f3a7a6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6f2f3e7e5d4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6h2h3e7e6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8c6h2h3e7e6g2g4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8d7c1e3a7a6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3b8d7c1e3g7g6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3c8d7c1g5b8c6d1d2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3c8d7c1g5e7e6d1d2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3d8b6f1b5c8d7e1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3d8c7c1e3a7a6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3d8c7c1e3b8c6d4b5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3d8c7d4b5c7a5c1d2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3d8c7f1e2a7a6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3d8c7f1e2b8d7e1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3e7e5f1b5b8d7d4f5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3e7e6c1e3b8c6f1b5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3e7e6c1e3b8c6f1c4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3e7e6c1e3b8c6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3e7e6c1e3b8d7d4b5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3e7e6f2f4a7a6f1d3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3e7e6g2g4h7h6g4g5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3e7e6g2g4h7h6h1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3g7g6c1e3a7a6f1e2'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3g7g6c1e3a7a6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3g7g6c1e3b8c6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3g7g6c1e3c8d7f1c4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3g7g6c1e3c8d7f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3g7g6c1e3f8g7f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3g7g6f2f3f8g7c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3h7h6c1e3a7a6f1c4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3h7h6c1e3a7a6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3h7h6c1e3b8c6f1b5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3h7h6c1e3b8c6f1c4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3h7h6c1e3b8c6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3h7h6f1b5c8d7e1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3h7h6f1c4e7e5d4f5'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3h7h6f1c4g7g6e1g1'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6b1c3h7h6f2f3e7e5d4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6f1b5c8d7b1c3g7g6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6f1d3b8c6d4c6b7c6b1c3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6f2f3b8c6b1c3d8b6d4b3'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6f2f3e7e5d4b3c8e6c2c4'\n,'e2e4c7c5g1f3d7d6d2d4c5d4f3d4g8f6f2f3e7e5d4b3d6d5c1g5'\n,'e2e4c7c5g1f3d7d6d2d4d8a5b1c3g8f6c1d2a5b6d4c5b6c5a2a3'\n,'e2e4c7c5g1f3d7d6d2d4d8a5c1d2a5b6d4c5b6c5b1c3g8f6f1e2'\n,'e2e4c7c5g1f3d7d6d2d4d8a5c1d2a5b6d4d5g8f6b1c3e7e5a2a4'\n,'e2e4c7c5g1f3d7d6d2d4d8a5c1d2a5c7b1c3c5d4f3d4g8f6d2e3'\n,'e2e4c7c5g1f3d7d6d2d4d8c7b1c3c5d4c3d5c7a5c1d2a5d8f3d4'\n,'e2e4c7c5g1f3d7d6d2d4d8c7b1c3c5d4c3d5c7d8f3d4e7e6d5c3'\n,'e2e4c7c5g1f3d7d6d2d4d8c7b1c3c5d4f3d4g8f6c1e3a7a6f1e2'\n,'e2e4c7c5g1f3d7d6d2d4d8c7b1c3c5d4f3d4g8f6c1e3b8c6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4d8c7b1c3c5d4f3d4g8f6f1e2a7a6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4d8c7b1c3c5d4f3d4g8f6f1e2a7a6e1g1'\n,'e2e4c7c5g1f3d7d6d2d4d8c7b1c3c5d4f3d4g8f6f1e2b8d7c1e3'\n,'e2e4c7c5g1f3d7d6d2d4d8c7b1c3c5d4f3d4g8f6f1e2b8d7e1g1'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4a7a6c1e3b8c6f1e2'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4a7a6c1e3b8c6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4a7a6c1e3e7e5d4b3'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4a7a6c1e3e7e5d4e2'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4a7a6c1e3e7e6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4a7a6c1e3e7e6h2h3'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4a7a6c1e3g7g6f2f3'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4a7a6c1g5b8d7f2f4'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4a7a6c1g5e7e6f2f4'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4a7a6f1c4e7e6a2a4'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4a7a6f1e2d8c7c1e3'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4a7a6f1e2e7e5d4b3'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4a7a6f2f3e7e5d4b3'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4a7a6h2h3b8c6c1e3'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4b8c6c1g5d8b6d4b3'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4b8c6c1g5e7e6d1d2'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4d8c7c1e3a7a6f1e2'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4e7e5f1b5c8d7b5d7'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4g7g6c1e3f8g7f2f3'\n,'e2e4c7c5g1f3d7d6d2d4g8f6b1c3c5d4f3d4h7h6c1e3b8c6f2f3'\n,'e2e4c7c5g1f3d7d6f1b5b8c6b5c6b7c6e1g1e7e5c2c3f7f5e4f5'\n,'e2e4c7c5g1f3d7d6f1b5b8c6e1g1c8d7f1e1g8f6c2c3a7a6b5c6'\n,'e2e4c7c5g1f3d7d6f1b5b8c6e1g1c8d7f1e1g8f6c2c3a7a6b5f1'\n,'e2e4c7c5g1f3d7d6f1b5c8d7b5d7b8d7c2c4g7g6b1c3f8g7e1g1'\n,'e2e4c7c5g1f3d7d6f1b5c8d7b5d7b8d7e1g1g7g6b1c3f8g7d2d3'\n,'e2e4c7c5g1f3d7d6f1b5c8d7b5d7b8d7e1g1g8f6d1e2g7g6d2d3'\n,'e2e4c7c5g1f3d7d6f1b5c8d7b5d7d8d7d2d4c5d4d1d4b8c6d4d3'\n,'e2e4c7c5g1f3d7d6f1b5c8d7b5d7d8d7d2d4c5d4d1d4g8f6e1g1'\n,'e2e4c7c5g1f3d7d6f1b5c8d7b5d7d8d7e1g1b8c6b1c3g7g6d2d4'\n,'e2e4c7c5g1f3d7d6f1b5c8d7b5d7d8d7e1g1b8c6c2c3g8f6d2d4'\n,'e2e4c7c5g1f3d7d6f1c4g8f6b1c3e7e6d2d4c5d4f3d4a7a6e1g1'\n,'e2e4c7c5g1f3d7d6f1c4g8f6d2d3e7e6c4b3f8e7e1g1e8g8c2c3'\n,'e2e4c7c5g1f3d8b6b1c3b8c6f1c4d7d6e1g1e7e6d2d3g8f6f1e1'\n,'e2e4c7c5g1f3d8c7b1c3a7a6d2d4c5d4c3d5c7d8c1f4d7d6d1d4'\n,'e2e4c7c5g1f3d8c7b1c3d7d6d2d4c5d4f3d4g8f6f1e2a7a6c1e3'\n,'e2e4c7c5g1f3d8c7b1c3d7d6d2d4c5d4f3d4g8f6f1e2c8d7e1g1'\n,'e2e4c7c5g1f3d8c7b1c3e7e6d2d4a7a6d4d5g8f6a2a4f8e7f1d3'\n,'e2e4c7c5g1f3d8c7c2c3e7e6d2d4f8e7e4e5b8c6f1d3c5d4c3d4'\n,'e2e4c7c5g1f3d8c7c2c3e7e6d2d4f8e7e4e5b8c6f1d3d7d6e5d6'\n,'e2e4c7c5g1f3d8c7c2c3g8f6e4e5f6d5d2d4c5d4c3d4d7d6e5d6'\n,'e2e4c7c5g1f3d8c7d2d4c5d4f3d4b8c6b1c3e7e6g2g3a7a6f1g2'\n,'e2e4c7c5g1f3e7e6b1c3a7a6d2d4c5d4f3d4b7b5f1d3c8b7e1g1'\n,'e2e4c7c5g1f3e7e6b1c3a7a6d2d4c5d4f3d4b8c6d4c6b7c6f1d3'\n,'e2e4c7c5g1f3e7e6b1c3a7a6d2d4c5d4f3d4d8c7c1e3g8f6d1d2'\n,'e2e4c7c5g1f3e7e6b1c3a7a6d2d4c5d4f3d4d8c7f1e2b8c6e1g1'\n,'e2e4c7c5g1f3e7e6b1c3b8c6d2d4c5d4f3d4a7a6c1e3d8c7d1d2'\n,'e2e4c7c5g1f3e7e6b1c3b8c6d2d4c5d4f3d4d8c7c1e3a7a6d1d2'\n,'e2e4c7c5g1f3e7e6b1c3b8c6d2d4c5d4f3d4d8c7c1e3a7a6d1f3'\n,'e2e4c7c5g1f3e7e6b1c3b8c6d2d4c5d4f3d4d8c7c1e3a7a6d4c6'\n,'e2e4c7c5g1f3e7e6b1c3b8c6d2d4c5d4f3d4d8c7c1e3a7a6f1e2'\n,'e2e4c7c5g1f3e7e6b1c3b8c6d2d4c5d4f3d4d8c7c1e3a7a6f2f4'\n,'e2e4c7c5g1f3e7e6b1c3b8c6d2d4c5d4f3d4d8c7f1e2a7a6e1g1'\n,'e2e4c7c5g1f3e7e6b1c3b8c6d2d4c5d4f3d4d8c7f1e2g8f6c1e3'\n,'e2e4c7c5g1f3e7e6b1c3b8c6f1b5c6d4e1g1g8e7d2d3a7a6b5a4'\n,'e2e4c7c5g1f3e7e6b1c3b8c6f1b5g8e7e1g1a7a6b5c6e7c6d2d4'\n,'e2e4c7c5g1f3e7e6b1c3b8c6f1e2a7a6e1g1g8f6d2d4c5d4f3d4'\n,'e2e4c7c5g1f3e7e6b1c3d7d6d2d4c5d4f3d4g8f6c1e3b8c6f2f3'\n,'e2e4c7c5g1f3e7e6b1c3d8c7d2d4a7a6d4d5d7d6f1e2g8f6c1f4'\n,'e2e4c7c5g1f3e7e6d2d4a7a6b1c3b7b5g2g3c5d4f3d4b5b4c3a4'\n,'e2e4c7c5g1f3e7e6d2d4c5d4d1d4b8c6d4a4f8c5f1e2g8f6e4e5'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4a7a6b1c3b8c6c1e3d7d6g2g4'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4a7a6b1c3b8c6g2g3d8c7f1g2'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4a7a6b1c3d7d6c1e3g8f6f2f3'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4a7a6b1c3d8c7f1d3g8e7c1e3'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4a7a6b1c3d8c7f1e2b7b5e1g1'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4a7a6b1c3d8c7f1e2b8c6e1g1'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4a7a6f1d3d7d6c1e3g8f6b1c3'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4a7a6f1d3f8c5d4b3c5e7d1g4'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4a7a6f1d3g8e7e1g1b8c6c2c3'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4a7a6f1d3g8f6e1g1d7d6c2c4'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3a7a6d4c6b7c6f1d3'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3a7a6f1e2d8c7e1g1'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3d7d6c1e3g8f6f1c4'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3d7d6g2g4a7a6c1e3'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3d8c7c1e3a7a6d1d2'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3d8c7c1e3a7a6d1f3'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3d8c7c1e3a7a6f1e2'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3d8c7c1e3a7a6f2f3'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3d8c7d4b5c7b8c1e3'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3d8c7f1e2a7a6c1e3'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3d8c7f1e2a7a6d4c6'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3d8c7f1e2a7a6e1g1'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3d8c7f1e2g8f6c1e3'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3d8c7f1e2g8f6e1g1'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3d8c7f2f3g8f6c1e3'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3d8c7f2f3g8f6d4b5'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3d8c7g2g3a7a6f1g2'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4b8c6b1c3g8f6d4b5d7d6c1f4'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4d7d6b1c3g8f6c1e3a7a6f2f3'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4d8b6c1e3b6b2b1d2a7a6f1d3'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4d8b6c1e3f8c5b1a3b6a5d1d2'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4d8b6d4b3g8f6e4e5f6e4d1e2'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4d8c7f1e2a7a6e1g1b8c6b1c3'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4g8f6b1c3b8c6d4b5d7d6c1f4'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4g8f6b1c3d7d6c1e3b8c6f2f3'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4g8f6b1c3d7d6g2g4h7h6h2h4'\n,'e2e4c7c5g1f3e7e6d2d4c5d4f3d4g8f6f1d3a7a6e1g1d8c7b1c3'\n,'e2e4c7c5g1f3g7g6b1c3b8c6d2d4c5d4f3d4f8g7c1e3g8f6f1c4'\n,'e2e4c7c5g1f3g7g6c2c3d7d5e4d5d8d5d2d4f8g7b1a3c5d4f1c4'\n,'e2e4c7c5g1f3g7g6c2c3d7d6d2d4d8c7b1a3c5d4c3d4f8g7e4e5'\n,'e2e4c7c5g1f3g7g6d2d4c5d4f3d4b8c6b1c3f8g7c1e3g8f6d4c6'\n,'e2e4c7c5g1f3g7g6d2d4c5d4f3d4b8c6b1c3f8g7c1e3g8f6f1e2'\n,'e2e4c7c5g1f3g7g6d2d4c5d4f3d4b8c6c2c4f8g7c1e3d8b6d4b3'\n,'e2e4c7c5g1f3g7g6d2d4f8g7b1c3c5d4f3d4b8c6c1e3g8f6d4c6'\n,'e2e4c7c5g1f3g8f6e4e5f6d5c2c3b8c6f1c4d5b6c4b3d7d5e5d6'\n,'e2e4c7c5g1f3h7h5f1c4b8c6b1c3e7e6d2d3g8f6e1g1f8d6f1e1'\n,'e2e4c7c5g1f3h7h5f1c4b8c6e1g1a7a6b1c3b7b5c4d5g8f6d5c6'\n,'e2e4c7c5g1f3h7h6b1c3d7d6d2d4c5d4f3d4g8f6c1e3b8c6f1c4'\n,'e2e4c7c5g1f3h7h6c2c3d7d6d2d4e7e6f1b5c8d7b5e2g8f6e4e5'\n,'e2e4c7c5g1f3h7h6d2d4c5d4f3d4g8f6b1c3d7d6c1e3b8c6f2f3'\n,'e2e4c7c5g1f3h7h6f1c4g8f6e4e5d7d5c4b5c8d7d1e2d8b6b1c3'\n,'e2e4c7c5g2g3b8c6b1c3g7g6f2f4d7d6f1b5g8f6g1f3f8g7e4e5'\n,'e2e4c7c5h2h3b8c6b1c3g8f6g1f3d7d5e4d5f6d5f1c4d5c3b2c3'\n,'e2e4c7c5h2h3b8c6g1f3g7g6b1c3d7d6f1b5g8f6e1g1c8d7b5c6'\n,'e2e4c7c5h2h4b8c6b1c3e7e6g1f3g8f6f1e2f8e7d2d4c5d4f3d4'\n,'e2e4c7c5h2h4b8c6b1c3g8f6g1f3e7e6f1b5f6g4h4h5a7a6b5c6'\n,'e2e4c7c6a2a3d7d5e4e5d5d4f1c4g8h6g1f3b8d7e1g1g7g6d2d3'\n,'e2e4c7c6a2a3d7d5e4e5d5d4f1c4g8h6g1f3c8g4e1g1e7e6d2d3'\n,'e2e4c7c6a2a3d7d5e4e5d5d4f1c4g8h6g1f3c8g4e1g1e7e6h2h3'\n,'e2e4c7c6a2a3d7d5e4e5f7f6d2d4c6c5g1f3b8c6f1b5c8g4d4c5'\n,'e2e4c7c6a2a3d7d5e4e5f7f6f2f4g8h6d2d4c6c5g1f3b8c6d4c5'\n,'e2e4c7c6a2a3d7d5e4e5f7f6g1f3c8g4e5f6g8f6f1e2g4f3e2f3'\n,'e2e4c7c6a2a3g8f6b1c3d7d5e4e5d5d4c3e2f6h5e2d4d8d4d1h5'\n,'e2e4c7c6a2a3g8f6e4e5f6d5d2d4d7d6c2c4d5b6e5d6c8e6d6e7'\n,'e2e4c7c6b1c3d7d5d2d3g8f6e4e5d5d4e5f6d4c3b2c3e7f6g1f3'\n,'e2e4c7c6b1c3d7d5d2d4d5e4c3e4c8f5e4g3f5g6h2h4h7h6g1f3'\n,'e2e4c7c6b1c3d7d5g1f3c8g4h2h3g4f3d1f3g8f6d2d3e7e6c1d2'\n,'e2e4c7c6b1c3d7d5g1f3c8g4h2h3g4f3d1f3g8f6e4e5f6d7f3g3'\n,'e2e4c7c6b1c3d7d5g1f3d5e4c3e4g8f6e4f6e7f6f1c4f8d6d2d4'\n,'e2e4c7c6b1c3d7d5g1f3g8f6e4e5f6e4d2d4c8g4f1d3e4c3b2c3'\n,'e2e4c7c6c2c3d7d5e4d5c6d5d2d4b8c6f1d3e7e5d4e5c6e5d3b5'\n,'e2e4c7c6c2c3d7d5e4e5c8f5d2d4b8d7f1d3f5d3d1d3e7e6g1e2'\n,'e2e4c7c6c2c3d7d5e4e5c8f5d2d4e7e6f1d3g8e7g1e2b8d7e1g1'\n,'e2e4c7c6c2c3d7d5e4e5c8f5d2d4e7e6f1d3g8e7g1e2c6c5b2b4'\n,'e2e4c7c6c2c3d7d5e4e5c8f5d2d4e7e6f1e2b8d7g1f3g8e7e1g1'\n,'e2e4c7c6c2c3d7d5e4e5c8f5d2d4e7e6f1e2g8e7g1f3c6c5d4c5'\n,'e2e4c7c6c2c3d7d5e4e5c8f5g1f3e7e6d2d4b8d7f1e2c6c5e1g1'\n,'e2e4c7c6c2c3d7d5e4e5c8f5g1f3e7e6d2d4b8d7f1e2f7f6e1g1'\n,'e2e4c7c6c2c3d7d5e4e5c8f5g1f3e7e6d2d4b8d7f1e2g8e7e1g1'\n,'e2e4c7c6c2c3d7d5e4e5c8f5g1f3e7e6d2d4h7h6f1e2g8e7e1g1'\n,'e2e4c7c6c2c3d7d5e4e5f7f6d2d4f6e5d4e5b8d7g1f3g7g6e5e6'\n,'e2e4c7c6c2c3d7d5e4e5f7f6d2d4f6e5d4e5g7g6c3c4f8g7g1f3'\n,'e2e4c7c6c2c3d7d5e4e5f7f6d2d4f6e5d4e5g7g6f2f4f8g7g1f3'\n,'e2e4c7c6c2c3d7d5e4e5f7f6d2d4f6e5d4e5g7g6f2f4g8h6g1f3'\n,'e2e4c7c6c2c3d7d5e4e5f7f6f2f4c6c5g1f3b8c6d2d4c5d4c3d4'\n,'e2e4c7c6c2c3d7d5e4e5f7f6f2f4g7g6g1f3g8h6d2d4f8g7c1e3'\n,'e2e4c7c6c2c3d7d5e4e5f7f6f2f4g7g6g1f3g8h6d2d4f8g7f1e2'\n,'e2e4c7c6c2c3d7d5e4e5f7f6f2f4g8h6g1f3c8f5d2d4b8d7f1d3'\n,'e2e4c7c6c2c3d7d5e4e5g7g6g1f3g8h6d2d4f8g7f1d3c6c5c1f4'\n,'e2e4c7c6c2c3g8f6e4e5f6d5c3c4d5b4d2d4c6c5d4d5d7d6a2a3'\n,'e2e4c7c6c2c3g8f6e4e5f6d5c3c4d5b6d2d4d7d6e5d6e7d6b1c3'\n,'e2e4c7c6c2c3g8f6e4e5f6d5c3c4d5c7d2d4d7d6e5d6d8d6g1f3'\n,'e2e4c7c6c2c4d7d5c4d5c6d5e4d5g8f6b1c3f6d5g1f3b8c6f1b5'\n,'e2e4c7c6c2c4d7d5e4d5c6d5d2d4g8f6b1c3b8c6c1g5c8e6a2a3'\n,'e2e4c7c6c2c4d7d5e4d5c6d5d2d4g8f6b1c3b8c6c1g5c8e6g5f6'\n,'e2e4c7c6c2c4d7d5e4d5g8f6b1c3c6d5d2d4b8c6c1g5c8e6a2a3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7e4g5g8f6f1c4e7e6d1e2'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7e4g5g8f6f1d3e7e6g1f3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7e4g5h7h6g5e6d8a5c1d2'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7e4g5h7h6g5e6d8b6e6f8'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7e4g5h7h6g5e6d8b6f1d3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7e4g5h7h6g5f3g8f6f1d3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7f1c4d7b6c4b3g8f6d1d3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7f1c4d7b6c4b3g8f6d1e2'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7f1c4d7b6c4b3g8f6e4f6'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7f1c4d7b6c4b3g8f6e4g3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7f1c4d7b6c4d3d8d4d1e2'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7f1c4d7b6c4d3d8d4g1f3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7f1c4g8f6e4g3d7b6c4b3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7f1c4g8f6e4g3e7e6g1f3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7f1c4g8f6e4g5e7e6d1e2'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7f1d3g8f6e4g5e7e6g1f3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7f1d3g8f6e4g5h7h6g5e6'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7f2f4d7f6e4f2h7h5g1f3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4c3d7b6f1d3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4c3d7b6f1e2'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4c3e7e6f1d3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4c3g7g6f1d3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4c3h7h6f1d3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4f6d7f6f1c4'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4g3c6c5d4c5'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4g3c6c5f1c4'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4g3e7e6f1c4'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4g3g7g6f1c4'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4g3g7g6f1d3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4g3g7g6h2h4'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4c8f5e4g3f5g6g1f3b8d7f1d3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4c8f5e4g3f5g6g1f3b8d7h2h4'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4c8f5e4g3f5g6g1f3g8f6f1c4'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4c8f5e4g3f5g6g1f3g8f6f3e5'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4c8f5e4g3f5g6g1f3g8f6h2h4'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4c8f5e4g3f5g6h2h4h7h6g1f3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4c8f5e4g3f5g6h2h4h7h6h4h5'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4c8f5f1d3d8d4g1e2d4b6e2g3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4d8c7f1c4g8f6d1f3b8d7g1e2'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4g8f6e4f6e7f6c2c3f8d6f1d3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4g8f6e4f6e7f6g1f3b8a6f1d3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4g8f6e4f6g7f6c2c3d8d5c1e3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4g8f6e4f6g7f6c2c3h7h5f1c4'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4g8f6e4f6g7f6g1f3c8f5c2c3'\n,'e2e4c7c6d2d4d7d5b1c3d5e4c3e4g8f6e4g3h7h5h2h4c8g4g1e2'\n,'e2e4c7c6d2d4d7d5b1c3g7g6g1f3c8g4c1e3g8f6e4e5f6e4h2h3'\n,'e2e4c7c6d2d4d7d5b1c3h7h6e4e5e7e6g1f3f8b4f1d3c6c5d4c5'\n,'e2e4c7c6d2d4d7d5b1c3h7h6g1f3d5e4c3e4g8f6e4f6e7f6f1c4'\n,'e2e4c7c6d2d4d7d5b1c3h7h6g1f3d5e4c3e4g8f6e4f6e7f6f1d3'\n,'e2e4c7c6d2d4d7d5b1c3h7h6g1f3d5e4c3e4g8f6f1d3c8g4h2h3'\n,'e2e4c7c6d2d4d7d5b1c3h7h6g1f3d5e4c3e4g8f6f1d3f6e4d3e4'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7e4g5g8f6f1c4e7e6d1e2'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7e4g5g8f6f1d3e7e6g1f3'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7e4g5h7h6g5e6d8a5c1d2'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7e4g5h7h6g5e6d8b6e6f8'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7e4g5h7h6g5e6d8b6f1d3'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7e4g5h7h6g5f3g8f6f1d3'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7f1c4d7b6c4b3g8f6e4g3'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7f1c4d7b6c4d3d8d4d1e2'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7f1c4g8f6e4g5e7e6d1e2'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7g1f3g8f6e4c3d7b6f1d3'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7g1f3g8f6e4c3e7e6f1d3'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7g1f3g8f6e4c3g7g6f1d3'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7g1f3g8f6e4c3h7h6f1d3'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7g1f3g8f6e4f6d7f6f1c4'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7g1f3g8f6e4f6d7f6f3e5'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7g1f3g8f6e4g3e7e6f1c4'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7g1f3g8f6e4g3g7g6f1c4'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7g1f3g8f6e4g3g7g6f1d3'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7g1f3g8f6e4g3g7g6h2h4'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4b8d7g1f3g8f6e4g3h7h6f1d3'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4c8f5e4c5b7b6c5b3e7e6g1f3'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4c8f5e4g3f5g6f1c4b8d7g1e2'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4c8f5e4g3f5g6g1f3b8d7f1d3'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4c8f5e4g3f5g6g1f3b8d7h2h4'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4c8f5e4g3f5g6g1f3g8f6f1c4'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4c8f5e4g3f5g6g1f3g8f6f1d3'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4c8f5e4g3f5g6g1f3g8f6h2h4'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4c8f5e4g3f5g6h2h4h7h6g1f3'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4g8f6e4f6e7f6c2c3f8d6f1d3'\n,'e2e4c7c6d2d4d7d5b1d2d5e4d2e4g8f6e4f6e7f6f1c4d8e7c4e2'\n,'e2e4c7c6d2d4d7d5b1d2h7h6g1f3d5e4d2e4g8f6f1d3f6e4d3e4'\n,'e2e4c7c6d2d4d7d5e4d5c6d5b1c3g8f6g1f3b8c6c1f4c8g4f1e2'\n,'e2e4c7c6d2d4d7d5e4d5c6d5c2c3b8c6f1d3e7e5d4e5c6e5d1e2'\n,'e2e4c7c6d2d4d7d5e4d5c6d5c2c4g8f6b1c3b8c6c1g5c8e6a2a3'\n,'e2e4c7c6d2d4d7d5e4d5c6d5c2c4g8f6b1c3b8c6c1g5c8e6c4c5'\n,'e2e4c7c6d2d4d7d5e4d5c6d5c2c4g8f6b1c3b8c6c1g5c8e6d1d2'\n,'e2e4c7c6d2d4d7d5e4d5c6d5c2c4g8f6b1c3b8c6c1g5c8e6f1e2'\n,'e2e4c7c6d2d4d7d5e4d5c6d5c2c4g8f6b1c3b8c6c1g5c8e6g1f3'\n,'e2e4c7c6d2d4d7d5e4d5c6d5c2c4g8f6b1c3b8c6c1g5c8e6g5f6'\n,'e2e4c7c6d2d4d7d5e4d5c6d5c2c4g8f6b1c3b8c6c1g5f6e4c4d5'\n,'e2e4c7c6d2d4d7d5e4d5c6d5c2c4g8f6b1c3b8c6g1f3e7e6c1g5'\n,'e2e4c7c6d2d4d7d5e4d5c6d5c2c4g8f6b1c3b8c6g1f3g7g6c1g5'\n,'e2e4c7c6d2d4d7d5e4d5c6d5c2c4g8f6b1c3b8c6g1f3g7g6c4d5'\n,'e2e4c7c6d2d4d7d5e4d5c6d5c2c4g8f6b1c3e7e6g1f3f8e7c4d5'\n,'e2e4c7c6d2d4d7d5e4d5c6d5f1d3b8c6c2c3e7e5d4e5c6e5d3b5'\n,'e2e4c7c6d2d4d7d5e4d5c6d5f1d3b8c6c2c3g7g6c1f4g8f6g1f3'\n,'e2e4c7c6d2d4d7d5e4d5c6d5f1d3b8c6c2c3g8f6c1f4c8g4d1b3'\n,'e2e4c7c6d2d4d7d5e4d5c6d5f1d3b8c6c2c3g8f6c1f4g7g5f4g5'\n,'e2e4c7c6d2d4d7d5e4d5c6d5f1d3b8c6g1f3g8f6e1g1g7g6f1e1'\n,'e2e4c7c6d2d4d7d5e4d5c6d5f1d3g7g6g1f3g8f6a2a3b8c6b1c3'\n,'e2e4c7c6d2d4d7d5e4d5c6d5f1d3g7g6g1f3g8f6a2a3f8g7b1c3'\n,'e2e4c7c6d2d4d7d5e4d5c6d5f1d3g7g6g1f3g8f6b1c3b8c6e1g1'\n,'e2e4c7c6d2d4d7d5e4d5c6d5f1d3g7g6g1f3g8f6e1g1b8c6f1e1'\n,'e2e4c7c6d2d4d7d5e4d5c6d5g1f3g8f6b1c3b8c6f1b5c8g4h2h3'\n,'e2e4c7c6d2d4d7d5e4d5c6d5g1f3g8f6f3e5b8c6c2c3g7g6f1d3'\n,'e2e4c7c6d2d4d7d5e4d5c6d5g1f3g8f6f3e5e7e6c2c3b8c6b1d2'\n,'e2e4c7c6d2d4d7d5e4e5c6c5d4c5b8c6f1b5e7e6c1e3c8d7b5c6'\n,'e2e4c7c6d2d4d7d5e4e5c6c5d4c5b8c6f1b5e7e6c1e3c8d7g1f3'\n,'e2e4c7c6d2d4d7d5e4e5c6c5d4c5b8c6f1b5e7e6c1e3g8e7c2c3'\n,'e2e4c7c6d2d4d7d5e4e5c6c5d4c5b8c6g1f3c8g4f1b5d8a5b1c3'\n,'e2e4c7c6d2d4d7d5e4e5c6c5d4c5b8c6g1f3e7e6f1d3f8c5e1g1'\n,'e2e4c7c6d2d4d7d5e4e5c6c5d4c5e7e6c1e3b8c6f1b5g8e7c2c3'\n,'e2e4c7c6d2d4d7d5e4e5c6c5d4c5e7e6c1e3b8d7b1c3g8e7g1f3'\n,'e2e4c7c6d2d4d7d5e4e5c6c5d4c5e7e6c1e3b8d7f1b5d8c7g1f3'\n,'e2e4c7c6d2d4d7d5e4e5c6c5d4c5e7e6c1e3b8d7f1b5g8e7g1f3'\n,'e2e4c7c6d2d4d7d5e4e5c6c5d4c5e7e6c1e3g8h6g1f3b8c6e3h6'\n,'e2e4c7c6d2d4d7d5e4e5c6c5g1e2b8c6c2c3e7e6a2a3f7f6e2f4'\n,'e2e4c7c6d2d4d7d5e4e5c6c5g1e2b8c6c2c3e7e6a2a3g8e7b1d2'\n,'e2e4c7c6d2d4d7d5e4e5c6c5g1e2b8c6c2c3e7e6b1d2c5d4c3d4'\n,'e2e4c7c6d2d4d7d5e4e5c6c5g1e2b8c6c2c3e7e6b1d2g8e7d2f3'\n,'e2e4c7c6d2d4d7d5e4e5c6c5g1f3b8c6f1b5c8g4d4c5d8a5b1c3'\n,'e2e4c7c6d2d4d7d5e4e5c6c5g1f3c5d4c2c3b8c6c3d4c8g4f1e2'\n,'e2e4c7c6d2d4d7d5e4e5c6c5g1f3c5d4d1d4b8c6f1b5e7e6e1g1'\n,'e2e4c7c6d2d4d7d5e4e5c6c5g1f3c5d4f3d4e7e6b1c3g8e7c1g5'\n,'e2e4c7c6d2d4d7d5e4e5c6c5g1f3c5d4f3d4e7e6b1c3g8e7f1e2'\n,'e2e4c7c6d2d4d7d5e4e5c6c5g1f3e7e6d4c5b8c6f1d3f8c5e1g1'\n,'e2e4c7c6d2d4d7d5e4e5c6c5g1f3e7e6d4c5f8c5f1d3b8c6e1g1'\n,'e2e4c7c6d2d4d7d5e4e5c8f5a2a3b8d7f1d3f5d3d1d3e7e6g1f3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3e7e6a2a3g8e7g1f3b8d7f1d3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3e7e6f1d3g8e7g1e2d8b6e1g1'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3e7e6f1d3g8e7g1f3h7h6e1g1'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3e7e6g1f3h7h6a2a3g8e7f1e2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3e7e6g1f3h7h6f1d3g8e7e1g1'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3e7e6g2g4f5g6g1e2b8d7h2h4'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3e7e6g2g4f5g6g1e2c6c5c1e3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3e7e6g2g4f5g6g1e2c6c5h2h4'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3e7e6g2g4f5g6g1e2f7f6e5f6'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3e7e6g2g4f5g6g1e2g8e7e2f4'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3e7e6g2g4f5g6g1e2g8e7f2f4'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3e7e6h2h4h7h5f1d3f5d3d1d3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3h7h6f1d3f5d3d1d3e7e6g1e2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3h7h6g1f3e7e6f1d3f5d3d1d3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3h7h6g2g4f5g6g1e2e7e6e2f4'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3h7h6g2g4f5h7e5e6f7e6f1d3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3h7h6g2g4f5h7e5e6f7e6g1f3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3h7h6g2g4f5h7f1d3h7d3d1d3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5b1c3h7h6g2g4f5h7g1f3e7e6f1d3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5c1e3d8b6d1c1e7e6c2c4d5c4f1c4'\n,'e2e4c7c6d2d4d7d5e4e5c8f5c1e3e7e6b1c3a7a6d1d2b8d7g1e2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5c1e3e7e6b1d2b8d7f1e2d8b6d2b3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5c1e3e7e6b1d2b8d7f2f4h7h5g1f3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5c1e3e7e6b1d2b8d7g1f3d8b6f3h4'\n,'e2e4c7c6d2d4d7d5e4e5c8f5c1e3e7e6b1d2b8d7g1f3d8c7c2c4'\n,'e2e4c7c6d2d4d7d5e4e5c8f5c1e3e7e6b1d2b8d7g1f3f7f6f1d3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5c1e3e7e6b1d2b8d7g1f3f8e7f1e2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5c1e3e7e6b1d2b8d7g1f3g8e7f1e2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5c1e3e7e6b1d2b8d7g1f3g8h6d2b3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5c1e3e7e6b1d2b8d7g1f3g8h6f1e2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5c1e3e7e6c2c3d8b6d1b3b8d7b1d2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5c1e3h7h6b1c3e7e6g2g4f5g6g1e2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5c2c3e7e6c1e3d8b6d1b3b8d7b1d2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5c2c3e7e6f1e2g8e7g1f3h7h6b1d2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3b8d7f1d3f5d3d1d3e7e6b1c3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3b8d7f1d3f5d3d1d3e7e6e1g1'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6b1c3h7h6a2a3g8e7f1e2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2b8d7c2c3g8e7e1g1'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2b8d7c2c3h7h6e1g1'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2b8d7e1g1f5g6a2a4'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2b8d7e1g1f5g6b1c3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2b8d7e1g1f5g6b1d2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2b8d7e1g1f5g6b2b3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2b8d7e1g1f5g6c2c3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2b8d7e1g1f8b4b1d2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2b8d7e1g1g8e7b1c3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2b8d7e1g1g8e7b1d2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2b8d7e1g1g8e7c2c3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2b8d7e1g1g8e7f3h4'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2b8d7e1g1h7h6b1d2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2b8d7e1g1h7h6b2b3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2b8d7e1g1h7h6c2c3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2b8d7e1g1h7h6h2h3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2b8d7h2h3f8b4c2c3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2c6c5c1e3b8d7e1g1'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2c6c5c1e3c5d4f3d4'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2c6c5c1e3g8e7d4c5'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2c6c5e1g1b8c6b1d2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2c6c5e1g1b8c6c2c3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2g8e7b1c3b8d7e1g1'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2g8e7c2c3b8d7e1g1'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2g8e7e1g1f5g6b1c3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2g8e7e1g1h7h6b1d2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2h7h6e1g1b8d7b2b3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2h7h6e1g1b8d7c2c3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6f1e2h7h6e2d3g8e7e1g1'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3e7e6h2h3f8b4c2c3b4a5c1e3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3h7h6b1c3e7e6a2a3g8e7f1e2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3h7h6b1c3e7e6f1d3g8e7a1b1'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3h7h6b1c3e7e6f1d3g8e7e1g1'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3h7h6b1d2b8d7d2b3e7e6a2a4'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3h7h6f1e2e7e6e1g1b8d7e2d3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3h7h6f1e2e7e6e1g1g8e7b1c3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3h7h6f1e2e7e6e1g1g8e7b1d2'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3h7h6f1e2e7e6e2d3g8e7e1g1'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3h7h6f3h4f5h7e5e6g8f6f1d3'\n,'e2e4c7c6d2d4d7d5e4e5c8f5g1f3h7h6f3h4g7g6h4f5g6f5b1c3'\n,'e2e4c7c6d2d4d7d5e4e5g8h6b1c3d8b6g1f3c8g4c1h6g7h6d1d2'\n,'e2e4c7c6d2d4d7d5e4e5h7h6b1c3c8f5g2g4f5h7c1e3e7e6f1d3'\n,'e2e4c7c6d2d4d7d5e4e5h7h6b1c3e7e6g1f3c6c5f1d3g8e7d4c5'\n,'e2e4c7c6d2d4d7d5e4e5h7h6f1d3e7e6g1f3b8d7e1g1g8e7b1c3'\n,'e2e4c7c6d2d4d7d5e4e5h7h6g1f3c8f5b1c3e7e6a2a3g8e7f1d3'\n,'e2e4c7c6d2d4d7d5e4e5h7h6g1f3c8f5b1c3e7e6f1d3f5d3d1d3'\n,'e2e4c7c6d2d4d7d5e4e5h7h6g1f3c8f5f3h4f5h7e5e6g8f6f1d3'\n,'e2e4c7c6d2d4d7d5g1e2d5e4b1c3g8f6e2g3c8g4d1d2g7g6f1c4'\n,'e2e4c7c6d2d4d7d5g1e2d5e4b1c3g8f6e2g3c8g4f1e2g4e2d1e2'\n,'e2e4c7c6d2d4d7d5g1e2d5e4b1c3g8f6e2g3g7g6f1e2f8g7e1g1'\n,'e2e4c7c6d2d4h7h6b1c3d7d5e4e5c8f5g2g4f5h7e5e6f7e6f1d3'\n,'e2e4c7c6d2d4h7h6b1c3d7d5g1f3d5e4c3e4g8f6e4f6e7f6f1c4'\n,'e2e4c7c6d2d4h7h6b1c3d7d5g1f3d5e4c3e4g8f6f1d3f6e4d3e4'\n,'e2e4c7c6d2d4h7h6b1c3d7d6f2f4b8d7g1f3g8f6e4e5f6d5f1d3'\n,'e2e4c7c6d2d4h7h6b1c3g8f6f1d3e7e6g1f3f8e7e1g1d7d6c1f4'\n,'e2e4c7c6d2d4h7h6b1c3g8f6f1d3e7e6g1f3f8e7e4e5f6d5e1g1'\n,'e2e4c7c6d2d4h7h6b1c3g8f6g1f3e7e6f1d3f8e7e4e5f6d5e1g1'\n,'e2e4c7c6d2d4h7h6c2c4g8f6e4e5f6h7f2f4d7d6b1c3g7g5f1e2'\n,'e2e4c7c6d2d4h7h6f1d3d7d5e4e5c6c5d4c5e7e6c1e3b8d7d3b5'\n,'e2e4c7c6d2d4h7h6g1f3d7d5b1c3d5e4c3e4g8f6e4f6e7f6f1c4'\n,'e2e4c7c6d2d4h7h6g1f3d7d5b1c3d5e4c3e4g8f6e4f6e7f6f1d3'\n,'e2e4c7c6d2d4h7h6g1f3d7d5b1c3d5e4c3e4g8f6f1d3f6e4d3e4'\n,'e2e4c7c6d2d4h7h6g1f3d7d5b1c3e7e6e4e5g8e7f1e2c6c5e1g1'\n,'e2e4c7c6d2d4h7h6g1f3d7d5b1d2d5e4d2e4g8f6e4f6e7f6f1d3'\n,'e2e4c7c6d2d4h7h6g1f3d7d5e4e5c8f5b1c3e7e6a2a3g8e7f1d3'\n,'e2e4c7c6d2d4h7h6g1f3d7d5e4e5c8f5b1c3e7e6a2a3g8e7f1e2'\n,'e2e4c7c6d2d4h7h6g1f3d7d5e4e5c8f5b1c3e7e6f1d3g8e7c3e2'\n,'e2e4c7c6d2d4h7h6g1f3d7d5e4e5c8f5b1c3e7e6f1d3g8e7e1g1'\n,'e2e4c7c6d2d4h7h6g1f3d7d5e4e5c8f5f1e2b8a6e1g1e7e6b1c3'\n,'e2e4c7c6d2d4h7h6g1f3d7d5e4e5c8f5f1e2b8d7f3h4f5h7e5e6'\n,'e2e4c7c6d2d4h7h6g1f3d7d5e4e5c8f5f1e2e7e6e1g1g8e7b1c3'\n,'e2e4c7c6d2d4h7h6g1f3d7d5e4e5c8f5f1e2e7e6e1g1g8e7b1d2'\n,'e2e4c7c6d2d4h7h6g1f3d7d5e4e5c8f5f1e2e7e6e1g1g8e7c2c3'\n,'e2e4c7c6d2d4h7h6g1f3d7d5e4e5c8f5f1e2e7e6e2d3f5d3d1d3'\n,'e2e4c7c6d2d4h7h6g1f3d7d5e4e5c8f5f1e2e7e6e2d3g8e7b1c3'\n,'e2e4c7c6d2d4h7h6g1f3d7d5e4e5c8f5f1e2e7e6e2d3g8e7e1g1'\n,'e2e4c7c6d2d4h7h6g1f3d7d5e4e5c8f5f3h4f5h7e5e6g8f6f1d3'\n,'e2e4c7c6d2d4h7h6g1f3d7d5e4e5e7e6b1c3c6c5f1d3g8e7d4c5'\n,'e2e4c7c6d2d4h7h6g1f3d7d5e4e5e7e6f1d3c6c5c2c3g8e7e1g1'\n,'e2e4c7c6d2d4h7h6g1f3d7d5e4e5e7e6f1d3c6c5e1g1g8e7c2c4'\n,'e2e4c7c6d2d4h7h6g1f3d7d5e4e5e7e6f1d3c6c5e1g1g8e7d4c5'\n,'e2e4c7c6d2d4h7h6g1f3g7g5h2h3d7d6f1d3g8f6e1g1f8g7b1c3'\n,'e2e4c7c6d2d4h7h6h2h4d7d5b1c3d5e4c3e4g8f6e4f6g7f6c2c3'\n,'e2e4c7c6d2d4h7h6h2h4g8f6e4e5f6d5c2c4d5b6d4d5d7d6e5e6'\n,'e2e4c7c6g1e2d7d5e4e5c6c5d2d4b8c6c2c3g8h6b1d2e7e6d2f3'\n,'e2e4c7c6g1e2d7d5e4e5d5d4e2g3d8d5b1a3d5e5f1e2h7h5h2h4'\n,'e2e4c7c6g1f3d7d5b1c3c8g4h2h3g4f3d1f3e7e6d2d3g8f6c1d2'\n,'e2e4c7c6g1f3d7d5b1c3c8g4h2h3g4f3d1f3g8f6d2d3d5d4c3d1'\n,'e2e4c7c6g1f3d7d5b1c3c8g4h2h3g4f3d1f3g8f6d2d3e7e6a2a3'\n,'e2e4c7c6g1f3d7d5b1c3c8g4h2h3g4f3d1f3g8f6d2d3e7e6c1d2'\n,'e2e4c7c6g1f3d7d5b1c3d5e4c3e4c8f5e4g3f5g4f1e2g8f6e1g1'\n,'e2e4c7c6g1f3d7d5b1c3d5e4c3e4c8f5f1d3e7e6d1e2g8f6e1g1'\n,'e2e4c7c6g1f3d7d5b1c3d5e4c3e4g8f6e4f6e7f6d2d4c8e6f1d3'\n,'e2e4c7c6g1f3d7d5b1c3d5e4c3e4g8f6e4f6e7f6d2d4f8d6f1d3'\n,'e2e4c7c6g1f3d7d5b1c3d5e4c3e4g8f6e4f6g7f6d2d4b8a6f1c4'\n,'e2e4c7c6g1f3d7d5b1c3d5e4c3e4g8f6e4f6g7f6d2d4c8f5c2c3'\n,'e2e4c7c6g1f3d7d5b1c3g8f6e4e5f6e4d2d4c8g4f1d3e4c3b2c3'\n,'e2e4c7c6g1f3d7d5b1c3g8f6e4e5f6e4d2d4c8g4h2h3g4f5c3e4'\n,'e2e4c7c6g1f3d7d5b1c3g8f6e4e5f6e4d2d4e4c3b2c3g7g6h2h4'\n,'e2e4c7c6g1f3d7d5e4d5c6d5b1c3c8g4h2h3g4f3d1f3e7e6f1d3'\n,'e2e4c7c6g1f3d7d5e4d5c6d5d2d4g8f6f1d3b8c6e1g1g7g6h2h3'\n,'e2e4c7c6g1f3d7d5e4e5c6c5d2d4c8g4c2c3c5d4d1b3d8c7f3d4'\n,'e2e4c7c6g1f3d7d5e4e5c8f5d2d4h7h6f1d3f5d3d1d3d8a5c1d2'\n,'e2e4c7c6g1f3d7d5e4e5c8g4d2d4c6c5c2c3b8c6d4c5e7e6b2b4'\n,'e2e4c7c6g1f3d7d5e4e5c8g4d2d4e7e6b1d2c6c5h2h3g4f3d2f3'\n,'e2e4c7c6g1f3d7d5e4e5c8g4d2d4e7e6c2c3b8d7h2h3g4f3d1f3'\n,'e2e4c7c6g1f3d7d5e4e5c8g4d2d4e7e6c2c3c6c5b1d2c5d4d1a4'\n,'e2e4c7c6g1f3d7d5e4e5c8g4d2d4e7e6c2c3c6c5b1d2c5d4f1b5'\n,'e2e4c7c6g1f3d7d5e4e5c8g4d2d4e7e6f1d3c6c5c2c3g4f3d1f3'\n,'e2e4c7c6g1f3d7d5e4e5h7h6d2d4c8f5f1e2e7e6e1g1g8e7b1d2'\n,'e2e4c7c6g1f3d7d6d2d4g8f6b1c3g7g6h2h3f8g7f1e2e8g8e1g1'\n,'e2e4c7c6g2g3d7d5e4e5f7f6d2d4c6c5g1e2b8c6f1g2c8g4d4c5'\n,'e2e4c7c6h2h3d7d5b1c3d5e4c3e4g8f6e4c3e7e5g1f3f8d6f1e2'\n,'e2e4c7c6h2h3d7d5e4d5c6d5g1f3b8c6d2d4c8f5f1d3f5d3d1d3'\n,'e2e4c7c6h2h3d7d5e4d5c6d5g1f3g7g6d2d4f8g7f1d3b8c6e1g1'\n,'e2e4c7c6h2h3d7d5e4d5c6d5g1f3g8f6d2d4c8f5f1b5b8d7e1g1'\n,'e2e4c7c6h2h3d7d5e4e5c6c5g1f3b8c6f1b5e7e6d2d4c5d4e1g1'\n,'e2e4c7c6h2h3d7d5e4e5c6c5g1f3b8c6f1b5g8h6e1g1e7e6d2d3'\n,'e2e4c7c6h2h3d7d5e4e5c6c5g1f3b8c6f1d3g7g6d3b5e7e6b5c6'\n,'e2e4c7c6h2h3d7d5e4e5c6c5g1f3b8c6f1d3g7g6d3b5e7e6e1g1'\n,'e2e4c7c6h2h3d7d5e4e5c6c5g1f3e7e6d2d4b8c6f1b5g8e7d4c5'\n,'e2e4c7c6h2h3d7d5e4e5c8f5g1f3e7e6a2a3c6c5f1b5b8c6b5c6'\n,'e2e4c7c6h2h3d7d5e4e5c8f5g1f3e7e6d2d4b8d7b1c3f8b4f1d3'\n,'e2e4c7c6h2h3d7d5e4e5c8f5g1f3e7e6d2d4b8d7f1e2f8b4c2c3'\n,'e2e4c7c6h2h3d7d5e4e5c8f5g1f3e7e6d2d4f8b4c1d2b4a5f1e2'\n,'e2e4c7c6h2h3d7d5e4e5c8f5g1f3e7e6d2d4f8b4c2c3b4a5c1e3'\n,'e2e4c7c6h2h3d7d5e4e5c8f5g1f3e7e6d2d4h7h6a2a3b8d7b1c3'\n,'e2e4c7c6h2h3d7d5e4e5c8f5g1f3e7e6f1e2c6c5e1g1b8c6b1a3'\n,'e2e4c7c6h2h3e7e5d2d4g8f6d4e5f6e4d1e2e4c5b1c3b8a6g1f3'\n,'e2e4c7c6h2h3g8f6e4e5f6d5c2c4d5b4d2d4c6c5d4c5b8c6g1f3'\n,'e2e4c7c6h2h3g8f6e4e5f6d5c2c4d5c7d2d4d7d6e5d6d8d6g1f3'\n,'e2e4d7d5b1c3g8f6e4d5f6d5f1c4d5c3b2c3b8d7g1f3d7b6c4b3'\n,'e2e4d7d5e4d5d8d5b1c3d5a5d2d4c7c6g1f3c8e6f1d3b8a6e1g1'\n,'e2e4d7d5e4d5d8d5b1c3d5a5d2d4c7c6g1f3g8f6f1c4c8g4h2h3'\n,'e2e4d7d5e4d5d8d5b1c3d5a5d2d4g8f6g1f3c7c6f1c4c8f5c1d2'\n,'e2e4d7d5e4d5d8d5b1c3d5d6d2d4g7g6g1f3f8g7c3b5d6b6c2c4'\n,'e2e4d7d5e4d5d8d5b1c3d5d6d2d4g7g6g1f3f8g7f1c4g8f6e1g1'\n,'e2e4d7d5e4d5d8d5b1c3d5d6d2d4g7g6g1f3f8g7g2g3g8f6f1g2'\n,'e2e4d7d5e4d5d8d5b1c3d5d6d2d4g7g6g1f3g8f6c3b5d6b6c2c4'\n,'e2e4d7d5e4d5d8d5b1c3d5d6d2d4g7g6g1f3g8f6c3b5d6d8c2c4'\n,'e2e4d7d5e4d5d8d5b1c3d5d6d2d4g7g6g1f3g8f6c3b5d6d8f1c4'\n,'e2e4d7d5e4d5d8d5b1c3d5d6d2d4g7g6g1f3g8f6g2g3f8g7f1g2'\n,'e2e4d7d5e4d5d8d5b1c3d5d6d2d4g7g6g2g3f8g7g1f3g8f6f1g2'\n,'e2e4d7d5e4d5d8d5b1c3d5d6d2d4g8f6g1f3g7g6c3b5d6b6c2c4'\n,'e2e4d7d5e4d5d8d5b1c3d5d6f1c4c8e6c3b5d6c6c4e6c6b5e6b3'\n,'e2e4d7d5e4d5d8d5b1c3d5d6f1c4g8f6d2d3c8e6d1e2e6c4d3c4'\n,'e2e4d7d5e4d5d8d5b1c3d5d6g1f3g8f6d2d4g7g6c3b5d6b6c2c4'\n,'e2e4d7d5e4d5g8f6d2d4c8g4f2f3g4f5g2g4f5g6c2c4e7e6b1c3'\n,'e2e4d7d5e4d5g8f6d2d4d8d5b1c3d5d6g1f3a7a6f1d3c8g4c3e4'\n,'e2e4d7d5e4d5g8f6d2d4d8d5g1f3b8c6b1c3d5a5f1b5f6d5a2a4'\n,'e2e4d7d5e4d5g8f6d2d4f6d5g1f3c8g4f1e2e7e6e1g1c7c5c2c4'\n,'e2e4d7d5e4d5g8f6d2d4f6d5g1f3g7g6c2c4d5b6b1c3f8g7c4c5'\n,'e2e4d7d5e4d5g8f6d2d4g7g6c2c4c7c6d5c6b8c6d4d5c6e5d1d4'\n,'e2e4d7d5e4d5g8f6f1b5c8d7b5c4b7b5c4b3c7c6d5c6b8c6g1f3'\n,'e2e4d7d5e4d5g8f6f1b5c8d7b5c4d7g4g1f3f6d5e1g1e7e6h2h3'\n,'e2e4d7d5e4d5g8f6g1f3d8d5b1c3d5d6d2d4a7a6f1c4b7b5c4d3'\n,'e2e4d7d5e4d5g8f6g1f3f6d5d2d4c8g4f1e2b8c6e1g1d5f6c1e3'\n,'e2e4d7d5e4d5g8f6g1f3f6d5d2d4g7g6c2c4d5b6b1c3f8g7h2h3'\n,'e2e4d7d5e4d5g8f6g1f3f6d5d2d4g7g6c2c4d5f6b1c3f8g7h2h3'\n,'e2e4d7d6d2d4b8d7b1c3g7g6g1f3f8g7f1c4d7b6c4b3a7a5a2a4'\n,'e2e4d7d6d2d4g7g6b1c3f8g7f2f4g8f6g1f3c7c5f1b5c8d7e4e5'\n,'e2e4d7d6d2d4g7g6b1c3f8g7g1f3g8f6f1e2e8g8e1g1c7c6a2a4'\n,'e2e4d7d6d2d4g7g6b1c3g8f6c1e3f8g7f2f3e8g8d1d2b8c6e1c1'\n,'e2e4d7d6d2d4g7g6g1f3f8g7b1c3c7c6f1c4g8f6c4b3b8a6e1g1'\n,'e2e4d7d6d2d4g7g6g1f3g8f6b1c3f8g7f1e2e8g8e1g1c8g4c1e3'\n,'e2e4d7d6d2d4g8f6b1c3c7c5d4c5d8a5c5d6e7d6g1f3f8e7c1d2'\n,'e2e4d7d6d2d4g8f6b1c3g7g6f2f4f8g7g1f3e8g8f1d3b8a6e1g1'\n,'e2e4d7d6d2d4g8f6b1c3g7g6g1f3a7a6f1c4f8g7d1e2b8c6h2h3'\n,'e2e4d7d6d2d4g8f6b1c3g7g6g1f3f8g7f1e2e8g8e1g1a7a6c1g5'\n,'e2e4d7d6d2d4g8f6b1c3g7g6g1f3f8g7f1e2e8g8e1g1c7c6a2a4'\n,'e2e4d7d6g1f3c7c5d2d4c5d4f3d4g8f6b1c3g7g6c1e3f8g7f2f3'\n,'e2e4e7e5b1c3g8f6a2a3b8c6g1f3g7g6f1c4f8g7d2d3d7d6e1g1'\n,'e2e4e7e5b1c3g8f6g1f3b8c6f1b5f8b4e1g1e8g8d2d3d7d6c1g5'\n,'e2e4e7e5b1c3g8f6h2h3f8b4a2a3b4c3d2c3e8g8d1f3d7d5e4d5'\n,'e2e4e7e5f1c4g8f6g1f3b8c6f3g5d7d5e4d5c6a5c4b5c7c6d5c6'\n,'e2e4e7e5f2f4d7d5e4d5e5e4d2d3g8f6d3e4f6e4g1f3f8c5d1e2'\n,'e2e4e7e5f2f4e5f4g1f3g7g5h2h4g5g4f3g5f4f3g2f3h7h6g5f7'\n,'e2e4e7e5g1f3b8c6b1c3g8f6d2d4e5d4f3d4f8b4d4c6b7c6f1d3'\n,'e2e4e7e5g1f3b8c6b1c3g8f6f1b5f8b4e1g1e8g8d2d3d7d6c1g5'\n,'e2e4e7e5g1f3b8c6b1c3g8f6f3e5c6e5d2d4e5g6e4e5f6g8f1c4'\n,'e2e4e7e5g1f3b8c6b1c3g8f6h2h3f8c5f3e5c6e5d2d4c5d6d4e5'\n,'e2e4e7e5g1f3b8c6c2c4g8f6b1c3f8b4d2d3e8g8f1e2d7d6c1e3'\n,'e2e4e7e5g1f3b8c6d2d4e5d4f3d4f8c5c1e3d8f6c2c3g8e7f1c4'\n,'e2e4e7e5g1f3b8c6d2d4e5d4f3d4g8f6b1c3f8b4d4c6b7c6f1d3'\n,'e2e4e7e5g1f3b8c6d2d4e5d4f3d4g8f6d4c6b7c6e4e5d8e7d1e2'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4d7d6a4c6b7c6d2d4f7f6c1e3'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4d7d6c2c3c8d7e1g1g8e7d2d4'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4f8c5e1g1g8f6c2c3e8g8d2d4'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4f8e7e1g1g8f6a4c6d7c6d2d3'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4f8e7e1g1g8f6f1e1b7b5a4b3'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4g8f6d1e2f8c5a4c6b7c6e1g1'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4g8f6e1g1b7b5a4b3c8b7f1e1'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4g8f6e1g1b7b5a4b3d7d6c2c3'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4g8f6e1g1b7b5a4b3d7d6f1e1'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4g8f6e1g1b7b5a4b3d7d6f3g5'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4g8f6e1g1b7b5a4b3f8c5a2a4'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4g8f6e1g1b7b5a4b3f8c5c2c3'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4g8f6e1g1d7d6b1c3f8e7a4c6'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4g8f6e1g1f6e4d2d4b7b5a4b3'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4g8f6e1g1f8c5c2c3b7b5a4c2'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4g8f6e1g1f8c5c2c3c5a7a4c6'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4g8f6e1g1f8c5c2c3c5b6d2d4'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4g8f6e1g1f8c5c2c3e8g8d2d4'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4g8f6e1g1f8e7a4c6d7c6b1c3'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4g8f6e1g1f8e7a4c6d7c6d2d3'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5a4g8f6e1g1f8e7f1e1b7b5a4b3'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5c6d7c6d2d4e5d4d1d4d8d4f3d4'\n,'e2e4e7e5g1f3b8c6f1b5a7a6b5c6d7c6e1g1f7f6d2d4e5d4f3d4'\n,'e2e4e7e5g1f3b8c6f1b5c6d4f3d4e5d4e1g1c7c6b5d3d7d5e4e5'\n,'e2e4e7e5g1f3b8c6f1b5d7d6e1g1g8f6d2d4f8e7d4e5d6e5d1d8'\n,'e2e4e7e5g1f3b8c6f1b5f7f5b1c3f5e4c3e4d7d5f3e5d5e4e5c6'\n,'e2e4e7e5g1f3b8c6f1b5f7f5b1c3f5e4c3e4g8f6d1e2d7d5e4f6'\n,'e2e4e7e5g1f3b8c6f1b5f7f5b1c3g8f6e4f5f8c5e1g1e8g8d2d3'\n,'e2e4e7e5g1f3b8c6f1b5f8c5c2c3c5b6e1g1g8f6d2d4e8g8c1g5'\n,'e2e4e7e5g1f3b8c6f1b5f8c5c2c3f7f5d2d4f5e4b5c6d7c6f3e5'\n,'e2e4e7e5g1f3b8c6f1b5f8c5c2c3g8f6d2d4c5b6e1g1e8g8c1g5'\n,'e2e4e7e5g1f3b8c6f1b5f8c5c2c3g8f6e1g1c5b6d2d4e8g8c1g5'\n,'e2e4e7e5g1f3b8c6f1b5f8c5c2c3g8f6e1g1c5b6d2d4e8g8d4e5'\n,'e2e4e7e5g1f3b8c6f1b5f8c5c2c3g8f6e1g1e8g8d2d4c5b6c1g5'\n,'e2e4e7e5g1f3b8c6f1b5f8c5c2c3g8f6e1g1e8g8d2d4c5b6d4e5'\n,'e2e4e7e5g1f3b8c6f1b5f8c5e1g1d8f6c2c3g8e7f1e1e8g8d2d4'\n,'e2e4e7e5g1f3b8c6f1b5f8c5e1g1d8f6d2d3g8e7c1g5f6d6b1d2'\n,'e2e4e7e5g1f3b8c6f1b5f8c5e1g1g8e7c2c3c5b6d2d4e5d4c3d4'\n,'e2e4e7e5g1f3b8c6f1b5f8c5e1g1g8e7c2c3d7d5d2d4e5d4c3d4'\n,'e2e4e7e5g1f3b8c6f1b5f8c5e1g1g8f6c2c3e8g8d2d4c5b6c1g5'\n,'e2e4e7e5g1f3b8c6f1b5f8c5e1g1g8f6f3e5f6e4d1e2c6e5d2d4'\n,'e2e4e7e5g1f3b8c6f1b5f8d6e1g1g8e7c2c3a7a6b5e2e7g6d2d4'\n,'e2e4e7e5g1f3b8c6f1b5f8d6e1g1g8e7c2c3a7a6b5e2e8g8d2d4'\n,'e2e4e7e5g1f3b8c6f1b5g7g6b1c3f8g7e1g1g8e7d2d3c6d4b5c4'\n,'e2e4e7e5g1f3b8c6f1b5g7g6b5c6d7c6d2d3f8g7c1e3g8f6e1g1'\n,'e2e4e7e5g1f3b8c6f1b5g7g6b5c6d7c6e1g1f8g7b1c3g8e7d2d3'\n,'e2e4e7e5g1f3b8c6f1b5g7g6d2d4e5d4c1g5f8e7g5e7d8e7b5c6'\n,'e2e4e7e5g1f3b8c6f1b5g7g6e1g1f8g7b5c6b7c6d2d3d7d6h2h3'\n,'e2e4e7e5g1f3b8c6f1b5g7g6e1g1f8g7c2c3g8f6d2d4e8g8f1e1'\n,'e2e4e7e5g1f3b8c6f1b5g7g6e1g1f8g7d2d3d7d6b1c3g8f6c1g5'\n,'e2e4e7e5g1f3b8c6f1b5g8f6b1c3c6d4b5a4f8c5f3e5e8g8e5d3'\n,'e2e4e7e5g1f3b8c6f1b5g8f6b1c3f8b4e1g1e8g8d2d3d7d6c1g5'\n,'e2e4e7e5g1f3b8c6f1b5g8f6b1c3f8b4e1g1e8g8d2d3d7d6h2h3'\n,'e2e4e7e5g1f3b8c6f1b5g8f6d2d3f8c5e1g1d7d6b1c3a7a6b5c4'\n,'e2e4e7e5g1f3b8c6f1b5g8f6e1g1f6e4d2d4a7a6b5c6d7c6f1e1'\n,'e2e4e7e5g1f3b8c6f1b5g8f6e1g1f6e4d2d4e4d6b5c6d7c6d4e5'\n,'e2e4e7e5g1f3b8c6f1b5g8f6e1g1f6e4d2d4e5d4f1e1d7d5d1d4'\n,'e2e4e7e5g1f3b8c6f1b5g8f6e1g1f6e4d2d4f8e7d1e2e4d6b5c6'\n,'e2e4e7e5g1f3b8c6f1b5g8f6e1g1f6e4f1e1e4d6b5a4b7b5a4b3'\n,'e2e4e7e5g1f3b8c6f1b5g8f6e1g1f8c5b1c3e8g8f3e5f8e8e5f3'\n,'e2e4e7e5g1f3b8c6f1b5g8f6e1g1f8c5c2c3e8g8d2d4c5b6c1g5'\n,'e2e4e7e5g1f3b8c6f1b5g8f6e1g1f8c5f3e5c6d4b5a4b7b5c2c3'\n,'e2e4e7e5g1f3b8c6f1b5g8f6e1g1f8c5f3e5e8g8b5c6d7c6d2d3'\n,'e2e4e7e5g1f3b8c6f1b5g8f6e1g1f8c5f3e5f6e4d1e2c6e5e2e4'\n,'e2e4e7e5g1f3b8c6f1b5g8f6e1g1f8d6d2d4d8e7d4d5a7a6b5d3'\n,'e2e4e7e5g1f3b8c6f1b5g8f6e1g1f8d6d2d4d8e7d4e5d6e5f3e5'\n,'e2e4e7e5g1f3b8c6f1b5g8f6e1g1f8e7b1c3e8g8b5c6d7c6f3e5'\n,'e2e4e7e5g1f3b8c6f1c4f8c5c2c3g8f6d2d3d7d6e1g1e8g8c4b3'\n,'e2e4e7e5g1f3b8c6f1c4g8f6d2d3f8c5c2c3a7a6e1g1d7d6c4b3'\n,'e2e4e7e5g1f3b8c6f1c4g8f6d2d3f8c5c2c3e8g8e1g1d7d6c4b3'\n,'e2e4e7e5g1f3b8c6f1c4g8f6f3g5d7d5e4d5c6a5c4b5c7c6d5c6'\n,'e2e4e7e5g1f3d7d5e4d5e5e4d1e2g8f6d2d3f8c5d3e4e8g8b1c3'\n,'e2e4e7e5g1f3d7d5e4d5e5e4d1e2g8f6d2d3f8c5d3e4e8g8c1g5'\n,'e2e4e7e5g1f3d7d5e4d5f8d6b1c3g8f6f1c4c7c6e1g1b7b5c4b3'\n,'e2e4e7e5g1f3d7d5e4d5f8d6f1b5c7c6d5c6b7c6b5d3g8f6e1g1'\n,'e2e4e7e5g1f3d7d5e4d5f8d6f1b5c7c6d5c6b8c6e1g1g8f6d2d3'\n,'e2e4e7e5g1f3d7d6d2d4b8c6f1b5g8e7d4d5a7a6b5e2c6b8b1c3'\n,'e2e4e7e5g1f3d7d6d2d4e5d4f3d4g8f6b1c3f8e7f1e2e8g8e1g1'\n,'e2e4e7e5g1f3d7d6d2d4g8f6b1c3b8d7f1c4f8e7d1e2e8g8e1g1'\n,'e2e4e7e5g1f3d7d6d2d4g8f6b1c3b8d7f1c4f8e7e1g1e8g8f1e1'\n,'e2e4e7e5g1f3d7d6d2d4g8f6b1c3e5d4f3d4g7g6c1e3f6g4e3f4'\n,'e2e4e7e5g1f3d7d6d2d4g8f6d4e5f6e4d1d5e4c5c1g5f8e7e5d6'\n,'e2e4e7e5g1f3d7d6f1c4b8c6d2d4f8e7d4e5d6e5d1d8e7d8b1c3'\n,'e2e4e7e5g1f3d7d6f1c4d8e7b1c3c7c6d2d4b7b5c4b3g8f6e1g1'\n,'e2e4e7e5g1f3g8f6b1c3b8c6a2a3g7g6f1c4f8g7d2d3d7d6c1e3'\n,'e2e4e7e5g1f3g8f6b1c3b8c6f1b5c6d4b5a4c7c6d2d3f8b4e1g1'\n,'e2e4e7e5g1f3g8f6b1c3b8c6f1b5c6d4b5a4c7c6f3e5d7d5e1g1'\n,'e2e4e7e5g1f3g8f6b1c3b8c6f1b5f8b4e1g1e8g8d2d3d7d6b5c6'\n,'e2e4e7e5g1f3g8f6b1c3b8c6h2h3f8b4c3d5b4a5f1d3d7d6c2c3'\n,'e2e4e7e5g1f3g8f6b1c3f8b4f1c4e8g8e1g1b8c6c3d5f6e4d2d3'\n,'e2e4e7e5g1f3g8f6b1c3f8b4f1c4e8g8e1g1d7d6c3d5f6d5c4d5'\n,'e2e4e7e5g1f3g8f6d2d4d7d6b1c3b8d7f1c4f8e7e1g1e8g8f1e1'\n,'e2e4e7e5g1f3g8f6d2d4d7d6b1c3e5d4f3d4f8e7c1f4e8g8f1e2'\n,'e2e4e7e5g1f3g8f6d2d4d7d6b1c3e5d4f3d4g7g6c1e3f8g7d1d2'\n,'e2e4e7e5g1f3g8f6d2d4e5d4e4e5f6e4d1d4d7d5e5d6e4d6b1c3'\n,'e2e4e7e5g1f3g8f6d2d4e5d4e4e5f6e4d1d4d7d5e5d6e4d6f1d3'\n,'e2e4e7e5g1f3g8f6d2d4e5d4f1c4b8c6e4e5d7d5c4b5f6e4f3d4'\n,'e2e4e7e5g1f3g8f6d2d4f6e4f1d3b8c6d3e4d7d5c1g5d8d7e4d3'\n,'e2e4e7e5g1f3g8f6d2d4f6e4f1d3b8c6e1g1d7d5d4e5f8e7b1c3'\n,'e2e4e7e5g1f3g8f6d2d4f6e4f1d3b8c6e1g1d7d5f3e5c6e5d4e5'\n,'e2e4e7e5g1f3g8f6d2d4f6e4f1d3d7d5f3e5b8d7e1g1d7e5d4e5'\n,'e2e4e7e5g1f3g8f6d2d4f6e4f1d3d7d5f3e5b8d7e5d7c8d7e1g1'\n,'e2e4e7e5g1f3g8f6f3e5d7d6e5d3f6e4d1e2d8e7b2b3b8c6c1b2'\n,'e2e4e7e5g1f3g8f6f3e5d7d6e5f3f6e4b1c3e4c3d2c3f8e7c1f4'\n,'e2e4e7e5g1f3g8f6f3e5d7d6e5f3f6e4d2d4d6d5f1d3b8c6e1g1'\n,'e2e4e7e5g1f3g8f6f3e5d7d6e5f3f6e4d2d4d6d5f1d3f8e7b1c3'\n,'e2e4e7e5g1f3g8f6f3e5d7d6e5f3f6e4d2d4d6d5f1d3f8e7e1g1'\n,'e2e4e7e5h2h3b8c6g1f3g8f6b1c3f8b4c3d5e8g8c2c3b4c5d5f6'\n,'e2e4e7e6b1c3b8c6d2d4d7d5g1f3g8f6c1g5f8e7g5f6e7f6f1b5'\n,'e2e4e7e6b1c3b8c6d2d4d7d5g1f3g8f6e4e5f6e4f1d3f8b4c1d2'\n,'e2e4e7e6b1c3c7c5g1e2b8c6d2d4c5d4e2d4d8c7c1e3a7a6f1e2'\n,'e2e4e7e6b1c3c7c5g1e2b8c6d2d4c5d4e2d4d8c7f1e2a7a6c1e3'\n,'e2e4e7e6b1c3c7c5g1f3a7a6g2g3b7b5f1g2c8b7d2d3d7d6e1g1'\n,'e2e4e7e6b1c3c7c5g1f3b8c6d2d4c5d4f3d4a7a6d4c6b7c6f1d3'\n,'e2e4e7e6b1c3c7c5g1f3b8c6d2d4c5d4f3d4d7d6c1e3g8f6f2f3'\n,'e2e4e7e6b1c3c7c5g1f3b8c6d2d4c5d4f3d4d8c7c1e3a7a6d1f3'\n,'e2e4e7e6b1c3c7c5g1f3b8c6d2d4c5d4f3d4d8c7c1e3a7a6d4c6'\n,'e2e4e7e6b1c3c7c5g1f3b8c6d2d4c5d4f3d4d8c7c1e3a7a6f1e2'\n,'e2e4e7e6b1c3c7c5g1f3b8c6d2d4c5d4f3d4d8c7f1e2a7a6e1g1'\n,'e2e4e7e6b1c3c7c5g1f3b8c6d2d4c5d4f3d4g8f6d4b5f8b4c1f4'\n,'e2e4e7e6b1c3d7d5d2d3b8c6e4d5e6d5d3d4g8f6g1f3f8b4f1b5'\n,'e2e4e7e6b1c3d7d5d2d3b8c6g1f3d5d4c3e2g8f6c2c3d4c3b2c3'\n,'e2e4e7e6b1c3d7d5d2d4b8c6e4e5g8e7g1f3e7f5f1b5c8d7e1g1'\n,'e2e4e7e6b1c3d7d5d2d4b8c6g1f3g8f6c1g5f8e7g5f6e7f6f1b5'\n,'e2e4e7e6b1c3d7d5d2d4d5e4c3e4b8d7f1b5g8f6e4f6d8f6g1f3'\n,'e2e4e7e6b1c3d7d5d2d4d5e4c3e4b8d7f1d3g8f6g1f3f6e4d3e4'\n,'e2e4e7e6b1c3d7d5d2d4d5e4c3e4b8d7g1f3g8f6c1g5h7h6e4f6'\n,'e2e4e7e6b1c3d7d5d2d4f8b4e4e5c7c5a2a3b4c3b2c3d8c7d1g4'\n,'e2e4e7e6b1c3d7d5d2d4f8b4e4e5c7c5a2a3b4c3b2c3d8c7g1f3'\n,'e2e4e7e6b1c3d7d5d2d4f8b4e4e5c7c5a2a3b4c3b2c3g8e7d1g4'\n,'e2e4e7e6b1c3d7d5d2d4g8f6c1g5d5e4c3e4b8d7g1f3h7h6e4f6'\n,'e2e4e7e6b1c3d7d5d2d4g8f6c1g5f8b4e4e5h7h6g5e3f6e4d1g4'\n,'e2e4e7e6b1c3d7d5d2d4g8f6c1g5f8b4e4e5h7h6g5h4g7g5h4g3'\n,'e2e4e7e6b1c3d7d5d2d4g8f6c1g5f8e7e4e5f6d7g5e7d8e7f2f4'\n,'e2e4e7e6b1c3d7d5d2d4g8f6c1g5f8e7e4e5f6d7h2h4e7g5h4g5'\n,'e2e4e7e6b1c3d7d5d2d4g8f6c1g5f8e7e4e5f6d7h2h4e8g8d1h5'\n,'e2e4e7e6b1c3d7d5d2d4g8f6e4e5f6d7f2f4c7c5g1f3b8c6c1e3'\n,'e2e4e7e6b1c3d7d5g1f3g8f6e4d5e6d5d2d4f8d6f1d3e8g8e1g1'\n,'e2e4e7e6b2b3b8c6g1f3d7d5e4e5g8e7d2d4e7f5c2c3f7f6f1b5'\n,'e2e4e7e6b2b3b8c6g1f3d7d5f1d3d5e4d3e4c8d7b1c3g8f6c1b2'\n,'e2e4e7e6c2c3d7d5e4e5f7f6d2d4f6e5d4e5g8e7f1d3b8d7d1e2'\n,'e2e4e7e6c2c3d7d5e4e5g8e7d2d4c7c5g1f3b8d7f1d3e7c6e1g1'\n,'e2e4e7e6c2c3g8f6e4e5f6d5c3c4d5b6d2d4c7c5d4c5f8c5d1g4'\n,'e2e4e7e6c2c4b8c6d2d4g8f6b1c3f8b4f2f3e8g8a2a3b4c3b2c3'\n,'e2e4e7e6c2c4d7d5c4d5e6d5e4e5c7c5g1f3b8c6f1b5g8e7e1g1'\n,'e2e4e7e6d1e2b8c6g1f3f8e7d2d4d7d5e4e5h7h5b1c3b7b6h2h4'\n,'e2e4e7e6d1e2b8c6g1f3f8e7g2g3d7d5d2d3e6e5e4d5d8d5c1e3'\n,'e2e4e7e6d1e2c7c5b1a3b8c6c2c3f8e7g1f3d7d5e4e5g8h6d2d3'\n,'e2e4e7e6d1e2c7c5c2c3b8c6g1f3g8f6g2g3d7d5e4d5d8d5f1g2'\n,'e2e4e7e6d1e2c7c5g1f3b8c6d2d3g8f6c2c3f8e7e4e5f6d5b1d2'\n,'e2e4e7e6d1e2c7c5g2g3b8c6g1f3g7g6f1g2f8g7e1g1g8e7d2d3'\n,'e2e4e7e6d1e2f8e7g1f3d7d5d2d3g8f6e4e5f6d7g2g3c7c5f1g2'\n,'e2e4e7e6d2d4a7a6g1f3d7d5b1c3f8b4e4e5g8e7a2a3b4c3b2c3'\n,'e2e4e7e6d2d4c7c5g1f3c5d4f3d4f8c5d4b3c5b6b1c3g8e7c1f4'\n,'e2e4e7e6d2d4d7d5b1c3b8c6e4e5f7f6g1f3c8d7f1d3d8e7e1g1'\n,'e2e4e7e6d2d4d7d5b1c3b8c6e4e5g8e7g1f3b7b6f1d3e7f5c3e2'\n,'e2e4e7e6d2d4d7d5b1c3b8c6g1f3g8f6c1g5f8b4e4e5h7h6g5h4'\n,'e2e4e7e6d2d4d7d5b1c3b8c6g1f3g8f6c1g5f8e7e4e5f6e4g5e7'\n,'e2e4e7e6d2d4d7d5b1c3b8c6g1f3g8f6c1g5f8e7g5f6e7f6f1b5'\n,'e2e4e7e6d2d4d7d5b1c3b8c6g1f3g8f6e4e5f6e4c3e2f7f6e2g3'\n,'e2e4e7e6d2d4d7d5b1c3b8c6g1f3g8f6e4e5f6e4f1d3f8b4c1d2'\n,'e2e4e7e6d2d4d7d5b1c3b8c6g1f3g8f6f1d3f8b4c1g5d5e4d3e4'\n,'e2e4e7e6d2d4d7d5b1c3b8c6g1f3g8f6f1d3f8b4e1g1b4c3e4d5'\n,'e2e4e7e6d2d4d7d5b1c3b8c6g1f3g8f6f1d3f8b4e4e5f6e4c1d2'\n,'e2e4e7e6d2d4d7d5b1c3d5e4c3e4b8d7f1b5g8f6e4f6d8f6g1f3'\n,'e2e4e7e6d2d4d7d5b1c3d5e4c3e4b8d7f1d3g8f6d1e2c7c5e4f6'\n,'e2e4e7e6d2d4d7d5b1c3d5e4c3e4b8d7f1d3g8f6e4f6d7f6c1g5'\n,'e2e4e7e6d2d4d7d5b1c3d5e4c3e4b8d7f1d3g8f6e4f6d7f6g1f3'\n,'e2e4e7e6d2d4d7d5b1c3d5e4c3e4b8d7f1d3g8f6g1f3c7c5e4f6'\n,'e2e4e7e6d2d4d7d5b1c3d5e4c3e4b8d7f1d3g8f6g1f3f6e4d3e4'\n,'e2e4e7e6d2d4d7d5b1c3d5e4c3e4b8d7g1f3g8f6c1g5h7h6e4f6'\n,'e2e4e7e6d2d4d7d5b1c3d5e4c3e4b8d7g1f3g8f6c1g5h7h6g5f6'\n,'e2e4e7e6d2d4d7d5b1c3d5e4c3e4b8d7g1f3g8f6c1g5h7h6g5h4'\n,'e2e4e7e6d2d4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4f6d7f6c1g5'\n,'e2e4e7e6d2d4d7d5b1c3d5e4c3e4b8d7g1f3g8f6e4f6d7f6f1d3'\n,'e2e4e7e6d2d4d7d5b1c3d5e4c3e4c8d7g1f3d7c6f1d3b8d7e1g1'\n,'e2e4e7e6d2d4d7d5b1c3d5e4c3e4g8f6c1g5b8d7g1f3h7h6e4f6'\n,'e2e4e7e6d2d4d7d5b1c3d5e4c3e4g8f6c1g5f8e7e4f6e7f6g5f6'\n,'e2e4e7e6d2d4d7d5b1c3d5e4c3e4g8f6c1g5f8e7g5f6e7f6g1f3'\n,'e2e4e7e6d2d4d7d5b1c3d5e4c3e4g8f6e4f6d8f6g1f3h7h6f1d3'\n,'e2e4e7e6d2d4d7d5b1c3d5e4c3e4g8f6f1d3f8e7g1f3b8d7e4f6'\n,'e2e4e7e6d2d4d7d5b1c3f8b4e4e5c7c5a2a3b4c3b2c3b8c6d1g4'\n,'e2e4e7e6d2d4d7d5b1c3f8b4e4e5c7c5a2a3b4c3b2c3b8c6g1f3'\n,'e2e4e7e6d2d4d7d5b1c3f8b4e4e5c7c5a2a3b4c3b2c3d8a5c1d2'\n,'e2e4e7e6d2d4d7d5b1c3f8b4e4e5c7c5a2a3b4c3b2c3d8c7d1g4'\n,'e2e4e7e6d2d4d7d5b1c3f8b4e4e5c7c5a2a3b4c3b2c3d8c7g1f3'\n,'e2e4e7e6d2d4d7d5b1c3f8b4e4e5c7c5a2a3b4c3b2c3g8e7d1g4'\n,'e2e4e7e6d2d4d7d5b1c3f8b4e4e5c7c5a2a3b4c3b2c3g8e7g1f3'\n,'e2e4e7e6d2d4d7d5b1c3f8b4e4e5c7c5d1g4g8e7g1f3c5d4f3d4'\n,'e2e4e7e6d2d4d7d5b1c3f8b4e4e5d8d7c1d2b7b6g1h3g8e7h3f4'\n,'e2e4e7e6d2d4d7d5b1c3f8b4e4e5g8e7a2a3b4c3b2c3c7c5d1g4'\n,'e2e4e7e6d2d4d7d5b1c3f8b4e4e5g8e7a2a3b4c3b2c3e8g8f1d3'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5b8c6e4e5h7h6g5e3f6d7d1g4'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5b8c6e4e5h7h6g5e3f6g8f1d3'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5b8c6g1f3f8e7e4e5f6e4g5e7'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5b8c6g1f3f8e7g5f6e7f6f1b5'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5d5e4c3e4b8d7d1f3f8e7e1c1'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5d5e4c3e4b8d7e4f6d7f6f1d3'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5d5e4c3e4b8d7e4f6d7f6g1f3'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5d5e4c3e4b8d7g1f3h7h6e4f6'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5d5e4c3e4b8d7g1f3h7h6g5h4'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5d5e4c3e4f8e7g5f6e7f6g1f3'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5d5e4c3e4f8e7g5f6g7f6g1f3'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5f8b4e4e5h7h6e5f6h6g5f6g7'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5f8b4e4e5h7h6g5d2b4c3b2c3'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5f8b4e4e5h7h6g5e3f6e4d1g4'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5f8b4e4e5h7h6g5h4g7g5h4g3'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5f8e7e4e5f6d7g5e7d8e7f2f4'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5f8e7e4e5f6d7h2h4e7g5h4g5'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5f8e7e4e5f6d7h2h4e8g8d1g4'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5f8e7e4e5f6d7h2h4e8g8d1h5'\n,'e2e4e7e6d2d4d7d5b1c3g8f6c1g5f8e7e4e5f6d7h2h4e8g8f1d3'\n,'e2e4e7e6d2d4d7d5b1c3g8f6e4d5e6d5c1g5b8c6g1f3f8b4f1b5'\n,'e2e4e7e6d2d4d7d5b1c3g8f6e4d5e6d5g1f3b8c6f1b5f8d6e1g1'\n,'e2e4e7e6d2d4d7d5b1c3g8f6e4d5e6d5g1f3f8d6f1d3e8g8e1g1'\n,'e2e4e7e6d2d4d7d5b1c3g8f6e4d5f6d5g1f3d5c3b2c3c7c5f1c4'\n,'e2e4e7e6d2d4d7d5b1c3g8f6e4e5f6d7c3e2c7c5c2c3b8c6f2f4'\n,'e2e4e7e6d2d4d7d5b1c3g8f6e4e5f6d7f2f4c7c5g1f3b8c6c1e3'\n,'e2e4e7e6d2d4d7d5b1d2b8c6g1f3g7g6f1d3g8e7e1g1f8g7c2c3'\n,'e2e4e7e6d2d4d7d5b1d2b8c6g1f3g8f6e4e5f6d7f1e2f7f6e5f6'\n,'e2e4e7e6d2d4d7d5b1d2b8c6g1f3g8f6e4e5f6d7f1e2f8e7e1g1'\n,'e2e4e7e6d2d4d7d5b1d2c7c5e4d5d8d5g1f3c5d4f1c4d5d6e1g1'\n,'e2e4e7e6d2d4d7d5b1d2c7c5e4d5e6d5f1b5b8c6g1f3f8d6d4c5'\n,'e2e4e7e6d2d4d7d5b1d2c7c5e4d5e6d5f1b5c8d7d1e2f8e7d4c5'\n,'e2e4e7e6d2d4d7d5b1d2c7c5e4d5e6d5g1f3b8c6f1b5d8e7b5e2'\n,'e2e4e7e6d2d4d7d5b1d2c7c5e4d5e6d5g1f3b8c6f1b5f8d6d4c5'\n,'e2e4e7e6d2d4d7d5b1d2c7c5e4d5e6d5g1f3g8f6f1b5c8d7b5d7'\n,'e2e4e7e6d2d4d7d5b1d2c7c5g1f3b8c6e4d5e6d5f1b5d8e7b5e2'\n,'e2e4e7e6d2d4d7d5b1d2c7c5g1f3b8c6e4d5e6d5f1b5f8d6d4c5'\n,'e2e4e7e6d2d4d7d5b1d2c7c5g1f3c5d4e4d5d8d5f1c4d5d6e1g1'\n,'e2e4e7e6d2d4d7d5b1d2c7c5g1f3c5d4f3d4g8f6e4d5f6d5d2f3'\n,'e2e4e7e6d2d4d7d5b1d2c7c5g1f3g8f6e4d5e6d5f1b5c8d7b5d7'\n,'e2e4e7e6d2d4d7d5b1d2c7c5g1f3g8f6e4e5f6d7c2c3b8c6f1d3'\n,'e2e4e7e6d2d4d7d5b1d2d5e4d2e4b8d7f1b5c7c6b5d3g8f6e4f6'\n,'e2e4e7e6d2d4d7d5b1d2d5e4d2e4b8d7f1d3g8f6d1e2f6e4d3e4'\n,'e2e4e7e6d2d4d7d5b1d2d5e4d2e4b8d7f1d3g8f6g1f3f6e4d3e4'\n,'e2e4e7e6d2d4d7d5b1d2d5e4d2e4b8d7g1f3f8e7f1d3g8f6d1e2'\n,'e2e4e7e6d2d4d7d5b1d2d5e4d2e4b8d7g1f3g8f6c1g5h7h6e4f6'\n,'e2e4e7e6d2d4d7d5b1d2d5e4d2e4b8d7g1f3g8f6e4f6d7f6c1g5'\n,'e2e4e7e6d2d4d7d5b1d2d5e4d2e4b8d7g1f3g8f6e4f6d7f6c2c3'\n,'e2e4e7e6d2d4d7d5b1d2d5e4d2e4b8d7g1f3g8f6e4f6d7f6f1d3'\n,'e2e4e7e6d2d4d7d5b1d2d5e4d2e4c8d7g1f3d7c6f1d3b8d7e1g1'\n,'e2e4e7e6d2d4d7d5b1d2d5e4d2e4f8e7f1d3b8d7g1f3g8f6e4f6'\n,'e2e4e7e6d2d4d7d5b1d2d5e4d2e4f8e7g1f3b8d7c2c4g8f6e4c3'\n,'e2e4e7e6d2d4d7d5b1d2d5e4d2e4f8e7g1f3b8d7f1d3g8f6d1e2'\n,'e2e4e7e6d2d4d7d5b1d2d5e4d2e4g8f6c1g5f8e7g5f6e7f6g1f3'\n,'e2e4e7e6d2d4d7d5b1d2f8e7f1d3c7c5d4c5g8f6d1e2e8g8g1f3'\n,'e2e4e7e6d2d4d7d5b1d2g8e7f1d3e7g6g1f3b8c6e1g1f8e7c2c3'\n,'e2e4e7e6d2d4d7d5b1d2g8e7g1f3b8d7f1d3e7g6e1g1f8e7g2g3'\n,'e2e4e7e6d2d4d7d5b1d2g8f6e4e5f6d7f1d3c7c5c2c3b8c6g1e2'\n,'e2e4e7e6d2d4d7d5b1d2g8f6e4e5f6d7f1d3c7c5c2c3c5d4c3d4'\n,'e2e4e7e6d2d4d7d5b1d2g8f6e4e5f6d7f1d3f8e7c2c3c7c5g1e2'\n,'e2e4e7e6d2d4d7d5b1d2g8f6e4e5f6d7f2f4c7c5c2c3b8c6d2f3'\n,'e2e4e7e6d2d4d7d5e4d5e6d5b1c3g8f6g1f3f8d6f1d3e8g8e1g1'\n,'e2e4e7e6d2d4d7d5e4d5e6d5g1f3b8c6f1d3f8d6e1g1g8e7b1c3'\n,'e2e4e7e6d2d4d7d5e4e5c7c5b1c3c5d4c3b5b8c6g1f3f8b4c2c3'\n,'e2e4e7e6d2d4d7d5e4e5c7c5c2c3b8c6g1f3c8d7d4c5f8c5b2b4'\n,'e2e4e7e6d2d4d7d5e4e5c7c5c2c3b8c6g1f3c8d7f1e2g8e7b1a3'\n,'e2e4e7e6d2d4d7d5e4e5c7c5c2c3b8c6g1f3d8b6a2a3c5c4b1d2'\n,'e2e4e7e6d2d4d7d5e4e5c7c5c2c3b8c6g1f3d8b6a2a3f7f6b2b4'\n,'e2e4e7e6d2d4d7d5e4e5c7c5c2c3b8c6g1f3d8b6a2a3f7f6f1d3'\n,'e2e4e7e6d2d4d7d5e4e5c7c5c2c3b8d7g1f3g8e7f1d3e7c6e1g1'\n,'e2e4e7e6d2d4d7d5e4e5c7c5c2c3d8b6g1f3b8c6a2a3a7a5f1d3'\n,'e2e4e7e6d2d4d7d5e4e5c7c5c2c3d8b6g1f3b8c6a2a3c5c4b1d2'\n,'e2e4e7e6d2d4d7d5e4e5c7c5c2c3d8b6g1f3c8d7f1e2d7b5c3c4'\n,'e2e4e7e6g1e2b8c6b1c3d7d5e4d5e6d5d2d4g8f6c1e3f8d6e2f4'\n,'e2e4e7e6g1e2b8c6e2g3d7d5e4d5e6d5d2d4f8d6b1c3g8f6f1e2'\n,'e2e4e7e6g1e2b8c6e2g3d8h4d2d4d7d5b1c3f8b4f1d3g8f6e4e5'\n,'e2e4e7e6g1e2b8c6e2g3h7h5g3h5d8h4h5g3g8f6d2d3f8d6f1e2'\n,'e2e4e7e6g1e2c7c5b1c3b8c6d2d4c5d4e2d4a7a6c1e3d8c7d1d2'\n,'e2e4e7e6g1e2c7c5b1c3b8c6d2d4c5d4e2d4a7a6f1e2d8c7c1e3'\n,'e2e4e7e6g1e2c7c5b1c3b8c6d2d4c5d4e2d4d8c7c1e3a7a6d1d2'\n,'e2e4e7e6g1e2d7d5e4d5e6d5d2d4f8d6b1c3c7c6e2g3g8f6d1e2'\n,'e2e4e7e6g1e2d7d5e4d5e6d5d2d4f8d6b1c3g8e7g2g3e8g8f1g2'\n,'e2e4e7e6g1e2d7d5e4d5e6d5d2d4f8d6b1c3g8f6e2f4c7c6f1d3'\n,'e2e4e7e6g1e2d7d5e4d5e6d5d2d4f8d6b1c3g8f6e2f4e8g8f4d5'\n,'e2e4e7e6g1e2d7d5e4d5e6d5d2d4f8d6b1c3g8f6e2g3e8g8f1e2'\n,'e2e4e7e6g1e2d7d5e4d5e6d5e2g3b8c6d2d4f8d6b1c3d8h4c3b5'\n,'e2e4e7e6g1e2d7d5e4d5e6d5g2g3g8f6f1g2f8d6b1c3c7c6e1g1'\n,'e2e4e7e6g1f3c7c5b1c3b8c6d2d4c5d4f3d4d8c7f1e2a7a6c1e3'\n,'e2e4e7e6g1f3c7c5b1c3d7d6d2d4c5d4f3d4g8f6c1e3a7a6d1f3'\n,'e2e4e7e6g1f3d7d5e4d5e6d5d2d4g8f6f1b5c8d7b5d7d8d7e1g1'\n,'e2e4e7e6g2g4b8c6d2d4g8f6b1c3f8b4f1g2h7h6a2a3b4c3b2c3'\n,'e2e4e7e6g2g4b8c6d2d4h7h5g4g5d7d5e4e5d8d7g1f3b7b6c1f4'\n,'e2e4e7e6g2g4h7h5g4g5d8g5d2d4g5a5b1c3d7d5e4d5g8f6c1d2'\n,'e2e4g7g6b1c3d7d6d2d4f8g7f2f4g8f6g1f3e8g8f1d3b8a6e1g1'\n,'e2e4g7g6b1c3d7d6d2d4f8g7g1f3g8f6f1e2e8g8e1g1c7c6a2a4'\n,'e2e4g7g6d2d4c7c6g1f3f8g7b1c3d7d5e4e5h7h5c1f4c8g4h2h3'\n,'e2e4g7g6d2d4d7d6b1c3f8g7c1e3g8f6f2f3c7c6d1d2b7b5f1d3'\n,'e2e4g7g6d2d4d7d6b1c3f8g7c1e3g8f6f2f3c7c6d1d2b7b5g2g4'\n,'e2e4g7g6d2d4d7d6b1c3f8g7f2f4g8f6g1f3e8g8f1d3b8a6e1g1'\n,'e2e4g7g6d2d4d7d6b1c3f8g7g1f3g8f6f1e2e8g8e1g1c7c6a2a4'\n,'e2e4g7g6d2d4d7d6b1c3f8g7g1f3g8f6f1e2e8g8e1g1c8g4c1e3'\n,'e2e4g7g6d2d4d7d6b1c3f8g7g1f3g8f6h2h3e8g8c1e3c7c6a2a4'\n,'e2e4g7g6d2d4d7d6b1c3g8f6c1e3c7c6d1d2f8g7f2f3b7b5a2a4'\n,'e2e4g7g6d2d4d7d6b1c3g8f6c1e3f8g7f2f3c7c6d1d2b7b5a2a4'\n,'e2e4g7g6d2d4d7d6b1c3g8f6c1e3f8g7f2f3c7c6d1d2b7b5f1d3'\n,'e2e4g7g6d2d4d7d6b1c3g8f6g1f3f8g7f1e2e8g8e1g1c7c6a2a4'\n,'e2e4g7g6d2d4d7d6b1c3g8f6g1f3f8g7f1e2e8g8e1g1c7c6h2h3'\n,'e2e4g7g6d2d4d7d6b1c3g8f6g1f3f8g7h2h3e8g8c1e3c7c6a2a4'\n,'e2e4g7g6d2d4d7d6c2c3f8g7g1f3g8f6f1d3e8g8e1g1b8d7f1e1'\n,'e2e4g7g6d2d4d7d6c2c4f8g7b1c3g8f6f1e2e8g8g1f3e7e5e1g1'\n,'e2e4g7g6d2d4d7d6c2c4f8g7b1c3g8f6f2f3e8g8c1e3b8c6g1e2'\n,'e2e4g7g6d2d4d7d6c2c4f8g7b1c3g8f6f2f3e8g8c1e3f6d7d1d2'\n,'e2e4g7g6d2d4d7d6c2c4f8g7b1c3g8f6g1f3e8g8f1e2c7c5d4d5'\n,'e2e4g7g6d2d4d7d6c2c4f8g7g1f3g8f6b1c3e8g8h2h3b8a6c1g5'\n,'e2e4g7g6d2d4d7d6f1e2g8f6b1c3f8g7g1f3e8g8e1g1c7c6f1e1'\n,'e2e4g7g6d2d4d7d6g1f3f8g7b1c3g8f6f1e2e8g8e1g1c7c6a2a4'\n,'e2e4g7g6d2d4d7d6g1f3f8g7b1c3g8f6f1e2e8g8e1g1c7c6h2h3'\n,'e2e4g7g6d2d4d7d6g1f3f8g7b1c3g8f6f1e2e8g8e1g1c8g4c1e3'\n,'e2e4g7g6d2d4f8g7b1c3c7c5g1f3b8c6d4d5c6d4a2a4d7d6f3d4'\n,'e2e4g7g6d2d4f8g7b1c3d7d6g1f3g8f6f1e2c7c6e1g1e8g8a2a4'\n,'e2e4g7g6d2d4f8g7b1c3d7d6g1f3g8f6f1e2c7c6e1g1e8g8h2h3'\n,'e2e4g7g6d2d4f8g7b1c3d7d6g1f3g8f6f1e2e8g8e1g1b8c6d4d5'\n,'e2e4g7g6d2d4f8g7c2c4d7d6b1c3g8f6f2f3e8g8c1e3b8d7f1d3'\n,'e2e4g7g6d2d4f8g7g1f3d7d6b1c3g8f6f1e2e8g8e1g1c7c6a2a4'\n,'e2e4g7g6g1f3f8g7d2d4d7d6b1c3g8f6c1e3e8g8f1e2c7c6e1g1'\n,'e2e4g7g6g1f3f8g7d2d4d7d6b1c3g8f6f1e2e8g8e1g1c7c6a2a4'\n,'e2e4g8f6b1c3d7d6d2d4g7g6g1f3b8c6d4d5c6b8f1c4f8g7e1g1'\n,'e2e4g8f6e4e5f6d5b1c3d5c3d2c3b8c6g1f3d7d6f1c4d6e5d1d8'\n,'e2e4g8f6e4e5f6d5c2c4d5b6d2d4d7d6e5d6c7d6b1c3b8c6g1f3'\n,'e2e4g8f6e4e5f6d5c2c4d5b6d2d4d7d6e5d6c7d6b1c3g7g6d1b3'\n,'e2e4g8f6e4e5f6d5c2c4d5b6d2d4d7d6e5d6e7d6b1c3f8e7f1d3'\n,'e2e4g8f6e4e5f6d5c2c4d5b6d2d4d7d6e5d6e7d6b1c3f8e7h2h3'\n,'e2e4g8f6e4e5f6d5d2d4c7c6c2c4d5c7b1c3d7d6e5d6e7d6g1f3'\n,'e2e4g8f6e4e5f6d5d2d4d7d6c2c4d5b6e5d6c7d6b1c3g7g6c1e3'\n,'e2e4g8f6e4e5f6d5d2d4d7d6g1f3c8g4f1e2e7e6e1g1f8e7c2c4'\n,'e2e4g8f6e4e5f6d5d2d4d7d6g1f3d5b6a2a4a7a5b1c3g7g6e5d6'\n,'e2e4g8f6e4e5f6d5d2d4d7d6g1f3d5b6b1c3g7g6c1f4f8g7d1d2'\n,'e2e4g8f6e4e5f6d5d2d4d7d6g1f3d5b6b1c3g7g6c1f4f8g7d1e2'\n,'e2e4g8f6e4e5f6d5d2d4d7d6g1f3d5b6b1c3g7g6f1b5c7c6b5e2'\n,'e2e4g8f6e4e5f6d5d2d4d7d6g1f3g7g6c2c4d5b6b1c3f8g7e5d6'\n,'e2e4g8f6e4e5f6d5d2d4d7d6g1f3g7g6f1c4c7c6e1g1f8g7b1c3'\n,'e2e4g8f6e4e5f6d5d2d4d7d6g1f3g7g6f1c4d5b6c4b3a7a5a2a4'\n,'e2e4g8f6e4e5f6d5d2d4d7d6g1f3g7g6f1c4d5b6c4b3f8g7a2a4'\n,'e2e4g8f6e4e5f6d5d2d4d7d6g1f3g7g6f1c4d5b6c4b3f8g7f3g5'\n,'e2e4g8f6e4e5f6d5d2d4g7g6c2c4d5b4a2a3b4a6b2b4d7d6b4b5'\n,'e2e4g8f6e4e5f6g8d2d4d7d5c2c3g8h6g1f3b8c6f1d3g7g6e1g1'\n,'e2e4h7h6g1f3c7c5c2c3d7d5e4d5d8d5b1a3b8c6f1c4d5e4c4e2'\n,'e2e4h7h6g1f3d7d6b1c3g8f6d2d4g7g6f1e2f8g7e1g1e8g8c1f4'\n,'f2f4c7c6e2e4d7d5e4e5g8h6f1e2g7g6d2d4f8g7b1c3b8a6g2g4'\n,'f2f4d7d5b2b3g8f6c1b2c7c5e2e3b8c6f1b5g7g6g1f3f8g7f3e5'\n,'f2f4d7d5g1f3g7g6e2e3f8g7f1e2g8f6e1g1e8g8d2d3c7c5d1e1'\n,'g1f3b8a6e2e4g8f6e4e5f6d5b1c3d5c3d2c3d7d5d1d4c7c5d4h4'\n,'g1f3b8a6e2e4g8f6e4e5f6d5d2d4d7d6f1a6b7a6c2c4d5b6e1g1'\n,'g1f3c7c5b1c3b8c6e2e4g7g6f1c4f8g7e1g1d7d6h2h3g8f6d2d3'\n,'g1f3c7c5b1c3d7d6g2g3b8c6d2d4c5d4f3d4g8f6f1g2c8d7c1g5'\n,'g1f3c7c5c2c4b8c6d2d3g8f6b1c3d7d6g2g3g7g6f1g2f8g7e1g1'\n,'g1f3c7c5c2c4g7g6d2d3b8c6b1c3g8f6c1f4f8g7g2g3d8b6d1d2'\n,'g1f3c7c5c2c4g7g6d2d3g8f6b1c3b8c6g2g3f8g7f1g2d7d6e1g1'\n,'g1f3c7c5c2c4g7g6e2e3f8g7b1c3g8f6d2d4e8g8d4d5d7d6f1d3'\n,'g1f3c7c5c2c4g7g6e2e4b8c6d2d4f8g7d4c5d8a5c1d2a5c5b1c3'\n,'g1f3c7c5c2c4g8f6b1c3b8c6d2d3d7d6e2e4g7g6f1e2f8g7e1g1'\n,'g1f3c7c5c2c4g8f6b1c3b8c6d2d3d7d6g2g3g7g6f1g2f8g7e1g1'\n,'g1f3c7c5c2c4g8f6b1c3b8c6d2d3g7g6e2e4f8g7f1e2d7d6e1g1'\n,'g1f3c7c5c2c4g8f6b1c3b8c6g2g3g7g6f1g2f8g7d2d4c5d4f3d4'\n,'g1f3c7c5c2c4g8f6b1c3e7e6e2e4b8c6f1e2d8b6e1g1f8e7d2d3'\n,'g1f3c7c5c2c4g8f6e2e3g7g6d2d4b7b6f1d3f8g7d4d5d7d6h2h3'\n,'g1f3c7c5e2e4b7b6b1c3c8b7d2d4c5d4f3d4a7a6g2g3g8f6f1g2'\n,'g1f3c7c5e2e4b8c6d2d4c5d4f3d4g7g6c2c4f8g7c1e3d8b6d4b5'\n,'g1f3c7c5e2e4d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3e7e5d4b3'\n,'g1f3c7c5e2e4d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1e3e7e6f2f3'\n,'g1f3c7c5e2e4d7d6d2d4c5d4f3d4g8f6b1c3a7a6c1g5b8d7f2f4'\n,'g1f3c7c5e2e4d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1c4e7e6e1g1'\n,'g1f3c7c5e2e4d7d6d2d4c5d4f3d4g8f6b1c3a7a6f1e2e7e5d4b3'\n,'g1f3c7c5e2e4d7d6d2d4c5d4f3d4g8f6b1c3a7a6f2f3e7e5d4b3'\n,'g1f3c7c5e2e4d7d6d2d4c5d4f3d4g8f6b1c3a7a6g2g3e7e5d4b3'\n,'g1f3c7c5e2e4d7d6d2d4c5d4f3d4g8f6b1c3b8c6c1g5d8b6d4b3'\n,'g1f3c7c5e2e4d7d6d2d4c5d4f3d4g8f6b1c3b8c6c1g5e7e6d1d2'\n,'g1f3c7c5e2e4d7d6d2d4c5d4f3d4g8f6b1c3b8c6f1c4e7e6e1g1'\n,'g1f3c7c5e2e4d7d6d2d4c5d4f3d4g8f6b1c3g7g6c1e3f8g7f2f3'\n,'g1f3c7c5e2e4d7d6f1b5c8d7b5d7d8d7c2c4b8c6d2d4c5d4f3d4'\n,'g1f3c7c5e2e4d7d6f1c4g8f6b1c3e7e6e1g1b8c6d1e2f8e7d2d3'\n,'g1f3c7c5e2e4d7d6f1c4g8f6d2d3b8c6c2c3g7g6c4b3f8g7e1g1'\n,'g1f3c7c5g2g3b8c6f1g2a8b8e1g1g8f6c2c3d7d5d2d4e7e6d1d3'\n,'g1f3c7c5g2g3b8c6f1g2d7d5d2d4e7e6e1g1g8f6c2c4d5c4d1a4'\n,'g1f3c7c5g2g3b8c6f1g2e7e5c2c4f8e7b1c3g8f6e1g1d7d6a1b1'\n,'g1f3c7c5g2g3d7d5f1g2b8c6d2d4e7e6e1g1g8f6c2c4d5c4d1a4'\n,'g1f3c7c5g2g3d7d5f1g2b8c6d2d4g8f6e1g1e7e6c2c4d5c4d1a4'\n,'g1f3c7c5g2g3d7d5f1g2g8f6d2d4b8c6e1g1c8g4c2c4g4f3g2f3'\n,'g1f3c7c5g2g3e7e6f1g2d7d5e1g1b8c6d2d4g8f6c2c4f8e7c4d5'\n,'g1f3c7c5g2g3g8f6f1g2b8c6c2c4d7d5c4d5f6d5e1g1e7e5b1c3'\n,'g1f3c7c6c2c4d7d5d1a4e7e6c4d5e6d5g2g3f8d6f1g2g8f6e1g1'\n,'g1f3c7c6c2c4d7d5d2d4e7e6e2e3g8f6b1c3b8d7f1d3d5c4d3c4'\n,'g1f3c7c6c2c4d7d5d2d4g7g6b1c3g8f6e2e3f8g7f1e2e8g8e1g1'\n,'g1f3c7c6c2c4d7d5d2d4g8f6b1c3e7e6c1g5d5c4e2e4b7b5e4e5'\n,'g1f3c7c6c2c4d7d5d2d4g8f6e2e3e7e6b1c3b8d7d1c2f8d6f1d3'\n,'g1f3c7c6c2c4d7d5d2d4g8f6e2e3e7e6b1c3b8d7f1d3b7b6e1g1'\n,'g1f3c7c6c2c4d7d5d2d4g8f6e2e3e7e6b1c3b8d7f1d3d5c4d3c4'\n,'g1f3c7c6c2c4d7d5d2d4g8f6e2e3g7g6b1c3f8g7f1e2e8g8e1g1'\n,'g1f3c7c6c2c4g7g6b1c3g8f6e2e4f8g7d2d4d7d6f1e2e8g8e1g1'\n,'g1f3c7c6c2c4g8f6d2d4d7d5b1c3e7e6e2e3b8d7a2a4f6e4f1d3'\n,'g1f3c7c6c2c4g8f6d2d4d7d5e2e3e7e6b1c3b8d7f1d3d5c4d3c4'\n,'g1f3c7c6d2d4d7d5g2g3c8f5f1g2g8f6c2c4d5c4b1d2b8d7d2c4'\n,'g1f3c7c6d2d4d7d5g2g3g8f6f1g2c8g4e1g1b8d7c2c4d5c4b1a3'\n,'g1f3c7c6d2d4g8f6b1c3d7d5g2g3g7g6f1g2f8g7e1g1e8g8c1e3'\n,'g1f3c7c6d2d4g8f6g2g3d7d5f1g2c8f5c2c4d5c4b1d2d8d5e1g1'\n,'g1f3c7c6d2d4g8f6g2g3d7d5f1g2c8f5c2c4e7e6b1c3b8d7d1b3'\n,'g1f3c7c6d2d4g8f6g2g3d7d5f1g2c8f5c2c4e7e6b1c3f8e7e1g1'\n,'g1f3c7c6e2e4d7d5b1c3c8g4h2h3g4f3d1f3g8f6d2d3e7e6c1d2'\n,'g1f3c7c6e2e4d7d5b1c3d5e4c3e4g8f6e4f6e7f6d2d4f8d6f1e2'\n,'g1f3c7c6e2e4d7d5b1c3g8f6e4e5f6g8d2d4c8g4h2h3g4h5f1d3'\n,'g1f3c7c6e2e4d7d5e4d5c6d5f3e5g7g6d2d4a7a6f1e2f8g7c1f4'\n,'g1f3c7c6e2e4d7d5e4e5c8g4d2d4e7e6b1d2c6c5h2h3g4f3d2f3'\n,'g1f3c7c6g2g3g8f6c2c4d7d5f1g2c8f5e1g1e7e6b2b3h7h6c1b2'\n,'g1f3c7c6g2g3g8f6f1g2d7d5e1g1c8g4d2d4e7e6f3e5g4h5c2c4'\n,'g1f3d7d5b1c3g8f6d2d4c7c6g2g3g7g6f1g2f8g7c1f4c8f5f3h4'\n,'g1f3d7d5b1c3g8f6d2d4e7e6c1f4f8b4d1d3e8g8a2a3b4d6e2e3'\n,'g1f3d7d5b1c3g8f6d2d4g7g6e2e3f8g7f1d3b8c6e1g1e8g8b2b3'\n,'g1f3d7d5b2b3c8g4c1b2b8c6e2e3g8f6h2h3g4d7c2c4e7e6b1c3'\n,'g1f3d7d5b2b3c8g4c1b2g8f6g2g3b8d7f1g2c7c6c2c4e7e6e1g1'\n,'g1f3d7d5b2b3g8f6c1b2c7c5e2e3b8c6f1b5c8d7e1g1e7e6d2d3'\n,'g1f3d7d5b2b3g8f6e2e3c7c5c1b2e7e6f1e2b8c6e1g1f8d6d2d4'\n,'g1f3d7d5b2b3g8f6e2e3c8g4c1b2b8d7h2h3g4h5c2c4e7e6b1c3'\n,'g1f3d7d5b2b3g8f6e2e3g7g6c1b2f8g7d2d4e8g8c2c4b8c6b1c3'\n,'g1f3d7d5c2c4c7c6b2b3g8f6c1b2c8g4g2g3b8d7f1g2e7e6e1g1'\n,'g1f3d7d5c2c4c7c6b2b3g8f6c1b2g7g6g2g3f8g7f1g2e8g8e1g1'\n,'g1f3d7d5c2c4d5c4e2e3c8f5f1c4f5d3b1a3d3c4a3c4g8f6d2d3'\n,'g1f3d7d5c2c4d5d4e2e3b8c6e3d4c6d4f3d4d8d4b1c3e7e5d2d3'\n,'g1f3d7d5c2c4d5d4g2g3g7g6b2b4g8f6f1g2f8g7d1a4f6d7d2d3'\n,'g1f3d7d5c2c4e7e6c4d5e6d5g2g3g8f6f1g2f8d6b1c3e8g8e1g1'\n,'g1f3d7d5c2c4e7e6d2d4g8f6b1c3c7c6a2a4a7a6c1g5h7h6g5h4'\n,'g1f3d7d5d2d4b8c6c2c4e7e6b1c3g8f6a2a3f8d6e2e3b7b6d1c2'\n,'g1f3d7d5d2d4c7c6c2c4e7e6b1c3g8f6e2e3b8d7d1c2d7b6b2b3'\n,'g1f3d7d5d2d4c7c6c2c4e7e6c4d5e6d5b1c3c8f5c1f4f8d6f4d6'\n,'g1f3d7d5d2d4g8f6a2a3b8c6c2c3g7g6c1g5f6e4g5e3f8g7g2g3'\n,'g1f3d7d5d2d4g8f6a2a3c7c6e2e3c8g4c2c4e7e6b1c3b8d7c4d5'\n,'g1f3d7d5d2d4g8f6b1c3c7c6g2g3g7g6f1g2f8g7c1f4c8f5f3h4'\n,'g1f3d7d5d2d4g8f6b1c3g7g6c1f4f8g7e2e3e8g8f1d3c7c5d4c5'\n,'g1f3d7d5d2d4g8f6c2c4c7c6b1c3d5c4a2a4c8f5f3e5b8d7e5c4'\n,'g1f3d7d5d2d4g8f6c2c4c7c6b1c3d5c4a2a4c8f5f3e5e7e6f2f3'\n,'g1f3d7d5d2d4g8f6c2c4c7c6b1c3e7e6c1g5d5c4e2e4b7b5e4e5'\n,'g1f3d7d5d2d4g8f6c2c4c7c6b1c3e7e6e2e3b8d7c1d2f8d6f1d3'\n,'g1f3d7d5d2d4g8f6c2c4c7c6b1c3e7e6e2e3b8d7f1d3d5c4d3c4'\n,'g1f3d7d5d2d4g8f6c2c4c7c6e2e3c8f5b1c3e7e6f3h4f5g6h4g6'\n,'g1f3d7d5d2d4g8f6c2c4c7c6e2e3e7e6b1c3b8d7a2a4f8b4f1d3'\n,'g1f3d7d5d2d4g8f6c2c4c7c6e2e3e7e6b1c3b8d7a2a4f8d6f1e2'\n,'g1f3d7d5d2d4g8f6c2c4c7c6e2e3e7e6b1c3b8d7d1c2f8d6f1e2'\n,'g1f3d7d5d2d4g8f6c2c4c7c6e2e3e7e6b1c3b8d7d1c2f8d6g2g4'\n,'g1f3d7d5d2d4g8f6c2c4c7c6e2e3e7e6b1c3b8d7f1d3d5c4d3c4'\n,'g1f3d7d5d2d4g8f6c2c4c7c6e2e3e7e6b1c3f8e7f1d3e8g8b2b3'\n,'g1f3d7d5d2d4g8f6c2c4c7c6e2e3g7g6b1c3f8g7f1e2e8g8e1g1'\n,'g1f3d7d5d2d4g8f6c2c4d5c4e2e3e7e6f1c4c7c5e1g1a7a6a2a4'\n,'g1f3d7d5d2d4g8f6c2c4d5c4e2e3e7e6f1c4c7c5e1g1a7a6d4c5'\n,'g1f3d7d5d2d4g8f6c2c4e7e6b1c3b8c6a2a3f8d6e2e3e8g8c4c5'\n,'g1f3d7d5d2d4g8f6c2c4e7e6b1c3c7c6c1g5d5c4e2e4b7b5e4e5'\n,'g1f3d7d5d2d4g8f6c2c4e7e6b1c3c7c6c1g5h7h6g5f6d8f6e2e3'\n,'g1f3d7d5d2d4g8f6c2c4e7e6b1c3c7c6e2e3b8d7a2a4f8d6f1e2'\n,'g1f3d7d5d2d4g8f6c2c4e7e6b1c3c7c6e2e3b8d7f1d3d5c4d3c4'\n,'g1f3d7d5d2d4g8f6c2c4e7e6b1c3c7c6e2e3f8e7f1d3e8g8b2b3'\n,'g1f3d7d5d2d4g8f6c2c4e7e6b1c3d5c4c1g5h7h6g5f6g7f6e2e3'\n,'g1f3d7d5d2d4g8f6c2c4e7e6b1c3f8b4c1d2d5c4e2e3b4c3d2c3'\n,'g1f3d7d5d2d4g8f6c2c4e7e6b1c3f8b4e2e3e8g8f1d3c7c5e1g1'\n,'g1f3d7d5d2d4g8f6c2c4e7e6c4d5e6d5b1c3c7c6c1g5h7h6g5f4'\n,'g1f3d7d5d2d4g8f6c2c4e7e6g2g3d5c4d1a4b8c6f1g2f8b4c1d2'\n,'g1f3d7d5d2d4g8f6c2c4e7e6g2g3d5c4d1a4c7c6a4c4b7b5c4d3'\n,'g1f3d7d5d2d4g8f6c2c4e7e6g2g3d5c4f1g2a7a6e1g1b8c6b1c3'\n,'g1f3d7d5d2d4g8f6c2c4e7e6g2g3f8b4b1d2c7c5a2a3b4d2d1d2'\n,'g1f3d7d5d2d4g8f6c2c4g7g6b1c3f8g7c4d5f6d5e2e4d5c3b2c3'\n,'g1f3d7d5d2d4g8f6g2g3e7e6c2c4d5c4e2e3b7b5a2a4b5b4f1c4'\n,'g1f3d7d5d2d4g8f6g2g3e7e6c2c4d5c4f1g2a7a6e1g1b8c6e2e3'\n,'g1f3d7d5d2d4g8f6g2g3e7e6c2c4d5c4f1g2b8c6d1a4f8b4c1d2'\n,'g1f3d7d5d2d4g8f6g2g3e7e6f1g2f8e7c2c4e8g8e1g1d5c4f3e5'\n,'g1f3d7d5d2d4g8f6h2h3c7c5e2e3b8c6f1e2e7e6e1g1f8e7c2c4'\n,'g1f3d7d5g2g3b8c6f1g2e7e5d2d4e5e4f3e5g8e7e1g1c8e6e5c6'\n,'g1f3d7d5g2g3c7c5d2d4e7e6f1g2b8c6e1g1g8f6c2c4d5c4d1a4'\n,'g1f3d7d5g2g3c7c6f1g2c8g4e1g1b8d7d2d4e7e6h2h3g4f3g2f3'\n,'g1f3d7d5g2g3c7c6f1g2c8g4e1g1e7e6c2c4g8f6c4d5e6d5d2d3'\n,'g1f3d7d5g2g3c7c6f1g2g8f6d2d4c8f5c2c4e7e6b1c3b8d7d1b3'\n,'g1f3d7d5g2g3g8f6b2b3c7c5f1g2g7g6b1c3f8g7c1b2b8c6c3a4'\n,'g1f3d7d5g2g3g8f6d2d4b8c6f1g2c8f5e1g1g7g6c2c4f8g7b1c3'\n,'g1f3d7d5g2g3g8f6d2d4c7c6f1g2c8f5c2c4d5c4b1d2d8a5e1g1'\n,'g1f3d7d5g2g3g8f6d2d4c7c6f1g2c8f5c2c4e7e6b1c3b8d7d1b3'\n,'g1f3d7d5g2g3g8f6d2d4c7c6f1g2c8f5c2c4e7e6b1c3f8e7e1g1'\n,'g1f3d7d5g2g3g8f6d2d4c7c6f1g2c8f5c2c4e7e6b1c3h7h6e1g1'\n,'g1f3d7d5g2g3g8f6d2d4c7c6f1g2c8f5c2c4g7g6e1g1f8g7d1b3'\n,'g1f3d7d5g2g3g8f6d2d4c8f5f1g2e7e6e1g1c7c6f3h4f5g4d1d3'\n,'g1f3d7d5g2g3g8f6d2d4e7e6b1c3c7c5f1g2f8e7e1g1b8c6d4c5'\n,'g1f3d7d5g2g3g8f6d2d4e7e6c2c4f8e7f1g2e8g8e1g1d5c4d1c2'\n,'g1f3d7d5g2g3g8f6d2d4e7e6f1g2c7c5c2c4d5c4e1g1b8c6f3e5'\n,'g1f3d7d5g2g3g8f6d2d4e7e6f1g2c7c5e1g1b8c6c2c4d5c4d1a4'\n,'g1f3d7d5g2g3g8f6d2d4e7e6f1g2c7c6e1g1f8d6c2c4e8g8d1d3'\n,'g1f3d7d5g2g3g8f6d2d4e7e6f1g2f8b4b1c3c7c5a2a3b4c3b2c3'\n,'g1f3d7d5g2g3g8f6d2d4e7e6f1g2f8e7c2c4e8g8e1g1d5c4f3e5'\n,'g1f3d7d5g2g3g8f6f1g2c7c6c2c4e7e6d2d4d5c4b1c3b8d7e1g1'\n,'g1f3d7d5g2g3g8f6f1g2c7c6e1g1c8f5c2c4e7e6d2d3d5c4d3c4'\n,'g1f3d7d5g2g3g8f6f1g2c7c6e1g1c8f5d2d3h7h6c2c4d5c4e2e4'\n,'g1f3d7d5g2g3g8f6f1g2c7c6e1g1g7g6d2d4f8g7c2c4d5c4a2a4'\n,'g1f3d7d5g2g3g8f6f1g2g7g6d2d4b8c6c2c4f8g7c4d5f6d5b1c3'\n,'g1f3d7d5g2g3g8f6f1g2g7g6d2d4c7c6c2c4f8g7e1g1e8g8c4d5'\n,'g1f3d7d5g2g3g8f6f1g2g7g6e1g1f8g7d2d4c7c6c2c4d5c4b1c3'\n,'g1f3e7e6d2d4d7d5c2c4g8f6b1c3b8c6a2a3f8d6e2e3b7b6d1c2'\n,'g1f3e7e6g2g3d7d5f1g2f8e7d2d4g8f6c2c4e8g8e1g1d5c4f3e5'\n,'g1f3e7e6g2g3d7d5f1g2g8f6d2d4c7c5e1g1c5d4f3d4e6e5d4b3'\n,'g1f3g7g6d2d4d7d6c2c4f8g7b1c3g8f6e2e4e8g8f1e2c7c5d4d5'\n,'g1f3g7g6d2d4g8f6c2c4f8g7g2g3e8g8f1g2d7d6b1c3b8d7e1g1'\n,'g1f3g7g6d2d4g8f6g2g3d7d5f1g2f8g7e1g1e8g8c2c4c7c6c4d5'\n,'g1f3g7g6e2e4c7c5d2d4c5d4f3d4b8c6b1c3f8g7c1e3g8f6d4c6'\n,'g1f3g7g6e2e4f8g7d2d4g8f6b1c3d7d5f1d3d5e4c3e4e8g8e4f6'\n,'g1f3g7g6g2g3f8g7f1g2d7d6d2d4g8f6c2c4e8g8e1g1b8c6b1c3'\n,'g1f3g8f6a2a3d7d5d2d4b8c6c2c3g7g6c1g5f6e4g5f4f7f6b1d2'\n,'g1f3g8f6b1c3d7d5d2d4g7g6c1f4f8g7d1d2b8c6e1c1e8g8h2h4'\n,'g1f3g8f6b1c3d7d5d2d4g7g6g2g3b8c6f3e5f8g7f1g2e8g8e1g1'\n,'g1f3g8f6b2b3g7g6c2c4f8g7c1b2e8g8g2g3d7d6f1g2e7e5e1g1'\n,'g1f3g8f6c2c4c7c5d2d4c5d4f3d4b8c6b1c3e7e6e2e4f8b4d4c6'\n,'g1f3g8f6c2c4e7e6b1c3d7d5d2d4c7c6e2e3b8d7f1d3d5c4d3c4'\n,'g1f3g8f6c2c4e7e6b1c3d7d5d2d4f8b4c1g5b8d7c4d5e6d5e2e3'\n,'g1f3g8f6c2c4e7e6d2d4b7b6g2g3c8b7f1g2f8e7e1g1e8g8b1c3'\n,'g1f3g8f6c2c4e7e6d2d4b8c6d1c2c6b4c2b3c7c5e2e3b7b6f1e2'\n,'g1f3g8f6c2c4e7e6d2d4d7d5b1c3c7c6c1g5h7h6g5f6d8f6d1c2'\n,'g1f3g8f6c2c4e7e6d2d4d7d5b1c3c7c6c1g5h7h6g5f6d8f6e2e3'\n,'g1f3g8f6c2c4e7e6d2d4d7d5b1c3c7c6e2e3b8d7c1d2f8d6d1c2'\n,'g1f3g8f6c2c4e7e6d2d4d7d5b1c3c7c6e2e3b8d7f1d3d5c4d3c4'\n,'g1f3g8f6c2c4e7e6d2d4d7d5b1c3f8b4c1g5b8d7c4d5e6d5e2e3'\n,'g1f3g8f6c2c4e7e6d2d4d7d5b1c3f8e7c1g5h7h6g5h4e8g8e2e3'\n,'g1f3g8f6c2c4e7e6d2d4d7d5c1g5f8e7b1c3h7h6g5f6e7f6e2e3'\n,'g1f3g8f6c2c4e7e6d2d4d7d5g2g3d5c4d1a4b8d7f1g2a7a6a4c4'\n,'g1f3g8f6c2c4e7e6d2d4d7d5g2g3d5c4f1g2a7a6e1g1b8c6b1c3'\n,'g1f3g8f6d2d4d7d5b1c3c7c6g2g3g7g6f1g2f8g7c1f4e8g8e1g1'\n,'g1f3g8f6d2d4d7d5b1c3g7g6c1f4f8g7g2g3e8g8f1g2c7c6e1g1'\n,'g1f3g8f6d2d4d7d5c1f4e7e6e2e3c7c5b1c3a7a6f1e2b8c6e1g1'\n,'g1f3g8f6d2d4d7d5c2c4c7c6b1c3e7e6c1g5d5c4e2e4b7b5e4e5'\n,'g1f3g8f6d2d4d7d5c2c4c7c6b1c3e7e6c1g5h7h6g5f6d8f6e2e3'\n,'g1f3g8f6d2d4d7d5c2c4c7c6b1c3e7e6e2e3b8d7d1c2f8d6g2g4'\n,'g1f3g8f6d2d4d7d5c2c4c7c6e2e3c8f5b1c3e7e6f3h4f5e4f2f3'\n,'g1f3g8f6d2d4d7d5c2c4c7c6e2e3c8f5b1c3e7e6f3h4f5g6h4g6'\n,'g1f3g8f6d2d4d7d5c2c4c7c6e2e3e7e6b1c3b8d7a2a4f6e4d1c2'\n,'g1f3g8f6d2d4d7d5c2c4c7c6e2e3e7e6b1c3b8d7a2a4f8b4f1d3'\n,'g1f3g8f6d2d4d7d5c2c4c7c6e2e3e7e6b1c3b8d7f1d3d5c4d3c4'\n,'g1f3g8f6d2d4d7d5c2c4c7c6e2e3e7e6f1d3b8d7e1g1f8d6b1d2'\n,'g1f3g8f6d2d4d7d5c2c4c7c6e2e3e7e6f1d3d5c4d3c4c6c5e1g1'\n,'g1f3g8f6d2d4d7d5c2c4e7e6b1c3c7c6c1g5d5c4e2e4b7b5e4e5'\n,'g1f3g8f6d2d4d7d5c2c4e7e6b1c3c7c6e2e3b8d7a2a4f6e4f1d3'\n,'g1f3g8f6d2d4d7d5c2c4e7e6b1c3c7c6e2e3b8d7c1d2f8d6d1c2'\n,'g1f3g8f6d2d4d7d5c2c4e7e6b1c3c7c6e2e3b8d7d1c2f8d6f1d3'\n,'g1f3g8f6d2d4d7d5c2c4e7e6b1c3c7c6e2e3b8d7d1c2f8d6g2g4'\n,'g1f3g8f6d2d4d7d5c2c4e7e6b1c3c7c6e2e3b8d7f1d3b7b6e1g1'\n,'g1f3g8f6d2d4d7d5c2c4e7e6b1c3c7c6e2e3b8d7f1d3d5c4d3c4'\n,'g1f3g8f6d2d4d7d5c2c4e7e6b1c3f8b4c1d2d5c4e2e3b4c3d2c3'\n,'g1f3g8f6d2d4d7d5c2c4e7e6b1c3f8b4e2e3e8g8f1d3c7c5e1g1'\n,'g1f3g8f6d2d4d7d5c2c4e7e6b1c3f8e7c1f4e8g8e2e3b8c6f1d3'\n,'g1f3g8f6d2d4d7d5c2c4e7e6b1c3f8e7c1f4e8g8e2e3c7c5d4c5'\n,'g1f3g8f6d2d4d7d5c2c4e7e6g2g3d5c4f1g2c7c5e1g1b8c6d1a4'\n,'g1f3g8f6d2d4d7d5c2c4e7e6g2g3f8e7f1g2e8g8e1g1d5c4f3e5'\n,'g1f3g8f6d2d4d7d5g2g3c7c6f1g2c8f5c2c4e7e6e1g1h7h6b1c3'\n,'g1f3g8f6d2d4d7d5h2h3c7c5c2c3e7e6e2e3b8c6b1d2f8d6d4c5'\n,'g1f3g8f6d2d4e7e6c2c4b7b6b1c3f8b4c1g5c8b7e2e3h7h6g5h4'\n,'g1f3g8f6d2d4e7e6c2c4d7d5b1c3f8e7c1f4e8g8e2e3b8c6f1d3'\n,'g1f3g8f6d2d4g7g6c2c4c7c5b1c3c5d4f3d4b8c6e2e4d7d6f1e2'\n,'g1f3g8f6d2d4g7g6c2c4f8g7b1c3c7c5d4d5d7d6e2e4e8g8f1e2'\n,'g1f3g8f6d2d4g7g6c2c4f8g7b1c3d7d5c4d5f6d5e2e4d5c3b2c3'\n,'g1f3g8f6d2d4g7g6c2c4f8g7b1c3d7d5d1b3d5c4b3c4e8g8e2e4'\n,'g1f3g8f6d2d4g7g6c2c4f8g7e2e3c7c5b1c3e8g8d4d5d7d6f1d3'\n,'g1f3g8f6e2e3d7d5h2h3g7g6d2d4f8g7f1e2e8g8e1g1b8c6c2c4'\n,'g1f3g8f6g2g3c7c6d2d4d7d5f1g2c8f5c2c4d5c4b1d2d8d5e1g1'\n,'g1f3g8f6g2g3d7d5d2d4c7c5f1g2b8c6e1g1g7g6c2c4f8g7c4d5'\n,'g1f3g8f6g2g3d7d5d2d4c7c6f1g2c8f5c2c4e7e6b1c3b8d7d1b3'\n,'g1f3g8f6g2g3d7d5d2d4c7c6f1g2c8f5c2c4e7e6b1c3h7h6e1g1'\n,'g1f3g8f6g2g3d7d5d2d4e7e6c2c4d5c4f1g2a7a6e1g1b8c6b1c3'\n,'g1f3g8f6g2g3d7d5d2d4e7e6c2c4d5c4f1g2a7a6e1g1b8c6e2e3'\n,'g1f3g8f6g2g3d7d5d2d4e7e6f1g2c7c5c2c4d5c4e1g1b8c6f3e5'\n,'g1f3g8f6g2g3d7d5d2d4e7e6f1g2f8e7c2c4e8g8e1g1b8d7d1b3'\n,'g1f3g8f6g2g3d7d5d2d4e7e6f1g2f8e7c2c4e8g8e1g1d5c4f3e5'\n,'g1f3g8f6g2g3d7d5d2d4g7g6b1c3c7c6f1g2f8g7e1g1e8g8c1f4'\n,'g1f3g8f6g2g3d7d5d2d4g7g6f1g2f8g7e1g1c7c6c2c4e8g8d1b3'\n,'g1f3g8f6g2g3d7d5d2d4g7g6f1g2f8g7e1g1e8g8c2c4c7c6d1b3'\n,'g1f3g8f6g2g3d7d5d2d4g7g6f1g2f8g7e1g1e8g8c2c4d5c4b1a3'\n,'g1f3g8f6g2g3d7d5f1g2c7c6d2d3c8g4e1g1b8d7h2h3g4h5b1d2'\n,'g1f3g8f6g2g3d7d5f1g2c7c6e1g1c8f5c2c4e7e6d1b3d8b6d2d3'\n,'g1f3g8f6g2g3d7d5f1g2c7c6e1g1c8f5d2d3e7e6c2c4d5c4d3c4'\n,'g1f3g8f6g2g3d7d5f1g2c7c6e1g1c8g4d2d4b8d7c2c4e7e6d1b3'\n,'g1f3g8f6g2g3d7d5f1g2c8f5d2d3c7c6e1g1e7e6b1d2h7h6e2e3'\n,'g1f3g8f6g2g3d7d5f1g2g7g6d2d4f8g7c2c4c7c6c4d5c6d5e1g1'\n,'g1f3g8f6g2g3g7g6f1g2d7d5d2d4f8g7e1g1c7c6c1f4e8g8b1c3'\n,'g1f3g8f6g2g3g7g6f1g2d7d5d2d4f8g7e1g1e8g8c2c4c7c6d1b3'\n,'g1f3g8f6g2g3g7g6f1g2d7d5e1g1f8g7d2d4c7c6c2c4e8g8d1b3'\n,'g1f3g8f6g2g3g7g6f1g2f8g7d2d4d7d5e1g1e8g8c2c4c7c6d1b3'\n,'g1f3g8f6g2g3g7g6f1g2f8g7d2d4d7d5e1g1e8g8c2c4d5c4b1a3'\n,'g1f3g8f6g2g3g7g6f1g2f8g7d2d4e8g8e1g1d7d6c2c4b8c6b1c3'\n,'g1f3g8f6h2h3d7d5d2d4b8c6c2c3e7e6e2e3f8d6c3c4b7b6b1c3'\n,'g2g3b8c6g1f3g8f6f1g2g7g6d2d4d7d5c2c4f8g7c4d5f6d5e2e4'\n,'g2g3c7c6f1g2d7d5b2b3e7e5c1b2f8d6g1f3d8e7e1g1g8f6d2d3'\n,'g2g3c7c6f1g2g8f6f2f3e7e5g1h3d7d5h3f2b8a6e1g1f8d6d2d4'\n,'g2g3d7d5g1f3c7c6d2d4g8f6b1c3g7g6f1g2f8g7c1f4e8g8e1g1'\n,'g2g3d7d5g1f3c7c6f1g2g8f6e1g1g7g6d2d4f8g7b1c3e8g8c1f4'\n,'g2g3d7d5g1f3g8f6d2d4c7c6f1g2c8f5e1g1g7g6b1c3f8g7f3h4'\n,'g2g3d7d5g1f3g8f6d2d4e7e6c2c4c7c6d1c2b8a6a2a3c6c5f1g2'\n,'g2g3d7d5g1f3g8f6f1g2c7c6c2c4d5c4a2a4b8a6b1a3d8d5e1g1'\n,'g2g3d7d5g1f3g8f6f1g2c7c6e1g1c8f5c2c4e7e6d1b3d8b6d2d3'\n,'g2g3d7d5g1f3g8f6f1g2c7c6e1g1c8g4d2d4b8d7b1d2e7e6f1e1'\n,'g2g3d7d5g1f3g8f6f1g2g7g6d2d4f8g7c2c4e8g8e1g1d5c4b1a3'\n,'g2g3e7e5f1g2d7d5f2f3b8c6g1h3g8f6h3f2f8c5e2e3c8e6d2d3'\n,'g2g3e7e5f1g2d7d5f2f3b8c6g1h3g8f6h3f2f8c5e2e3e8g8d2d3'\n,'g2g4d7d5e2e3b8c6d2d4e7e5h2h3e5d4e3d4h7h5f1g2h5g4b1c3'\n,'g2g4d7d5e2e3b8c6d2d4g8f6f1e2h7h5g4g5f6e4g1f3c8f5b1d2'\n,'h2h3b7b6c2c4c8b7g1f3e7e6b1c3g8f6d2d3d7d5c4d5e6d5d1a4'\n,'h2h3b8a6b1c3g8f6g1f3d7d5d2d4c8f5g2g4f5g6f3e5e7e6c1g5'\n,'h2h3b8a6b1c3g8f6g1f3d7d5d2d4g7g6c1f4f8g7e2e3e8g8f1e2'\n,'h2h3b8a6e2e3g8f6g1f3g7g6d2d4f8g7f1e2e8g8e1g1d7d6b1c3'\n,'h2h3b8c6c2c3e7e5d2d4d7d5c1e3e5e4d1a4c8d7e3f4b7b5a4c2'\n,'h2h3b8c6c2c3e7e5d2d4d7d5c1e3e5e4e3f4g7g5f4h2e4e3f2e3'\n,'h2h3b8c6d2d4d7d5c2c3e7e5c1e3e5e4e3f4g7g5f4h2e4e3f2e3'\n,'h2h3b8c6d2d4g8f6c2c3d7d5g1f3g7g6c1f4e7e6e2e3f6h5f4h2'\n,'h2h3b8c6e2e3e7e5d2d4d7d5g1f3e5e4f3d2f7f5c2c4g8f6b1c3'\n,'h2h3b8c6e2e3e7e5d2d4g8f6d4d5c6e7c2c4e7g6g1f3f8c5b1c3'\n,'h2h3b8c6g1f3e7e5b1c3g8f6e2e4f8c5f3e5c6e5d2d4c5d6d4e5'\n,'h2h3c7c5c2c3b8c6d2d4e7e6e2e3d7d5g1f3f8d6f1d3g8f6b1d2'\n,'h2h3c7c5e2e3g8f6g1f3b8c6d2d4c5d4e3d4d7d5c2c4g7g6b1c3'\n,'h2h3c7c5e2e3g8f6g1f3d7d5d2d4e7e6c2c3b8c6b1d2f8d6d4c5'\n,'h2h3c7c5e2e4b8c6g1f3g7g6b1c3f8g7f1c4g8f6e1g1e8g8d2d3'\n,'h2h3c7c6e2e4d7d5e4e5c6c5g1f3b8c6b2b3d8c7f1b5c8d7c1b2'\n,'h2h3c7c6e2e4d7d5e4e5c6c5g1f3b8c6f1b5e7e6c2c4g8e7b1c3'\n,'h2h3c7c6e2e4d7d5e4e5c6c5g1f3b8c6f1b5e7e6d2d4c5d4f3d4'\n,'h2h3d7d5c2c3b8c6d2d4e7e5a2a3f8d6d4e5c6e5g1f3e5f3e2f3'\n,'h2h3d7d5c2c3b8c6d2d4e7e5c1e3e5d4c3d4g8f6g1f3f8b4e3d2'\n,'h2h3d7d5c2c3b8c6d2d4e7e5c1e3e5e4e3f4g7g5f4h2c8e6b1d2'\n,'h2h3d7d5c2c3b8c6d2d4e7e5c1e3e5e4e3f4g7g5f4h2e4e3f2e3'\n,'h2h3d7d5c2c3b8c6d2d4e7e5c1e3e5e4e3f4g7g5f4h2f8d6h2d6'\n,'h2h3d7d5c2c3b8c6d2d4e7e5c1e3e5e4e3f4g7g5f4h2g8f6e2e3'\n,'h2h3d7d5c2c3b8c6d2d4e7e5c1e3e5e4e3f4g8f6e2e3a7a6g1e2'\n,'h2h3d7d5c2c3b8c6d2d4e7e5c1e3f7f6d4e5f6e5g1f3g8f6b1d2'\n,'h2h3d7d5c2c3b8c6d2d4e7e5c1e3f7f6g1f3e5e4f3d2g8e7e3f4'\n,'h2h3d7d5c2c3b8c6d2d4e7e5c1e3g8f6d4e5c6e5b1d2e5g6g1f3'\n,'h2h3d7d5c2c3b8c6d2d4e7e5c1e3g8f6d4e5c6e5b1d2f8d6g1f3'\n,'h2h3d7d5c2c3c7c5d2d4g8f6d4c5e7e6c1e3a7a5b1d2b8a6g1f3'\n,'h2h3d7d5c2c3c7c5d2d4g8f6g1f3b8c6d4c5e7e5c1e3f6e4b1d2'\n,'h2h3d7d5c2c3c7c5d2d4g8f6g1f3b8c6d4c5e7e5c1e3f6e4b2b4'\n,'h2h3d7d5c2c3e7e5d2d4b8c6a2a3g8f6d4e5c6e5c1f4e5g6f4h2'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3e5d4c3d4g8f6g1f3f8e7g2g3'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3e5e4d1a4c8d7e3f4b7b5a4c2'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3e5e4e3f4f8d6f4d6d8d6e2e3'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3e5e4e3f4g7g5f4d2d8f6d1b3'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3e5e4e3f4g7g5f4h2e4e3f2e3'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3e5e4e3f4g7g5f4h2e4e3g1f3'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3e5e4e3f4g7g5f4h2f8d6h2d6'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3e5e4e3f4g7g5f4h2g8f6e2e3'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3e5e4e3f4g8e7e2e3e7g6g1e2'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3e5e4e3f4g8f6e2e3a7a6g1e2'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3e5e4e3f4g8f6e2e3f8d6f4d6'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3e5e4e3f4g8f6e2e3f8d6g1e2'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3f7f6g1f3c8e6d4e5f6e5f3g5'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3f7f6g1f3e5e4f3d2g8e7e3f4'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3g8f6d4e5c6e5b1d2f8d6g1f3'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3g8f6d4e5c6e5b1d2f8d6g2g4'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3g8f6d4e5c6e5g1f3e5c4e3d4'\n,'h2h3d7d5c2c3e7e5d2d4b8c6c1e3g8f6g1f3e5e4f3d2f8e7g2g4'\n,'h2h3d7d5c2c3e7e5d2d4b8d7c1e3e5d4c3d4g8f6b1c3f8d6g1f3'\n,'h2h3d7d5c2c3e7e5d2d4b8d7c1e3e5d4c3d4g8f6g1f3f8d6g2g4'\n,'h2h3d7d5c2c3e7e5d2d4b8d7c1e3e5e4e3f4d7b6e2e3c7c6b1d2'\n,'h2h3d7d5c2c3e7e5d2d4b8d7c1e3e5e4e3f4d7b6e2e3g8f6g1e2'\n,'h2h3d7d5c2c3e7e5d2d4b8d7c1e3e5e4e3f4d7f6e2e3f8d6g1e2'\n,'h2h3d7d5c2c3e7e5d2d4b8d7c1e3e5e4e3f4d7f6e2e3g8e7c3c4'\n,'h2h3d7d5c2c3e7e5d2d4b8d7c1e3e5e4e3f4g8e7e2e3e7g6f4g3'\n,'h2h3d7d5c2c3e7e5d2d4b8d7c1e3e5e4e3f4g8f6d1c2d7b6e2e3'\n,'h2h3d7d5c2c3e7e5d2d4b8d7c1e3g8f6d4e5d7e5b1d2f8d6g1f3'\n,'h2h3d7d5c2c3e7e5d2d4b8d7c1e3g8f6g1f3e5e4f3d2d7b6g2g3'\n,'h2h3d7d5c2c3e7e5d2d4e5d4c3d4b8c6g1f3g8f6b1c3f8d6c1g5'\n,'h2h3d7d5c2c3e7e5d2d4e5d4c3d4c7c6b1c3g8f6c1f4d8b6d1d2'\n,'h2h3d7d5c2c3e7e5d2d4e5d4c3d4g8f6b1c3f8d6g1f3b8c6c1g5'\n,'h2h3d7d5c2c3e7e5d2d4e5d4c3d4g8f6g1f3b8c6c1g5h7h6g5f6'\n,'h2h3d7d5c2c3e7e5d2d4e5d4c3d4g8f6g1f3f8d6b1c3b8c6c1g5'\n,'h2h3d7d5c2c3e7e5d2d4e5e4c1f4b8c6e2e3a7a6b1d2g8f6g1e2'\n,'h2h3d7d5c2c3e7e5d2d4e5e4c1f4b8c6e2e3g7g5f4g3g8e7c3c4'\n,'h2h3d7d5c2c3e7e5d2d4e5e4c1f4c7c6e2e3g7g5f4g3g8e7h3h4'\n,'h2h3d7d5c2c3e7e5d2d4e5e4c1f4f8d6f4d6d8d6e2e3g8f6g1e2'\n,'h2h3d7d5c2c3e7e5d2d4e5e4c1f4g8f6e2e3a7a6b1d2b8c6c3c4'\n,'h2h3d7d5c2c3e7e5d2d4e5e4c1f4g8f6e2e3a7a6g1e2b8c6b1d2'\n,'h2h3d7d5c2c3e7e5d2d4e5e4c1f4g8f6e2e3f8d6f4d6d8d6g1e2'\n,'h2h3d7d5c2c3e7e5d2d4e5e4c1f4g8f6e2e3f8d6g1e2e8g8b1d2'\n,'h2h3d7d5c2c3e7e5d2d4e5e4c1f4g8f6e2e3f8e7b1d2e8g8g1e2'\n,'h2h3d7d5c2c3e7e6e2e3c7c5g1f3g8f6f1e2f8d6e1g1e6e5d2d4'\n,'h2h3d7d5c2c3e7e6e2e3g8f6g1f3f8d6d2d4c7c5f1e2b8c6b1d2'\n,'h2h3d7d5c2c3g7g6g1f3g8f6d2d3f8g7g2g3b8c6c1e3e7e5f1g2'\n,'h2h3d7d5c2c3g7g6g1f3g8f6d2d4f8g7c1f4e8g8b1d2b7b6e2e3'\n,'h2h3d7d5c2c3g8f6d2d4g7g6g1f3f8g7c1f4c7c5e2e3e8g8b1d2'\n,'h2h3d7d5d2d4c7c5c2c3e7e6g1f3g8f6e2e3b8c6b1d2f8d6d4c5'\n,'h2h3d7d5d2d4c7c5e2e3g8f6g1f3e7e6c2c3b8c6b1d2f8d6d4c5'\n,'h2h3d7d5d2d4c8f5c2c4b8c6b1c3g8f6g2g4f5e4f2f3e4g6h3h4'\n,'h2h3d7d5d2d4c8f5c2c4b8c6b1c3g8f6g2g4f5g6f1g2e7e6c4d5'\n,'h2h3d7d5d2d4f7f5g1f3g8f6e2e3e7e6c2c4b8c6b1c3f8e7c4d5'\n,'h2h3d7d5d2d4g8f6c1f4c7c5e2e3c5d4e3d4b8c6g1f3e7e6b1c3'\n,'h2h3d7d5d2d4g8f6c2c3c7c5d4c5e7e6c1e3a7a5b1d2b8a6g1f3'\n,'h2h3d7d5d2d4g8f6c2c3e7e6c1f4f8d6e2e3d6f4e3f4d8d6g2g3'\n,'h2h3d7d5d2d4g8f6c2c3g7g6g1f3f8g7c1f4c7c5e2e3b8c6f1e2'\n,'h2h3d7d5d2d4g8f6c2c3g7g6g1f3f8g7c1f4c7c5e2e3e8g8b1d2'\n,'h2h3d7d5d2d4g8f6g1f3b8c6e2e3g7g6c1d2f8g7f1d3e8g8b1c3'\n,'h2h3d7d5d2d4g8f6g1f3c7c5e2e3e7e6f1d3f8d6e1g1b8c6d4c5'\n,'h2h3d7d5d2d4g8f6g1f3g7g6c2c3f8g7c1f4c7c5e2e3e8g8b1d2'\n,'h2h3d7d5d2d4g8f6g1f3g7g6c2c3f8g7c1f4e8g8b1d2b7b6e2e3'\n,'h2h3d7d5e2e3e7e5d2d4b8c6g1f3e5e4f3d2f7f5c2c4g8f6b1c3'\n,'h2h3d7d5e2e3e7e5d2d4b8c6g1f3e5e4f3d2g8f6f1e2c8f5c2c4'\n,'h2h3d7d5e2e3e7e5d2d4b8d7c2c4g8f6g1f3e5e4f3d2c7c6b1c3'\n,'h2h3d7d5e2e3e7e5d2d4b8d7c2c4g8f6g1f3e5e4f3d2c7c6b2b3'\n,'h2h3d7d5e2e3e7e5d2d4b8d7c2c4g8f6g1f3e5e4f3e5c7c6e5d7'\n,'h2h3d7d5e2e3e7e5d2d4b8d7c2c4g8f6g1f3e5e4f3e5f8d6e5d7'\n,'h2h3d7d5e2e3e7e5d2d4e5d4e3d4g8f6b1c3f8d6f1d3e8g8g1e2'\n,'h2h3d7d5g1f3g8f6d2d4g7g6e2e3b8c6b1c3f8g7f1d3e8g8e1g1'\n,'h2h3d7d5g1f3g8f6e2e3b8c6d2d4c8f5c2c4e7e6a2a3f8e7b1c3'\n,'h2h3d7d5g1f3g8f6e2e3b8c6d2d4c8f5f1b5g7g6f3e5d8d6e1g1'\n,'h2h3d7d5g1f3g8f6e2e3b8c6d2d4g7g6b1c3f8g7f1d3e8g8e1g1'\n,'h2h3e7e5a2a3g8f6d2d4e5d4d1d4b8c6d4d3f8c5g1f3e8g8b1c3'\n,'h2h3e7e5c2c3b8c6d2d4d7d5c1e3e5e4e3f4g7g5f4h2g8f6e2e3'\n,'h2h3e7e5c2c3c7c6d2d4e5e4c1f4d7d5e2e3f8d6g1e2g8f6b1d2'\n,'h2h3e7e5c2c3c7c6d2d4e5e4c1f4d7d5e2e3g7g5f4g3g8e7h3h4'\n,'h2h3e7e5c2c3c7c6e2e4d7d5d2d4d5e4b1d2e5d4d2e4f7f5e4g5'\n,'h2h3e7e5c2c3d7d5d2d4b8c6a2a3f8d6d4e5c6e5b1d2d8e7d2f3'\n,'h2h3e7e5c2c3d7d5d2d4b8c6a2a3f8d6d4e5c6e5g1f3e5f3e2f3'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3e5d4c3d4f8b4b1c3g8f6g1f3'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3e5d4c3d4g8f6g1f3f8b4e3d2'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3e5d4c3d4g8f6g1f3f8d6b1c3'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3e5e4d1a4g8f6g2g4h7h6e3f4'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3e5e4e3f4f8d6f4d6d8d6e2e3'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3e5e4e3f4g7g5f4h2e4e3f2e3'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3e5e4e3f4g7g5f4h2f8d6h2d6'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3e5e4e3f4g7g5f4h2g8f6e2e3'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3e5e4e3f4g8e7e2e3e7g6g1e2'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3e5e4e3f4g8f6e2e3a7a6g1e2'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3e5e4e3f4g8f6e2e3f8d6f4d6'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3f7f6b1d2f8d6d4e5f6e5g1f3'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3f7f6b1d2g8e7d4e5e7f5d1b3'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3f7f6d4e5f6e5g1f3g8f6b1d2'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3f7f6g1f3c8e6d4e5f6e5d1a4'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3f7f6g1f3c8e6d4e5f6e5f3g5'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3f7f6g1f3e5e4f3d2g8e7c3c4'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3f7f6g1f3e5e4f3d2g8e7e3f4'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3f8d6d4e5c6e5b1d2g8e7d1c2'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3f8d6d4e5c6e5b1d2g8e7g1f3'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3f8d6d4e5c6e5b1d2g8f6g1f3'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3g8f6d4e5c6e5b1d2f8d6g1f3'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3g8f6d4e5c6e5b1d2f8d6g2g4'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3g8f6d4e5c6e5g1f3e5c4e3d4'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3g8f6g1f3e5e4f3d2f8d6e3g5'\n,'h2h3e7e5c2c3d7d5d2d4b8c6c1e3g8f6g1f3e5e4f3d2f8e7g2g4'\n,'h2h3e7e5c2c3d7d5d2d4b8c6d4e5c6e5c1f4e5g6f4h2g8f6g1f3'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3e5d4c3d4g8f6b1c3f8d6g1f3'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3e5d4c3d4g8f6b1d2f8b4g1f3'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3e5d4c3d4g8f6b1d2f8d6g1f3'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3e5d4c3d4g8f6g1f3f8d6b1c3'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3e5d4c3d4g8f6g1f3f8d6g2g4'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3e5e4e3f4d7b6e2e3f8d6f4d6'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3e5e4e3f4d7b6e2e3g8f6g1e2'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3e5e4e3f4d7f6e2e3f8d6f4d6'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3e5e4e3f4d7f6e2e3f8d6g1e2'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3e5e4e3f4d7f6e2e3g8e7b1d2'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3e5e4e3f4d7f6e2e3g8e7c3c4'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3e5e4e3f4d7f6e2e3g8e7g1e2'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3e5e4e3f4g8f6b1d2d7b6e2e3'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3f8d6d4e5d7e5b1d2g8e7g1f3'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3g8f6b1d2f8d6d4e5d7e5d1c2'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3g8f6b1d2f8d6d4e5d7e5g1f3'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3g8f6d1c2e5e4e3f4f8e7b1d2'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3g8f6d4e5d7e5b1d2f8d6g1f3'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3g8f6d4e5d7e5b1d2f8d6g2g4'\n,'h2h3e7e5c2c3d7d5d2d4b8d7c1e3g8f6d4e5d7e5d1c2e5c4e3d4'\n,'h2h3e7e5c2c3d7d5d2d4e5d4c3d4b8c6b1c3g8f6g1f3f8b4c1g5'\n,'h2h3e7e5c2c3d7d5d2d4e5d4c3d4b8c6b1c3g8f6g1f3f8d6c1g5'\n,'h2h3e7e5c2c3d7d5d2d4e5d4c3d4b8c6g1f3g8f6b1c3f8b4c1g5'\n,'h2h3e7e5c2c3d7d5d2d4e5d4c3d4b8c6g1f3g8f6b1c3f8d6c1g5'\n,'h2h3e7e5c2c3d7d5d2d4e5d4c3d4b8c6g1f3g8f6c1g5h7h6g5f6'\n,'h2h3e7e5c2c3d7d5d2d4e5d4c3d4g8f6g1f3b8c6c1g5h7h6g5f6'\n,'h2h3e7e5c2c3d7d5d2d4e5d4c3d4g8f6g1f3f8d6b1c3e8g8c1g5'\n,'h2h3e7e5c2c3d7d5d2d4e5e4c1f4b8c6e2e3g7g5f4g3g8e7c3c4'\n,'h2h3e7e5c2c3d7d5d2d4e5e4c1f4c7c6e2e3f8d6g1e2g8f6b1d2'\n,'h2h3e7e5c2c3d7d5d2d4e5e4c1f4c7c6e2e3f8d6g1e2g8f6f4d6'\n,'h2h3e7e5c2c3d7d5d2d4e5e4c1f4f8d6f4d6d8d6e2e3g8e7g1e2'\n,'h2h3e7e5c2c3d7d5d2d4e5e4c1f4f8d6f4d6d8d6e2e3g8f6c3c4'\n,'h2h3e7e5c2c3d7d5d2d4e5e4c1f4f8d6f4d6d8d6e2e3g8f6g1e2'\n,'h2h3e7e5c2c3d7d5d2d4e5e4c1f4g8e7e2e3b8c6g1e2e7g6f4h2'\n,'h2h3e7e5c2c3d7d5d2d4e5e4c1f4g8f6e2e3a7a6b1d2b8c6c3c4'\n,'h2h3e7e5c2c3d7d5d2d4e5e4c1f4g8f6e2e3a7a6b1d2b8c6g1e2'\n,'h2h3e7e5c2c3d7d5d2d4e5e4c1f4g8f6e2e3a7a6g1e2b8c6b1d2'\n,'h2h3e7e5c2c3d7d5d2d4e5e4c1f4g8f6e2e3f8d6f4d6d8d6g1e2'\n,'h2h3e7e5c2c3d7d5d2d4e5e4c1f4g8f6e2e3f8d6g1e2e8g8b1d2'\n,'h2h3e7e5c2c3d7d5d2d4e5e4c1f4g8f6e2e3f8e7b1d2e8g8g1e2'\n,'h2h3e7e5c2c3f7f5d2d4e5e4c1f4g8f6e2e3d7d5c3c4b8c6b1c3'\n,'h2h3e7e5c2c3f7f5e2e4b8c6e4f5g8f6g2g4d7d5d2d3g7g6g4g5'\n,'h2h3e7e5c2c3f7f5e2e4b8c6e4f5g8f6g2g4g7g6d2d3d7d5g4g5'\n,'h2h3e7e5c2c3f7f5e2e4d7d6d2d3g8f6g1f3b8c6b1d2f8e7f1e2'\n,'h2h3e7e5c2c3f7f5e2e4d7d6d2d3g8f6g1f3f8e7b1d2b8c6f1e2'\n,'h2h3e7e5c2c3f7f5e2e4d7d6e4f5c8f5f1e2b8c6g1f3g8f6e1g1'\n,'h2h3e7e5c2c3f7f5e2e4d7d6e4f5c8f5g1f3g8f6f1e2b8c6e1g1'\n,'h2h3e7e5c2c3f7f5e2e4g8f6e4f5d7d5g2g4b8c6d2d3g7g6g4g5'\n,'h2h3e7e5c2c3g8f6d2d4e5d4c3d4d7d5g1f3b8c6b1c3f8d6c1g5'\n,'h2h3e7e5c2c3g8f6d2d4e5d4c3d4d7d5g1f3b8c6b1c3f8d6e2e3'\n,'h2h3e7e5c2c3g8f6d2d4e5d4c3d4d7d5g1f3b8c6c1g5h7h6g5f6'\n,'h2h3e7e5c2c3g8f6d2d4e5d4c3d4d7d5g1f3f8d6b1c3e8g8c1g5'\n,'h2h3e7e5c2c3g8f6d2d4e5e4c1f4b8c6e2e3a7a6b1d2d7d5c3c4'\n,'h2h3e7e5c2c3g8f6d2d4e5e4c1f4d7d5e2e3a7a6b1d2b8c6c3c4'\n,'h2h3e7e5c2c3g8f6d2d4e5e4c1f4d7d5e2e3a7a6b1d2b8c6g1e2'\n,'h2h3e7e5c2c3g8f6d2d4e5e4c1f4d7d5e2e3a7a6g1e2b8c6b1d2'\n,'h2h3e7e5c2c3g8f6d2d4e5e4c1f4d7d5e2e3f8d6f4d6d8d6c3c4'\n,'h2h3e7e5c2c3g8f6d2d4e5e4c1f4d7d5e2e3f8d6f4d6d8d6g1e2'\n,'h2h3e7e5c2c3g8f6d2d4e5e4c1f4d7d5e2e3f8d6g1e2b8c6b1d2'\n,'h2h3e7e5c2c3g8f6d2d4e5e4c1f4d7d5e2e3f8d6g1e2e8g8b1d2'\n,'h2h3e7e5c2c3g8f6d2d4e5e4c1f4d7d5e2e3f8e7b1d2e8g8g1e2'\n,'h2h3e7e5c2c3h7h5g1f3e5e4f3d4c7c5d4b3a7a5d2d3a5a4b3d2'\n,'h2h3e7e5c2c3h7h5g1f3e5e4f3d4c7c5d4b3g8f6d2d3d7d5c1e3'\n,'h2h3e7e5c2c3h7h5g1f3e5e4f3d4c7c5d4b3g8f6d2d3d7d5d3e4'\n,'h2h3e7e5c2c3h7h6d2d4e5e4c1f4g8f6e2e3f8e7c3c4e8g8b1c3'\n,'h2h3e7e5c2c3h7h6g1f3d7d6d2d3g8f6c3c4f8e7e2e4c7c5d1b3'\n,'h2h3e7e5c2c3h7h6g1f3d7d6e2e4g8f6d2d4e5d4c3d4f6e4f1b5'\n,'h2h3e7e5c2c4b8c6b1c3g8f6e2e3f8c5a2a3d7d5c4d5f6d5g1f3'\n,'h2h3e7e5c2c4g8f6b1c3b8c6g1f3f8b4a2a3b4c3b2c3e8g8d2d3'\n,'h2h3e7e5d2d4e5e4e2e3g8f6c2c4d7d5c4d5f6d5g1e2b8c6b1c3'\n,'h2h3e7e5e2e3b8c6d2d4e5d4e3d4g8f6g1f3d7d5f1d3d8e7c1e3'\n,'h2h3e7e5e2e3d7d5d2d4b8c6d4e5c6e5b1c3g8f6f1e2c8f5a2a3'\n,'h2h3e7e5e2e3d7d5d2d4b8c6g1f3e5e4f3d2f7f5c2c4g8f6b1c3'\n,'h2h3e7e5e2e3d7d5d2d4b8c6g1f3e5e4f3d2g8f6c2c4f8b4f1e2'\n,'h2h3e7e5e2e3d7d5d2d4b8c6g1f3e5e4f3d2g8f6f1e2c8f5c2c4'\n,'h2h3e7e5e2e3d7d5d2d4b8d7c2c4e5d4e3d4g8f6g1f3f8b4c1d2'\n,'h2h3e7e5e2e3d7d5d2d4b8d7c2c4g8f6g1f3e5e4f3d2c7c6b1c3'\n,'h2h3e7e5e2e3d7d5d2d4e5e4c2c4c7c6b1c3g8f6g1e2f8d6c4d5'\n,'h2h3e7e5e2e3g7g6b1c3d7d5g1f3e5e4f3h2f8g7d2d3g8f6h2g4'\n,'h2h3e7e5e2e3g7g6b1c3d7d5g1f3f8g7f1b5b8c6e1g1g8e7d2d3'\n,'h2h3e7e5e2e3g7g6d2d4e5e4c2c4g8f6b1c3b7b6g1e2c8b7g2g4'\n,'h2h3e7e5e2e3g7g6d2d4e5e4c2c4g8f6b1c3b8c6g1e2f8h6d4d5'\n,'h2h3e7e5e2e3g7g6d2d4e5e4c2c4g8f6b1c3f8g7g2g4e8g8f1g2'\n,'h2h3e7e5e2e3g7g6d2d4e5e4c2c4g8f6b1c3f8g7g2g4e8g8g1e2'\n,'h2h3e7e5e2e3g8f6d2d4e5e4c2c4b7b6g1e2c8b7b1c3b8a6a2a3'\n,'h2h3e7e5e2e3g8f6d2d4e5e4c2c4d7d5c4d5f8d6f1c4b8d7b1c3'\n,'h2h3e7e5e2e3g8f6d2d4e5e4c2c4f8b4b1c3e8g8g1e2f8e8a2a3'\n,'h2h3e7e5e2e3h7h6d2d4e5e4g1e2g8f6c2c4b7b6e2g3f8d6b1c3'\n,'h2h3e7e5e2e3h7h6d2d4e5e4g1e2g8f6c2c4f8d6b1c3b7b6e2g3'\n,'h2h3e7e6b2b3b7b6b1c3g8f6g1f3c8b7e2e3c7c5c1b2f8e7d2d4'\n,'h2h3e7e6b2b3b7b6e2e3b8c6b1c3c8b7g1f3g8f6c1b2f8d6c3b5'\n,'h2h3e7e6b2b3b7b6e2e3g8f6g1f3c8b7c1b2b8c6b1c3d7d5f1b5'\n,'h2h3e7e6b2b3b7b6e2e3g8f6g1f3c8b7c1b2f8e7b1c3e8g8f1e2'\n,'h2h3e7e6b2b3b7b6g1f3g8f6b1c3c8b7e2e3h7h6c1b2b8c6f1d3'\n,'h2h3e7e6b2b3b8c6g1f3g8f6e2e3d7d5c1b2f8d6d2d4e8g8c2c4'\n,'h2h3e7e6b2b3b8c6g1f3g8f6e2e3e6e5c1b2e5e4f3e5c6e5b2e5'\n,'h2h3e7e6b2b3d7d5g1f3g8f6c1b2b8c6e2e3f8d6d2d4e8g8c2c4'\n,'h2h3e7e6b2b3g8f6g1f3b8c6e2e3d7d5c1b2f8d6d2d4e8g8c2c4'\n,'h2h3e7e6c2c3b8c6g1f3d7d5d2d4g8f6c1f4f6h5f4h2f8d6e2e3'\n,'h2h3e7e6c2c3d7d5g1f3b8c6d2d4f8d6e2e3g8f6c3c4e8g8b1c3'\n,'h2h3e7e6d2d4b8c6g1f3g8f6c2c4f8b4b1c3e8g8e2e3d7d6c1d2'\n,'h2h3e7e6e2e3b8c6d2d4d7d5g1f3g8f6c2c4f8e7b1c3e8g8f1e2'\n,'h2h3e7e6e2e3b8c6d2d4d7d5g1f3g8f6c2c4h7h6b1c3f8e7f1e2'\n,'h2h3e7e6e2e3b8c6d2d4g8f6g1f3d7d5b1c3f8d6f1d3e6e5d4e5'\n,'h2h3e7e6e2e3b8c6d2d4g8f6g1f3d7d5f1e2f8d6c2c4e8g8e1g1'\n,'h2h3e7e6e2e3h7h6g1f3g8f6d2d4d7d5c2c4c7c5f1d3b8c6e1g1'\n,'h2h3f7f5b1c3g8f6d2d4e7e6c1f4f8b4e2e3c7c5d4c5b8c6f1d3'\n,'h2h3f7f5b1c3g8f6d2d4e7e6c1f4f8b4e2e3f6e4g1e2d7d5a2a3'\n,'h2h3f7f5d2d4g8f6g1f3d7d5b1c3e7e6c1f4f8d6e2e3e8g8f1e2'\n,'h2h3f7f5d2d4g8f6g1f3d7d5b1c3e7e6c1f4f8d6e2e3e8g8f3e5'\n,'h2h3f7f5d2d4g8f6g1f3d7d5e2e3e7e6c2c4f8d6d1b3e8g8b1c3'\n,'h2h3f7f5g1f3b8c6d2d4d7d5c1f4g8f6e2e3e7e6f1b5f8b4c2c3'\n,'h2h3f7f5g1f3d7d5d2d4g8f6c2c4b8c6c4d5f6d5b1c3e7e6e2e3'\n,'h2h3f7f5g1f3d7d5d2d4g8f6c2c4e7e6c1f4d5c4d1a4b8c6a4c4'\n,'h2h3f7f5g1f3g8f6d2d4d7d5b1c3e7e6c1f4f8b4d1d3f6e4f3d2'\n,'h2h3f7f5g1f3g8f6d2d4d7d5c1f4e7e6e2e3f8d6f3e5e8g8f1e2'\n,'h2h3f7f5g1f3g8f6d2d4d7d5c2c4e7e6b1c3b8c6c1g5f8b4e2e3'\n,'h2h3f7f5g1f3g8f6d2d4d7d5e2e3e7e6c2c4f8e7b1c3e8g8f1e2'\n,'h2h3g7g6c2c3f8g7d2d4g8f6g1f3e8g8g2g3b8c6f1g2d7d5e1g1'\n,'h2h3g7g6c2c3f8g7d2d4g8f6g1f3e8g8g2g3d7d5f1g2b7b6c1e3'\n,'h2h3g7g6c2c3f8g7d2d4g8f6g1f3e8g8g2g3d7d5f1g2b7b6e1g1'\n,'h2h3g7g6c2c3f8g7g1f3g8f6d2d4e8g8g2g3d7d5f1g2b7b6e1g1'\n,'h2h3g7g6c2c3g8f6d2d4d7d5g1f3b8c6c1f4f6h5f4h2e7e6b1d2'\n,'h2h3g7g6c2c3g8f6d2d4f8g7g1f3d7d5c1f4c7c5e2e3e8g8b1d2'\n,'h2h3g7g6c2c3g8f6g1f3f8g7d2d4b7b6e2e3e8g8f1d3d7d5e1g1'\n,'h2h3g7g6c2c3g8f6g1f3f8g7d2d4e8g8g2g3b8c6f1g2d7d5e1g1'\n,'h2h3g7g6c2c3g8f6g1f3f8g7d2d4e8g8g2g3b8c6f1g2f8e8d4d5'\n,'h2h3g7g6e2e3f8g7d2d4g8f6g1f3d7d5f1e2e8g8e1g1b8d7b1c3'\n,'h2h3g7g6g1f3f8g7d2d4g8f6b1c3e8g8c1f4d7d6e2e4b8d7f1d3'\n,'h2h3g7g6g1f3g8f6d2d4c7c5d4c5d8a5b1c3f8g7c1e3f6e4e3d4'\n,'h2h3g7g6g1f3g8f6d2d4c7c5d4c5d8a5c2c3a5c5c1e3c5a5d1b3'\n,'h2h3g7g6g1f3g8f6d2d4f8g7b1c3d7d5c1f4e8g8e2e3c7c5f1e2'\n,'h2h3g7g6g1f3g8f6d2d4f8g7b1c3e8g8c1f4c7c5d4c5d8a5d1d2'\n,'h2h3g7g6g1f3g8f6d2d4f8g7b1c3e8g8c1f4d7d5d1d2b8c6e1c1'\n,'h2h3g7g6g1f3g8f6d2d4f8g7b1c3e8g8c1f4d7d5d1d2b8d7d2e3'\n,'h2h3g7g6g1f3g8f6d2d4f8g7c2c3d7d5c1f4c7c5e2e3b8c6b1d2'\n,'h2h3g8f6c2c3b8c6d2d4d7d5g1f3c8d7c1f4e7e6b1d2f6h5f4h2'\n,'h2h3g8f6c2c3e7e5d2d4e5e4c1f4d7d5e2e3f8d6f4d6d8d6g1e2'\n,'h2h3g8f6c2c3e7e5d2d4e5e4c1f4d7d5e2e3f8d6g1e2b8c6b1d2'\n,'h2h3g8f6c2c3e7e5d2d4e5e4c1f4d7d5e2e3f8d6g1e2e8g8b1d2'\n,'h2h3g8f6c2c3g7g6g1f3f8g7d2d4e8g8g2g3d7d5f1g2b8c6e1g1'\n,'h2h3g8f6d2d4d7d5c2c3b8c6g1f3g7g6c1f4f6h5f4h2e7e6e2e3'\n,'h2h3g8f6d2d4d7d5c2c3c7c5d4c5e7e6c1e3d8c7b1d2f8c5e3c5'\n,'h2h3g8f6d2d4d7d5c2c3c7c5g1f3e7e6c1f4b8c6e2e3f8d6f4d6'\n,'h2h3g8f6d2d4g7g6b1c3f8g7g1f3e8g8c1f4c7c5d4c5d8a5d1d2'\n,'h2h3g8f6d2d4g7g6g1f3f8g7c2c3e8g8g2g3b8c6f1g2d7d5e1g1'\n,'h2h3g8f6e2e3e7e5d2d4e5d4e3d4d7d5b1c3f8b4f1d3c7c5d4c5'\n,'h2h3h7h6d2d4g8f6c1f4e7e6g1f3c7c5b1c3c5d4f3d4d7d6d4f3'\n,'h2h3h7h6e2e3e7e5d2d4e5e4g1e2g8f6c2c4b7b6e2g3f8d6b1c3'\n,'h2h3h7h6e2e3e7e6b1c3d7d5d2d4g8f6g1f3c7c5f1d3f8e7b2b3'\n,'h2h3h7h6e2e3e7e6b1c3d7d5d2d4g8f6g1f3c7c5f1e2b8c6e1g1'\n,'h2h3h7h6e2e3e7e6b1c3d7d5g1f3g8f6b2b3b8c6d2d4f8d6f1d3'\n,'h2h3h7h6e2e3e7e6g1f3g8f6b1c3d7d5d2d4c7c5f1e2b8c6e1g1'\n,'h2h3h7h6e2e3e7e6g1f3g8f6d2d4d7d5c2c4c7c5b1c3b8c6f1d3'\n,'h2h3h7h6e2e3e7e6g1f3g8f6d2d4d7d5c2c4c7c5c4d5e6d5f1b5'\n,'h2h3h7h6e2e3e7e6g1f3g8f6d2d4d7d5c2c4c7c5f1d3b8c6b1c3'\n,'h2h3h7h6e2e3e7e6g1f3g8f6d2d4d7d5c2c4f8e7b1c3c7c5f1d3'\n,'h2h3h7h6e2e4e7e5g1f3b8c6f1b5f8c5e1g1d8f6b5c6b7c6c2c3'\n,'h2h3h7h6g1f3g8f6e2e3d7d5b1c3e7e6b2b3b8c6d2d4f8d6f1d3'\n,'h2h3h7h6g1f3g8f6e2e3d7d5b1c3e7e6d2d4c7c5f1d3f8e7b2b3'\n,'h2h3h7h6g1f3g8f6e2e3d7d5b1c3e7e6d2d4c7c5f1d3f8e7e1g1'\n,'h2h3h7h6g1f3g8f6e2e3d7d5b1c3e7e6d2d4c7c5f1e2b8c6e1g1');\nEND;\n/",
      "description": "Core data structures and constants for the chess engine",
      "type": "package_spec",
      "dependencies": [],
      "owner": "Chess Engine Team",
      "version": "1.0",
      "last_modified": "2024-03-15",
      "purpose": "Defines chess game data types, board representations, and common constants"
    },
    {
      "package_name": "BODY",
      "routines": [
        {
          "type": "PROCEDURE",
          "name": "overview",
          "parameters": "",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "UPPER_n",
          "parameters": "n SIMPLE_INTEGER",
          "return_type": "RETURN SIMPLE_INTEGER",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "pdN",
          "parameters": "brik_n SIMPLE_INTEGER, felt SIMPLE_INTEGER",
          "return_type": "RETURN SIMPLE_INTEGER",
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "WRT",
          "parameters": "s VARCHAR2",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "SET_IN",
          "parameters": "members BINARY_INTEGER, setM BINARY_INTEGER",
          "return_type": "BOOLEAN",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "SET_INTERSECT",
          "parameters": "setM BINARY_INTEGER, setN BINARY_INTEGER",
          "return_type": "BINARY_INTEGER",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "SET_UNION",
          "parameters": "setM BINARY_INTEGER, setN BINARY_INTEGER",
          "return_type": "BINARY_INTEGER",
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "SET_INCL",
          "parameters": "setM in out BINARY_INTEGER, members BINARY_INTEGER",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "SET_XOR",
          "parameters": "setM BINARY_INTEGER, setN BINARY_INTEGER",
          "return_type": "BINARY_INTEGER",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "SET_DIFF",
          "parameters": "setM BINARY_INTEGER, setN BINARY_INTEGER",
          "return_type": "BINARY_INTEGER",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "SET_COMPLEMENT",
          "parameters": "setM BINARY_INTEGER, setN BINARY_INTEGER",
          "return_type": "BINARY_INTEGER",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "MEMBER_KEY",
          "parameters": "memberno simple_integer",
          "return_type": "simple_integer",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "MEMBER_NO",
          "parameters": "memberkey simple_integer",
          "return_type": "simple_integer",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "TO_BINSTR",
          "parameters": "setM BINARY_INTEGER",
          "return_type": "RETURN VARCHAR2",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "STILLING_TO_EPD",
          "parameters": "stilling PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, operationlist VARCHAR2 DEFAULT NULL",
          "return_type": "RETURN VARCHAR2",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "FEN_EPD_TO_STR",
          "parameters": "FEN_EPD VARCHAR2",
          "return_type": "RETURN VARCHAR2",
          "category": "notation"
        },
        {
          "type": "PROCEDURE",
          "name": "still",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, p_st char DEFAULT ''",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "GetNextTil",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, fra in out SIMPLE_INTEGER ,til in out SIMPLE_INTEGER, retning IN OUT SIMPLE_INTEGER,\n                     MoveTyp in out MOVETYPE",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "DoMove",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, fra SIMPLE_INTEGER,til SIMPLE_INTEGER, MoveTyp MOVETYPE",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "DoMoveC",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, fra SIMPLE_INTEGER,til SIMPLE_INTEGER",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "FUNCTION",
          "name": "CheckSkak2",
          "parameters": "stilling IN OUT PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, n SIMPLE_INTEGER, hvid BOOLEAN",
          "return_type": "RETURN BOOLEAN",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "CheckSkak",
          "parameters": "stilling IN OUT PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, n SIMPLE_INTEGER, hvid BOOLEAN",
          "return_type": "RETURN BOOLEAN",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "IkkeSkak",
          "parameters": "stilling IN OUT PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, fra SIMPLE_INTEGER,p_til SIMPLE_INTEGER,\n                  MoveTyp MOVETYPE",
          "return_type": "RETURN BOOLEAN",
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "GetNext",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                  fra in out SIMPLE_INTEGER,\n                  til in out SIMPLE_INTEGER,\n                  retning in out SIMPLE_INTEGER,\n                  MoveTyp in out MOVETYPE",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "Mirror",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "DoMoveOk",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, fra SIMPLE_INTEGER,til SIMPLE_INTEGER,MoveTyp in out MOVETYPE",
          "return_type": "RETURN BOOLEAN",
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "ShellSort_",
          "parameters": "",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "QSortTrk",
          "parameters": "Trk in out TRAEKDATA, Fromm SIMPLE_INTEGER,Upto SIMPLE_INTEGER",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "Egain",
          "parameters": "stilling IN OUT PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE,\n               fr SIMPLE_INTEGER,\n               ti SIMPLE_INTEGER,\n               OwnCount IN OUT SIMPLE_INTEGER,\n               FirstCountAttacker IN OUT SIMPLE_INTEGER",
          "return_type": "RETURN SIMPLE_INTEGER",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "Fight",
          "parameters": "p_Fown FIGHTERS, Fopp FIGHTERS, Pool SIMPLE_INTEGER",
          "return_type": "RETURN SIMPLE_INTEGER",
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "scan",
          "parameters": "r SIMPLE_INTEGER,Diag BOOLEAN",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "QFind",
          "parameters": "p_stilling PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE,\n               Activityy  SIMPLE_INTEGER,\n               far        SIMPLE_INTEGER,\n               farfar     SIMPLE_INTEGER,\n               cf         SIMPLE_INTEGER,\n               p_Qdepth   SIMPLE_INTEGER,\n               p_Chess      BOOLEAN,\n               p_farFra   SIMPLE_INTEGER,\n               p_farTil   SIMPLE_INTEGER,\n               farfarFra  SIMPLE_INTEGER,\n               farfarTil  SIMPLE_INTEGER",
          "return_type": "RETURN SIMPLE_INTEGER",
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "ClearHistory",
          "parameters": "p_cnt SIMPLE_INTEGER, p_black BOOLEAN",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "AddHistory",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                     fra SIMPLE_INTEGER,\n                     til SIMPLE_INTEGER,\n                     vlu SIMPLE_INTEGER",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "Equal_old",
          "parameters": "p_stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, p_still2 in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE",
          "return_type": "RETURN BOOLEAN",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "Equal",
          "parameters": "p_stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, p_still2 in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE",
          "return_type": "RETURN BOOLEAN",
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "Find",
          "parameters": "p_stilling PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n               p_dybde     SIMPLE_INTEGER, \n               far         SIMPLE_INTEGER,\n               farfar      SIMPLE_INTEGER,\n               cf          SIMPLE_INTEGER, --cf=20*",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "NEq",
          "parameters": "s1 in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE,s2 in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE",
          "return_type": "RETURN BOOLEAN",
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "FindTrk",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                  dybde SIMPLE_INTEGER,\n                  ekstra SIMPLE_INTEGER,\n                  Traek in out TRKDATA\n                  ",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "GetNextQ",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                   fra in out SIMPLE_INTEGER,\n                   til in out SIMPLE_INTEGER,\n                   retning in out SIMPLE_INTEGER,\n                   MoveTyp in out MOVETYPE",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "GetMove",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                  t in out TRKDATA, \n                  MoveNr SIMPLE_INTEGER, \n                  Quick BOOLEAN",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "GetMoveNr",
          "parameters": "stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                    p_Fra SIMPLE_INTEGER,\n                    p_Til SIMPLE_INTEGER, \n                    MoveNr in out SIMPLE_INTEGER, \n                    Quick BOOLEAN",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "InitValueCalc",
          "parameters": "",
          "return_type": null,
          "category": "evaluation"
        },
        {
          "type": "PROCEDURE",
          "name": "InitTeo_Old",
          "parameters": "",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "TeoS",
          "parameters": "StilNr SIMPLE_INTEGER,\n               TrkNr SIMPLE_INTEGER,\n               fra SIMPLE_INTEGER,\n               til SIMPLE_INTEGER, \n               mvt MOVETYPE, \n               vlu SIMPLE_INTEGER",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "AddTeoMove",
          "parameters": "fr SIMPLE_INTEGER,ti SIMPLE_INTEGER, movetyp MOVETYPE, frequency SIMPLE_INTEGER",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "AddTeo",
          "parameters": "fromtostr VARCHAR2, frequency SIMPLE_INTEGER DEFAULT 1, maxmoves INTEGER DEFAULT 20",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "InitTeo",
          "parameters": "",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "InitRetn",
          "parameters": "",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "Initialize",
          "parameters": "",
          "return_type": null,
          "category": "general"
        }
      ],
      "content": "DROP PACKAGE BODY PL_PIG_CHESS_ENGINE;\n\nCREATE OR REPLACE PACKAGE BODY PL_PIG_CHESS_ENGINE AS\n--\n--\n\n-- LICENSE\n--\n-- PL_PIG_CHESS_ENGINE v 0.92,                  (c) Egon Von Bech Madsen, Denmark (ema@adm.ku.dk) \n--\n-- This software is Diceware. Diceware is defined as Freware with one restriction:\n--\n--   For non-commercial use:\n--      roll one dice until you get 6, then take a picture. That picture is your 10 year free license.\n--\n--   For commercial use of small or medium sized companies (Yearly revenue less than US$ 60 billion), like Oracle:\n--      roll two dices until you get 6 6, then take a picture. That picture is your 10 year free license.\n--\n--   For commercial use of large sized companies (Yearly revenue more than US$ 60 billion), like Microsoft:\n--      roll three dices until you get 6 6 6, then take a picture. That picture is your 10 year free license.\n--\n-- It is allowed to modify and share the code as long as this LICENSE-text is unmodified.\n--\n-- ****************************************************************************************\n-- * Disclaimer (use at your own risk):                                               \n-- * Any use of this software is strictly at your own risk, and I will not be liable for \n-- * any losses and damages in connection with the use of this software.\n-- ****************************************************************************************\n-- LICENSE <end>\n\n-- PL_PIG_CHESS_ENGINE is a Chess Engine written in Oracle PL/SQL.\n--\n-- HISTORY\n-- Migrated from the Engine of PIGbase4 v2.8, coded with M2Amiga Modula-2 v4.2 \n--\n-- The Engine is 3 packages:\n-- PL_PIG_CHESS_ENGINE\n-- PL_PIG_CHESS_ENGINE_EVAL\n-- PL_PIG_CHESS_DATA\n--\n-- Also included is a package:\n-- PL_PIG_CHESS_INTERFACE \n-- making it possible to play with the Engine and run some test-suites using DBMS_OUTPUT.\n\n-- TECHNICAL (PL/SQL)\n-- PL/SQL is a quite restricted and slow language, not the perfect choice for a Chess Engine.\n-- If You want top strength, don't use PIG-Chess, but install a Stockfish Engine at Your HOST OS.\n--\n-- Fair Performance is reached by intensive use of VARRAYS, SIMPLE_INTEGER and INLINE'able SET operators. \n-- And by NOT using SQL features. The many initiations of arrays happens only one time pr session/game.\n--\n-- TECHNICAL (CHESS)\n-- Opening book\n-- Static evaluation\n-- quiescence deepening minimax algorithm with alpha/beta cut-off and sort for better pruning\n-- Q-search (deeper selective search on killer-moves like check)\n-- Leaf evaluation\n-- Single CPU only\n-- Supports 5 levels (from few seconds to several minutes pr move).\n-- Rating: up to 1600\n-- FEN and EPD is supported.\n--\n-- INSTALLATION\n-- Install the 4 packages on a Oracle database:\n-- 1. PL_PIG_CHESS_DATA\n-- 2. PL_PIG_CHESS_ENGINE_EVAL\n-- 3. PL_PIG_CHESS_ENGINE\n-- 4. PL_PIG_CHESS_INTERFACE\n--\n-- USE:\n-- 1. Use SQL*PLUS or Toad/SQL-Developer with DBMS_OUTPUT activated\n-- 2. Use examples seen in PL_PIG_CHESS_INTERFACE\n--\n-- OR:\n-- Make your own graphical (APEX?) interface...\n\n\n\n/*\n\n               PROCEDURES :\n\nInitTeo :\n  Intitiates a micro-opening book, gives first few moves random\nInitialize :\n  Initiates move/value lookup data (varrays)\nGetNextTil :\n   finds next legal (white/black) move with current piece in the position, til=fra -> fra=89 when no more\n   fra=fra-1 and til=89 to see the possible moves for a piece; \n   And calculates MoveType as used in DoMove and IkkeSkak (not-check)\nDoMove :\n   Do (white/black) move, already validated OK (by GetNext) \n   pawn-promotions: 20 less then Rook, 30 then kNight, 40 bishop\n   MoveTyp MUST be set to enpassant and castling (rokade) when relevant!!! (use DoMoveC) \nDoMoveC :\n  As DoMove, but NO MoveTyp information is required\n  Faster than DoMoveOK, used when the move is alread validated OK \nCheckSkak :\n   checks if field n is threatned by white/black.\nIkkeSkak :\n   checks if  (white/black) move is illegal p.gr.a. check.\n   MoveTyp MUST be set to rokade (castling) and pat (stalemate) when relevant!!!\nGetNext :\n  finds next legal (white/black) move in the position, fra=89 when no more\n  fra=fra-1 and til=89 for lsning af en briks muligheder; \nMirror :\n   Morrors the position, so white/black is swapped\nDoMoveOk :\n  complete check if move is ok, generates black/white moves using DoMove \n  IF not DoMoveOk() then error.. -> generates a move if it's legal\nQSortTrk :\n  Sorts a list of moves after value\nEqual :\n  Compare two positions \nstill :\n  setup a position from a string in POSITIONSTR format (st='' gives start-position) \nDoMoveC :\n  As DoMove, but NO MoveTyp information is required\n  Faster than DoMoveOK, used when the move is alread validated OK \nFind :\n  recursive move-generator/evaluator\nNEq :\n    Compare two positions (NotEqual) used by Mikro Openingbook\nFindTrk :\n  StartStub for Find\nClearHistory :\n clears engine history data 3* array: cnt=1-4,black=colour \n\nPreProcess  : (Eval)\n  sets the pd array..default positional values. The static evaluator\nPreProcessor  : (Eval)\n  adjusts the pd-array+OpenGame+EngGame according..the actual position. The static evaluator\nEval : (Eval)\n  Evaluates a position. The dynamic evaluator\n\n     PROCEDURE overview : if () then in SkakKey,\n                          if {} then in SkakBrainX.\n                          if (] then in SkakBrainEval\n\n     (CalcMunde)__________{GetV} ______________________________ {GetNextTilV}\n                \\_________{GetD} ______________ {GetNextD} ____ {GetNextTilD}\n                 \\________Mirror\n\n     GetMoveNr____\n                  \\\n     GetMove_      \\\n             \\      \\\n     DoMoveOk_\\______\\_ GetNext ____________ GetNextTil\n               \\________ DoMove       \\_____ IkkeSkak _____ CheckSkak\n     DoMoveC\n               _________{InitTeo}\n     {Init}___/     \n                  _____(PreProcessor]______(PreProcess]\n                 /\n     FindTrk  __/______ Find _______________ (AEM)\n                               \\____________+GetNext\n                                \\___________+DoMove\n                                 \\__________+Mirror\n                                  \\_________+IkkeSkak\n     (MarkMoves) ______+GetNext    \\________ QSortTrk\n                                    \\_______ (Eval]\n*/\n\n  SkakBrainModCompilation CONSTANT VARCHAR2(16) :='1041';\n  MaxDistance  CONSTANT  SIMPLE_INTEGER :=  18; -- Location in retn array to store  maxdistance\n  DrawAccept   CONSTANT  SIMPLE_INTEGER :=  -25; -- only for repetition: positive=peaceful, default=0\n  movetyp     MOVETYPE:=0;\n  Traek       TRKDATA;\n  TYPE ValueCalcYtype IS VARRAY(53) OF SIMPLE_INTEGER; -- offset= -31 (' '..'T']\n  TYPE ValueCalcType  IS VARRAY(20) OF ValueCalcYtype; -- offset= -64 ('A'..'T']\n  ValueCalc ValueCalcType := ValueCalcType();\n  FraTag        SIMPLE_INTEGER := 0; -- test only (25=e2, 0=all)\n  MaxStackDepth SIMPLE_INTEGER := 0; --..avoid stack overrun (45000 stack: max 30)\n  BlacksTurn BOOLEAN; -- who is move calculated for, is set by FindTrk\n  STOPP      BOOLEAN;\n  FirstW   BOOLEAN := FALSE; \n\n/*\n  ValueT CONSTANT SIMPLE_INTEGER  := 470; --rook: danish: T\u00e5rn\n  ValueR CONSTANT SIMPLE_INTEGER  := 480; --rook (castling possible) danish: t\u00e5rn (Rokade)\n  ValueM CONSTANT SIMPLE_INTEGER  :=9999; --king (castling possible) danish: Konge (Majest\u00e6t)\n  ValueK CONSTANT SIMPLE_INTEGER  :=9980; --king danish: Konge\n  ValueD CONSTANT SIMPLE_INTEGER  := 880; --Queen danish: Dronning\n  ValueL CONSTANT SIMPLE_INTEGER  := 300; --Bishop danish: L\u00f8ber\n  Value_S CONSTANT SIMPLE_INTEGER := 300; --knight danish: Springer\n  ValueB CONSTANT SIMPLE_INTEGER  := 100; --pawn danish: Bonde\n  ValueE CONSTANT SIMPLE_INTEGER  := 100; --pawn (en-passant) danish: bonde (En-passant) \n*/\n\n  TYPE stDarrType IS VARRAY (8) OF SIMPLE_INTEGER;\n  stDarr stDarrType := stDarrType(PL_PIG_CHESS_ENGINE_EVAL.ValueB,PL_PIG_CHESS_ENGINE_EVAL.Value_S,PL_PIG_CHESS_ENGINE_EVAL.ValueT,PL_PIG_CHESS_ENGINE_EVAL.ValueD,PL_PIG_CHESS_ENGINE_EVAL.Value_S,PL_PIG_CHESS_ENGINE_EVAL.ValueT,PL_PIG_CHESS_ENGINE_EVAL.ValueK);\n  stDcount    CONSTANT SIMPLE_INTEGER :=8;-- f\u00f8r 0\n  stDpawns    CONSTANT SIMPLE_INTEGER :=1;\n  stDknights  CONSTANT SIMPLE_INTEGER :=2;\n  stDbishops  CONSTANT SIMPLE_INTEGER :=2;\n  stDrooks    CONSTANT SIMPLE_INTEGER :=3;\n  stDqueens   CONSTANT SIMPLE_INTEGER :=4;\n  stDbishopsB CONSTANT SIMPLE_INTEGER :=5; --behind Queen \n  stDrooksB   CONSTANT SIMPLE_INTEGER :=6; --behind Queen \n  stDking     CONSTANT SIMPLE_INTEGER :=7;\n\n  StartEval     SIMPLE_INTEGER:=0;\n  SkakDepth     SIMPLE_INTEGER:=0;\n  XchDepth      SIMPLE_INTEGER:=0;\n  MaxPosValGain SIMPLE_INTEGER:=0;\n  MaxEvals      SIMPLE_INTEGER:=0; -- not used in Qfind \n\n  TeoMoves SIMPLE_INTEGER:=0;\n  \n  HisMax CONSTANT SIMPLE_INTEGER :=20; -- change value in SkakFil.GetStilling too \n        -- 1=White 2=Black 1..HisMax last HisMax positions+moves\n  TYPE RepeteYrectype IS RECORD (st PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE,\n                                     tr TRKDATA);\n  TYPE RepeteYtype IS VARRAY(HisMax) OF RepeteYrectype;                        \n  TYPE RepeteXYtype IS VARRAY(2) OF RepeteYtype;-- tidl (FALSE..TRUE) now  --1=FALSE, 2=TRUE \n  Repete RepeteXYtype := RepeteXYtype(); --Detection of same position 3 times within last 20 full-moves\n\n  FirstCall BOOLEAN; -- FindTrk sets, then Find see it's first time\n                     -- and resets FirstCall                        \n  --TeoNvn CONSTANT varchar2(255) := 'OPENINGS.TXT';\n--\n--\n--compare with simple_integer is double speed than compare with char(1).\n--Numeric representation of pieces to get best possible speed:\n\nwN CONSTANT SIMPLE_INTEGER  := 115;--ASCII('s');--White kNight\nbN CONSTANT SIMPLE_INTEGER  :=  83;--ASCII('S');--Black kNight\nwB CONSTANT SIMPLE_INTEGER  := 108;--ASCII('l');--White Bishop\nbB CONSTANT SIMPLE_INTEGER  :=  76;--ASCII('L');--Black Bishop\nwR CONSTANT SIMPLE_INTEGER  := 116;--ASCII('t');--White Rook\nbR CONSTANT SIMPLE_INTEGER  :=  84;--ASCII('T');--Black Rook\nwC CONSTANT SIMPLE_INTEGER  := 114;--ASCII('r');--White rook with Castling\nbC CONSTANT SIMPLE_INTEGER  :=  82;--ASCII('R');--Black rook with Castling\nwQ CONSTANT SIMPLE_INTEGER  := 100;--ASCII('d');--White Queen\nbQ CONSTANT SIMPLE_INTEGER  :=  68;--ASCII('D');--Black Queen\nwP CONSTANT SIMPLE_INTEGER  :=  98;--ASCII('b');--White Pawn\nbP CONSTANT SIMPLE_INTEGER  :=  66;--ASCII('B');--Black Pawn\nwE CONSTANT SIMPLE_INTEGER  := 101;--ASCII('e');--White pawn En-passant\nbE CONSTANT SIMPLE_INTEGER  :=  69;--ASCII('E');--Black pawn En-passant\nwK CONSTANT SIMPLE_INTEGER  := 107;--ASCII('k');--White King\nbK CONSTANT SIMPLE_INTEGER  :=  75;--ASCII('K');--Black King\nwM CONSTANT SIMPLE_INTEGER  := 109;--ASCII('m');--White Majesty (king w castling)\nbM CONSTANT SIMPLE_INTEGER  :=  77;--ASCII('M');--Black Majesty (king w castling)\nwA CONSTANT SIMPLE_INTEGER  :=  97;--ASCII('a');--White pieces all bigger than this\nbA CONSTANT SIMPLE_INTEGER  :=  65;--ASCII('A');--Pieces all bigger than this + reference index\nwT CONSTANT SIMPLE_INTEGER  :=  72;--ASCII('H');--Whites Turn (index hvistur)\nbT CONSTANT SIMPLE_INTEGER  :=  83;--ASCII('S');--Blacks Turn (index hvistur)\nspc CONSTANT SIMPLE_INTEGER :=  32;--ASCII(' ');--Space\nedge CONSTANT SIMPLE_INTEGER:=  46;--ASCII('.');--Edge-marker\n\nFUNCTION UPPER_n(n SIMPLE_INTEGER) RETURN SIMPLE_INTEGER IS\nBEGIN\n  IF n<wA THEN\n    RETURN n;\n  ELSE \n    RETURN n - 32;\n  END IF;\nEND UPPER_n;\n--\nFUNCTION pdN(brik_n SIMPLE_INTEGER, felt SIMPLE_INTEGER) RETURN SIMPLE_INTEGER IS\nBEGIN -- two-dimensional array (bP..wR, 11..88) -> 1..3978. Here index is calculated out of Numeric repr\u00e6sentation (ascii value) of pieces.\n  --RETURN (brik - 66) * 78 + felt - 10; -- ASCII(bP)=66  ASCII(wR)=116\n  RETURN brik_n * 78 -5158 + felt; -- ASCII(bP)=66\nEND pdN;\n\n/*\n  logical structure for a position :\n    RECORD\n      stilling :ARRAY(-1..11,-1..11] OF BRIK;\n      hvistur  :BOOLEAN;\n    END;\n  where 1,1 -> 8,8  A1 -> H8 , so 11-88 is A1-H8\n  and the rest is a doubbel edge ('.') to catch movegenerator when hitting outside the board\n   \n  capitalized pieces is Black. Names is from danish.\n  \n  The en-passant and castling rights is implicit stored by changing the piecenames.\n  Example: First time a Rook moves, it will change name, to tell it can not be used for castling.\n  Example: An unmoved king have extended moves (two to right or left), supporting castling in a simple way (quicker)\n  \n  retn contains data to generate the legal moves. Every piece (brik) has\n  a number of direction (retning) vectors (4-8) and a MaxDistance (RQB=TRDL=8, PNK=BSKM=1).\n  retn(brik,MaxDistance]\n  retn(brik,0]           indeholder f\u00f8rste retning.\n  retn(brik,retning]     indeholder s\u00e5 n\u00e6ste retning indtil den er 0.\n\n  The knight is MaxDistance=1 an eight directionvektors pointing\n  directly on fields, of possible moves.\n\n  Promotion to other than Queen is registred in 'to' as: 20 less then Rook, 30 then kNight, 40 bishop\n  If black then it is registred in 'to' as: 20 more then Rook, 30 then kNight, 40 bishop (\n  Example: move a7-a8(Q) is stored 71->81 while a7-a8(N) is stored 71->51\n\n  retn is a sparse matrice. 20x43x2=1.6 Kbytes keep 63 bytes (4%). \n  But lookup is fastest so this physical representation is preferred.\n*/\n--\nPROCEDURE WRT(s VARCHAR2) IS\n--for tests/debug only\nBEGIN\n  dbms_output.put_line('PL '||s);\nEND WRT;\n--\n\n--\n-- ************************************************************************************************\n-- ***********    PL/SQL high-performance implementation of sets (of up to 31 members)    *********\n--\n-- supports UNION, INTERSECT, COMPLEMENT (MINUS), IN, XOR and (kind of) named members \n--\n--  By using one 32 bit (not-null) simple_integer to hold a set, its possible to implement sets in pl/sql like found in other \n--  Block-structured languages. At the same time, the performance will be far better than other techniques on pl/sql.     \n--\n--\n-- To get best performance (upto twice the 'normal'):\n--    Copy all functions to be local in your package                           -- makes it possible to use inline optimization. \n--    alter session set plsql_optimize_level =3;                               -- will then use inline optimation. \n--    alter procedure <name> compile plsql_code_type=NATIVE plsql_debug=FALSE; -- Will Compile Your package NATIVE \n--\nFUNCTION SET_IN(members BINARY_INTEGER, setM BINARY_INTEGER) return BOOLEAN IS\nBEGIN -- IN: member of set (M n N)\nRETURN UTL_RAW.CAST_TO_BINARY_INTEGER(UTL_RAW.bit_and(UTL_RAW.CAST_FROM_BINARY_INTEGER(members),UTL_RAW.CAST_FROM_BINARY_INTEGER(setM)))=members;\nEND;\n--\nFUNCTION SET_INTERSECT(setM BINARY_INTEGER, setN BINARY_INTEGER) return BINARY_INTEGER IS\nBEGIN -- intersection (M n N), uses AND\nRETURN UTL_RAW.CAST_TO_BINARY_INTEGER(UTL_RAW.bit_and(UTL_RAW.CAST_FROM_BINARY_INTEGER(setM),UTL_RAW.CAST_FROM_BINARY_INTEGER(setN)));\nEND;\n--\nFUNCTION SET_UNION(setM BINARY_INTEGER, setN BINARY_INTEGER) return BINARY_INTEGER IS\nBEGIN -- union set (M u N), uses OR\nRETURN UTL_RAW.CAST_TO_BINARY_INTEGER(UTL_RAW.bit_or(UTL_RAW.CAST_FROM_BINARY_INTEGER(setM),UTL_RAW.CAST_FROM_BINARY_INTEGER(setN)));\nEND;\n--\nPROCEDURE SET_INCL(setM in out BINARY_INTEGER, members BINARY_INTEGER) IS\nBEGIN -- include member(s) to set (M u N), uses OR\n  setM := UTL_RAW.CAST_TO_BINARY_INTEGER(UTL_RAW.bit_or(UTL_RAW.CAST_FROM_BINARY_INTEGER(setM),UTL_RAW.CAST_FROM_BINARY_INTEGER(members)));\nEND;\n--\nFUNCTION SET_XOR(setM BINARY_INTEGER, setN BINARY_INTEGER) return BINARY_INTEGER IS\nBEGIN -- difference set, uses XOR \nRETURN UTL_RAW.CAST_TO_BINARY_INTEGER(UTL_RAW.bit_xor(UTL_RAW.CAST_FROM_BINARY_INTEGER(setM),UTL_RAW.CAST_FROM_BINARY_INTEGER(setN)));\nEND;\n/*\nFUNCTION SET_DIFF(setM BINARY_INTEGER, setN BINARY_INTEGER) return BINARY_INTEGER IS\nBEGIN -- -- Difference set (M c N), uses COMPLEMENT(M) AND N (DO NOT USE, as COMPLEMENT can do the same (reverse parameters) and XOR gives more real difference.\nRETURN UTL_RAW.CAST_TO_BINARY_INTEGER(UTL_RAW.bit_and(UTL_RAW.bit_complement(UTL_RAW.CAST_FROM_BINARY_INTEGER(setM)),UTL_RAW.CAST_FROM_BINARY_INTEGER(setN)));\nEND;*/\n--\nFUNCTION SET_COMPLEMENT(setM BINARY_INTEGER, setN BINARY_INTEGER) return BINARY_INTEGER IS \nBEGIN -- Complementary set (M \\ N or M minus N), uses COMPLEMENT(N) AND M\nRETURN UTL_RAW.CAST_TO_BINARY_INTEGER(UTL_RAW.bit_and(UTL_RAW.bit_complement(UTL_RAW.CAST_FROM_BINARY_INTEGER(setN)),UTL_RAW.CAST_FROM_BINARY_INTEGER(setM)));\nEND;\n--\nFUNCTION MEMBER_KEY(memberno simple_integer) return simple_integer IS\n-- member key (from its member number to its internal value)\nres simple_integer := 1;\nn simple_integer := 0;\nBEGIN -- intern key for member nr (1..31)\nIF memberno = 0 THEN RETURN 0;\nELSIF memberno between 1 and 31 THEN\nFOR n IN 2..memberno LOOP\nres := res * 2;\nEND LOOP;\nRETURN res;\nELSE\nRETURN -1;\nEND IF;\nEND;\n--\nFUNCTION MEMBER_NO(memberkey simple_integer) return simple_integer IS\n-- member number (from its internal value)\nres simple_integer := 1;\nn simple_integer := 0;\nBEGIN -- member nr (1..31) for intern key\nIF memberkey = 0 THEN RETURN 0; END IF;\nIF memberkey = 1 THEN RETURN 1; END IF;\nFOR n IN 2..31 LOOP\nres := res * 2;\n--WRT(res||' key:'||memberkey);\nIF memberkey = res THEN RETURN n; END IF;\nEND LOOP;\nRETURN -1;\nEND;\n--\nFUNCTION TO_BINSTR(setM BINARY_INTEGER) RETURN VARCHAR2 IS\n-- converts a set to a string in binary format\nhex VARCHAR2(80);\nres VARCHAR2(80);\nBEGIN\nhex :=ltrim(to_char(setM,'XXXXXXXX'));\nIF LENGTH(hex) = 1 THEN\nhex := '000'||hex;\nELSIF LENGTH(hex) = 2 THEN\nhex := '00'||hex;\nELSIF LENGTH(hex) = 3 THEN\nhex := '0'||hex;\nEND IF;\n--WRT('\"'||hex||'\"');\nFOR n in 1..LENGTH(hex) LOOP\nres := res||\nCASE substr(hex,n,1)\nWHEN '0' THEN '0000'\nWHEN '1' THEN '0001'\nWHEN '2' THEN '0010'\nWHEN '3' THEN '0011'\nWHEN '4' THEN '0100'\nWHEN '5' THEN '0101'\nWHEN '6' THEN '0110'\nWHEN '7' THEN '0111'\nWHEN '8' THEN '1000'\nWHEN '9' THEN '1001'\nWHEN 'A' THEN '1010'\nWHEN 'B' THEN '1011'\nWHEN 'C' THEN '1100'\nWHEN 'D' THEN '1101'\nWHEN 'E' THEN '1110'\nWHEN 'F' THEN '1111'\nELSE '____' END; \nEND LOOP;\nRETURN res;\nEND;\n-- *********   END END END  PL/SQL high-performance implementation of sets END END END    *********\n-- ************************************************************************************************\n-- \n--\nFUNCTION STILLING_TO_EPD(stilling PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, operationlist VARCHAR2 DEFAULT NULL) RETURN VARCHAR2 IS\n--Converts a position from internal array format to a string in EPD format\n--Possible to add EPD operations. Example: 'bm Nf3; id \"test1\";'\n HJ_EPD VARCHAR2(255):='';\n SPCC SIMPLE_INTEGER :=0;\n n   SIMPLE_INTEGER :=0;\n rwa BOOLEAN := FALSE;--  rook-white A castle\n rba BOOLEAN := FALSE;--  rook-black A castle\n rwh BOOLEAN := FALSE;--  rook-white H castle\n rbh BOOLEAN := FALSE;--  rook-black H castle\n kw  BOOLEAN := FALSE;--  king-white castle\n kb  BOOLEAN := FALSE;--  king-black castle\n ep  VARCHAR2(2) := ''; --en-passant field\n ch  SIMPLE_INTEGER :=0;\nBEGIN\n  FOR y IN 1..8 LOOP\n    FOR x IN 1..8 LOOP\n      n:=10*(9-y)+x;\n      ch := stilling(stOff+ n);\n      IF ch=spc THEN  \n        SPCC := SPCC + 1;\n      ELSE\n        IF SPCC > 0 THEN\n          HJ_EPD:= HJ_EPD||TO_CHAR(SPCC);\n          SPCC := 0;\n        END IF;\n        CASE CH\n           WHEN bP THEN HJ_EPD:= HJ_EPD||'p';\n           WHEN bE THEN HJ_EPD:= HJ_EPD||'p'; ep :=  CHR(ASCII(x)+48)||'6';\n           WHEN bR THEN HJ_EPD:= HJ_EPD||chr(wC);\n           WHEN bC THEN HJ_EPD:= HJ_EPD||chr(wC); IF x=1 THEN rba := TRUE; ELSIF x=8 THEN rbh := TRUE; END IF;\n           WHEN bK THEN HJ_EPD:= HJ_EPD||chr(wK); \n           WHEN bM THEN HJ_EPD:= HJ_EPD||chr(wK); kb := TRUE;\n           WHEN bB THEN HJ_EPD:= HJ_EPD||chr(wP);\n           WHEN bN THEN HJ_EPD:= HJ_EPD||'n';\n           WHEN bQ THEN HJ_EPD:= HJ_EPD||'q';\n           WHEN wP THEN HJ_EPD:= HJ_EPD||'P';\n           WHEN wE THEN HJ_EPD:= HJ_EPD||'P'; ep :=  CHR(ASCII(x)+48)||'3';\n           WHEN wR THEN HJ_EPD:= HJ_EPD||chr(bC);\n           WHEN wC THEN HJ_EPD:= HJ_EPD||chr(bC); IF x=1 THEN rwa := TRUE; ELSIF x=8 THEN rwh := TRUE; END IF;\n           WHEN wK THEN HJ_EPD:= HJ_EPD||chr(bK);\n           WHEN wM THEN HJ_EPD:= HJ_EPD||chr(bK); kw := TRUE;\n           WHEN wB THEN HJ_EPD:= HJ_EPD||chr(bP);\n           WHEN wN THEN HJ_EPD:= HJ_EPD||'N';\n           WHEN wQ THEN HJ_EPD:= HJ_EPD||'Q';\n        END CASE;\n      END IF;\n    END LOOP;\n    IF SPCC > 0 THEN\n      HJ_EPD:= HJ_EPD||TO_CHAR(SPCC);\n      SPCC := 0;\n    END IF;\n    IF y < 8 THEN HJ_EPD:= HJ_EPD||'/'; END IF;\n  END LOOP;\n  --\n  IF stilling(stOff+ HvisTur) = bN THEN\n    HJ_EPD:= HJ_EPD||' b';\n  ELSE \n    HJ_EPD:= HJ_EPD||' w';\n  END IF;\n  --\n  IF kw OR kb THEN\n    HJ_EPD:= HJ_EPD||' '||CASE WHEN rwh THEN chr(bK) END||CASE WHEN rwa THEN 'Q' END||CASE WHEN rbh THEN chr(wK) END||CASE WHEN rba THEN 'q' END;  \n  ELSE\n    HJ_EPD:= HJ_EPD||' -';\n  END IF;\n  --\n  IF ep IS NULL THEN\n    HJ_EPD:= HJ_EPD||' -';\n  ELSE\n    HJ_EPD:= HJ_EPD||' '||ep;\n  END IF;  \n  --\n  IF operationlist is NULL THEN\n    RETURN HJ_EPD;\n  ELSE\n    RETURN HJ_EPD||' '||ltrim(operationlist);\n  END IF;\nEXCEPTION \n  WHEN OTHERS THEN\n    RETURN(substr(sqlerrm,1,200));\nEND STILLING_TO_EPD;   \n         \n\nFUNCTION FEN_EPD_TO_STR(FEN_EPD VARCHAR2) RETURN VARCHAR2 IS\n-- converts a position in FEN or EPD format to POSITIONSTR format.\n HJ_FEN_EPD VARCHAR2(255):=REPLACE(REPLACE(FEN_EPD,chr(10)),chr(13));\n sla  INTEGER;\n sla2 INTEGER;\n HJ_S VARCHAR2(50);\n HJ_LIN VARCHAR2(18);\n HJ_STR VARCHAR2(89):='';\n Ra VARCHAR2(8);\n ep VARCHAR2(1);\nBEGIN\n   IF FEN_EPD IS NULL THEN RETURN NULL; END IF;\n   FOR cRank in 1..8 LOOP\n      IF cRank < 8 THEN\n        sla :=INSTR(HJ_FEN_EPD,'/');\n        IF sla=0 THEN RETURN 'missing slash!'; END IF;-- ! in returnvalue signals an error\n      ELSE \n        sla :=INSTR(HJ_FEN_EPD,' ');\n        IF sla=0 THEN RETURN 'missing space!'; END IF;-- ! in returnvalue signals an error\n      END IF;\n      Ra := substr(HJ_FEN_EPD,1,sla-1);\n      HJ_FEN_EPD := substr(HJ_FEN_EPD,sla+1);\n      IF Ra='8' THEN \n        HJ_LIN := '        ';\n      ELSE\n        HJ_LIN := '';\n        LOOP\n          EXIT WHEN Ra IS NULL;\n          CASE SUBSTR(Ra,1,1)\n            WHEN '1' THEN HJ_LIN := HJ_LIN||' ';\n            WHEN '2' THEN HJ_LIN := HJ_LIN||'  ';\n            WHEN '3' THEN HJ_LIN := HJ_LIN||'   ';\n            WHEN '4' THEN HJ_LIN := HJ_LIN||'    ';\n            WHEN '5' THEN HJ_LIN := HJ_LIN||'     ';\n            WHEN '6' THEN HJ_LIN := HJ_LIN||'      ';\n            WHEN '7' THEN HJ_LIN := HJ_LIN||'       ';\n            WHEN 'r' THEN HJ_LIN := HJ_LIN||'T';\n            WHEN 'b' THEN HJ_LIN := HJ_LIN||'L';\n            WHEN 'q' THEN HJ_LIN := HJ_LIN||'D';\n            WHEN 'n' THEN HJ_LIN := HJ_LIN||'S';\n            WHEN 'p' THEN HJ_LIN := HJ_LIN||'B';\n            WHEN 'k' THEN HJ_LIN := HJ_LIN||'K';\n            WHEN 'R' THEN HJ_LIN := HJ_LIN||'t';\n            WHEN 'B' THEN HJ_LIN := HJ_LIN||'l';\n            WHEN 'Q' THEN HJ_LIN := HJ_LIN||'d';\n            WHEN 'N' THEN HJ_LIN := HJ_LIN||'s';\n            WHEN 'P' THEN HJ_LIN := HJ_LIN||'b';\n            WHEN 'K' THEN HJ_LIN := HJ_LIN||'k';\n            ELSE RETURN 'illegal '||cRank||' ranki ('||Ra||')!'; -- ! in returnvalue signals an error\n          END CASE;\n          IF length(hj_lin)> 8 THEN\n            RETURN 'Rank '||cRank||' > 8 ('||hj_lin||')!';\n          END IF;\n          Ra := SUBSTR(Ra,2);\n        END LOOP;\n      END IF;\n      HJ_STR := HJ_STR||hj_lin;\n   END LOOP;\n   --<Side to move> \n   IF substr(HJ_FEN_EPD,1,1)= 'w' THEN\n     HJ_STR := HJ_STR||'H';\n   ELSIF substr(HJ_FEN_EPD,1,1)= 'b' THEN\n     HJ_STR := HJ_STR||'S';\n   ELSE\n     RETURN 'illegal side-to-move!'; -- ! in returnvalue signals an error\n   END IF;\n   sla :=INSTR(HJ_FEN_EPD,' ');\n   IF sla<>2 THEN RETURN 'space issue ('||sla||'<>2)!'; END IF;-- ! in returnvalue signals an error\n   HJ_FEN_EPD := substr(HJ_FEN_EPD,sla+1);\n   sla :=INSTR(HJ_FEN_EPD,' ');\n   IF sla not in (2,3,4,5) THEN RETURN 'space issue ('||sla||')!'; END IF;-- ! in returnvalue signals an error\n   --<Castling ability> \n   hj_lin := substr(HJ_FEN_EPD,1,sla-1);\n   IF INSTR(hj_lin,'K') > 0 THEN --white king-side\n     HJ_STR := REPLACE(HJ_STR,'k','m');\n     HJ_STR := SUBSTR(HJ_STR,1,63)||'r'||SUBSTR(HJ_STR,65);\n   END IF;\n   IF INSTR(hj_lin,'Q') > 0 THEN --white queen-side\n     HJ_STR := REPLACE(HJ_STR,'k','m');\n     HJ_STR := SUBSTR(HJ_STR,1,56)||'r'||SUBSTR(HJ_STR,58);\n   END IF;\n   IF INSTR(hj_lin,'k') > 0 THEN --black king-side\n     HJ_STR := REPLACE(HJ_STR,'K','M');\n     HJ_STR := SUBSTR(HJ_STR,1,7)||'R'||SUBSTR(HJ_STR,9);\n   END IF;\n   IF INSTR(hj_lin,'q') > 0 THEN --black queen-side\n     HJ_STR := REPLACE(HJ_STR,'K','M');\n     HJ_STR := 'R'||SUBSTR(HJ_STR,2);\n   END IF;\n   HJ_FEN_EPD := substr(HJ_FEN_EPD,sla+1);\n   --<En passant target square> \n   IF substr(HJ_FEN_EPD,1,1) <> '-' THEN\n     IF substr(HJ_FEN_EPD,2,1) = '3' THEN --white\n         sla := 32;\n         ep  := 'e';\n     ELSIF substr(HJ_FEN_EPD,2,1) = '6' THEN --black   \n         sla := 8;\n         ep  := 'E';\n     ELSE\n       RETURN 'illegal en-passant!'; -- ! in returnvalue signals an error\n     END IF; \n     sla := sla + ASCII(substr(HJ_FEN_EPD,1,1))-96;\n     HJ_STR := SUBSTR(HJ_STR,1,sla-1)||ep||SUBSTR(HJ_STR,sla+1);\n   END IF;\n   sla :=INSTR(HJ_FEN_EPD,' ');\n   HJ_FEN_EPD := substr(HJ_FEN_EPD,sla+1);\n   --\n   --WRT('EPD: '||HJ_FEN_EPD);\n   -- Read of EPD operations to global variables:\n   EPD_BESTMOVE      := '';\n   EPD_SECONDARYMOVE := '';\n   EPD_AVOIDMOVE     := '';   \n   EPD_ID            := ''; \n   EPD_COMMENT0      := ''; \n   FOR cnt IN 1..10 LOOP -- scan some operations (normally just 3-4 used):\n     IF substr(HJ_FEN_EPD,1,3)='bm ' THEN --best move (example:Rxf7+; )\n        sla :=INSTR(HJ_FEN_EPD,';');\n        EPD_BESTMOVE := substr(HJ_FEN_EPD,4,sla-4);\n        HJ_FEN_EPD := substr(HJ_FEN_EPD,sla+2);\n     END IF;\n     IF substr(HJ_FEN_EPD,1,3)='sm ' THEN --secondary move\n        sla :=INSTR(HJ_FEN_EPD,';');\n        EPD_SECONDARYMOVE := substr(HJ_FEN_EPD,4,sla-4);\n        HJ_FEN_EPD := substr(HJ_FEN_EPD,sla+2);\n     END IF;\n     IF substr(HJ_FEN_EPD,1,3)='am ' THEN --avoid move\n        sla :=INSTR(HJ_FEN_EPD,';');\n        EPD_AVOIDMOVE := substr(HJ_FEN_EPD,4,sla-4);\n        HJ_FEN_EPD := substr(HJ_FEN_EPD,sla+2);\n     END IF;\n     IF substr(HJ_FEN_EPD,1,4)='id \"' THEN --id (in \"\")\n        sla :=INSTR(HJ_FEN_EPD,'\";');\n        EPD_ID := substr(HJ_FEN_EPD,5,sla-5);\n        HJ_FEN_EPD := substr(HJ_FEN_EPD,sla+3);\n     END IF;\n     IF substr(HJ_FEN_EPD,1,4)='c0 \"' THEN --comment (in \"\")\n        sla :=INSTR(HJ_FEN_EPD,'\";');\n        EPD_COMMENT0 := substr(HJ_FEN_EPD,5,sla-5);\n        HJ_FEN_EPD := substr(HJ_FEN_EPD,sla+3);\n     END IF;\n   END LOOP;\n   RETURN HJ_STR;\nEXCEPTION\n  WHEN OTHERS THEN\n     RETURN 'FEN_EPD_TO_STR! '||HJ_FEN_EPD||' '||SLA; -- ! in returnvalue signals an error\nEND FEN_EPD_TO_STR;\n--\n-- All EPD operations:\n--\n--    OPERATION       DESCRIPTION  \n--    acd             analysis count depth [3]\n--    acn             analysis count nodes\n--    acs             analysis count seconds\n--    am              avoid move(s)\n--    bm              best move(s)\n--    c0              comment (primary, also c1 though c9)\n--    ce              centipawn evaluation\n--    dm              direct mate fullmove count\n--    draw_accept     accept a draw offer\n--    draw_claim      claim a draw\n--    draw_offer      offer a draw\n--    draw_reject     reject a draw offer\n--    eco             Encyclopedia of Chess Openings opening code\n--    fmvn            fullmove number\n--    hmvc            halfmove clock\n--    id              position identification\n--    nic             New In Chess opening code\n--    noop            no operation\n--    pm              predicted move\n--    pv              predicted variation\n--    rc              repetition count\n--    resign          game resignation\n--    sm              supplied move\n--    tcgs            telecommunication game selector\n--    tcri            telecommunication receiver identification\n--    tcsi            telecommunication sender identification\n--    v0              variation name (primary, also v1 though v9)\n    \nPROCEDURE still(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, p_st char DEFAULT '') IS  \n  x  SIMPLE_INTEGER :=0; \n  xn SIMPLE_INTEGER :=0; \n  y  SIMPLE_INTEGER :=0;\n  st char(65);--str65 \nBEGIN\n  IF p_st is null THEN --set the start-position:\n    st:='RSLDMLSRBBBBBBBB                                bbbbbbbbrsldmlsrH';\n  ELSIF INSTR(p_st,'/') between 2 and 9 THEN-- standard FEN or EPD format candidate detected\n    -- so convert to internal format:\n    st := FEN_EPD_TO_STR(p_st);\n    IF INSTR(st,'!') > 0 THEN -- Conversion failed, so st contains the error-details\n      RAISE_APPLICATION_ERROR(-20001, 'FEN_EPD_TO_STR failed (not legal FEN or EPD position): '||st);\n    END IF;\n  ELSE\n    IF instr(p_st,-1) in ('W','B') THEN -- internal format candidate, but english\n      st := TRANSLATE(SUBSTR(p_st,1,64),'PpBbNnQqRrCc',\n                                        'BbLlSsDdTtRr');\n      IF instr(p_st,-1) = 'W' THEN\n        st := st||'H';                               \n      ELSE\n        st := st||'S';   \n      END IF;                            \n    ELSE\n      st := p_st;\n    END IF;\n  END IF;\n  FOR x IN -10..109 LOOP \n    stilling(stOff+ x):=edge; \n  END LOOP;\n  FOR y IN 1..8 LOOP \n    FOR x IN 1..8 LOOP \n      stilling(stOff+ x+10*y):=ASCII(substr(st,(8-y)*8+x,1));\n    END LOOP;\n  END LOOP;\n  stilling(stOff+ HvisTur):=ASCII(substr(st,65,1));\nEND still;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPROCEDURE GetNextTil(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, fra in out SIMPLE_INTEGER ,til in out SIMPLE_INTEGER, retning IN OUT SIMPLE_INTEGER,\n                     MoveTyp in out MOVETYPE) IS\n-- finder s/h n\u00e6ste tr\u00e6k med nuv\u00e6rende brik, til=fra -> til=89 n\u00e5r ikke flere\n-- !!!!!!!!!! slag for enpassant markeres IKKE for sort, b\u00f8r laves\n  Done BOOLEAN;\n  Brik SIMPLE_INTEGER:=0; \n  Maxx SIMPLE_INTEGER:=0; \n  just  SIMPLE_INTEGER:=0;\n  hvid BOOLEAN; Max1 BOOLEAN;BondeH BOOLEAN;BondeS BOOLEAN;\nBEGIN\n  hvid:=stilling(stOff+ HvisTur)=wT;\n  Brik:=stilling(stOff+ fra);\n  Maxx :=retn(rxOff+ Brik) (ryOff+ MaxDistance);\n  Max1:=Maxx=1;\n  IF retning=0 THEN retning := retn(rxOff+ Brik) (ryOff+ retning); END IF;\n  Done:=FALSE;\n  BondeH:= Brik=wP;\n  BondeS:= Brik=bP;\n  LOOP\n    IF hvid THEN\n\n      -- adjust when under-promotion\n      IF BondeH AND (retning<0) THEN\n        just:=20;\n        WHILE retning+just<9 LOOP\n          just:=just+10;\n        END LOOP;\n      ELSE\n        just:=0;\n      END IF;\n      -- next retning if :\n      --   Max or occupied field reached,\n      --   reached the edge,\n      --   or own piece \n      ---WRT('GetNextTil '||fra||til||' \"'||retning||'\" '||just);\n      IF (fra<>til) AND (Max1 OR (stilling(stOff+ til)<>spc))\n      OR (stilling(stOff+ til+retning)=edge)\n      OR (stilling(stOff+ til+retning+just)>wA) THEN\n        IF BondeH AND (fra<71) AND (retning=20) THEN -- so skip under-promotions\n          retning:=0;\n        ELSE\n          retning:=retn(rxOff+ Brik) (ryOff+ retning);\n        END IF; \n        til:=fra;\n        IF retning=0 THEN\n          Done:=TRUE;\n          til:=89;\n        END IF;\n      ELSE\n        til:=til+retning;\n\n        just:=0;      \n        IF BondeH THEN\n          IF til<fra THEN -- adjust when under-promotion\n            just:=20;\n            WHILE til+just-fra<9 LOOP\n              just:=just+10;\n            END LOOP;\n            IF stilling(stOff+ til+just)<>spc THEN\n              MoveTyp:=MOVEslag;\n            ELSE\n              MoveTyp:=MOVEnormal;\n            END IF;\n          ELSE\n            IF stilling(stOff+ til)<>spc THEN\n              MoveTyp:=MOVEslag;\n            ELSE\n              IF BondeH AND (stilling(stOff+ til-10)=bE) THEN\n                MoveTyp:=MOVEslag;\n              ELSE\n                MoveTyp:=MOVEnormal;\n              END IF;\n            END IF;\n          END IF;\n        ELSE\n          IF stilling(stOff+ til)<>spc THEN\n            MoveTyp:=MOVEslag;\n          ELSE\n            MoveTyp:=MOVEnormal;\n          END IF;\n        END IF;\n        IF BondeH THEN -- Pawn\n          CASE \n            WHEN retning in (-30,-20,-10,10) THEN Done := (stilling(stOff+ til+just)=spc);\n            WHEN retning in (-31,-29,-21,-19,-11,-9,9,11) THEN\n              IF stilling(stOff+ til+just)<>spc THEN\n                Done:=TRUE;\n              ELSE\n                Done:=stilling(stOff+ til-10)=bE;\n                SET_INCL(MoveTyp,MOVEenpassant);\n              END IF;\n            WHEN retning = 20   THEN Done := (fra>=21) AND (fra<=28) AND (stilling(stOff+ til-10)=spc)\n                     AND (stilling(stOff+ til)=spc);\n          ELSE \n            NULL;\n          END CASE;\n        ELSE -- not a pawn \n          IF ABS(retning)=2 THEN  -- is 2 only when castling\n            SET_INCL(MoveTyp,MOVErokade);\n            IF retning=2 THEN  -- O-O\n              Done:=(stilling(stOff+ 16)=spc) AND (stilling(stOff+ 17)=spc)\n              AND (stilling(stOff+ 18)=wC);\n            ELSE    -- O-O-O\n              Done:=(stilling(stOff+ 14)=spc) AND (stilling(stOff+ 13)=spc)\n              AND (stilling(stOff+ 12)=spc) AND (stilling(stOff+ 11)=wC);\n            END IF;\n          ELSE \n            Done:=TRUE;\n          END IF;\n        END IF;\n      END IF;\n    ELSE -- for black\n\n      -- adjust when under-promotion\n      IF BondeS AND (retning>0) THEN\n        just:=-20;\n        WHILE retning+just>-9 LOOP\n          just:=just-10;\n        END LOOP;\n      ELSE\n        just:=0;\n      END IF;\n\n      -- next retning if :\n      --   Max or occupied field is reached, edge or own piece reached\n      IF  (fra<>til) AND ( Max1 OR (stilling(stOff+ til)<>spc))\n      OR (stilling(stOff+ til+retning)=edge)\n      OR (stilling(stOff+ til+retning+just)>spc) AND (stilling(stOff+ til+retning+just)<wA) THEN\n        IF BondeS AND (fra>28) AND (retning=-20) THEN -- skip under-promotions\n          retning:=0;\n        ELSE\n          retning:=retn(rxOff+ Brik) (ryOff+ retning);\n        END IF; \n        til:=fra;\n        IF retning=0 THEN\n          Done:=TRUE;\n          til:=89;\n        END IF;\n      ELSE\n        til:=til+retning;\n\n        -- adjust if under-promotion\n        IF BondeS AND (til>fra) THEN\n          just:=-20;\n          WHILE fra-til-just<9 LOOP\n            just:=just-10;\n          END LOOP;\n        ELSE\n          just:=0;\n        END IF;\n\n        IF stilling(stOff+ til+just)<>spc THEN\n          MoveTyp:=MOVEslag;\n        ELSE\n          MoveTyp:=MOVEnormal;\n        END IF;\n        IF BondeS THEN -- Pawn\n          CASE\n             WHEN retning IN (30,20,10,-10)   THEN Done := (stilling(stOff+ til+just)=spc);\n             WHEN retning IN (31,29,21,19,11,9,-9,-11) THEN \n              IF stilling(stOff+ til+just)<>spc THEN\n                Done:=TRUE;\n              ELSE\n                Done:=stilling(stOff+ til+just+10)=wE;\n                SET_INCL(MoveTyp,MOVEenpassant);\n              END IF;\n            WHEN retning = -20   THEN Done := (fra>=71) AND (fra<=78) AND (stilling(stOff+ til+10)=spc)\n                       AND (stilling(stOff+ til)=spc);\n          ELSE \n            NULL;\n          END CASE;\n        ELSE -- not a pawn\n          IF ABS(retning)=2 THEN  -- 2 only when castling\n            SET_INCL(MoveTyp,MOVErokade);\n            IF retning=2 THEN  -- O-O\n              Done:=(stilling(stOff+ 86)=spc) AND (stilling(stOff+ 87)=spc)\n              AND (stilling(stOff+ 88)=bC);\n            ELSE    -- O-O-O\n              Done:=(stilling(stOff+ 84)=spc) AND (stilling(stOff+ 83)=spc)\n              AND (stilling(stOff+ 82)=spc) AND (stilling(stOff+ 81)=bC);\n            END IF;\n          ELSE \n            Done:=TRUE;\n          END IF;\n        END IF;\n      END IF;\n    END IF;\n    EXIT WHEN Done;\n  END LOOP;\nEND GetNextTil;\n\nPROCEDURE DoMove(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, fra SIMPLE_INTEGER,til SIMPLE_INTEGER, MoveTyp MOVETYPE) IS\n-- udf\u00f8rer (Hvidt/Sort) tr\u00e6k, der i forvejen er valideret OK \n-- MoveTyp skal v\u00e6re defineret (og \u00e6ndres ikke her) \n  n SIMPLE_INTEGER :=0;\nBEGIN\n  IF stilling(stOff+ HvisTur)=wT THEN\n    CASE \n      WHEN stilling(stOff+ fra) = wP  THEN\n        IF fra>70 THEN \n          CASE \n            WHEN til-fra IN(  9, 10, 11) THEN stilling(stOff+ til)   :=wQ; -- bondeforvandling to queen (dronning) \n            WHEN til-fra IN(-11,-10, -9) THEN stilling(stOff+ til+20):=wR; -- for lav til=>underforvandl\n            WHEN til-fra IN(-21,-20,-19) THEN stilling(stOff+ til+30):=wN;\n            WHEN til-fra IN(-31,-30,-29) THEN stilling(stOff+ til+40):=wB;\n          END CASE;\n        ELSE\n          IF (til-fra=20) AND ((stilling(stOff+ til-1)=bP) OR (stilling(stOff+ til+1)=bP)) THEN\n            stilling(stOff+ til):=wE; -- set en-passant possible\n          ELSE\n            stilling(stOff+ til):=stilling(stOff+ fra);\n          END IF;\n        END IF;\n      WHEN stilling(stOff+ fra) = wC  THEN \n               stilling(stOff+ til):=wR;        -- fjern t\u00e5rns rokaderet \n               -- hvis ogs\u00e5 andet t\u00e5rn har v\u00e6ret flyttet s\u00e5 fjern konges rokaderet \n               IF ((fra=11) AND (stilling(stOff+ 18)<>wC) OR (fra=18) AND (stilling(stOff+ 11)<>wC)) \n               AND (stilling(stOff+ 15)=wM) THEN stilling(stOff+ 15):=wK; END IF;\n      WHEN stilling(stOff+ fra) = wM THEN \n               stilling(stOff+ til):=wK;        -- fjern konges rokaderet \n               IF stilling(stOff+ 11)=wC THEN stilling(stOff+ 11):=wR; END IF;\n               IF stilling(stOff+ 18)=wC THEN stilling(stOff+ 18):=wR; END IF;\n    ELSE   \n      stilling(stOff+ til):=stilling(stOff+ fra);\n    END CASE;\n    stilling(stOff+ fra):=spc;\n    IF SET_IN(MOVEenpassant,MoveTyp) THEN\n      stilling(stOff+ til-10):=spc;      -- remove e.p. pawn (bonde) \n    ELSIF SET_IN(MOVErokade,MoveTyp) THEN\n      IF til<fra THEN             -- move/convert rook (t\u00e5rn) \n        stilling(stOff+ 14):=wR;\n        stilling(stOff+ 11):=spc;\n        IF stilling(stOff+ 18)=wC THEN stilling(stOff+ 18):=wR; END IF;\n      ELSE\n        stilling(stOff+ 16):=wR;\n        stilling(stOff+ 18):=spc;\n        IF stilling(stOff+ 11)=wC THEN stilling(stOff+ 11):=wR; END IF;\n      END IF;\n    END IF;\n    FOR n IN 51..58 LOOP\n      IF stilling(stOff+ n)=bE THEN stilling(stOff+ n):=bP; END IF;  -- remove evt. e.p. possibility. \n    END LOOP;\n    stilling(stOff+ HvisTur):=bT;\n  ELSE\n    CASE\n      WHEN stilling(stOff+ fra) = bP  THEN\n        IF fra<29 THEN\n          CASE\n             WHEN fra-til IN (  9, 10, 11) THEN stilling(stOff+ til)   :=bQ;-- pawn promotion to queen (dronning)\n             WHEN fra-til IN (-11,-10, -9) THEN stilling(stOff+ til-20):=bR;-- too low til=>underpromotion\n             WHEN fra-til IN (-21,-20,-19) THEN stilling(stOff+ til-30):=bN;-- and adjust down\n             WHEN fra-til IN (-31,-30,-29) THEN stilling(stOff+ til-40):=bB;\n          END CASE;\n        ELSE\n          IF (fra-til=20) AND ((stilling(stOff+ til+1)=wP) OR (stilling(stOff+ til-1)=wP)) THEN\n            stilling(stOff+ til):=bE; -- set en-passant possible\n          ELSE\n            stilling(stOff+ til):=stilling(stOff+ fra);\n          END IF;\n        END IF;\n      WHEN stilling(stOff+ fra) = bC  THEN \n               stilling(stOff+ til):=bR;        -- remove rook (t\u00e5rns) castling right\n               IF ((fra=81) AND (stilling(stOff+ 88)<>bC) OR (fra=88) AND (stilling(stOff+ 81)<>bC)) AND (stilling(stOff+ 85)=bM) THEN --!!!!!!!!!!!!!\n                 stilling(stOff+ 85):=bK;\n               END IF;\n      WHEN stilling(stOff+ fra) = bM  THEN \n               stilling(stOff+ til):=bK;        -- remove King (t\u00e5rns) castling right\n               IF stilling(stOff+ 81)=bC THEN stilling(stOff+ 81):=bR; END IF;\n               IF stilling(stOff+ 88)=bC THEN stilling(stOff+ 88):=bR; END IF;\n    ELSE   \n      stilling(stOff+ til):=stilling(stOff+ fra);\n    END CASE;\n    stilling(stOff+ fra):=spc;\n    IF SET_IN(MOVEenpassant,MoveTyp) THEN\n      stilling(stOff+ til+10):=spc;      -- remove e.p. pawn\n    ELSIF SET_IN(MOVErokade,MoveTyp) THEN\n      IF til<fra THEN             -- move/convert rook (t\u00e5rn)\n        stilling(stOff+ 84):=bR;\n        stilling(stOff+ 81):=spc;\n        IF stilling(stOff+ 88)=bC THEN stilling(stOff+ 88):=bR; END IF;\n      ELSE\n        stilling(stOff+ 86):=bR;\n        stilling(stOff+ 88):=spc;\n        IF stilling(stOff+ 81)=bC THEN stilling(stOff+ 81):=bR; END IF;\n      END IF;\n    END IF;\n    FOR n IN 41..48 LOOP \n      IF stilling(stOff+ n)=wE THEN stilling(stOff+ n):=wP; END IF;  -- remove e.p. possibility\n    END LOOP;\n    stilling(stOff+ HvisTur):=wT;\n  END IF;\n--Vis('Efter DoMove:',stilling);\nEND DoMove;\n\nPROCEDURE DoMoveC(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, fra SIMPLE_INTEGER,til SIMPLE_INTEGER) IS\n-- udf\u00f8rer (Hvidt/Sort) tr\u00e6k, der i forvejen er valideret OK\n-- som DoMove, men kr\u00e6ver IKKE MoveTyp information\n-- Hurtigere end DoMoveOK n\u00e5r tr\u00e6k ER valideret OK\n  MoveTyp MOVETYPE := MOVEnormal;\nBEGIN\n  IF stilling(stOff+ til)=spc THEN\n    MoveTyp:=MOVEnormal;\n  ELSE\n    MoveTyp:=MOVEslag;\n  END IF;\n  IF stilling(stOff+ HvisTur)=wT THEN\n    IF (stilling(stOff+ fra)=wP) \n    AND  ((til-fra=9) OR (til-fra=11))\n    AND  (stilling(stOff+ til)=spc) THEN\n      SET_INCL(MoveTyp,MOVEenpassant);\n    END IF;\n    IF (stilling(stOff+ fra)=wM)\n    AND  (ABS(til-fra)=2) THEN\n      SET_INCL(MoveTyp,MOVErokade);\n    END IF;\n  ELSE\n    IF (stilling(stOff+ fra)=bP) \n    AND  ((fra-til=9) OR (fra-til=11))\n    AND  (stilling(stOff+ til)=spc) THEN\n      SET_INCL(MoveTyp,MOVEenpassant);\n    END IF;\n    IF (stilling(stOff+ fra)=bM)\n    AND  (ABS(til-fra)=2) THEN\n      SET_INCL(MoveTyp,MOVErokade);\n    END IF;\n  END IF;\n  DoMove(stilling,fra,til,MoveTyp);\nEND DoMoveC;\n\n\nFUNCTION CheckSkak2(stilling IN OUT PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, n SIMPLE_INTEGER, hvid BOOLEAN) RETURN BOOLEAN IS\n-- checker om felt n er truet af sort/hvid\n  retning SIMPLE_INTEGER:=0;\n  tst SIMPLE_INTEGER:=0;\n  cnt SIMPLE_INTEGER:=0;\n  skak BOOLEAN;\nBEGIN\n  IF hvid THEN -- White check\n    skak:=(stilling(stOff+ n-21)=bN) OR (stilling(stOff+ n-19)=bN) OR (stilling(stOff+ n-12)=bN)\n    OR (stilling(stOff+ n- 8)=bN) OR (stilling(stOff+ n+ 8)=bN) OR (stilling(stOff+ n+12)=bN)\n    OR (stilling(stOff+ n+19)=bN) OR (stilling(stOff+ n+21)=bN);\n    retning:=retn(rxOff+ wR) (ryOff+ 0);       -- look in all rook (t\u00e5rn) directions\n    LOOP\n      tst:=n;\n      cnt:=0;\n      LOOP                    -- find first ccupied field in the direction\n        tst:=tst+retning;\n        cnt := cnt + 1;\n        exit when stilling(stOff+ tst)<>spc;\n      END LOOP;\n      IF (stilling(stOff+ tst)=bQ) OR (stilling(stOff+ tst)=bR) OR (stilling(stOff+ tst)=bC) THEN\n        skak:=TRUE;\n      ELSIF (cnt=1) AND ((stilling(stOff+ tst)=bK) OR (stilling(stOff+ tst)=bM)) THEN\n        skak:=TRUE;\n      END IF;\n      retning:=retn(rxOff+ wR) (ryOff+ retning);\n      exit when (retning=0) OR skak;\n    END LOOP;\n    IF NOT skak THEN\n      retning:=retn(rxOff+ wB) (ryOff+ 0);       -- look in all bishop (l\u00f8ber) directions\n      LOOP\n        tst:=n;\n        cnt:=0;\n        LOOP                  -- find first occupied field in the direction\n          tst:=tst+retning;\n          cnt := cnt + 1;\n          exit when stilling(stOff+ tst)<>spc;\n        END LOOP;\n        IF (stilling(stOff+ tst)=bQ) OR (stilling(stOff+ tst)=bB) THEN\n          skak:=TRUE;\n        ELSIF cnt=1 THEN\n          IF (stilling(stOff+ tst)=bK) OR (stilling(stOff+ tst)=bM) OR (stilling(stOff+ tst)=bP) AND ((retning=9) OR (retning=11)) THEN\n            skak:=TRUE;\n          END IF;\n        END IF;\n        retning:=retn(rxOff+ wB) (ryOff+ retning);\n        exit when (retning=0) OR skak;\n      END LOOP; \n    END IF;\n  ELSE -- black check\n    skak:=(stilling(stOff+ n-21)=wN) OR (stilling(stOff+ n-19)=wN) OR (stilling(stOff+ n-12)=wN)\n    OR (stilling(stOff+ n- 8)=wN) OR (stilling(stOff+ n+ 8)=wN) OR (stilling(stOff+ n+12)=wN)\n    OR (stilling(stOff+ n+19)=wN) OR (stilling(stOff+ n+21)=wN);\n    retning:=retn(rxOff+ wR) (ryOff+ 0);       -- led i alle t\u00e5rn retninger \n    LOOP\n      tst:=n;\n      cnt:=0;\n      LOOP                    -- find f\u00f8rste ikke-tomme felt i retningen \n        tst:=tst+retning;\n        cnt := cnt + 1;\n        EXIT WHEN stilling(stOff+ tst)<>spc;\n       END LOOP;\n      IF (stilling(stOff+ tst)=wQ) OR (stilling(stOff+ tst)=wR) OR (stilling(stOff+ tst)=wC) THEN\n        skak:=TRUE;\n      ELSIF (cnt=1) AND ((stilling(stOff+ tst)=wK) OR (stilling(stOff+ tst)=wM)) THEN\n        skak:=TRUE;\n      END IF;\n      retning:=retn(rxOff+ wR) (ryOff+ retning);\n      EXIT WHEN (retning=0) OR skak;\n    END LOOP;\n    IF NOT skak THEN\n      retning:=retn(rxOff+ wB) (ryOff+ 0);       -- led i alle l\u00f8ber retninger \n      LOOP\n        tst:=n;\n        cnt:=0;\n        LOOP                    -- find f\u00f8rste ikke-tomme felt i retningen \n          tst:=tst+retning;\n          cnt := cnt + 1;\n          EXIT WHEN stilling(stOff+ tst)<>spc;\n        END LOOP; \n        IF (stilling(stOff+ tst)=wQ) OR (stilling(stOff+ tst)=wB) THEN\n          skak:=TRUE;\n        ELSIF cnt=1 THEN\n          IF (stilling(stOff+ tst)=wK) OR (stilling(stOff+ tst)=wM) OR (stilling(stOff+ tst)=wP) AND ((retning=-9) OR (retning=-11)) THEN\n            skak:=TRUE;\n          END IF;\n        END IF;\n        retning:=retn(rxOff+ wB) (ryOff+ retning);\n        EXIT WHEN (retning=0) OR skak;\n      END LOOP; \n    END IF;\n  END IF;\n  RETURN(skak);\nEND CheckSkak2;\n\n--$ ENDIF\n\nFUNCTION CheckSkak(stilling IN OUT PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, n SIMPLE_INTEGER, hvid BOOLEAN) RETURN BOOLEAN IS\n-- checker om felt n er truet af sort/hvid\n  retning SIMPLE_INTEGER:=0;\n  tst SIMPLE_INTEGER:=0;\n  cnt SIMPLE_INTEGER:=0;\nBEGIN\n  IF hvid THEN -- Hvid check !!\n    IF (stilling(stOff+ n-21)=bN) OR (stilling(stOff+ n-19)=bN) OR (stilling(stOff+ n-12)=bN)\n    OR (stilling(stOff+ n- 8)=bN) OR (stilling(stOff+ n+ 8)=bN) OR (stilling(stOff+ n+12)=bN)\n    OR (stilling(stOff+ n+19)=bN) OR (stilling(stOff+ n+21)=bN) THEN\n      RETURN(TRUE);\n    ELSE\n      retning:=retn(rxOff+ wQ) (ryOff+ 0);       -- led i alle otte retninger \n      LOOP\n        tst:=n;\n        cnt:=0;\n        LOOP                    -- find f\u00f8rste ikke-tomme felt i retningen \n          tst:=tst+retning;\n          cnt := cnt + 1;\n          EXIT WHEN stilling(stOff+ tst)<>spc;\n        END LOOP; \n        CASE     -- check om den fundne brik giver skak \n          WHEN stilling(stOff+ tst) = bQ       THEN RETURN(TRUE);\n          WHEN stilling(stOff+ tst) =  bB      THEN CASE\n                                                WHEN retning in (-11,-9,9,11) THEN RETURN(TRUE);\n                                                ELSE NULL; \n                                              END CASE;\n          WHEN stilling(stOff+ tst) in(bR,bC) THEN CASE\n                                                WHEN retning in ( -10,-1,1,10) THEN RETURN(TRUE);\n                                                ELSE NULL; \n                                              END CASE;\n          WHEN stilling(stOff+ tst) in(bK,bM) THEN IF cnt=1 THEN RETURN(TRUE); END IF;\n          WHEN stilling(stOff+ tst) =  bP      THEN IF (cnt=1) AND ((retning=9) OR (retning=11)) THEN RETURN(TRUE); END IF;\n        ELSE \n          NULL;\n        END CASE;\n        retning:=retn(rxOff+ wQ) (ryOff+ retning);\n        EXIT WHEN (retning=0);\n      END LOOP; \n    END IF;\n    RETURN(FALSE);\n  ELSE -- sort check\n    IF (stilling(stOff+ n-21)=wN) OR (stilling(stOff+ n-19)=wN) OR (stilling(stOff+ n-12)=wN)\n    OR (stilling(stOff+ n- 8)=wN) OR (stilling(stOff+ n+ 8)=wN) OR (stilling(stOff+ n+12)=wN)\n    OR (stilling(stOff+ n+19)=wN) OR (stilling(stOff+ n+21)=wN) THEN\n      RETURN(TRUE);\n    ELSE\n      retning:=retn(rxOff+ wQ) (ryOff+ 0);       -- led i alle otte retninger \n      LOOP\n        tst:=n;\n        cnt:=0;\n        LOOP                    -- find f\u00f8rste ikke-tomme felt i retningen \n          tst:=tst+retning;\n          cnt := cnt + 1;\n          EXIT WHEN stilling(stOff+ tst)<>spc;\n        END LOOP; \n        CASE    -- check om den fundne brik giver skak \n          WHEN stilling(stOff+ tst) = wQ     THEN RETURN(TRUE);\n          WHEN stilling(stOff+ tst) = wB     THEN CASE\n                             WHEN retning in(-11,-9,9,11) THEN RETURN(TRUE);\n                             ELSE NULL; END CASE;\n          WHEN stilling(stOff+ tst) in( wR,wC) THEN CASE \n                             WHEN retning in( -10,-1,1,10) THEN RETURN(TRUE);\n                                ELSE NULL; END CASE;\n          WHEN stilling(stOff+ tst) in( wK,wM) THEN IF cnt=1 THEN RETURN(TRUE); END IF;\n          WHEN stilling(stOff+ tst) = wP     THEN IF (cnt=1) AND ((retning=-9) OR (retning=-11)) THEN RETURN(TRUE); END IF;\n          ELSE NULL; \n        END CASE;\n        retning:=retn(rxOff+ wQ) (ryOff+ retning);\n        EXIT WHEN (retning=0);\n      END LOOP; \n    END IF;\n    RETURN(FALSE);\n  END IF;\nEND CheckSkak;\n\nFUNCTION IkkeSkak(stilling IN OUT PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, fra SIMPLE_INTEGER,p_til SIMPLE_INTEGER,\n                  MoveTyp MOVETYPE) RETURN BOOLEAN IS\n-- checker om (hvidt/sort) tr\u00e6k er ulovligt p.gr.a. at kongen er skak \n-- eller rokerer fra/over truet felt \n-- kr\u00e6ver at MoveTyp er sat korrekt n\u00e5r rokade og pat \n  skak BOOLEAN;\n  n SIMPLE_INTEGER:=0;\n  vej SIMPLE_INTEGER:=0;\n  cfra SIMPLE_INTEGER:=0;\n  ctil SIMPLE_INTEGER:=0;\n  hvid BOOLEAN;\n  til SIMPLE_INTEGER:=p_til; \nBEGIN\n  hvid:=stilling(stOff+ HvisTur)=wT;\n  IF SET_IN(MOVErokade,MoveTyp) THEN\n    skak:=CheckSkak(stilling,fra,hvid); -- rokeres FRA truet felt ? \n    IF NOT skak THEN\n      IF til<fra THEN vej:=-1; ELSE vej:=1; END IF;\n      skak:=CheckSkak(stilling,fra+vej,hvid);  -- rokeres OVER truet felt ? \n      IF NOT skak THEN\n        cfra:=stilling(stOff+ fra);\n        stilling(stOff+ fra):=spc;\n        skak:=CheckSkak(stilling,til,hvid);    -- rokeres TIL truet felt ? \n        stilling(stOff+ fra):=cfra;\n      END IF;\n    END IF;\n  ELSE\n\n    IF SET_IN(MOVEpat,MoveTyp) THEN\n      RETURN(FALSE);\n    END IF;\n\n    IF hvid THEN\n      cfra:=stilling(stOff+ fra);\n      IF (cfra=wP) AND (fra>70) AND (til<fra) THEN\n        til:=til+20;\n        WHILE til<fra LOOP\n          til:=til+10;\n        END LOOP;\n      END IF;       \n      ctil:=stilling(stOff+ til);\n      stilling(stOff+ til):=cfra;\n      stilling(stOff+ fra):=spc;\n      IF stilling(stOff+ 15)=wM THEN\n        skak:=CheckSkak(stilling,15,hvid) ;\n      ELSIF stilling(stOff+ 17)=wK THEN\n        skak:=CheckSkak(stilling,17,hvid);\n      ELSE\n        n:=11;         -- find konge\n        WHILE (stilling(stOff+ n)<>wK) AND (stilling(stOff+ n)<>wM) AND (n<89) LOOP n := n + 1; END LOOP;\n        IF n<89 THEN\n          skak:=CheckSkak(stilling,n,hvid);\n        ELSE skak:=FALSE; END IF; -- er kongen skak?\n      END IF;\n      stilling(stOff+ fra):=cfra;\n      stilling(stOff+ til):=ctil;\n    ELSE\n      cfra:=stilling(stOff+ fra);\n      IF (cfra=bP) AND (fra<29) AND (til>fra) THEN\n        til:=til-20;\n        WHILE til>fra LOOP\n          til:=til-10;\n        END LOOP;\n      END IF;       \n      ctil:=stilling(stOff+ til);\n      stilling(stOff+ til):=cfra;\n      stilling(stOff+ fra):=spc;\n      IF stilling(stOff+ 85)=bM THEN\n        skak:=CheckSkak(stilling,85,hvid) ;\n      ELSIF stilling(stOff+ 87)=bK THEN\n        skak:=CheckSkak(stilling,87,hvid);\n      ELSE\n        n:=88;\n        WHILE (stilling(stOff+ n)<>bK) AND (stilling(stOff+ n)<>bM) AND (n>10) LOOP n := n - 1; END LOOP;\n        IF n>10 THEN\n          skak:=CheckSkak(stilling,n,hvid);\n        ELSE \n          skak:=FALSE;\n        END IF; -- er kongen skak?\n      END IF;\n      stilling(stOff+ fra):=cfra;\n      stilling(stOff+ til):=ctil;\n    END IF;\n  END IF;\n  RETURN(NOT skak);\nEND IkkeSkak;\n\nPROCEDURE GetNext(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                  fra in out SIMPLE_INTEGER,\n                  til in out SIMPLE_INTEGER,\n                  retning in out SIMPLE_INTEGER,\n                  MoveTyp in out MOVETYPE) IS\n-- finder n\u00e6ste (hvide/sorte) tr\u00e6k i stillingen, fra=89 n\u00e5r ikke flere\n  hvid BOOLEAN;\nBEGIN\n  IF stilling(stOff+ HvisTur)=wT THEN\n    LOOP\n      LOOP\n        IF til>88 THEN\n          LOOP -- find n\u00e6ste hvide brik\n            fra := fra + 1;\n            EXIT WHEN (fra>88) OR (stilling(stOff+ fra)>wA);\n          END LOOP; \n          til:=fra;\n          retning:=0;\n        END IF;\n        IF fra<>89 THEN GetNextTil(stilling,fra,til,retning,MoveTyp); END IF;\n        EXIT WHEN (til<>89) OR (fra=89);\n      END LOOP; \n      EXIT WHEN (fra=89) OR IkkeSkak(stilling,fra,til,MoveTyp);\n    END LOOP; \n  ELSE -- sort\n    LOOP\n      LOOP\n        IF til>88 THEN\n          LOOP\n            fra := fra + 1;\n            EXIT WHEN (fra>88) OR (stilling(stOff+ fra)>bA) AND (stilling(stOff+ fra)<wA);\n          END LOOP; \n          til:=fra;\n          retning:=0;\n        END IF;\n        IF fra<>89 THEN GetNextTil(stilling,fra,til,retning,MoveTyp); END IF;\n        EXIT WHEN (til<>89) OR (fra=89);\n      END LOOP; \n      EXIT WHEN (fra=89) OR IkkeSkak(stilling,fra,til,MoveTyp);\n    END LOOP; \n  END IF;\n--WRITELN(s('Getnext exit: ')+l(fra)+s('-')+l(til)+s(' retn:')+l(retning));\nEND GetNext;\n\nPROCEDURE Mirror(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE) IS\nn SIMPLE_INTEGER:=0;\nm SIMPLE_INTEGER:=0;\nnm SIMPLE_INTEGER:=0;\nom SIMPLE_INTEGER:=0;\nch SIMPLE_INTEGER:=0;\nch2 SIMPLE_INTEGER:=0;\nBEGIN\nIF stilling(stOff+ HvisTur)=bT THEN \n  stilling(stOff+ HvisTur):=wT;\nELSE \n  stilling(stOff+ HvisTur):=bT;\nEND IF;\nFOR n IN 1..4 LOOP \n  nm:=10*n;\n  om:=90-nm;\n  FOR m IN 1..8 LOOP\n    nm := nm + 1;\n    om := om + 1;\n    ch:=stilling(stOff+ nm);\n    IF ch>wA THEN\n      ch := ch - 32;\n    ELSIF ch>bA THEN\n      ch := ch + 32;\n    END IF;\n    ch2:=stilling(stOff+ om);\n    IF ch2>wA THEN \n      ch2 := ch2 - 32;\n    ELSIF ch2>bA THEN\n      ch2 := ch2 + 32;\n    END IF;\n    stilling(stOff+ nm):=ch2; \n    stilling(stOff+ om):=ch;\n  END LOOP;\nEND LOOP;\nEND Mirror;\n--\n--\n--\n--\nFUNCTION DoMoveOk(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, fra SIMPLE_INTEGER,til SIMPLE_INTEGER,MoveTyp in out MOVETYPE) RETURN BOOLEAN IS\n-- fuldst\u00e6ndigt check af om (s/h) tr\u00e6k er ok, genererer sort/hvide tr\u00e6k med DoMove\n-- IF not DoMoveOk() then fejl.. -> udf\u00f8rer et tr\u00e6k hvis det er lovligt\n  fr SIMPLE_INTEGER:=0;\n  ti SIMPLE_INTEGER:=0;\n  retning SIMPLE_INTEGER:=0;\n  black BOOLEAN; \n  DoMoveOkh BOOLEAN;\nBEGIN\n  fr:=fra-1;\n  ti:=89;\n  LOOP\n    GetNext(stilling, fr,ti, retning, MoveTyp);\n--WRITELN(s('I DoMoveOk, Efter GetNext: fr=')+l(fr)+s(' fra=')+l(fra));\n    EXIT WHEN (ti=til) OR (fr>fra);\n  END LOOP; \n  IF fr>fra THEN\n--WRITELN(s('Efter GetNext: OKh=0 fr=')+l(fr)+s(' fra=')+l(fra));\n    DoMoveOkh:=FALSE;\n  ELSE\n    DoMove(stilling,fr,ti,MoveTyp);\n    DoMoveOkh:=TRUE;\n    TraekNr := TraekNr + 1;\n  END IF;\n  RETURN(DoMoveOkh);\nEND DoMoveOk;\n--\n--\nPROCEDURE ShellSort_ (Trk in out TRAEKDATA, Upto SIMPLE_INTEGER) IS\n  i SIMPLE_INTEGER:=0;\n  j SIMPLE_INTEGER:=0; \n  stepp SIMPLE_INTEGER:=0;\n  tmp   TRKDATA;\nBegin\n  stepp:=FLOOR(Upto/2);\n  While stepp>0 LOOP\n    For i in stepp..Upto-1 LOOP\n      tmp:=Trk (1+ i);\n      j:=i;\n      While (j>=stepp) and (Trk(1+ j-stepp).Vlu < tmp.Vlu) LOOP\n        Trk(1+ j):=Trk(1+ j-stepp);\n        j:=j-stepp;\n      End LOOP;\n      Trk(1+ j):=tmp;\n    End LOOP;\n    stepp:=FLOOR(stepp/2);\n  End LOOP;\nEnd ShellSort_;\n--\nPROCEDURE QSortTrk(Trk in out TRAEKDATA, Fromm SIMPLE_INTEGER,Upto SIMPLE_INTEGER) IS\n  swp TRKDATA;\n  i SIMPLE_INTEGER:=0;\n  j SIMPLE_INTEGER:=0;\n  dh SIMPLE_INTEGER:=0;\n  ih SIMPLE_INTEGER:=0;\nBEGIN\n  IF Upto-Fromm<6 THEN -- use INSERT-SORT on lists 2-6 long\n    FOR j in Fromm..Upto-1 LOOP\n      ih:=j;\n      FOR i in ih+1..Upto LOOP -- Find the greatest\n        IF Trk(ih).Vlu<Trk(i).Vlu THEN\n          ih:=i;\n        END IF;\n      END LOOP;\n      IF ih<>j THEN -- swap\n        swp:=Trk(j);\n        Trk(j):=Trk(ih);\n        Trk(ih):=swp;\n      END IF; \n    END LOOP;\n  ELSE -- QUICK-SORT lists longer than 7\n    i:=Fromm; \n    j:=Upto; \n    --WRT('QS:'||Fromm||' '||Upto||' '||FLOOR((Fromm+Upto)/2));\n    dh:=Trk(FLOOR((Fromm+Upto)/2)).Vlu; -- were DIV (remainder not OK)\n    LOOP\n      WHILE dh<Trk(i).Vlu LOOP i := i + 1; END LOOP;\n      WHILE dh>Trk(j).Vlu LOOP j := j - 1; END LOOP;\n      IF i<=j THEN\n        swp:=Trk(i);\n        Trk(i):=Trk(j);\n        Trk(j):=swp;\n        i := i + 1;\n        j := j - 1;\n      END IF;\n      EXIT WHEN i > j;\n    END LOOP; \n    IF Fromm<j THEN QSortTrk(Trk,Fromm,j); END IF;\n    IF i<Upto THEN QSortTrk(Trk,i,Upto); END IF;\n  END IF;\nEND QSortTrk;\n\n-- FirstCountAttacker returns the number for the smallest piece..take back\nFUNCTION Egain(stilling IN OUT PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE,\n               fr SIMPLE_INTEGER,\n               ti SIMPLE_INTEGER,\n               OwnCount IN OUT SIMPLE_INTEGER,\n               FirstCountAttacker IN OUT SIMPLE_INTEGER) RETURN SIMPLE_INTEGER IS\n  TYPE FIGHTERS IS VARRAY(8) OF SIMPLE_INTEGER;--1..stDcount\n  n      SIMPLE_INTEGER :=0;\n  risk   SIMPLE_INTEGER :=0;\n  ValueC SIMPLE_INTEGER :=0;\n  WhF FIGHTERS :=FIGHTERS(0,0,0,0,0,0,0,0); --stDcount\n  BlF FIGHTERS :=FIGHTERS(0,0,0,0,0,0,0,0); \nFUNCTION Fight(p_Fown FIGHTERS, Fopp FIGHTERS, Pool SIMPLE_INTEGER) RETURN SIMPLE_INTEGER IS\n  p    SIMPLE_INTEGER:=0; \n  summ SIMPLE_INTEGER:=0; \n  risk SIMPLE_INTEGER:=0;\n  Fown FIGHTERS:=p_fown;\nBEGIN\n  p := stDpawns;\n  WHILE Fown(p)=0 LOOP p := p + 1; END LOOP;\n  Fown(p) := Fown(p) - 1;\n  Fown(stDcount) := Fown(stDcount) - 1;\n  risk:=stDarr(p);\n--\n--CASE\n--WHEN p= stDpawns                    THEN risk:= ValueB; \n--WHEN p= stDknights                  THEN risk:= Value_S;\n--WHEN p IN (stDbishops,stDbishopsB)  THEN risk:= ValueL;\n--WHEN p IN (stDrooks,stDrooksB)      THEN risk:= ValueT;\n--WHEN p= stDqueens                   THEN risk:= ValueD;\n--WHEN p= stDking                     THEN risk:= ValueK;\n--END CASE;\n--\n  IF Fopp(stDcount)=0 THEN\n    summ:=Pool;\n  ELSE\n    summ:=Pool-Fight(Fopp,Fown,risk);\n  END IF;\n  IF summ<0 THEN RETURN(0); ELSE RETURN(summ); END IF;\nEND Fight;\nPROCEDURE scan(r SIMPLE_INTEGER,Diag BOOLEAN) IS  --to count queens,rooks,bishops\n  n SIMPLE_INTEGER:=0;\n  ch_n SIMPLE_INTEGER:=0;\n  Black BOOLEAN;\n  --ch CHAR(1);\nBEGIN\n--$ IF FalseWRITELNF(s('Scan'));--$ ENDIF\n  n:=ti;\n  LOOP\n    n:=n+r;\n    ch_n:=stilling(stOff+ n);\n    EXIT WHEN ch_n<>spc;\n  END LOOP; \n  IF ch_n<>edge THEN\n    IF UPPER_n(ch_n)=bQ THEN\n      Black:= ch_n=bQ;\n      IF Black THEN BlF(stDqueens) :=  BlF(stDqueens) + 1; ELSE WhF(stDqueens) := WhF(stDqueens) + 1; END IF;\n      LOOP -- find piece behind queen\n        n:=n+r;\n        ch_n:=stilling(stOff+ n);\n        EXIT WHEN ch_n<>spc;\n      END LOOP; \n      IF UPPER_n(ch_n)=bQ THEN\n        IF ch_n=bQ THEN BlF(stDqueens) :=  BlF(stDqueens) + 1;  ELSE WhF(stDqueens) := WhF(stDqueens) + 1; END IF;\n      ELSIF NOT Diag AND ((UPPER_n(ch_n)=bR) OR (UPPER_n(ch_n)=bC)) THEN\n        IF (ch_n=bR) OR (ch_n=bC) THEN \n          IF Black THEN BlF(stDrooksB) := BlF(stDrooksB) + 1; ELSE BlF(stDrooks) := BlF(stDrooks) + 1; END IF;\n        ELSE\n          IF NOT Black THEN WhF(stDrooksB) := WhF(stDrooksB) + 1; ELSE WhF(stDrooks) := WhF(stDrooks) + 1; END IF;\n        END IF;\n      ELSIF Diag AND (UPPER_n(ch_n)=bB) THEN\n        IF ch_n=bB THEN\n          IF Black THEN BlF(stDbishopsB) := BlF(stDbishopsB) + 1; ELSE WhF(stDbishops) := WhF(stDbishops) + 1; END IF;\n        ELSE\n          IF NOT Black THEN WhF(stDbishopsB) := WhF(stDbishopsB) +1; ELSE WhF(stDbishops) := WhF(stDbishops) + 1; END IF;\n        END IF;\n      END IF;\n    ELSIF NOT Diag AND ((UPPER_n(ch_n)=bR) OR (UPPER_n(ch_n)=bC)) THEN\n      IF (ch_n=bR) OR (ch_n=bC) THEN BlF(stDrooks) := BlF(stDrooks) + 1; ELSE WhF(stDrooks) := WhF(stDrooks) + 1; END IF;\n      LOOP -- find piece behind rook\n        n:=n+r;\n        ch_n:=stilling(stOff+ n);\n        EXIT WHEN ch_n<>spc;\n      END LOOP; \n      IF UPPER_n(ch_n)=bQ THEN\n        IF ch_n=bQ THEN BlF(stDqueens) := BlF(stDqueens) + 1; ELSE WhF(stDqueens) := WhF(stDqueens) + 1; END IF;\n      ELSIF (UPPER_n(ch_n)=bR) OR (UPPER_n(ch_n)=bC) THEN\n        IF (ch_n=bR) OR (ch_n=bC) THEN BlF(stDrooks) := BlF(stDrooks) + 1; ELSE WhF(stDrooks) := WhF(stDrooks) + 1; END IF;\n      END IF;\n    ELSIF Diag AND (UPPER_n(ch_n)=bB) THEN\n      IF ch_n=bB THEN BlF(stDbishops) := BlF(stDbishops) + 1; ELSE WhF(stDbishops) := WhF(stDbishops) + 1; END IF;\n      LOOP -- find piece behind bishop\n        n:=n+r;\n        ch_n:=stilling(stOff+ n);\n        EXIT WHEN ch_n<>spc;\n      END LOOP; \n      IF UPPER_n(ch_n)=bQ THEN\n        IF ch_n=bQ THEN BlF(stDqueens) :=  BlF(stDqueens) + 1;  ELSE WhF(stDqueens) := WhF(stDqueens) + 1; END IF;\n      ELSIF (UPPER_n(ch_n)=bB) THEN\n        IF ch_n=bB THEN BlF(stDbishops) := BlF(stDbishops) + 1; ELSE WhF(stDbishops) := WhF(stDbishops) + 1; END IF;\n      END IF;\n    END IF;\n  END IF;\nEND scan;\nBEGIN  --Egain\n  FOR n IN stDcount..stDking LOOP\n    WhF(n):=0;\n    BlF(n):=0;\n  END LOOP;\n  -- count pawns\n  IF (stilling(stOff+ ti+ 9)=bP) OR (stilling(stOff+ ti+ 9)=bE) THEN BlF(stDpawns) := BlF(stDpawns) + 1; END IF;\n  IF (stilling(stOff+ ti+11)=bP) OR (stilling(stOff+ ti+11)=bE) THEN BlF(stDpawns) := BlF(stDpawns) + 1; END IF;\n  IF  stilling(stOff+ ti- 9)=wP THEN WhF(stDpawns) := WhF(stDpawns) + 1; END IF;\n  IF  stilling(stOff+ ti-11)=wP THEN WhF(stDpawns) := WhF(stDpawns) + 1; END IF;\n \n  -- count knights\n  IF  UPPER_n(stilling(stOff+ ti+21))=bN THEN\n    IF stilling(stOff+ ti+21)=bN THEN BlF(stDknights) := BlF(stDknights) + 1; ELSE WhF(stDknights) := WhF(stDknights) + 1; END IF;\n  END IF;\n  IF  UPPER_n(stilling(stOff+ ti+19))=bN THEN\n    IF stilling(stOff+ ti+19)=bN THEN BlF(stDknights) := BlF(stDknights) + 1;  ELSE WhF(stDknights) := WhF(stDknights) + 1; END IF;\n  END IF;\n  IF  UPPER_n(stilling(stOff+ ti+12))=bN THEN\n    IF stilling(stOff+ ti+12)=bN THEN BlF(stDknights) := BlF(stDknights) + 1; ELSE WhF(stDknights) := WhF(stDknights) + 1; END IF;\n  END IF;\n  IF  UPPER_n(stilling(stOff+ ti+ 8))=bN THEN\n    IF stilling(stOff+ ti+ 8)=bN THEN BlF(stDknights) := BlF(stDknights) + 1; ELSE WhF(stDknights) := WhF(stDknights) + 1; END IF;\n  END IF;\n  IF  UPPER_n(stilling(stOff+ ti-12))=bN THEN\n    IF stilling(stOff+ ti-12)=bN THEN BlF(stDknights) := BlF(stDknights) + 1; ELSE WhF(stDknights) := WhF(stDknights) + 1; END IF;\n  END IF;\n  IF  UPPER_n(stilling(stOff+ ti- 8))=bN THEN\n    IF stilling(stOff+ ti- 8)=bN THEN BlF(stDknights) := BlF(stDknights) + 1; ELSE WhF(stDknights) := WhF(stDknights) + 1; END IF;\n  END IF;\n  IF  UPPER_n(stilling(stOff+ ti-21))=bN THEN\n    IF stilling(stOff+ ti-21)=bN THEN BlF(stDknights) := BlF(stDknights) + 1; ELSE WhF(stDknights) := WhF(stDknights) + 1; END IF;\n  END IF;\n  IF  UPPER_n(stilling(stOff+ ti-19))=bN THEN\n    IF stilling(stOff+ ti-19)=bN THEN BlF(stDknights) := BlF(stDknights) + 1; ELSE WhF(stDknights) := WhF(stDknights) + 1; END IF;\n  END IF;\n \n  -- count kings\n  IF    (UPPER_n(stilling(stOff+ ti+ 1))=bK) OR (UPPER_n(stilling(stOff+ ti+ 1))=bM) THEN\n    IF stilling(stOff+ ti+ 1)=UPPER_n(stilling(stOff+ ti+ 1)) THEN BlF(stDking) := BlF(stDking) + 1; ELSE WhF(stDking) := WhF(stDking) + 1; END IF;\n  ELSIF (UPPER_n(stilling(stOff+ ti- 1))=bK) OR (UPPER_n(stilling(stOff+ ti- 1))=bM) THEN\n    IF stilling(stOff+ ti- 1)=UPPER_n(stilling(stOff+ ti- 1)) THEN BlF(stDking) := BlF(stDking) + 1; ELSE WhF(stDking) := WhF(stDking) + 1; END IF;\n  ELSIF (UPPER_n(stilling(stOff+ ti+10))=bK) OR (UPPER_n(stilling(stOff+ ti+10))=bM) THEN\n    IF stilling(stOff+ ti+10)=UPPER_n(stilling(stOff+ ti+10)) THEN BlF(stDking) := BlF(stDking) + 1; ELSE WhF(stDking) := WhF(stDking) + 1; END IF;\n  ELSIF (UPPER_n(stilling(stOff+ ti+11))=bK) OR (UPPER_n(stilling(stOff+ ti+11))=bM) THEN\n    IF stilling(stOff+ ti+11)=UPPER_n(stilling(stOff+ ti+11)) THEN BlF(stDking) := BlF(stDking) + 1; ELSE WhF(stDking) := WhF(stDking) + 1; END IF;\n  ELSIF (UPPER_n(stilling(stOff+ ti+ 9))=bK) OR (UPPER_n(stilling(stOff+ ti+ 9))=bM) THEN\n    IF stilling(stOff+ ti+ 9)=UPPER_n(stilling(stOff+ ti+ 9)) THEN BlF(stDking) := BlF(stDking) + 1; ELSE WhF(stDking) := WhF(stDking) + 1; END IF;\n  ELSIF (UPPER_n(stilling(stOff+ ti- 9))=bK) OR (UPPER_n(stilling(stOff+ ti- 9))=bM) THEN\n    IF stilling(stOff+ ti- 9)=UPPER_n(stilling(stOff+ ti- 9)) THEN BlF(stDking) := BlF(stDking) + 1; ELSE WhF(stDking) := WhF(stDking) + 1; END IF;\n  ELSIF (UPPER_n(stilling(stOff+ ti-10))=bK) OR (UPPER_n(stilling(stOff+ ti-10))=bM) THEN\n    IF stilling(stOff+ ti-10)=UPPER_n(stilling(stOff+ ti-10)) THEN BlF(stDking) := BlF(stDking) + 1; ELSE WhF(stDking) := WhF(stDking) + 1; END IF;\n  ELSIF (UPPER_n(stilling(stOff+ ti-11))=bK) OR (UPPER_n(stilling(stOff+ ti-11))=bM) THEN\n    IF stilling(stOff+ ti-11)=UPPER_n(stilling(stOff+ ti-11)) THEN BlF(stDking) := BlF(stDking) + 1; ELSE WhF(stDking) := WhF(stDking) + 1; END IF;\n  END IF;\n \n  -- count queens,rooks,bishops\n  scan(  1,FALSE);\n  scan( -1,FALSE);\n  scan( 10,FALSE);\n  scan(-10,FALSE);\n  scan( 11,TRUE);\n  scan(-11,TRUE);\n  scan(  9,TRUE);\n  scan( -9,TRUE);\n \n  -- count White and Black total attacks\n  FOR n IN stDpawns..stDking LOOP\n    WhF(stDcount):=WhF(stDcount)+WhF(n);\n    BlF(stDcount):=BlF(stDcount)+BlF(n);\n  END LOOP;\n  OwnCount:=WhF(stDcount);\n \n  FirstCountAttacker:=0;\n  IF (WhF(stDcount)>0) THEN\n    risk:=ValueCalc(vcxOff+ bA) (vcyOff+ UPPER_n(stilling(stOff+ ti)));\n    ValueC:=Fight(WhF,BlF,risk);\n    IF BlF(stDcount)>0 THEN\n      n:=stDpawns;\n      WHILE BlF(n)=0 LOOP n := n  + 1; END LOOP;\n      FirstCountAttacker:=n;\n    END IF;\n  END IF;\n\n  RETURN(ValueC);  \nEND Egain;\n \n--cf=20, Activity not used\n\nFUNCTION QFind(p_stilling PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE,\n               Activityy  SIMPLE_INTEGER,\n               far        SIMPLE_INTEGER,\n               farfar     SIMPLE_INTEGER,\n               cf         SIMPLE_INTEGER,\n               p_Qdepth   SIMPLE_INTEGER,\n               p_Chess      BOOLEAN,\n               p_farFra   SIMPLE_INTEGER,\n               p_farTil   SIMPLE_INTEGER,\n               farfarFra  SIMPLE_INTEGER,\n               farfarTil  SIMPLE_INTEGER) RETURN SIMPLE_INTEGER IS\n  farFra   SIMPLE_INTEGER := p_farfra;\n  farTil   SIMPLE_INTEGER := p_fartil;\n  TYPE HAtype IS VARRAY(78) OF SIMPLE_INTEGER; -- pl/sql offset=-10\n  haOff CONSTANT SIMPLE_INTEGER := -10;\n  HA HAtype :=HAtype();  --ARRAY(11..88) of INTEGER\n  dyb SIMPLE_INTEGER     := 0;\n  fr SIMPLE_INTEGER      := 0;\n  ti SIMPLE_INTEGER      := 0;\n  retning SIMPLE_INTEGER := 0;\n  cnt SIMPLE_INTEGER     := 0;\n  countt SIMPLE_INTEGER  := 0;\n  VluTmp SIMPLE_INTEGER  := 0;\n  c1 SIMPLE_INTEGER      := 0;\n  c2 SIMPLE_INTEGER      := 0;\n  c3 SIMPLE_INTEGER      := 0;\n  cntAtt SIMPLE_INTEGER  := 0;\n  ha1st SIMPLE_INTEGER   := 0;\n  ha2nd SIMPLE_INTEGER   := 0;\n  cntAm SIMPLE_INTEGER   := 0;\n  n SIMPLE_INTEGER       := 0;\n  m SIMPLE_INTEGER       := 0;\n  SkipValue SIMPLE_INTEGER := 0;\n  MinEgain SIMPLE_INTEGER  := 0;\n  KING SIMPLE_INTEGER      := 0;\n  ChsCnt SIMPLE_INTEGER    := 0;\n  FirstCountAttacker SIMPLE_INTEGER := 0;\n  OwnCount SIMPLE_INTEGER  := 0;\n  vc SIMPLE_INTEGER        := 0;\n  tiC SIMPLE_INTEGER     := 0;\n  vl SIMPLE_INTEGER      := 0;\n  HAfr SIMPLE_INTEGER    := 0;\n  repFra SIMPLE_INTEGER  := 0;\n  repTil SIMPLE_INTEGER  := 0;\n  Qdepth     SIMPLE_INTEGER := p_Qdepth;\n  stilling PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE := p_stilling;\n  frc SIMPLE_INTEGER  := 0;\n  movetyp  MOVETYPE:=MOVEnormal ;\n  Trk      TRAEKDATA := TRAEKDATA();\n  TraekTst TRKDATA;\n  fmax     TRKDATA;\n  Still    PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE := PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE();\n  Mirrt    BOOLEAN;\n  MATE     BOOLEAN;\n  CHESS    BOOLEAN;\n  EatOnly  BOOLEAN;\n  skipp    BOOLEAN;\n  ChessYes BOOLEAN;\nBEGIN\n  HA.extend(78);\n  Trk.extend(116);\n  PL_PIG_CHESS_ENGINE_EVAL.Depth := PL_PIG_CHESS_ENGINE_EVAL.Depth + 1;\n  Qdepth := Qdepth + 1;\n  MATE:=TRUE;\n  Mirrt:=stilling(stOff+ HvisTur)=bT;\n  IF Mirrt THEN\n    Mirror(stilling);\n  END IF;\n  IF (MOD(PL_PIG_CHESS_ENGINE_EVAL.Depth, 2)=1) = BlacksTurn THEN\n    PL_PIG_CHESS_ENGINE_EVAL.pd:=PL_PIG_CHESS_ENGINE_EVAL.pdb;\n  ELSE\n    PL_PIG_CHESS_ENGINE_EVAL.pd:=PL_PIG_CHESS_ENGINE_EVAL.pdw;\n  END IF;\n  IF NOT p_Chess THEN\n    FOR n IN 11..88 LOOP\n      IF stilling(stOff+ n)>wA THEN\n        HA(haOff+ n):=2; -- own piece, but still not proofed movable\n      ELSE\n        HA(haOff+ n):=0;\n      END IF;\n    END LOOP;\n  END IF;\n  IF PL_PIG_CHESS_ENGINE_EVAL.Depth>MaxStackDepth THEN\n    QFindCnt :=QFindCnt +1;\n    SkipValue:=PL_PIG_CHESS_ENGINE_EVAL.Eval(stilling,Activityy,FALSE,-9999,9999);\n    PL_PIG_CHESS_ENGINE_EVAL.Depth := PL_PIG_CHESS_ENGINE_EVAL.Depth - 1;\n    Qdepth := Qdepth - 1;\n    RETURN(SkipValue);\n  END IF;\n  ChessYes := PL_PIG_CHESS_ENGINE_EVAL.Depth<MaxStackDepth-2;\n  IF stilling(stOff+ 85)=bM THEN\n    KING:=85;\n  ELSE\n    KING:=88;\n    WHILE (stilling(stOff+ KING)<>bK) AND (KING>10) LOOP KING := KING - 1; END LOOP;\n  END IF;\n  fr:=10;\n  ti:=89;\n  retning:=0;\n  MinEgain:=1;\n  countt:=0;\n  EatOnly:=FALSE;\n  LOOP           -- lav liste med alle slag (countt) + skakker + QNpromotions\n    GetNext(stilling,fr,ti,retning,movetyp);\n    IF (fr<89) THEN\n      MATE:=FALSE;\n \n      frc:=stilling(stOff+ fr);\n      HA(haOff+ fr):=1;\n      IF (frc<>wK) AND (frc<>wM) THEN\n        IF ChessYes OR (SET_IN(MOVEslag, movetyp)) THEN\n          IF (frc=wB) OR (frc=wQ) THEN -- check for chess on diagonals\n            IF (MOD(ti-KING,11)=0) OR ((ti-KING) MOD 9=0) THEN\n              IF  MOD(ti-KING,11)=0 THEN\n                IF ti>KING THEN\n                  n:=ti-11;\n                  WHILE stilling(stOff+ n)=spc LOOP n:=n-11; END LOOP;\n                ELSE\n                  n:=ti+11;\n                  WHILE stilling(stOff+ n)=spc LOOP n:=n+11; END LOOP;\n                END IF;\n              ELSE\n                IF ti>KING THEN\n                  n:=ti-9;\n                  WHILE stilling(stOff+ n)=spc LOOP n:=n-9; END LOOP;\n                ELSE\n                  n:=ti+9;\n                  WHILE stilling(stOff+ n)=spc LOOP n:=n+9; END LOOP;\n                END IF;\n              END IF;\n              IF n=KING THEN SET_INCL(movetyp,MOVEskak); END IF; -- else mark as bound piece\n            END IF;                                     \n          END IF;\n          IF (frc=wR) OR (frc=wC) OR (frc=wQ) THEN -- check for chess on rows \n            IF FLOOR(ti/10)=FLOOR(KING/10) OR MOD(ti,10)=MOD(KING,10) THEN\n              IF FLOOR(ti/10)=FLOOR(KING/10) THEN\n                IF ti>KING THEN\n                  n:=ti-1;\n                  WHILE stilling(stOff+ n)=spc LOOP n:=n-1; END LOOP;\n                ELSE\n                  n:=ti+1;\n                  WHILE stilling(stOff+ n)=spc LOOP n:=n+1; END LOOP;\n                END IF;\n              ELSE\n                IF ti>KING THEN\n                  n:=ti-10;\n                  WHILE stilling(stOff+ n)=spc LOOP n:=n-10; END LOOP;\n                ELSE\n                  n:=ti+10;\n                  WHILE stilling(stOff+ n)=spc LOOP n:=n+10; END LOOP;\n                END IF;\n              END IF;\n              IF n=KING THEN SET_INCL(movetyp,MOVEskak); END IF; -- else mark as bound piece\n            END IF;\n          END IF;\n          IF (frc=wN) AND ((ti-KING=12) OR (ti-KING=-12) OR\n                          (ti-KING=21) OR (ti-KING=-21) OR\n                          (ti-KING= 8) OR (ti-KING= -8) OR\n                          (ti-KING=19) OR (ti-KING=-19)) THEN\n            SET_INCL(movetyp,MOVEskak);\n            -- and check for attack on Q and R (family chess)\n          END IF;\n        END IF;     \n        IF (frc=wP) THEN\n          IF fr>70 THEN -- promote \n            frc:=spc;\n            IF ti>80 THEN  -- promote to queen\n              frc:=wQ;\n            ELSIF (ti>50) AND (ti<59) THEN -- promote to knight if chess\n              tiC:=ti+30;\n              IF (tiC-KING=12) OR (tiC-KING=21) OR (tiC-KING= 8) OR (tiC-KING=19) THEN\n                SET_INCL(movetyp,MOVEskak);\n                frc:=wN;\n              END IF;\n            END IF;\n          ELSIF (ti+9=KING) OR (ti+11=KING) THEN\n            SET_INCL(movetyp,MOVEskak);\n          END IF;\n        END IF;\n      END IF;\n      IF (SET_IN(MOVEslag , movetyp))\n      OR ChessYes AND (SET_IN (MOVEskak ,movetyp)) AND (Qdepth<=SkakDepth)\n      OR (fr>70) AND (stilling(stOff+ fr)=wP) AND ((ti>80) OR (ti>50) AND (ti<59))\n      OR p_Chess THEN\n        IF SET_IN (MOVEslag,movetyp) THEN\n          IF (stilling(stOff+ ti)=spc) AND (fr<59) AND (frc=wP) THEN -- en-passant\n            n:=0;\n          ELSE\n            n:=ValueCalc(vcxOff+ UPPER_n(stilling(stOff+ fr))) (vcyOff+ UPPER_n(stilling(stOff+ ti)));\n          END IF;\n          IF (n=0) AND (Qdepth<=XchDepth) THEN n:=MinEgain; END IF;\n          IF n<MinEgain THEN\n            m:=Egain(stilling,fr,ti,OwnCount,FirstCountAttacker);\n            IF m>0 THEN\n              IF (n>-190) OR (FirstCountAttacker=0) THEN -- TAB: 470-300=170,300-100=200\n                n:=m;\n              ELSE\n                CASE   -- !!!!!!!! FirstCountAttacker var 25518 CASE INDEX!!!*)\n                WHEN FirstCountAttacker = stDpawns                  THEN vl:=PL_PIG_CHESS_ENGINE_EVAL.ValueB;\n                WHEN FirstCountAttacker IN (stDknights,stDbishopsB) THEN vl:=PL_PIG_CHESS_ENGINE_EVAL.Value_S;\n                WHEN FirstCountAttacker IN (stDrooks,stDrooksB)     THEN vl:=PL_PIG_CHESS_ENGINE_EVAL.ValueT;\n                WHEN FirstCountAttacker = stDqueens                 THEN vl:=PL_PIG_CHESS_ENGINE_EVAL.ValueD;\n                WHEN FirstCountAttacker = stDking                   THEN vl:=PL_PIG_CHESS_ENGINE_EVAL.ValueK;\n                ELSE\n                  vl:=0;\n                END CASE;\n                IF n+vl>-100 THEN n:=m; END IF; --!!!!!!!!!!!*)\n              END IF;\n            ELSIF (SET_IN (MOVEskak , movetyp)) AND (Qdepth<2) THEN -- 1: se p\u00e5 ofre med skak\n              n:=1;\n            END IF;\n          END IF;\n \n          IF p_Chess AND (n>0) THEN\n            EatOnly:=TRUE;\n          END IF;\n          IF n>=MinEgain THEN n:=n+20; END IF; -- Keeps'em better than just chess\n        ELSIF ChessYes AND (SET_IN (MOVEskak,movetyp)) AND (Qdepth<=SkakDepth) THEN -- but not slag\n          m:=Egain(stilling,fr,ti,OwnCount,FirstCountAttacker); -- needs FirstCountAttacker ONLY!!! \n          IF FirstCountAttacker=0 THEN\n            n:=3;\n          ELSE\n            n:=-ValueCalc(vcxOff+ bA) (vcyOff+ UPPER_n(stilling(stOff+ fr)));\n            CASE  -- 3-98 minus one\n            WHEN FirstCountAttacker= stDpawns                   THEN n:=n+PL_PIG_CHESS_ENGINE_EVAL.ValueB-1;\n            WHEN FirstCountAttacker IN( stDknights,stDbishopsB) THEN n:=n+PL_PIG_CHESS_ENGINE_EVAL.Value_S-1;\n            WHEN FirstCountAttacker IN( stDrooks,stDrooksB)     THEN n:=n+PL_PIG_CHESS_ENGINE_EVAL.ValueT-1;\n            WHEN FirstCountAttacker= stDqueens                  THEN n:=n+PL_PIG_CHESS_ENGINE_EVAL.ValueD-1;\n            WHEN FirstCountAttacker= stDking                    THEN n:=900;\n            END CASE;\n            IF n>0 THEN n:=2+FLOOR(n/64); END IF;\n          END IF;\n        ELSIF p_Chess THEN\n          n:=-1; -- ! must be negative..mark as a move after a check\n        ELSE -- promotion, (fr>70) AND (stilling(stOff+ fr)=wP) AND ((ti>80) OR (ti>50) AND (ti<59))\n          n:=800;\n        END IF;\n        IF (n>=MinEgain) OR p_Chess AND (NOT EatOnly OR (ChessYes AND (SET_IN (MOVEslag,movetyp)))) THEN -- worth to try, store move\n          countt := countt  + 1;\n--WRT('1685 '||countt);\n          Trk(countt).Vlu:=      n;\n          Trk(countt).Fra:=     fr;\n          Trk(countt).Til:=     ti;\n          Trk(countt).Typ:=movetyp;\n          IF NOT p_Chess AND (ValueCalc(vcxOff+ UPPER_n(stilling(stOff+ fr))) (vcyOff+ UPPER_n(stilling(stOff+ ti)))>0) THEN\n--$ IF Test0  WRITELNF(s('ATT=3: ')+l(fr));--$ ENDIF\n            HA(haOff+ fr):=3; -- mark as already found a gaining move\n          END IF;\n        END IF;\n      ELSE\n        NULL;\n      END IF;\n    END IF;\n    EXIT WHEN fr>88;\n  END LOOP; \n  cntAtt:=countt;\n  ha1st:=0;\n  ha2nd:=0;\n\n  IF NOT p_Chess THEN\n    FOR fr IN 11..88 LOOP -- is piece attacked?\n      IF HA(haOff+ fr)>0 THEN\n        HAfr:=0;\n        frc:=stilling(stOff+ fr); -- skip if k,m,p ???!!!*)\n        IF (stilling(stOff+ fr+11)=bP) OR (stilling(stOff+ fr+11)=bE)\n          OR (stilling(stOff+ fr+ 9)=bP) OR (stilling(stOff+ fr+ 9)=bE) THEN\n          CASE \n           WHEN frc in( wN,wB)     THEN  HAfr:=200;\n           WHEN frc in( wR,wC,wQ) THEN HAfr:=370;\n          ELSE NULL; END CASE;\n        ELSIF (frc=wQ) OR (frc=wR) OR (frc=wC) THEN\n          IF (stilling(stOff+ fr+12)=bN) OR (stilling(stOff+ fr-12)=bN)\n          OR    (stilling(stOff+ fr+21)=bN) OR (stilling(stOff+ fr-21)=bN)\n          OR    (stilling(stOff+ fr+ 8)=bN) OR (stilling(stOff+ fr- 8)=bN)\n          OR    (stilling(stOff+ fr+19)=bN) OR (stilling(stOff+ fr-19)=bN) THEN\n            CASE\n              WHEN frc= wQ     THEN HAfr:=350;\n              WHEN frc in (wR,wC) THEN HAfr:=170;\n              ELSE NULL; \n            END CASE;\n          ELSIF (stilling(stOff+ fr+11)=bB) OR\n                (stilling(stOff+ fr+ 9)=bB) OR\n                (stilling(stOff+ fr-11)=bB) OR\n                (stilling(stOff+ fr- 9)=bB) OR\n                (stilling(stOff+ fr+11)=spc) AND (stilling(stOff+ fr+22)=bB)  OR \n                (stilling(stOff+ fr-11)=spc) AND (stilling(stOff+ fr-22)=bB)  OR \n                (stilling(stOff+ fr+ 9)=spc) AND (stilling(stOff+ fr+18)=bB)  OR \n                (stilling(stOff+ fr- 9)=spc) AND (stilling(stOff+ fr-18)=bB)  OR\n                (stilling(stOff+ fr+11)=spc) AND (stilling(stOff+ fr+22)=spc) AND (stilling(stOff+ fr+33)=bB)  OR \n                (stilling(stOff+ fr-11)=spc) AND (stilling(stOff+ fr-22)=spc) AND (stilling(stOff+ fr-33)=bB)  OR \n                (stilling(stOff+ fr+ 9)=spc) AND (stilling(stOff+ fr+18)=spc) AND (stilling(stOff+ fr+27)=bB)  OR \n                (stilling(stOff+ fr- 9)=spc) AND (stilling(stOff+ fr-18)=spc) AND (stilling(stOff+ fr-27)=bB)  THEN --uncomplete!*)\n            CASE\n              WHEN frc=wQ     THEN HAfr:=350;\n              WHEN frc IN (wR,wC) THEN HAfr:=170;\n              ELSE NULL;\n            END CASE;\n          ELSIF (frc=wQ) AND (\n            (stilling(stOff+ fr+10)=bR) OR\n            (stilling(stOff+ fr-10)=bR) OR\n            (stilling(stOff+ fr+ 1)=bR) OR\n            (stilling(stOff+ fr- 1)=bR) OR\n            (stilling(stOff+ fr+10)=spc) AND (stilling(stOff+ fr+20)=bR)  OR \n            (stilling(stOff+ fr-10)=spc) AND (stilling(stOff+ fr-20)=bR)  OR \n            (stilling(stOff+ fr+ 1)=spc) AND (stilling(stOff+ fr+ 2)=bR)  OR \n            (stilling(stOff+ fr- 1)=spc) AND (stilling(stOff+ fr- 2)=bR)  OR\n            (stilling(stOff+ fr+10)=spc) AND (stilling(stOff+ fr+20)=spc) AND (stilling(stOff+ fr+30)=bR)  OR \n            (stilling(stOff+ fr-10)=spc) AND (stilling(stOff+ fr-20)=spc) AND (stilling(stOff+ fr-30)=bR)  OR \n            (stilling(stOff+ fr+ 1)=spc) AND (stilling(stOff+ fr+ 2)=spc) AND (stilling(stOff+ fr+ 3)=bR)  OR \n            (stilling(stOff+ fr- 1)=spc) AND (stilling(stOff+ fr- 2)=spc) AND (stilling(stOff+ fr- 3)=bR)) THEN\n            HAfr:=180;\n          END IF;\n        END IF;\n        IF HAfr>0 THEN -- attacked, store move(s)\n          IF HAfr>ha2nd THEN\n            IF HAfr>ha1st THEN\n              ha2nd:=ha1st;\n              ha1st:=HAfr;\n            ELSE\n              ha2nd:=HAfr;\n            END IF;\n          END IF;\n          n:=fr-1;\n          ti:=89;\n          retning:=0;\n          cntAm:=0; -- count of moves for attacked piece\n          LOOP  -- maybe only on HA(haOff+ fr)=1 ???\n            GetNext(stilling,n,ti,retning,movetyp);\n            IF (n=fr) THEN\n              -- what about checks to set chess flag ?\n              cntAm := cntAm + 1;\n              cntAtt := cntAtt + 1;\n              Trk(cntAtt).Vlu:=   HAfr;\n              Trk(cntAtt).Fra:=     fr;\n              Trk(cntAtt).Til:=     ti;\n              Trk(cntAtt).Typ:=movetyp;\n            END IF;\n            EXIT WHEN n>fr;\n          END LOOP; \n          IF cntAm=0 THEN -- bound or lost piece\n            IF ha2nd<HAfr THEN\n              ha2nd:=HAfr;\n            END IF;\n          ELSIF cntAm<3 THEN -- only one move possible\n            vc:=ValueCalc(vcxOff+ UPPER_n(stilling(stOff+ fr))) (vcyOff+ UPPER_n(stilling(stOff+ Trk(cntAtt).Til)));\n            IF vc<=-HAfr THEN\n                IF (cntAm=1) OR (stilling(stOff+ fr)=wQ) THEN\n                    IF ha2nd<HAfr THEN\n                       ha2nd:=HAfr;\n                    END IF;\n                END IF;\n            END IF;\n          END IF;\n        END IF;\n      END IF;--IF HA(haOff+ fr)>0\n        -- HA(haOff+ fr):=HAfr; p.t. not used later \n    END LOOP;--FOR fr IN 11..88\n  END IF; --IF not chess\n\n\n  IF MATE THEN -- no moves possible \n    IF p_Chess THEN\n      fmax.Typ:=MOVEmat;\n      fmax.Vlu:=-16383;\n    ELSE\n      fmax.Typ:=MOVEpat;\n      fmax.Vlu:=0;\n    END IF;\n  ELSE\n    QFindCnt :=QFindCnt +1;\n    SkipValue:=PL_PIG_CHESS_ENGINE_EVAL.Eval(stilling,Activityy,FALSE,fmax.Vlu,far)-FLOOR((ha2nd-ha1st)/32);\n    IF p_Chess THEN\n      fmax.Vlu:=-20000;\n    ELSE\n      fmax.Vlu:=SkipValue;\n    END IF;\n    IF (countt>1) AND (fmax.Vlu<far) THEN\n      QSortTrk(Trk,1,countt);\n      --SHellSort(Trk,countt);\n      IF Trk(1).Vlu>31 THEN SkipValue:=SkipValue+FLOOR(Trk(1).Vlu/32); END IF;\n      IF NOT p_Chess THEN fmax.Vlu:=SkipValue; END IF;\n    END IF;\n\n    IF Qdepth=1 THEN\n      IF Mirrt THEN\n        StartEval:=-SkipValue;\n      ELSE\n        StartEval:=SkipValue;\n      END IF;\n    END IF;\n \n    IF (countt>0) AND (fmax.Vlu<far) THEN \n      fmax.Fra:=10;\n      fmax.Til:=89;\n      cnt:=0;\n      LOOP                            -- for cnt:=1..countt\n        cnt := cnt + 1;  \n        IF NOT EatOnly OR (Trk(cnt).Vlu>0) THEN\n          skipp:=FALSE;\n          IF NOT p_Chess THEN\n \n            -- 3: if not a chess and fmax gain is bigger than the piece to\n            --      eat + an max positional value gain (MaxPosValGain about 50)\n            IF NOT (SET_IN(MOVEskak,Trk(cnt).Typ))\n            --AND (fmax.Vlu-SkipValue>ValueCalc(bA,UPPER_n(stilling(stOff+ Trk(cnt).Til)))+MaxPosValGain) THEN\n\n            AND (fmax.Vlu-SkipValue>ValueCalc(vcxOff+ bA) (vcyOff+ UPPER_n(stilling(stOff+ Trk(cnt).Til)))+MaxPosValGain) THEN\n              skipp:=TRUE; -- !!!!!! under-promotion,ep fails? !!!!!!!*)\n            END IF;\n          ELSE\n            IF countt>2 THEN\n              frc:=UPPER_n(stilling(stOff+ Trk(cnt).Fra));\n              IF (frc<>bK) AND (frc<>bM) AND NOT (SET_IN(MOVEslag,Trk(cnt).Typ)) THEN\n                m:=Egain(stilling,Trk(cnt).Fra,Trk(cnt).Til,OwnCount,FirstCountAttacker);\n--$ IF Test  IF Tag() AND (OwnCount<2) THEN WRITELNF(s('SKIP<2 =')+l(OwnCount)); END IF;--$ ENDIF\n                IF OwnCount<2 THEN skipp:=TRUE; END IF;\n              END IF;\n            END IF; \n          END IF;\n \n          -- 4: skip if best position and move is piece back again\n          IF ((SkipValue>0) OR (fmax.Vlu>0))\n            AND (Trk(cnt).Fra=farfarTil)\n            AND (Trk(cnt).Til=farfarFra) THEN\n            --skipp:=TRUE;\n            NULL;\n          END IF;\n \n          IF NOT skipp THEN\n            Still:=stilling;\n            CHESS:=SET_IN(MOVEskak,Trk(cnt).Typ);\n            IF (SET_IN(MOVEslag,Trk(cnt).Typ))\n            OR (Trk(cnt).Fra>70) AND (stilling(stOff+ Trk(cnt).Fra)=wP) THEN\n              repFra:=0;\n              repTil:=0;\n              farFra:=0;\n              farTil:=0;\n            ELSE \n              repFra:=Trk(cnt).Fra;\n              repTil:=Trk(cnt).Til;\n            END IF;\n            DoMove(Still, Trk(cnt).Fra, Trk(cnt).Til, Trk(cnt).Typ);\n            Trk(cnt).Vlu:=-QFind(Still,Activityy,-fmax.Vlu,-far,cf,Qdepth,\n                                 CHESS,repFra,repTil,farFra,farTil);\n            IF NOT Push AND (Qdepth<10) THEN \n              NULL; --AEM();--active-event-monitor??? \n            END IF;\n            IF Trk(cnt).Vlu>fmax.Vlu THEN \n              fmax:=Trk(cnt);\n            END IF;\n          END IF;\n        ELSE\n          NULL;\n        END IF;\n        EXIT WHEN (fmax.Vlu>far) OR (cnt=countt) OR Push;\n      END LOOP; \n      -- OR (fmax.Vlu>1200)\n      --   OR NOT Mirrt AND (fmax.Vlu>StartEval+1000)\n      --   OR Mirrt AND (fmax.Vlu>1000-StartEval) ;\n \n      IF NOT p_Chess AND ((fmax.Vlu<SkipValue) OR (fmax.Fra=10)) THEN\n        fmax.Vlu:=SkipValue;\n      END IF;\n    ELSE -- IF countt=0: -- slut\n      fmax.Vlu:=SkipValue;\n    END IF;\n  END IF;\n\n--$ IF Test IF Tag() THEN ShowLine('EvQf=',fmax.Vlu,FALSE); WRITELNF(0); END IF;--$ ENDIF\n  PL_PIG_CHESS_ENGINE_EVAL.Depth := PL_PIG_CHESS_ENGINE_EVAL.Depth - 1;\n  Qdepth := Qdepth - 1;\n\n  IF fmax.Vlu>16000 THEN fmax.Vlu := fmax.Vlu - 1; END IF;\n  RETURN(fmax.Vlu);\nEND QFind;\n\n \nPROCEDURE ClearHistory(p_cnt SIMPLE_INTEGER, p_black BOOLEAN) IS\n  n SIMPLE_INTEGER:=0;\n  cnt SIMPLE_INTEGER := p_cnt;\n  black  SIMPLE_INTEGER:=CASE WHEN p_black then 2 ELSE 1 END;\nBEGIN\n  IF cnt>0 THEN\n    IF cnt>HisMax THEN cnt:=HisMax; END IF;\n    FOR n IN 1..HisMax-cnt LOOP\n      Repete(black) (n) :=Repete(black) (n+cnt);\n    END LOOP;\n    FOR n IN 1+HisMax-cnt..HisMax LOOP\n      Repete(black) (n).tr.Fra:=0;\n      Repete(black) (n).tr.Til:=0;\n    END LOOP;\n  END IF;\nEND ClearHistory;\n \n \nPROCEDURE AddHistory(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                     fra SIMPLE_INTEGER,\n                     til SIMPLE_INTEGER,\n                     vlu SIMPLE_INTEGER)IS\n-- NOTE: black positions are stored mirror'ed\n  black SIMPLE_INTEGER:=1; --1=FALSE, 2=TRUE \n  n SIMPLE_INTEGER:=0;\n  nn SIMPLE_INTEGER:=0;\n  st PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE;\nBEGIN\n  IF (UPPER_n(stilling(stOff+ fra))=bP) OR (stilling(stOff+ til)<>spc) THEN\n    ClearHistory(999,FALSE);\n    ClearHistory(999,TRUE);\n  ELSE\n    black:=CASE WHEN stilling(stOff+ HvisTur)=bT THEN 2 ELSE 1 END;\n    FOR nn IN 2..HisMax LOOP\n      n :=HisMax-nn+2; --HisMax..2 BY -1\n      Repete(black) (n) := Repete(black) (n-1);\n    END LOOP;\n    --WITH Repete(black,1) \n      st:=stilling;\n      IF black=2 THEN\n        Mirror(st);\n        --fra:=MOD(fra,10)+10*(9-FLOOR(fra/10));\n        --til:=MOD(til,10)+10*(9-FLOOR(til/10));\n      END IF;\n      repete(black) (1).tr.Fra:=fra;\n      repete(black) (1).tr.Til:=til;\n      repete(black) (1).tr.Vlu:=vlu;\n    --END IF;\n  END IF;\nEND AddHistory;\n \n\n\nFUNCTION Equal_old(p_stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, p_still2 in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE) RETURN BOOLEAN IS\n  --uses out to make the compare by reference (quicker) but no change of data.\nBEGIN\n  FOR n in 1..121 LOOP\n     if p_stilling(stOff+ n) <> p_still2(n) THEN\n       RETURN FALSE;\n     end if;\n  END LOOP;\n  RETURN TRUE;\nEND Equal_old;\n\n\n\nFUNCTION Equal(p_stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, p_still2 in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE) RETURN BOOLEAN IS\n  --uses out to make the compare by reference (quicker) but no change of data.\n  --First checks on 'coinflip' fields, makes compare 25% faster.\nBEGIN--/* in PL/SQL is offset 11, logical: -10..110: A1-H8 = 11-88, HvidSort=wT | bN CAP=BLACK */\n  IF p_stilling(121) <> p_still2(121) THEN -- 11+ hvistur (110) color is 50% for diff found\n    RETURN FALSE;\n  END IF;\n  IF p_stilling(35) <> p_still2(35) THEN -- 11+ d2 for diff found\n    RETURN FALSE;\n  END IF;\n  IF p_stilling(36) <> p_still2(36) THEN -- 11+ e2 for diff found\n    RETURN FALSE;\n  END IF;\n  IF p_stilling(85) <> p_still2(85) THEN -- 11+ d7 for diff found\n    RETURN FALSE;\n  END IF;\n  IF p_stilling(86) <> p_still2(86) THEN -- 11+ e7 for diff found\n    RETURN FALSE;\n  END IF;\n  FOR n in 22..29 LOOP -- 11+ 11..18 (first row)\n     if p_stilling(n) <> p_still2(n) THEN\n       RETURN FALSE;\n     end if;\n  END LOOP;\n  FOR n in 92..99 LOOP -- 11+ 81..88 (last row)\n     if p_stilling(n) <> p_still2(n) THEN\n       RETURN FALSE;\n     end if;\n  END LOOP;\n  FOR n in 32..89 LOOP -- 11+ 21..78\n     if p_stilling(n) <> p_still2(n) THEN\n       RETURN FALSE;\n     end if;\n  END LOOP;\n  --WRT('EQUAL');\n  RETURN TRUE;\nEND Equal;\n\n\n\nPROCEDURE Find(p_stilling PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n               p_dybde     SIMPLE_INTEGER, \n               far         SIMPLE_INTEGER,\n               farfar      SIMPLE_INTEGER,\n               cf          SIMPLE_INTEGER, --cf=20*)  \n               traek in out TRKDATA, \n               p_farFra    SIMPLE_INTEGER,\n               p_farTil    SIMPLE_INTEGER,\n               farfarFra   SIMPLE_INTEGER,\n               farfarTil   SIMPLE_INTEGER) IS\n  dybde     SIMPLE_INTEGER := p_dybde; \n  farFra    SIMPLE_INTEGER := p_farFra;\n  farTil    SIMPLE_INTEGER := p_farTil;\n  dyb     SIMPLE_INTEGER:=0;\n  fr      SIMPLE_INTEGER:=0;\n  ti      SIMPLE_INTEGER:=0;\n  retning SIMPLE_INTEGER:=0;\n  cnt     SIMPLE_INTEGER:=0;\n  countt  SIMPLE_INTEGER:=0;\n  VluTmp  SIMPLE_INTEGER:=0;\n  c1      SIMPLE_INTEGER:=0;\n  c2      SIMPLE_INTEGER:=0;\n  c3      SIMPLE_INTEGER:=0;\n  n       SIMPLE_INTEGER:=0;\n  nn      SIMPLE_INTEGER:=0;\n  KING    SIMPLE_INTEGER:=0;\n  reps    SIMPLE_INTEGER:=0;\n  til     SIMPLE_INTEGER:=0;\n  repFra  SIMPLE_INTEGER:=0;\n  repTil  SIMPLE_INTEGER:=0;\n  movetyp  MOVETYPE:=0;\n  Trk      TRAEKDATA := TRAEKDATA();\n  TraekTst TRKDATA;\n  fmax     TRKDATA;\n  repmove  TRKDATA;\n  stilling PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE:= p_stilling;\n  Still    PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE:=PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE();\n  Mirrt      SIMPLE_INTEGER:=1;  --BOOLEAN; nu 1=FALSE 2=TRUE\n  repper      BOOLEAN;\n  rep1        BOOLEAN;\n  Chess       BOOLEAN; \n  FirstCalled BOOLEAN;\nBEGIN\n  FindCnt :=FindCnt +1;\n  Trk.extend(116);\n  PL_PIG_CHESS_ENGINE_EVAL.Depth := PL_PIG_CHESS_ENGINE_EVAL.Depth + 1;\n  FirstCalled := FirstCall; -- tells it's called from FindTrk \n  FirstCall   := FALSE;\n  IF stilling(stOff+ HvisTur)=bT THEN \n    Mirrt := 2;\n    Mirror(stilling);\n  END IF;\n  Chess:=FALSE;\n  IF (MOD(PL_PIG_CHESS_ENGINE_EVAL.Depth, 2)=1) = BlacksTurn THEN\n    PL_PIG_CHESS_ENGINE_EVAL.pd:=PL_PIG_CHESS_ENGINE_EVAL.pdb;\n  ELSE\n    PL_PIG_CHESS_ENGINE_EVAL.pd:=PL_PIG_CHESS_ENGINE_EVAL.pdw;\n  END IF;\n  IF stilling(stOff+ 85)=bM THEN\n    KING:=85;\n  ELSE\n    KING:=11;\n    WHILE (stilling(stOff+ KING)<>bK) AND (KING<89) LOOP KING := KING + 1; END LOOP;\n  END IF;\n--WRITELN(s('KING=')+l(KING));*)\n  fr:=10;\n  ti:=89;\n  retning:=0;\n  countt:=0;\n  reps:=0;\n  LOOP           -- lav liste med alle tr\u00e6k (count)\n    GetNext(stilling,fr,ti,retning,movetyp);\n    IF (fr<89) THEN\n      countt := countt + 1;\n      IF SET_IN (MOVEslag ,movetyp) THEN\n        IF (stilling(stOff+ fr)=wP) AND (fr>70) THEN\n          til:=ti;\n          IF til<fr+9 THEN\n            VluTmp:=-50;  -- Rook-promotion, so give low priority\n            til:=til+20;\n            IF til<fr+9 THEN\n              IF til+2>fr THEN\n                VluTmp:=200;  -- knight\n                til:=til+10;\n              ELSE\n                VluTmp:=-90;  -- Bishop\n                til:=til+20;\n              END IF;\n            END IF;\n          ELSE  \n            VluTmp:=880-100;  -- Queen\n          END IF;\n          VluTmp:=VluTmp+ValueCalc(vcxOff+ UPPER_n(stilling(stOff+ fr))) (vcyOff+ UPPER_n(stilling(stOff+ til)));\n        ELSE\n          IF stilling(stOff+ ti)=spc THEN\n            VluTmp:=1;\n          ELSE\n            VluTmp:=ValueCalc(vcxOff+ UPPER_n(stilling(stOff+ fr))) (vcyOff+ UPPER_n(stilling(stOff+ ti)));\n          END IF;\n        END IF;\n      ELSE\n        IF (stilling(stOff+ fr)=wP) AND (fr>70) THEN\n          til:=ti;\n          IF til<fr+9 THEN\n            VluTmp:=-50;  -- Rook-promotion, so give low priority \n            til:=til+20;\n            IF til<fr+9 THEN\n              IF til+2>fr THEN\n                VluTmp:=200;  -- knight \n                til:=til+10;\n              ELSE\n                VluTmp:=-90;  -- Bishop \n                til:=til+20;\n              END IF;\n            END IF;\n          ELSE  \n            VluTmp:=880-100; -- Queen \n          END IF;\n        ELSE\n          --!!!!!!!!!!!!!!!!!! skal v\u00e6re der!!!\n          --NULL;\n          VluTmp := PL_PIG_CHESS_ENGINE_EVAL.pd(pdN(stilling(stOff+ fr),ti)) - PL_PIG_CHESS_ENGINE_EVAL.pd(pdN(stilling(stOff+ fr),fr)); \n        END IF;\n      END IF;\n      Trk(countt).Vlu:=VluTmp;\n      Trk(countt).Fra:=fr;\n      Trk(countt).Til:=ti;\n      Trk(countt).Typ:=movetyp;\n      IF PL_PIG_CHESS_ENGINE_EVAL.Depth=1 THEN\n        n:=2;\n        til:=Repete(Mirrt) (n).tr.Til;\n        WHILE (n<=HisMax) AND (til<>0) AND (til<>90) LOOP \n          IF (ti=Repete(Mirrt) (n).tr.Til) THEN\n            IF (fr=Repete(Mirrt) (n).tr.Fra) THEN\n              IF Equal(stilling, Repete(Mirrt) (n).st) THEN\n                --$ IF Test0WRITELN(s('!x7!:')+l(n));--$ ENDIF\n                reps := reps + 1;\n                repmove:=Trk(countt);\n              END IF;\n            END IF;\n          END IF;\n          n:=n+1;\n          IF n<=HisMax THEN\n            til:=Repete(Mirrt) (n).tr.Til;\n          END IF;\n        END LOOP;\n      END IF;\n    END IF;\n    EXIT WHEN fr=89;\n  END LOOP; \n  IF countt>1 THEN \n    QSortTrk(Trk,1,countt); \n  END IF; -- new! pre-sort to get better cut-offs\n \n  dyb:=1;\n  IF countt>0 THEN \n    IF (PL_PIG_CHESS_ENGINE_EVAL.Depth=1) AND (countt=1) THEN -- first move is only move!\n      fmax:=Trk(1);\n    ELSE\n      --farfar := -20000;*)\n      LOOP                              -- for dyb:=1..dybde\n        IF (dyb=1) AND FALSE THEN\n          fmax.Vlu:=farfar;\n        ELSE\n          fmax.Vlu:=-20000;\n        END IF;\n        cnt:=0;\n        LOOP                            -- for cnt:=1..countt\n          cnt := cnt + 1;\n          IF (dyb=1) OR (Trk(cnt).Vlu>-12000) THEN -- hvis ikke sat mat\n            Still:=stilling;\n            DoMove(Still, Trk(cnt).Fra, Trk(cnt).Til, Trk(cnt).Typ);\n  \n            repper:=(reps>0) AND (repmove.Til=Trk(cnt).Til) AND (repmove.Fra=Trk(cnt).Fra);\n            IF repper THEN\n--$ IF Test0  WRITELNF(s('!Find: reps=')+l(reps)+s('!'));--$ ENDIF\n              IF reps>1 THEN      -- 3'rd time\n                Trk(cnt).Vlu:=DrawAccept;                    -- -50 .. 50 \n                rep1:=FALSE;\n              ELSE\n                rep1:=TRUE;\n              END IF;\n            END IF;\n            IF NOT repper OR rep1 THEN\n              IF (SET_IN (MOVEslag ,Trk(cnt).Typ))\n              OR (Trk(cnt).Fra>70) AND (stilling(stOff+ Trk(cnt).Fra)=wP) THEN\n                repFra:=0;\n                repTil:=0;\n                farFra:=0;\n                farTil:=0;\n              ELSE\n                repFra:=Trk(cnt).Fra;\n                repTil:=Trk(cnt).Til;\n              END IF;\n              IF dyb=1 THEN\n                Chess:=CheckSkak(Still,KING,FALSE);\n                IF Chess AND (dybde=1) THEN -- expand when last move is a chess\n                  Find(Still,1,-fmax.Vlu,-far,cf,TraekTst,repFra,repTil,farFra,farTil);\n                  IF NOT STOPP THEN Trk(cnt).Vlu:=-TraekTst.Vlu; END IF;\n                ELSE\n                  Trk(cnt).Vlu:=-QFind(Still,countt,-fmax.Vlu,-far,cf,0,Chess,repFra,repTil,farFra,farTil);\n                END IF;\n              ELSE\n                Find(Still,dyb-1,-fmax.Vlu,-far,cf,TraekTst,repFra,repTil,farFra,farTil);\n                IF NOT STOPP THEN Trk(cnt).Vlu:=-TraekTst.Vlu; END IF;\n                IF NOT Push THEN \n                  NULL; --AEM(); --!!!!!!!!!!!!!!!!!!!!!\n                END IF;\n              END IF;\n              IF repper THEN -- adjust eval down 'cause opponent can take repetition\n                IF Trk(cnt).Vlu>DrawAccept THEN Trk(cnt).Vlu:=DrawAccept; END IF;\n              END IF;\n            END IF;\n            IF STOPP THEN\n              IF (fmax.Vlu=farfar) OR (fmax.Vlu=-20000) THEN\n                fmax:=Trk(1);\n--$ IF Stamp W.CONCAT(W.s('=farfar ')+W.l(fmax.Fra)+W.c(12C)); --$ ENDIF\n               END IF;\n            ELSE\n              IF Trk(cnt).Vlu>fmax.Vlu THEN\n                fmax:=Trk(cnt);\n              END IF;\n            END IF;\n          END IF;\n          EXIT WHEN (cnt>=countt) -- normal END for cnt=1..count\n           OR (fmax.Vlu>far) -- pruning cut\n           OR (PL_PIG_CHESS_ENGINE_EVAL.Evals>MaxEvals) AND (dyb>1) -- Time cut\n           OR (fmax.Vlu>16382) -- mate in one found, stop\n           OR Push;            -- break, stop\n        END LOOP; \n \n        -- !!!! if more than 3000 nodes on depth 1 then lower total depth>1 by 1\n        -- set between 1000 and 20000 (def: 3000)\n \n        IF (PL_PIG_CHESS_ENGINE_EVAL.Evals>MaxEvals) AND (dyb>1) THEN\n          IF dyb<dybde THEN\n            dybde:=dyb;\n          END IF;\n          STOPP:=TRUE;\n\n        END IF;\n        IF FirstCalled THEN\n          IF dyb<=1 THEN \n            --$ IF Test WRITELNF(s('FirstCalled, dybde=')+l(dybde));--$ ENDIF\n            IF (PL_PIG_CHESS_ENGINE_EVAL.Evals>2000) AND (dyb<dybde) THEN\n              dybde := dybde - 1;\n              --$ IF Test WRITELNF(s('AAA evals=')+l(SkakBrainEval.Evals)+s(', dec(dybde)'));--$ ENDIF\n            END IF;\n            IF NOT Chess AND (PL_PIG_CHESS_ENGINE_EVAL.Evals<30) THEN\n              dybde := dybde + 1;\n              --$ IF Test WRITELNF(s('BBB evals=')+l(SkakBrainEval.Evals)+s(', inc(dybde)'));--$ ENDIF\n            END IF;\n          END IF;\n        END IF;\n        IF (fmax.Vlu>12000) THEN dyb:=dybde; END IF; -- mate found, stop\n        IF dyb<dybde THEN \n          QSortTrk(Trk,1,cnt);\n          --ShellSort(Trk,cnt);\n        END IF;\n        dyb := dyb + 1;\n        EXIT WHEN dyb>dybde;\n      END LOOP; \n    END IF;\n    IF PL_PIG_CHESS_ENGINE_EVAL.Depth=1 THEN\n \n-- AddHistory called by SkakFil.GetStilling\n      FOR nn IN HisMax..2 LOOP--BY -1 DO\n        n :=HisMax-nn+2; --HisMax..2 BY -1\n        Repete(Mirrt) (n):=Repete(Mirrt) (n-1);\n      END LOOP;\n      Repete(Mirrt) (1).st:=stilling;\n      Repete(Mirrt) (1).tr:=fmax;\n--*)\n      IF (reps>1) AND (repmove.Til=fmax.Til) AND (repmove.Fra=fmax.Fra) THEN\n        fmax.Typ:=MOVEx7;\n        --$ IF False  WRITELN(s('!Find:x7!'));--$ ENDIF\n      END IF;\n    END IF;\n--$ IF Test\n--    WRITEF(s('Best: Vlu=')+l(fmax.Vlu)+s(' '));\n--    ShowMove(fmax,Mirrt);\n--    WRITELNF(0);\n--$ ENDIF\n  ELSE                  -- no moves, end\n    fmax.Fra:=89;\n    fmax.Til:=10;\n    IF stilling(stOff+ 15)=wM THEN\n      n:=15;\n    ELSE\n      n:=11;\n      WHILE (n<89) AND (stilling(stOff+ n)<>wK) LOOP\n        n := n + 1;\n      END LOOP;\n    END IF;\n    IF CheckSkak(stilling,n,TRUE) THEN\n      fmax.Typ:=MOVEmat;\n      fmax.Vlu:=-16383;\n--$ IF Test\n--  WRITELNF(s('!MAT!'));\n--$ ENDIF\n    ELSE\n      fmax.Typ:=MOVEpat;\n      fmax.Vlu:=0;\n--$ IF Test\n--  WRITELNF(s('!PAT!'));\n--$ ENDIF\n    END IF;\n  END IF;\n  IF fmax.Vlu>16000 THEN fmax.Vlu := fmax.Vlu - 1; END IF;\n  traek:=fmax;\n  PL_PIG_CHESS_ENGINE_EVAL.Depth := PL_PIG_CHESS_ENGINE_EVAL.Depth - 1;\n--$ IF Test\n  \n--$ ENDIF\nEND Find;\n \n--    $ POP RangeChk POP OverflowChk POP StackChk POP ReturnChk\n \nFUNCTION NEq(s1 in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE,s2 in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE) RETURN BOOLEAN IS\n  n SIMPLE_INTEGER :=0;\nBEGIN\n  n:=11;\n  WHILE (n<=HvisTur) AND (s1(n)=s2(n)) LOOP\n    n := n + 1;\n  END LOOP;\n  RETURN(n<=HvisTur);\nEND NEq;\n \n-- dybde:  (0,1,4,7,10,13)        ekstra: p.t. unused\nPROCEDURE FindTrk(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                  dybde SIMPLE_INTEGER,\n                  ekstra SIMPLE_INTEGER,\n                  Traek in out TRKDATA\n                  ) IS\n  TeoNvn CONSTANT VARCHAR2(30) := 'OPENINGS.TXT';\n  X SIMPLE_INTEGER :=0;\n  N SIMPLE_INTEGER :=0;\n  p SIMPLE_INTEGER :=0;\n  p2 SIMPLE_INTEGER :=0;\n  Tnr SIMPLE_INTEGER :=0;\n  fra SIMPLE_INTEGER :=0;\n  til SIMPLE_INTEGER :=0;\n  dyb SIMPLE_INTEGER :=0;\n  OK BOOLEAN;\n  SLUT BOOLEAN;\n  --f File;\n  RN       SIMPLE_INTEGER :=0;\n  frqTotal SIMPLE_INTEGER :=0;\n  Mcnt SIMPLE_INTEGER := 5;\n---TYPE Ttype IS VARRAY(256) OF CHAR(1);-- 0..255 nu 1..256\n--  TN Ttype; TL Ttype; \n  ch CHAR(1);\nBEGIN\n  IF not FirstW THEN\n    INITIALIZE;\n  END IF;\n  STOPP:=FALSE;\n  IF dybde=0 THEN\n    til:=10;\n    IF stilling(stOff+ HvisTur)<>bT THEN\n      FOR fra in 11..88 LOOP\n        IF (stilling(stOff+ fra)=wK) OR (stilling(stOff+ fra)=wM) THEN til:=fra; END IF;\n      END LOOP;\n    ELSE\n      FOR fra in 11..88 LOOP\n        IF (stilling(stOff+ fra)=bK) OR (stilling(stOff+ fra)=bM) THEN til:=fra; END IF;\n      END LOOP;\n    END IF;\n    SkakDepth:=1; XchDepth:=1; MaxPosValGain:=20;\n    Traek.Vlu:=QFind(stilling,10,20000,-20000,20,0,\n                     CheckSkak(stilling,til,stilling(stOff+ HvisTur)<>bT),0,0,0,0);\n  ELSE\n--$ IF Stamp\n--  W.Buf := '';\n--  xcnt := 0;\n--  Stamp(TRUE,Traek,'');\n--$ ENDIF\n    OK:=FALSE;\n \n   -- Check om varianttr\u00e6 har et ok forslag !!!!!!!!!!!!!!!!!!!!!!*)\n    IF (TFra>10) AND (TTil>10) AND (TFra<89) AND (TTil<89) THEN\n      IF (stilling(stOff+ HvisTur)=bT) AND (stilling(stOff+ TFra)<wA)\n      OR (stilling(stOff+ HvisTur)<>bT) AND (stilling(stOff+ TFra)>'Z') THEN\n        MaxTeori:=TraekNr+1;\n        Traek.Fra:=TFra;\n        Traek.Til:=TTil;\n        Traek.Typ:=MOVEnormal;\n        OK:=TRUE;\n      END IF;\n    END IF;\n\n    IF NOT OK AND (TraekNr<TeoMaxTrk) AND TeoBook > 0 THEN\n--WRT('BOOKADD? Book='||TeoBook||' TraekNr='||TraekNr||' TeoMaxTrk='||TeoMaxTrk);\n        IF Teo.last IS NOT NULL THEN\n          FOR X IN 1..Teo.last LOOP -- search for position\n            IF Equal(Stilling,Teo(X)) THEN --  position found\n              IF TeoT(X).last IS NOT NULL THEN\n                frqTotal := 0;\n                FOR moveCnt IN 1..TeoT(X).last LOOP\n                  frqTotal := frqTotal + TeoT(X) (moveCnt).Vlu;\n                END LOOP;\n                IF frqTotal > 0 THEN \n                  --N:=TRUNC(dbms_random.value(1,TeoT(X).last+1));\n                  RN := TRUNC(dbms_random.value(1,frqTotal+1));\n                  N := 0;\n                  frqTotal := 0;\n                  FOR moveCnt IN 1..TeoT(X).last LOOP\n                    N := N + 1;\n                    frqTotal := frqTotal + TeoT(X) (moveCnt).Vlu;\n                    IF frqTotal >= RN THEN EXIT; END IF;\n                  END LOOP;\n                  Traek:=TeoT(X) (N);\nWRT('BOOK POS='||X||' RND='||N||' RN='||RN||' mv='||Traek.Fra||Traek.Til);\n                  OK:=TRUE;\n                  PL_PIG_CHESS_ENGINE_EVAL.Evals:=0;\n                END IF;\n              END IF;\n            END IF;\n          END LOOP;\n        END IF;\n\n    END IF;\n \n    IF NOT OK THEN\n      FirstCall:=TRUE;\n      PL_PIG_CHESS_ENGINE_EVAL.Evals:=0;\n      PL_PIG_CHESS_ENGINE_EVAL.Depth:=0;\n\n      --AEM:=AEMproc; --!!!!!!!!!!!!!!!!!!!!!\n      PL_PIG_CHESS_ENGINE_EVAL.PreProcessor(stilling);\n \n \n  -- Max Positional Value Gain, used for cutoff 3:\n  -- 0=77 20=94, 50=137, 100=140 so use:     20-50\n  -- SkakDepth:    1-4\n  -- XchDepth:     1-4\n \n      dyb               := FLOOR((dybde-1) / 3) + 1;   -- 1-5   (1-3) \n      MaxEvals          := 96* dybde * dybde* dybde;--  SHIFT(192,dybde); -- dybde 1 ganger med 2 (384), dybde 2 med 4 (776) dybde 3 med 8 (1500)\n      SkakDepth         := dyb + 2;--dyb + 2;  --MOD(dybde+1,3) + 0;         -- 2-4   (2)   \n      XchDepth          := dyb + 1;--dyb + 1;  --MOD(dybde  ,3) + 1;         -- 1-3   (2)   \n      MaxPosValGain     := (dyb+1)*10+5;--MOD(dybde  ,3) * 15 + 20;   -- 20-50 (35)  \n      MaxStackDepth     := 11+dyb*2+FLOOR((SkakDepth+XchDepth) / 2);\n--WRT('dybde='||dybde||' dyb='||dyb||' SkakDepth='||SkakDepth||' XchDepth='||XchDepth||' MaxPosValGain='||MaxPosValGain||' MaxStackDepth='||MaxStackDepth);  \n--dybde=1 dyb=1 SkakDepth=2 XchDepth=2 MaxPosValGain=35 MaxStackDepth=15\n--dybde=4 dyb=2 SkakDepth=2 XchDepth=2 MaxPosValGain=35 MaxStackDepth=17\n--dybde=7 dyb=3 SkakDepth=2 XchDepth=2 MaxPosValGain=35 MaxStackDepth=19\n      BlacksTurn:=stilling(stOff+ HvisTur)=bT;\n      Find(stilling,dyb,20000,-20000,20,Traek,0,0,0,0);\n      IF BlacksTurn THEN\n        Traek.Fra:=MOD(Traek.Fra,10)+10*(9-FLOOR(Traek.Fra/10));\n        Traek.Til:=MOD(Traek.Til,10)+10*(9-FLOOR(Traek.Til/10));\n      END IF;\n    END IF;\n--$ IF Stamp\n--  Stamp(FALSE,Traek,W.Buf);\n--$ ENDIF\n--$IF Test\n--    WRITELNF(s('Evals=')+l(SkakBrainEval.Evals)+s(' Nodes=')+l(Nodes));\n--    IF Traek.Typ=MOVETYPE{x7} THEN WRITELN(s('!Traek=x7!')); END IF;\n--    Close(TestFil);\n--$ENDIF\n  END IF;\nEND FindTrk;\n \nPROCEDURE GetNextQ(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                   fra in out SIMPLE_INTEGER,\n                   til in out SIMPLE_INTEGER,\n                   retning in out SIMPLE_INTEGER,\n                   MoveTyp in out MOVETYPE) IS\n-- GetNext i en version der ikke respekterer skak, kun for GetMove(Quick)\n  hvid BOOLEAN;\nBEGIN\n  IF stilling(stOff+ HvisTur)=wT THEN\n    LOOP\n      IF til>88 THEN\n        LOOP -- find n\u00e6ste hvide brik\n          fra := fra + 1;\n          EXIT WHEN (fra>88) OR (stilling(stOff+ fra)>wA);\n        END LOOP;\n        til:=fra;\n        retning:=0;\n      END IF;\n      IF fra<>89 THEN GetNextTil(stilling,fra,til,retning,MoveTyp); END IF;\n      EXIT WHEN (til<>89) OR (fra=89);\n    END LOOP;\n  ELSE -- sort\n    LOOP\n      IF til>88 THEN\n        LOOP\n          fra := fra + 1;\n          EXIT WHEN (fra>88) OR (stilling(stOff+ fra)<wA) AND (stilling(stOff+ fra)>bA);\n        END LOOP;\n        til:=fra;\n        retning:=0;\n      END IF;\n      IF fra<>89 THEN GetNextTil(stilling,fra,til,retning,MoveTyp); END IF;\n      EXIT WHEN (til<>89) OR (fra=89);\n    END LOOP;\n  END IF;\nEND GetNextQ;\n \n-- 1'ste tr\u00e6k =1, Udf\u00f8rer tr\u00e6k hvis OK (fra<89)\n-- Efter kald vil EatChar= den slagne brik (bBsSlLtdDTtR ellers spc)\nPROCEDURE GetMove(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                  t in out TRKDATA, \n                  MoveNr SIMPLE_INTEGER, \n                  Quick BOOLEAN) IS\n  fra SIMPLE_INTEGER :=0;\n  til SIMPLE_INTEGER :=0;\n  retning SIMPLE_INTEGER :=0;\n  n SIMPLE_INTEGER :=0;\n  movetyp MOVETYPE :=MOVEnormal;\nBEGIN\n  fra:=10;\n  til:=89;\n  retning:=0;\n  FOR n IN 1..MoveNr LOOP\n    IF fra<89 THEN\n      IF Quick THEN\n        GetNextQ(stilling,fra,til,retning,movetyp);\n      ELSE\n        GetNext(stilling,fra,til,retning,movetyp);\n      END IF;\n--$IF Test\n--    ELSE\n--  d(s('GetMove: Not that many moves!!!'));\n--  n:=MoveNr;\n--$ENDIF\n    END IF;\n  END LOOP;\n  IF fra<89 THEN  -- udf\u00f8r tr\u00e6k\n    IF SET_IN(MOVEslag,movetyp) THEN\n      EatChar:=stilling(stOff+ til);\n      IF EatChar=spc THEN\n        IF stilling(stOff+ HvisTur)=bT THEN\n          EatChar:=wP;\n        ELSE\n          EatChar:=bP;\n        END IF;\n      END IF;\n    ELSE\n      EatChar:=spc;\n    END IF;\n    DoMove(stilling,fra,til,movetyp);\n  END IF;\n  t.Fra:=fra;\n  t.Til:=til;\n  t.Typ:=movetyp;\n  t.Vlu:=0;\n  --$IF Test\n--    d(s('GetMove: Fra=')+l(fra)+s(' Til=')+l(til)+s(' MoveNr=')+l(MoveNr));\n  --$ENDIF\nEND GetMove;\n \nPROCEDURE GetMoveNr(stilling in out PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE, \n                    p_Fra SIMPLE_INTEGER,\n                    p_Til SIMPLE_INTEGER, \n                    MoveNr in out SIMPLE_INTEGER, \n                    Quick BOOLEAN) IS\n  fra SIMPLE_INTEGER:=p_Fra;\n  til SIMPLE_INTEGER:=p_Til;\n  retning SIMPLE_INTEGER :=0;\n  movetyp MOVETYPE :=MOVEnormal;\nBEGIN\n  fra:=10;\n  til:=89;\n  retning:=0;\n  MoveNr:=0;\n  LOOP\n    MoveNr := MoveNr + 1;\n    IF fra<89 THEN\n      IF Quick THEN\n        GetNextQ(stilling,fra,til,retning,movetyp);\n      ELSE\n        GetNext(stilling,fra,til,retning,movetyp);\n      END IF;\n  --$IF False\n--    ELSE\n--    d(s('GetMoveNr: Move not found!!!'));\n  --$ENDIF\n    END IF;\n    EXIT WHEN (fra=p_Fra) AND (til=p_Til) OR (fra=89);\n  END LOOP;\n  --$IF False\n  -- d(s('GetMoveNr: Fra=')+l(fra)+s(' Til=')+l(til)+s(' MoveNr=')+l(MoveNr));\n  --$ENDIF\nEND GetMoveNr;\n \n--  ValueCalc:ARRAY(bA..bR),(spc..bR) OF SIMPLE_INTEGER;\n--  TYPE ValueCalcYtype IS VARRAY(53) OF SIMPLE_INTEGER; -- vcyoffset= -31 (spc..bR]\n--  TYPE ValueCalcType  IS VARRAY(20) OF ValueCalcYtype; -- vcxoffset= -64 (bA..bR]\n--  ValueCalc ValueCalcType;\n--  nva.EXTEND(20); \n--  FOR i in 1..20 LOOP\n--    nva(i):= ValueCalcYtype();\n--    nva(i).EXTEND(53);\n--  END LOOP;\n  \nPROCEDURE InitValueCalc IS\n  --Fra CHAR(1);\n  Fra_n SIMPLE_INTEGER :=0;\n  --Til CHAR(1);\n  Til_n SIMPLE_INTEGER :=0;\nBEGIN\n  --WRT('InitValueCalc');\n  ValueCalc.extend(20);--allocate outer array as 1..20 (initialized empty by definition)\n  FOR n in 1..20 LOOP\n    ValueCalc(n):= ValueCalcYtype();--initialize outer array with empty inner array\n    ValueCalc(n).extend(53); --allocate inner array as 1..53\n  END LOOP;\n  ValueCalc(vcxOff+ bA) (vcyOff+ bP):=PL_PIG_CHESS_ENGINE_EVAL.ValueB;\n  ValueCalc(vcxOff+ bA) (vcyOff+ bQ):=PL_PIG_CHESS_ENGINE_EVAL.ValueD;\n  ValueCalc(vcxOff+ bA) (vcyOff+ bE):=PL_PIG_CHESS_ENGINE_EVAL.ValueE;\n  ValueCalc(vcxOff+ bA) (vcyOff+ bK):=PL_PIG_CHESS_ENGINE_EVAL.ValueK;\n  ValueCalc(vcxOff+ bA) (vcyOff+ bB):=PL_PIG_CHESS_ENGINE_EVAL.ValueL;\n  ValueCalc(vcxOff+ bA) (vcyOff+ bM):=PL_PIG_CHESS_ENGINE_EVAL.ValueM;\n  ValueCalc(vcxOff+ bA) (vcyOff+ bC):=PL_PIG_CHESS_ENGINE_EVAL.ValueR;\n  ValueCalc(vcxOff+ bA) (vcyOff+ bN):=PL_PIG_CHESS_ENGINE_EVAL.Value_S;\n  ValueCalc(vcxOff+ bA) (vcyOff+ bR):=PL_PIG_CHESS_ENGINE_EVAL.ValueT;\n  ValueCalc(vcxOff+ bA) (vcyOff+ spc):=0;\n  FOR Fra_n IN bP..bR LOOP\n     IF (Fra_n=bP) OR (Fra_n=bQ) OR (Fra_n=bE) OR (Fra_n=bK) OR (Fra_n=bB) OR (Fra_n=bM) OR (Fra_n=bC) OR (Fra_n=bN) OR (Fra_n=bR) THEN\n      FOR Til_n in spc..bR LOOP\n        IF (Til_n=spc) OR (Til_n=bP) OR (Til_n=bQ) OR (Til_n=bE) OR (Til_n=bK) OR (Til_n=bB) OR (Til_n=bM) OR (Til_n=bC) OR (Til_n=bN) OR (Til_n=bR) THEN\n          IF (Fra_n=bK) OR (Fra_n=bM) THEN\n            ValueCalc(vcxOff+ Fra_n) (vcyOff+ Til_n) := ValueCalc(vcxOff+ bA) (vcyOff+ Til_n);\n          ELSE\n            ValueCalc(vcxOff+ Fra_n) (vcyOff+ Til_n) := ValueCalc(vcxOff+ bA) (vcyOff+ Til_n) - ValueCalc(vcxOff+ bA) (vcyOff+ Fra_n);\n          END IF;\n        END IF;\n      END LOOP;\n    END IF;\n  END LOOP;\nEND InitValueCalc;\n\nPROCEDURE InitTeo_Old IS -- Initialize small hardcoded opening-book.\n  b1 INTEGER:=12;b2 INTEGER:=22;b3 INTEGER:=32;b4 INTEGER:=42;b5 INTEGER:=52;b6 INTEGER:=62;b7 INTEGER:=72;b8 INTEGER:=82;\n  c1 INTEGER:=13;c2 INTEGER:=23;c3 INTEGER:=33;c4 INTEGER:=43;c5 INTEGER:=53;c6 INTEGER:=63;c7 INTEGER:=73;c8 INTEGER:=83;\n  d1 INTEGER:=14;d2 INTEGER:=24;d3 INTEGER:=34;d4 INTEGER:=44;d5 INTEGER:=54;d6 INTEGER:=64;d7 INTEGER:=74;d8 INTEGER:=84;\n  e1 INTEGER:=15;e2 INTEGER:=25;e3 INTEGER:=35;e4 INTEGER:=45;e5 INTEGER:=55;e6 INTEGER:=65;e7 INTEGER:=75;e8 INTEGER:=85;\n  f1 INTEGER:=16;f2 INTEGER:=26;f3 INTEGER:=36;f4 INTEGER:=46;f5 INTEGER:=56;f6 INTEGER:=66;f7 INTEGER:=76;f8 INTEGER:=86;\n  g1 INTEGER:=17;g2 INTEGER:=27;g3 INTEGER:=37;g4 INTEGER:=47;g5 INTEGER:=57;g6 INTEGER:=67;g7 INTEGER:=77;g8 INTEGER:=87;\n  mvtN MOVETYPE:=MOVEnormal; mvtS MOVETYPE:=MOVEslag; mvtE MOVETYPE:=MOVEenpassant; mvtR MOVETYPE:=MOVErokade; -- normal, slag, enpassant, rokade \n  X INTEGER; Y INTEGER; st INTEGER;\nPROCEDURE TeoS(StilNr SIMPLE_INTEGER,\n               TrkNr SIMPLE_INTEGER,\n               fra SIMPLE_INTEGER,\n               til SIMPLE_INTEGER, \n               mvt MOVETYPE, \n               vlu SIMPLE_INTEGER) IS\n  Trk TRKDATA;\nBEGIN\n  TeoT(1+ StilNr)(TrkNr).Fra:=fra; -- TeoT=0..TeoMax (5), 1..TeoMaxVar\n  TeoT(1+ StilNr)(TrkNr).Til:=til;\n  TeoT(1+ StilNr)(TrkNr).Typ:=mvt;\n  TeoT(1+ StilNr)(TrkNr).Vlu:=vlu;\nEND TeoS;\nBEGIN\n  -- Create a small opening book \n  --for the first few moves: 6 opening moves each with 6 replies giving a total of 36 different (randomized) openings) \n  --WRT('InitTeo');\n  DefStill.extend(121);--(121) OF CHAR(1); -- i PL/SQL er offset 11               -10..HvisTur: A1-H8=11-88, HvidSort=wT | bN \n  --WRT('InitTeo0');\n  FOR n IN 1..121 LOOP\n    DefStill(n) := edge;\n  END LOOP;  \n  --WRT('InitTeo1');\n  still(DefStill,''); --start-position\n  --Randomize;\n  --WRT('InitTeo2');\n  FOR X IN 0..TeoMaxPos LOOP\n    Teo(1+ X):=DefStill;\n    FOR Y IN 1..TeoMaxVar LOOP\n      TeoT(1+ X)(Y).Fra:=11;--Fra=Til for unused slots.\n      TeoT(1+ X)(Y).Til:=11;\n      TeoT(1+ X)(Y).Typ:=mvtN;\n      TeoT(1+ X)(Y).Vlu:=0;\n    END LOOP;\n  END LOOP;\n  --WRT('InitTeo3');\n  st:=0;\n  TeoS(st,1,d2,d4,mvtN,0); -- start-position: d4,e4,c4,f4,b3,sf3\n  TeoS(st,2,e2,e4,mvtN,0);\n  TeoS(st,3,c2,c4,mvtN,0);\n  TeoS(st,4,f2,f4,mvtN,0);\n  TeoS(st,5,b2,b3,mvtN,0);\n  TeoS(st,6,g1,f3,mvtN,0);\n  st:=1;\n  DoMove(Teo(1+ st), 24, 44, mvtN); -- d4: d5,g6,b6,sf6,f5,d6\n  TeoS(st,1,d7,d5,mvtN,0);\n  TeoS(st,2,g7,g6,mvtN,0);\n  TeoS(st,3,b7,b6,mvtN,0);\n  TeoS(st,4,g8,f6,mvtN,0);\n  TeoS(st,5,f7,f5,mvtN,0);\n  TeoS(st,6,d7,d6,mvtN,0);\n  st := 2;\n  DoMove(Teo(1+ st), 25, 45, mvtN); -- e4: e5,e6,c5,c6,d6,d5 \n  TeoS(st,1,e7,e5,mvtN,0);\n  TeoS(st,2,e7,e6,mvtN,0);\n  TeoS(st,3,c7,c5,mvtN,0);\n  TeoS(st,4,c7,c6,mvtN,0);\n  TeoS(st,5,d7,d6,mvtN,0);\n  TeoS(st,6,d7,d5,mvtN,0);\n  st := 3;\n  DoMove(Teo(1+ st), 23, 43, mvtN); -- c4: g6,f5,c5,e5,sf6,b6\n  TeoS(st,1,g7,g6,mvtN,0);\n  TeoS(st,2,f7,f5,mvtN,0);\n  TeoS(st,3,c7,c5,mvtN,0);\n  TeoS(st,4,e7,e5,mvtN,0);\n  TeoS(st,5,g8,f6,mvtN,0);\n  TeoS(st,6,b7,b6,mvtN,0);\n  st := 4;\n  DoMove(Teo(1+ st), 26, 46, mvtN); -- f4: d5,f5,b6,c5,sf6,g6 \n  TeoS(st,1,d7,d5,mvtN,0);\n  TeoS(st,2,f7,f5,mvtN,0);\n  TeoS(st,3,b7,b6,mvtN,0);\n  TeoS(st,4,c7,c5,mvtN,0);\n  TeoS(st,5,g8,f6,mvtN,0);\n  TeoS(st,6,g7,g6,mvtN,0);\n  st := 5;\n  DoMove(Teo(1+ st), 22, 32, mvtN); -- b3: d5,e5,sf6,c5,b6,sc6 \n  TeoS(st,1,d7,d5,mvtN,0);\n  TeoS(st,2,e7,e5,mvtN,0);\n  TeoS(st,3,g8,f6,mvtN,0);\n  TeoS(st,4,c7,c5,mvtN,0);\n  TeoS(st,5,b7,b6,mvtN,0);\n  TeoS(st,6,b8,c6,mvtN,0);\n  st := 6;\n  DoMove(Teo(1+ st), 17, 36, mvtN); -- sf3: d5,f5,sf6,c5,d6,g6\n  TeoS(st,1,d7,d5,mvtN,0);\n  TeoS(st,2,f7,f5,mvtN,0);\n  TeoS(st,3,g8,f6,mvtN,0);\n  TeoS(st,4,c7,c5,mvtN,0);\n  TeoS(st,5,d7,d6,mvtN,0);\n  TeoS(st,6,g7,g6,mvtN,0);\n  --\n  -- two 2-ply positions as example for expanding the book:\n  st := 7;\n  DoMove(Teo(1+ st), 17, 36, mvtN); -- sf3,\n  DoMove(Teo(1+ st), 74, 54, mvtN); -- d5:  d4,g3\n  TeoS(st,1,d2,d4,mvtN,0);\n  TeoS(st,2,g2,g3,mvtN,0);\n  st := 8;\n  DoMove(Teo(1+ st), 17, 36, mvtN); -- sf3,\n  DoMove(Teo(1+ st), 76, 56, mvtN); -- f5:  d4,c4\n  TeoS(st,1,d2,d4,mvtN,0);\n  TeoS(st,2,c2,c4,mvtN,0);\n  --\n  MaxTeori:=0;\nEND InitTeo_old;\n\n\nPROCEDURE AddTeoMove(fr SIMPLE_INTEGER,ti SIMPLE_INTEGER, movetyp MOVETYPE, frequency SIMPLE_INTEGER) IS\n   stillnr SIMPLE_INTEGER:=0;\n   movenr  SIMPLE_INTEGER:=0;\nBEGIN\n  IF Teo.last IS NOT NULL THEN\n    FOR n IN 1..Teo.last LOOP -- search for position\n      IF Equal(DefStill,Teo(n)) THEN\n        --WRT('AddTeoMove: found position');\n        stillnr:= n;\n        exit;\n      END IF;\n    END LOOP; \n  END IF;\n  IF stillnr = 0 THEN -- allocate position\n    --WRT('AddTeoMove: add position');\n    Teo.extend;\n    TeoT.extend;\n    Teo(Teo.last)  := DefStill;\n    TeoT(Teo.last) := TeoTTypeY();\n    stillnr := Teo.last;\n  END IF;\n  IF TeoT(stillnr).last IS NOT NULL THEN\n    FOR n IN 1..TeoT(stillnr).last LOOP -- search for move\n      IF TeoT(stillnr) (n).fra=fr AND TeoT(stillnr) (n).til=ti THEN\n         movenr := n;\n         exit;\n      END IF;\n    END LOOP; \n  END IF;\n  IF movenr = 0 THEN -- allocate and store move\n    --WRT('AddTeoMove: add move '||fr||'-'||ti);\n    TeoT(stillnr).extend;\n    movenr := TeoT(stillnr).last;\n    TeoT(stillnr) (movenr).Fra := fr;\n    TeoT(stillnr) (movenr).Til := ti;\n    TeoT(stillnr) (movenr).Vlu := frequency;\n    TeoT(stillnr) (movenr).Typ := movetyp;\n    TeoMoves := TeoMoves + 1;\n  ELSE\n    TeoT(stillnr) (movenr).Vlu := TeoT(stillnr) (movenr).Vlu + frequency;\n  END IF;\nEND AddTeoMove;\n\n\nPROCEDURE AddTeo(fromtostr VARCHAR2, frequency SIMPLE_INTEGER DEFAULT 1, maxmoves INTEGER DEFAULT 20) IS\n  hj_str VARCHAR2(500) := REPLACE(REPLACE(REPLACE(UPPER(fromtostr),spc),'X'),'-');\n  moves SIMPLE_INTEGER := 0;\n  frti varchar2(4);\n  fr SIMPLE_INTEGER:=0;\n  ti SIMPLE_INTEGER:=0;\n  mvt MOVETYPE:=0; \nBEGIN\n  --WRT('AddTeo: '||hj_str);\n  IF DefStill IS NULL THEN\n    DefStill := PL_PIG_CHESS_ENGINE_EVAL.STILLINGTYPE();\n    DefStill.extend(121);\n    FOR n IN 1..121 LOOP\n      DefStill(n) := edge;\n    END LOOP;  \n  END IF;\n  still(DefStill,''); --start-position\n  WHILE length(hj_str) >= 4 and moves < maxmoves LOOP\n    moves := moves + 1;\n    IF moves > TeoMaxTrk THEN TeoMaxTrk := moves; END IF;\n    frti := substr(hj_str,1,4);\n    --WRT('AddTeo2: '||frti);\n    hj_str := substr(hj_str,5);\n    fr := substr(frti,2,1)*10 + ascii(substr(frti,1,1))-64;\n    ti := substr(frti,4,1)*10 + ascii(substr(frti,3,1))-64;\n    --\n    IF fr=15 and (ti=17 OR ti=13) AND Defstill(stOff+ 15)=wM \n    OR fr=85 and (ti=87 OR ti=83) AND Defstill(stOff+ 85)=bM THEN \n      mvt := MOVErokade;\n    ELSIF Defstill(stOff+ fr)=wP and Defstill(stOff+ ti)=spc and (ti-fr =  9 or ti-fr= 11)\n       OR Defstill(stOff+ fr)=bP and Defstill(stOff+ ti)=spc and (ti-fr = -9 or ti-fr=-11) THEN\n      mvt := MOVEenpassant;\n    ELSIF Defstill(stOff+ fr)=wP and ti > 80 \n       OR Defstill(stOff+ fr)=bP and ti < 20 THEN \n      mvt := MOVEpromotion;\n    ELSE\n      mvt := MOVEnormal;\n    END IF;\n    --\n    AddTeoMove(fr,ti,mvt,frequency);\n    --WRT('AddTeo3: '||fr||ti);\n    DoMove(DefStill, fr, ti, mvt); \n  END LOOP;\n--EXCEPTION WHEN OTHERS THEN\n--   RAISE_APPLICATION_ERROR(-20001, 'AddTeo: '||fr||ti);\nEND AddTeo;\n\nPROCEDURE InitTeo IS\nBEGIN\n WRT('TeoBook '||TeoBook||' Init');\n IF FALSE THEN--test\n   AddTeo('d2d4g8f6d4d5c7c5d5c6e7e6c6b7f8e7b7a8e8g8');--test en-passant, promotion and castling works in book.\n ELSIF TeoBook = 1 THEN\n   -- MICRO-THEORY BOOK, 30 openings with 2 halfmoves, all playable. Weights that match frequency played by masters\n  AddTeo('e2e4c7c5',43);  AddTeo('e2e4e7e5',39);  AddTeo('e2e4e7e6',14);  AddTeo('e2e4c7c6', 9);  AddTeo('e2e4d7d6', 3);  AddTeo('e2e4g7g6', 2);  AddTeo('e2e4d7d5', 1);  AddTeo('e2e4g8f6', 1);\n  AddTeo('d2d4g8f6',55);  AddTeo('d2d4d7d5',24);  AddTeo('d2d4e7e6', 5);  AddTeo('d2d4f7f5', 2);  AddTeo('d2d4d7d6', 2);  AddTeo('d2d4g7g6', 1);\n  AddTeo('g1f3g8f6',11);  AddTeo('g1f3d7d5', 9);  AddTeo('g1f3c7c5', 4);  AddTeo('g1f3g7g6', 1);  AddTeo('g1f3e7e6', 1);  AddTeo('g1f3f7f5', 1);\n  AddTeo('c2c4e7e5', 7);  AddTeo('c2c4g8f6', 5);  AddTeo('c2c4e7e6', 3);  AddTeo('c2c4c7c5', 3);  AddTeo('c2c4c7c6', 1);  AddTeo('c2c4g7g6', 1);\n  AddTeo('g2g3d7d5', 1);  \n  AddTeo('e2e3g8f6', 1);  \n  AddTeo('b2b3e7e5', 1);  \n  AddTeo('f2f4d7d5', 1);  \n ELSIF TeoBook = 2 THEN\n   -- MINI-THEORY BOOK, 178 openings with 2-8 halfmoves, all playable.\n   -- They are weighted to match frequency played by masters\n  AddTeo('e2e4c7c5g1f3d7d6d2d4');             AddTeo('e2e4c7c5g1f3b8c6d2d4');             AddTeo('e2e4c7c5g1f3e7e6d2d4');         AddTeo('e2e4c7c5b1c3');\n  AddTeo('e2e4e7e5g1f3b8c6f1b5');             AddTeo('e2e4e7e5g1f3b8c6f1b5a7a6b5a4g8f6'); AddTeo('e2e4e7e5g1f3b8c6f1b5a7a6b5c6'); AddTeo('e2e4e7e5g1f3b8c6f1b5g8f6e1g1');\n  AddTeo('e2e4e7e5g1f3b8c6f1b5f7f5');         AddTeo('e2e4e7e5g1f3b8c6f1b5d7d6');         AddTeo('e2e4e7e5g1f3b8c6f1c4f8c5');     AddTeo('e2e4e7e5g1f3b8c6f1c4g8f6');\n  AddTeo('e2e4e7e5g1f3g8f6f3e5d7d6');         AddTeo('e2e4e7e5g1f3g8f6b1c3');             AddTeo('e2e4e7e5g1f3g8f6d2d4');         AddTeo('e2e4e7e5b1c3');\n  AddTeo('e2e4e7e5f2f4');                     AddTeo('e2e4e7e5d2d4');                     AddTeo('e2e4e7e5f1c4');                 AddTeo('e2e4e7e6d2d4d7d5b1c3g8f6');\n  AddTeo('e2e4e7e6d2d4d7d5b1c3f8b4');         AddTeo('e2e4e7e6d2d4d7d5b1c3d5e4');         AddTeo('e2e4e7e6d2d4d7d5b1d2');         AddTeo('e2e4e7e6d2d4d7d5e4e5');\n  AddTeo('e2e4e7e6d2d4d7d5e4d5');             AddTeo('e2e4e7e6g1f3');                     AddTeo('e2e4e7e6b1c3');                 AddTeo('e2e4e7e6d2d3');\n  AddTeo('e2e4c7c6d2d4d7d5b1c3');             AddTeo('e2e4c7c6d2d4d7d5e4e5');             AddTeo('e2e4c7c6d2d4d7d5e4d5');         AddTeo('e2e4c7c6g1f3');\n  AddTeo('e2e4c7c6b1c3');                     AddTeo('e2e4d7d5e4d5d8d5b1c3d5a5');         AddTeo('e2e4d7d5e4d5d8d5b1c3d5d8');     AddTeo('e2e4d7d5e4d5d8d5b1c3d5d6');\n  AddTeo('e2e4d7d5e4d5g8f6');                 AddTeo('e2e4d7d5b1c3');                     AddTeo('e2e4d7d6d2d4g8f6b1c3');         AddTeo('e2e4d7d6d2d4g7g6');\n  AddTeo('e2e4d7d6d2d4c7c6');                 AddTeo('e2e4d7d6g1f3');                     AddTeo('e2e4d7d6b1c3');                 AddTeo('e2e4g7g6d2d4f8g7b1c3');\n  AddTeo('e2e4g7g6d2d4f8g7g1f3');             AddTeo('e2e4g7g6d2d4f8g7c2c4');             AddTeo('e2e4g7g6b1c3');                 AddTeo('e2e4g7g6g1f3');\n  AddTeo('e2e4g8f6e4e5f6d4d2d4');             AddTeo('e2e4g8f6e4e5f6d5c2c4');             AddTeo('e2e4g8f6b1c3');                 AddTeo('e2e4b8c6d2d4');\n  AddTeo('e2e4b8c6g1f3');                     AddTeo('d2d4g8f6c2c4e7e6b1c3f8b4e2e3');     AddTeo('d2d4g8f6c2c4e7e6b1c3f8b4d1c2'); AddTeo('d2d4g8f6c2c4e7e6b1c3d7d5');\n  AddTeo('d2d4g8f6c2c4e7e6g1f3b7b6');         AddTeo('d2d4g8f6c2c4e7e6g1f3d7d5');         AddTeo('d2d4g8f6c2c4e7e6g1f3f8b4');     AddTeo('d2d4g8f6c2c4e7e6g2g3');\n  AddTeo('d2d4g8f6c2c4g7g6b1c3f8g7e2e4d7d6'); AddTeo('d2d4g8f6c2c4g7g6b1c3f8g7e2e4e8g8'); AddTeo('d2d4g8f6c2c4g7g6b1c3d7d5');     AddTeo('d2d4g8f6c2c4g7g6g1f3');\n  AddTeo('d2d4g8f6c2c4g7g6g2g3');             AddTeo('d2d4g8f6c2c4g7g6f2f3');             AddTeo('d2d4g8f6c2c4c7c5');             AddTeo('d2d4g8f6c2c4e7e5');\n  AddTeo('d2d4g8f6c2c4d7d6');                 AddTeo('d2d4g8f6c2c4d7d5');                 AddTeo('d2d4g8f6g1f3g7g6c2c4');         AddTeo('d2d4g8f6g1f3g7g6g2g3');\n  AddTeo('d2d4g8f6g1f3g7g6c1g5');             AddTeo('d2d4g8f6g1f3g7g6c1f4');             AddTeo('d2d4g8f6g1f3e7e6c2c4');         AddTeo('d2d4g8f6g1f3e7e6c1g5');\n  AddTeo('d2d4g8f6g1f3e7e6e2e3');             AddTeo('d2d4g8f6g1f3e7e6g2g3');             AddTeo('d2d4g8f6g1f3d7d5');             AddTeo('d2d4g8f6g1f3c7c5');\n  AddTeo('d2d4g8f6c1g5f6e4');                 AddTeo('d2d4g8f6c1g5e7e6');                 AddTeo('d2d4g8f6e2e3');                 AddTeo('d2d4g8f6b1c3');\n  AddTeo('d2d4d7d5c2c4c7c6g1f3g8f6b1c3e7e6'); AddTeo('d2d4d7d5c2c4c7c6g1f3g8f6b1c3d5c4'); AddTeo('d2d4d7d5c2c4c7c6g1f3g8f6e2e3'); AddTeo('d2d4d7d5c2c4c7c6g1f3e7e6');\n  AddTeo('d2d4d7d5c2c4c7c6b1c3');             AddTeo('d2d4d7d5c2c4c7c6c4d5');             AddTeo('d2d4d7d5c2c4e7e6');             AddTeo('d2d4d7d5c2c4d5c4');\n  AddTeo('d2d4d7d5g1f3g8f6c2c4e7e6');         AddTeo('d2d4d7d5g1f3g8f6c2c4c7c6');         AddTeo('d2d4d7d5g1f3g8f6c2c4d5c4');     AddTeo('d2d4d7d5g1f3g8f6e2e3');\n  AddTeo('d2d4d7d5g1f3g8f6c1f4');             AddTeo('d2d4d7d5g1f3g8f6c1g5');             AddTeo('d2d4d7d5g1f3c7c6');             AddTeo('d2d4d7d5g1f3e7e6');\n  AddTeo('d2d4d7d5e2e3');                     AddTeo('d2d4d7d5c1g5');                     AddTeo('d2d4d7d5b1c3');                 AddTeo('d2d4d7d5c1f4');\n  AddTeo('d2d4d7d5c2c3');                     AddTeo('d2d4d7d5e2e4');                     AddTeo('d2d4e7e6c2c4d7d5');             AddTeo('d2d4e7e6c2c4g8f6');\n  AddTeo('d2d4e7e6c2c4f7f5');                 AddTeo('d2d4e7e6g1f3');                     AddTeo('d2d4e7e6e2e4');                 AddTeo('d2d4c7c5d4d5g8f6');\n  AddTeo('d2d4c7c5d4d5d7d6');                 AddTeo('d2d4c7c5d4d5e7e5');                 AddTeo('d2d4c7c5g1f3');                 AddTeo('d2d4d7d6c2c4');\n  AddTeo('d2d4d7d6g1f3');                     AddTeo('d2d4d7d6e2e4');                     AddTeo('d2d4g7g6');                     AddTeo('d2d4g7g6c2c4');\n  AddTeo('d2d4g7g6g1f3');                     AddTeo('d2d4g7g6e2e4');                     AddTeo('d2d4c7c6c2c4');                 AddTeo('d2d4c7c6g1f3');\n  AddTeo('d2d4c7c6e2e4');                     AddTeo('d2d4f7f5g1f3');                     AddTeo('d2d4f7f5c2c4');                 AddTeo('d2d4f7f5g2g3');\n  AddTeo('d2d4f7f5c1g5');                     AddTeo('d2d4e7e5');                         AddTeo('d2d4b8c6');                     AddTeo('d2d4b7b6');\n  AddTeo('g1f3g8f6c2c4');                     AddTeo('g1f3g8f6g2g3');                     AddTeo('g1f3g8f6d2d4');                 AddTeo('g1f3d7d5d2d4');\n  AddTeo('g1f3d7d5g2g3');                     AddTeo('g1f3d7d5c2c4');                     AddTeo('g1f3c7c5');                     AddTeo('g1f3g7g6');\n  AddTeo('g1f3d7d6');                         AddTeo('g1f3e7e6');                         AddTeo('g1f3c7c6');                     AddTeo('g1f3b8c6');\n  AddTeo('c2c4g8f6b1c3');                     AddTeo('c2c4g8f6g2g3');                     AddTeo('c2c4g8f6d2d4');                 AddTeo('c2c4g8f6g1f3');\n  AddTeo('c2c4e7e5b1c3');                     AddTeo('c2c4e7e5g2g3');                     AddTeo('c2c4e7e6');                     AddTeo('c2c4c7c5');\n  AddTeo('c2c4c7c6');                         AddTeo('c2c4g7g6');                         AddTeo('c2c4d7d6');                     AddTeo('c2c4d7d5');\n  AddTeo('c2c4f7f5');                         AddTeo('g2g3d7d5f1g2c7c6');                 AddTeo('g2g3d7d5f1g2g8f6');             AddTeo('g2g3g8f6');\n  AddTeo('g2g3g7g6');                         AddTeo('g2g3e7e5');                         AddTeo('g2g3c7c6');                     AddTeo('g2g3c7c5');\n  AddTeo('b1c3d7d5e2e4');                     AddTeo('b1c3d7d5g1f3');                     AddTeo('b1c3g8f6');                     AddTeo('b1c3c7c5');\n  AddTeo('e2e3d7d5');                         AddTeo('e2e3e7e5');                         AddTeo('e2e3g8f6');                     AddTeo('e2e3c7c5');\n  AddTeo('e2e3g7g6');                         AddTeo('b2b3e7e5');                         AddTeo('b2b3d7d5');                     AddTeo('b2b3g8f6');\n  AddTeo('f2f4d7d5');                         AddTeo('f2f4e7e5');\n END IF;\n WRT('X='||TeoMaxTrk||spc||Teo.last||' moves='||TeoMoves);\n MaxTeori:=0;\nEND InitTeo;\n\nPROCEDURE InitRetn IS\n  --allocates and initiates the movetable array. Flyttet fra BrainX\nBEGIN\n--\n  retn.extend(58);--ARRAY[bP..wR] pl/sql rxOff = -65 CHR()\n  FOR n in 1..58 LOOP\n      retn(n) := retnTypeY();\n      retn(n).extend(63);--ARRAY[-31..31] pl/sql ryOff = 32\n  END LOOP;\n  --\n  --initiate movetable\n  retn(rxOff+ wR) (ryOff+ MaxDistance) := 8;--white rook\n  retn(rxOff+ wR) (ryOff+   0):=-10;\n  retn(rxOff+ wR) (ryOff+ -10):= -1;\n  retn(rxOff+ wR) (ryOff+  -1):=  1;\n  retn(rxOff+ wR) (ryOff+   1):= 10;\n  retn(rxOff+ wR) (ryOff+  10):=  0;\n\n  retn(rxOff+ bR):=retn(rxOff+ wR);-- black = white rook\n\n  retn(rxOff+ wC) (ryOff+ MaxDistance):=8;--white rook castling possible\n  retn(rxOff+ wC) (ryOff+   0):= 10;\n  retn(rxOff+ wC) (ryOff+  10):= -1;\n  retn(rxOff+ wC) (ryOff+  -1):=  1;\n  retn(rxOff+ wC) (ryOff+   1):=  0;\n\n  retn(rxOff+ bC) (ryOff+ MaxDistance):=8;--black rook castling possible\n  retn(rxOff+ bC) (ryOff+   0):=-10;\n  retn(rxOff+ bC) (ryOff+ -10):= -1;\n  retn(rxOff+ bC) (ryOff+  -1):=  1;\n  retn(rxOff+ bC) (ryOff+   1):=  0;\n\n  retn(rxOff+ wN) (ryOff+ MaxDistance):=1; --white knight\n  retn(rxOff+ wN) (ryOff+   0):=-21;\n  retn(rxOff+ wN) (ryOff+ -21):=-19;\n  retn(rxOff+ wN) (ryOff+ -19):=-12;\n  retn(rxOff+ wN) (ryOff+ -12):= -8;\n  retn(rxOff+ wN) (ryOff+  -8):=  8;\n  retn(rxOff+ wN) (ryOff+   8):= 12;\n  retn(rxOff+ wN) (ryOff+  12):= 19;\n  retn(rxOff+ wN) (ryOff+  19):= 21;\n  retn(rxOff+ wN) (ryOff+  21):=  0;\n  retn(rxOff+ bN):=retn(rxOff+ wN);--black = white knight\n\n  retn(rxOff+ wB) (ryOff+ MaxDistance):=8;--white bishop\n  retn(rxOff+ wB) (ryOff+   0):=-11;\n  retn(rxOff+ wB) (ryOff+ -11):= -9;\n  retn(rxOff+ wB) (ryOff+  -9):=  9;\n  retn(rxOff+ wB) (ryOff+   9):= 11;\n  retn(rxOff+ wB) (ryOff+  11):=  0;\n  retn(rxOff+ bB):=retn(rxOff+ wB);--black = white bishop\n\n  retn(rxOff+ wQ) (ryOff+ MaxDistance):=8;--white queen\n  retn(rxOff+ wQ) (ryOff+   0):=-11;\n  retn(rxOff+ wQ) (ryOff+ -11):=-10;\n  retn(rxOff+ wQ) (ryOff+ -10):= -9;\n  retn(rxOff+ wQ) (ryOff+  -9):= -1;\n  retn(rxOff+ wQ) (ryOff+  -1):=  1;\n  retn(rxOff+ wQ) (ryOff+   1):=  9;\n  retn(rxOff+ wQ) (ryOff+   9):= 10;\n  retn(rxOff+ wQ) (ryOff+  10):= 11;\n  retn(rxOff+ wQ) (ryOff+  11):=  0;\n  retn(rxOff+ bQ):=retn(rxOff+ wQ);--black = white queen\n\n  retn(rxOff+ wM) (ryOff+ MaxDistance):=1;-- white king castling possible\n  retn(rxOff+ wM) (ryOff+   0):= -2;\n  retn(rxOff+ wM) (ryOff+  -2):= -1;\n  retn(rxOff+ wM) (ryOff+  -1):=  1;\n  retn(rxOff+ wM) (ryOff+   1):=  2;\n  retn(rxOff+ wM) (ryOff+   2):=  9;\n  retn(rxOff+ wM) (ryOff+   9):= 10;\n  retn(rxOff+ wM) (ryOff+  10):= 11;\n  retn(rxOff+ wM) (ryOff+  11):=  0;\n  retn(rxOff+ bM) (ryOff+ MaxDistance):=1;-- black king castling possible\n  retn(rxOff+ bM) (ryOff+   0):= -2;\n  retn(rxOff+ bM) (ryOff+  -2):= -1;\n  retn(rxOff+ bM) (ryOff+  -1):=  1;\n  retn(rxOff+ bM) (ryOff+   1):=  2;\n  retn(rxOff+ bM) (ryOff+   2):=-11;\n  retn(rxOff+ bM) (ryOff+ -11):=-10;\n  retn(rxOff+ bM) (ryOff+ -10):= -9;\n  retn(rxOff+ bM) (ryOff+  -9):=  0;\n\n  retn(rxOff+ wK) (ryOff+ MaxDistance):=1;-- white king\n  retn(rxOff+ wK) (ryOff+   0):=-11;\n  retn(rxOff+ wK) (ryOff+ -11):=-10;\n  retn(rxOff+ wK) (ryOff+ -10):= -9;\n  retn(rxOff+ wK) (ryOff+  -9):= -1;\n  retn(rxOff+ wK) (ryOff+  -1):=  1;\n  retn(rxOff+ wK) (ryOff+   1):=  9;\n  retn(rxOff+ wK) (ryOff+   9):= 10;\n  retn(rxOff+ wK) (ryOff+  10):= 11;\n  retn(rxOff+ wK) (ryOff+  11):=  0;\n  retn(rxOff+ bK):=retn(rxOff+ wK);-- black = white king\n\n  retn(rxOff+ wP) (ryOff+ MaxDistance):=1;-- white pawn\n  retn(rxOff+ wP) (ryOff+   0):=  9;\n  retn(rxOff+ wP) (ryOff+   9):= 10;\n  retn(rxOff+ wP) (ryOff+  10):= 11;\n  retn(rxOff+ wP) (ryOff+  11):= 20;\n  retn(rxOff+ wP) (ryOff+  20):=-11;\n  retn(rxOff+ wP) (ryOff+ -11):=-10;-- -11..-9 promote to rook (til-20) \n  retn(rxOff+ wP) (ryOff+ -10):= -9;\n  retn(rxOff+ wP) (ryOff+  -9):=-21;\n  retn(rxOff+ wP) (ryOff+ -21):=-20;-- -21..-6 promote to knight (til-30) \n  retn(rxOff+ wP) (ryOff+ -20):=-19;\n  retn(rxOff+ wP) (ryOff+ -19):=-31;\n  retn(rxOff+ wP) (ryOff+ -31):=-30;-- -7..-9 promote to bishop (til-40) \n  retn(rxOff+ wP) (ryOff+ -30):=-29;\n  retn(rxOff+ wP) (ryOff+ -29):=  0;\n  retn(rxOff+ wE):=retn(rxOff+ wP);-- white enpassant pawn= white pawn\n  retn(rxOff+ wE) (ryOff+ 11) :=  0;\n  retn(rxOff+ bP) (ryOff+ MaxDistance):=1;-- black pawn\n  retn(rxOff+ bP) (ryOff+   0):= -9;\n  retn(rxOff+ bP) (ryOff+  -9):=-10;\n  retn(rxOff+ bP) (ryOff+ -10):=-11;\n  retn(rxOff+ bP) (ryOff+ -11):=-20;\n  retn(rxOff+ bP) (ryOff+ -20):= 11;\n  retn(rxOff+ bP) (ryOff+  11):= 10;--  11..9 promote to rook (til+20) \n  retn(rxOff+ bP) (ryOff+  10):=  9;\n  retn(rxOff+ bP) (ryOff+   9):= 21;\n  retn(rxOff+ bP) (ryOff+  21):= 20;-- 21..19 promote to knight (til+30) \n  retn(rxOff+ bP) (ryOff+  20):= 19;\n  retn(rxOff+ bP) (ryOff+  19):= 31;\n  retn(rxOff+ bP) (ryOff+  31):= 30;-- 31..29 promote to bishop (til+40) \n  retn(rxOff+ bP) (ryOff+  30):= 29;\n  retn(rxOff+ bP) (ryOff+  29):=  0;\n  retn(rxOff+ bE):=retn(rxOff+ bP);-- black enpassant pawn= black pawn\n  retn(rxOff+ bE) (ryOff+ -11):=  0;\nEND InitRetn; \n  \n  \n\nPROCEDURE Initialize IS\nBEGIN\n  IF not FirstW THEN\n    FirstW:=TRUE;\n    PL_PIG_CHESS_ENGINE_EVAL.INITIALIZE;\n    --\n    --\n    repete.extend(2); -- (FALSE..TRUE) now 1=FALSE, 2=TRUE \n    FOR n in 1..2 LOOP\n      repete(n) := RepeteYtype();\n      repete(n).extend(HisMax); --20\n    END LOOP;    \n    --\n    InitRetn;\n    InitTeo;\n    InitValueCalc;\n    --WRT('Initialize SB');\n  ELSE\n    NULL;\n    --WRT('Initialize SB SKIP');\n  END IF;\nEND Initialize;\nEND;\n/",
      "dependencies": []
    },
    {
      "package_name": "PL_PIG_CHESS_INTERFACE",
      "routines": [
        {
          "type": "PROCEDURE",
          "name": "NEW_GAME",
          "parameters": "\n  White INTEGER  DEFAULT 2,                -- 0=human, 2=low,  4=medium, 6=high (engine strength/timeusage",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "DO_MOVE",
          "parameters": "fromto VARCHAR2",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "DO_BOTMOVE",
          "parameters": "OverruleLevel SIMPLE_INTEGER DEFAULT 0",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "DO_BOTGAME",
          "parameters": "maxmoves SIMPLE_INTEGER DEFAULT 200",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "SET_White",
          "parameters": "White INTEGER  DEFAULT 0",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "SET_Black",
          "parameters": "Black INTEGER  DEFAULT 0",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "TAKEBACK_MOVE",
          "parameters": "",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "TAKEBACK_MOVES",
          "parameters": "",
          "return_type": null,
          "category": "move_generation"
        },
        {
          "type": "PROCEDURE",
          "name": "test_BKtest",
          "parameters": "       lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT  24",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_MSquickTest",
          "parameters": "  lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT  24",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_THmyPosTest",
          "parameters": "  lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT  16",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_SLendgameTest",
          "parameters": "lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT  20",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_CCRTest",
          "parameters": "      lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT  25",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_ColditzTest",
          "parameters": "  lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT  30",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_BBCTest",
          "parameters": "      lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT  42",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_ReinfeldTest",
          "parameters": " lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 300",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_LCTIITest",
          "parameters": "    lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT  35",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_SBDTest",
          "parameters": "      lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 134",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_PIG",
          "parameters": "          lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT   4",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test_STSTest",
          "parameters": "suite NUMBER, lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 100",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test1",
          "parameters": "",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "test2",
          "parameters": "",
          "return_type": null,
          "category": "general"
        }
      ],
      "content": "DROP PACKAGE PL_PIG_CHESS_INTERFACE;\n\nCREATE OR REPLACE PACKAGE PL_PIG_CHESS_INTERFACE AS\n--\n-- PL_PIG_CHESS_INTERFACE v 0.92\n--\n-- Interface for play with PL_PIG_CHESS_ENGINE using DBMS_OUTPUT\n--\n--\n-- EXAMPLES (DBMS_OUTPUT must be active):\n--\n-- Example 1, play black against engine (low level):\n-- 1.       BEGIN NEW_GAME; END;\n-- 2..n     BEGIN DO_MOVE('e7e5'); END;\n--\n-- Example 2, play white against engine (high level):\n-- 1.       BEGIN NEW_GAME(0,6); END;\n-- 2..n     BEGIN DO_MOVE('e2e4'); END;\n--\n-- Example 3, play engine (medium level) manually against engine (low level):\n-- 1.       BEGIN NEW_GAME(4,2); END;\n-- 2..n     BEGIN DO_BOTMOVE; END;\n--\n-- Example 4, play engine (medium level) against engine (low level):\n-- 1.       BEGIN NEW_GAME(4,2); END;\n-- 2        BEGIN DO_BOTGAME; END;\n--\n-- Example 5, Let engine find the best move in a given FEN position (high level):\n-- 1.       BEGIN NEW_GAME(4,4,'7k/p7/1R5K/6r1/6p1/6P1/8/8 w - - 0 1'); END;\n--\n-- Example 6, run a test-suite (24 positions) on low level and see the result\n-- 1.       BEGIN test_BKtest(2); END;\n--\n-- Example 7, run a test-suite (30 positions) on medium level and see the result\n-- 1.       BEGIN test_ColditzTest(4); END;\n\nPROCEDURE NEW_GAME(\n  White INTEGER  DEFAULT 2,                -- 0=human, 2=low,  4=medium, 6=high (engine strength/timeusage)\n  Black INTEGER  DEFAULT 0,                -- 0=human, 2=low,  4=medium, 6=high (engine strength/timeusage)\n  STARTPOSITION      VARCHAR2 DEFAULT NULL,-- NULL= chess startposition 'RSLDMLSRBBBBBBBB                                bbbbbbbbrsldmlsrH'\n  p_TheoryMode       INTEGER  DEFAULT 0,   -- 0 = no theory, \n                                           -- 1 = internal theory (random play 2 ply, 16 lines)\n                                           -- 2 = internal opening book (random play of about 3000 opening-lines)   \n  p_InteractionMode  INTEGER  DEFAULT 1    -- 0 = dbms_output (moves only)\n                                           -- 1 = dbms_output (with positions)\n                                           -- 2 = table (NOT IMPLEMENTED!)\n                                           -- 3 = tables(asyncronous) (NOT IMPLEMENTED!)\n  );\n  \nPROCEDURE DO_MOVE(fromto VARCHAR2); -- move in the form 'e2e4' or 'g1f3' as black 'e7e5' or 'g8f6'\n\nPROCEDURE DO_BOTMOVE(OverruleLevel SIMPLE_INTEGER DEFAULT 0);\n\nPROCEDURE DO_BOTGAME(maxmoves SIMPLE_INTEGER DEFAULT 200);\n\nPROCEDURE SET_White(White INTEGER  DEFAULT 0); -- alter engine/player-selection for White\n\nPROCEDURE SET_Black(Black INTEGER  DEFAULT 0); -- alter engine/player-selection for Black\n\nPROCEDURE TAKEBACK_MOVE;--(not yet implemented!) takes back the last move (if engine, it will move again, possibly the same move)\n\nPROCEDURE TAKEBACK_MOVES;--(not yet implemented!) takes back the last two moves (Player can retry another move)\n\n---- for testing:\n\n-- suites of test-positions:\n\n  -- ARRAY          POSITIONS   TEST-SUITE IN EPD FORMAT:\n  -------------------------------------------------------------------------------------\n  -- bkTest\t            24      The B-K test (henceforth BKT) Bratko-Kopec Testpositions\n  -- MSquickTest\t    24      The Quicktest by Michael Scheidl \n  -- THmyPosTest\t    16      MY POSITIONAL TEST SUITE by Tony Hedlund\n  -- SLendgameTest      20      Endgame testsuite Sune Larsson 2006 / John Nunn\t\n  -- CCRTest\t        25      One Hour Test by Larry Kaufman, published 1994 (Kaufman Test)\n  -- ColditzTest\t    30      Colditz test suite by Ferdinand Mosca, CCC, December 30, 2016\n  -- BBCTest\t        42      Big Book Of Combinations\n  -- ReinfeldTest      300      Reinfeld's (1945) 300 (tactical) positions; \n  -- LCTIITest\t        35      LCT II (Louguet Chess Test II by Frdric Louguet in 1994) \n  -- SBDTest\t       134      Silent but Deadly (sbd)\n  -- STSTest\t      1500      Strategic Test Suite, (STS) 15 suites x 100 positions:\n  --   1  Undermining \n  --   2  Open Files and Diagonals, Rook on Open File\n  --   3  Knight Outposts, Outposts\n  --   4  Square Vacancy, Square Control\n  --   5  Bishop vs Knight\n  --   6  Re-Capturing, Captures\n  --   7  Offer of Simplification, Material\n  --   8  Advancement of f/g/h pawns, Pawn Storm\n  --   9  Advancement of a/b/c Pawns, Pawn Storm\n  --  10  Simplification\n  --  11  Activity of the King, King Safety vs King Centra\t\n  --  12  Center Control\n  --  13  Pawn Play in the Center, Pawn Center\n  --  14  Queens and Rooks 7th Rank, Rook on Seventh\t\t\n  --  15  Avoid Pointless Exchange\n\nPROCEDURE test_BKtest(       lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT  24);\n\nPROCEDURE test_MSquickTest(  lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT  24);\n\nPROCEDURE test_THmyPosTest(  lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT  16);\n\nPROCEDURE test_SLendgameTest(lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT  20); \n\nPROCEDURE test_CCRTest(      lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT  25);\n\nPROCEDURE test_ColditzTest(  lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT  30);\n\nPROCEDURE test_BBCTest(      lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT  42);\n\nPROCEDURE test_ReinfeldTest( lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 300);\n\nPROCEDURE test_LCTIITest(    lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT  35);\n\nPROCEDURE test_SBDTest(      lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 134);\n\nPROCEDURE test_PIG(          lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT   4);\n\nPROCEDURE test_STSTest(suite NUMBER, lvl NUMBER DEFAULT 2, poslow INTEGER DEFAULT 1 , poshigh INTEGER DEFAULT 100);\n\nPROCEDURE test1;\n\nPROCEDURE test2;\n\nEND;\n/",
      "description": "Chess engine interface and API layer",
      "type": "package_spec_and_body",
      "dependencies": [
        "pl_pig_chess_data",
        "pl_pig_chess_engine",
        "pl_pig_chess_engine_eval"
      ],
      "owner": "Chess Engine Team",
      "version": "1.0",
      "last_modified": "2024-03-15",
      "purpose": "Provides external interface for interacting with the chess engine"
    },
    {
      "package_name": "PL_PIG_CHESS_ENGINE_EVAL",
      "routines": [
        {
          "type": "FUNCTION",
          "name": "pdN",
          "parameters": "brik_n SIMPLE_INTEGER, felt SIMPLE_INTEGER",
          "return_type": "RETURN SIMPLE_INTEGER",
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "pdX",
          "parameters": "brik CHAR,           felt SIMPLE_INTEGER",
          "return_type": "RETURN SIMPLE_INTEGER",
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "Initialize",
          "parameters": "",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "PreProcess",
          "parameters": "",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "PROCEDURE",
          "name": "PreProcessor",
          "parameters": "stilling STILLINGTYPE",
          "return_type": null,
          "category": "general"
        },
        {
          "type": "FUNCTION",
          "name": "Eval",
          "parameters": "stilling STILLINGTYPE, Activity SIMPLE_INTEGER,\n              Black BOOLEAN, alpha SIMPLE_INTEGER, beta SIMPLE_INTEGER",
          "return_type": "RETURN SIMPLE_INTEGER",
          "category": "evaluation"
        }
      ],
      "content": "DROP PACKAGE PL_PIG_CHESS_ENGINE_EVAL;\n\nCREATE OR REPLACE PACKAGE PL_PIG_CHESS_ENGINE_EVAL AS\n--\n--\n\n-- LICENSE\n--\n-- PL_PIG_CHESS_ENGINE v 0.92,                  (c) Egon Von Bech Madsen, Denmark (ema@adm.ku.dk) \n--\n-- This software is Diceware. Diceware is defined as Freware with one restriction:\n--\n--   For non-commercial use:\n--      roll one dice until you get 6, then take a picture. That picture is your 10 year free license.\n--\n--   For commercial use of small or medium sized companies (Yearly revenue less than US$ 60 billion), like Oracle:\n--      roll two dices until you get 6 6, then take a picture. That picture is your 10 year free license.\n--\n--   For commercial use of large sized companies (Yearly revenue more than US$ 60 billion), like Microsoft:\n--      roll three dices until you get 6 6 6, then take a picture. That picture is your 10 year free license.\n--\n-- It is allowed to modify and share the code as long as this LICENSE-text is unmodified.\n--\n-- ****************************************************************************************\n-- * Disclaimer (use at your own risk):                                               \n-- * Any use of this software is strictly at your own risk, and I will not be liable for \n-- * any losses and damages in connection with the use of this software.\n-- ****************************************************************************************\n-- LICENSE <end>\n\n-- PL_PIG_CHESS_ENGINE is a Chess Engine written in Oracle PL/SQL.\n--\n-- HISTORY\n-- Migrated from the Engine of PIGbase4 v2.8, coded with M2Amiga Modula-2 v4.2 \n--\n-- The Engine is 3 packages:\n-- PL_PIG_CHESS_ENGINE\n-- PL_PIG_CHESS_ENGINE_EVAL\n-- PL_PIG_CHESS_DATA\n--\n-- Also included is a package:\n-- PL_PIG_CHESS_INTERFACE \n-- making it possible to play with the Engine and run some test-suites using DBMS_OUTPUT.\n\n-- TECHNICAL (PL/SQL)\n-- PL/SQL is a quite restricted and slow language, not the perfect choice for a Chess Engine.\n-- If You want top strength, don't use PIG-Chess, but install a Stockfish Engine at Your HOST OS.\n--\n-- Fair Performance is reached by intensive use of VARRAYS, SIMPLE_INTEGER and INLINE'able SET operators. \n-- And by NOT using SQL features. The many initiations of arrays happens only one time pr session/game.\n--\n-- TECHNICAL (CHESS)\n-- Opening book\n-- Static evaluation\n-- quiescence deepening minimax algorithm with alpha/beta cut-off and sort for better pruning\n-- Q-search (deeper selective search on killer-moves like check)\n-- Leaf evaluation\n-- Single CPU only\n-- Supports 5 levels (from few seconds to several minutes pr move).\n-- Rating: up to 1600\n-- FEN and EPD is supported.\n--\n-- INSTALLATION\n-- Install the 4 packages on a Oracle database:\n-- 1. PL_PIG_CHESS_DATA\n-- 2. PL_PIG_CHESS_ENGINE_EVAL\n-- 3. PL_PIG_CHESS_ENGINE\n-- 4. PL_PIG_CHESS_INTERFACE\n--\n-- USE:\n-- 1. Use SQL*PLUS or Toad/SQL-Developer with DBMS_OUTPUT activated\n-- 2. Use examples seen in PL_PIG_CHESS_INTERFACE\n--\n-- OR:\n-- Make your own graphical (APEX?) interface...\n\n\n\n\n--\n--To get best performance (depending of database and hardware, up to double speed):\n--alter session set plsql_optimize_level =3; \n--alter package PL_PIG_CHESS_ENGINE_EVAL compile plsql_code_type=native plsql_debug=FALSE;\n--\n--fra Base:\n  HvisTur   CONSTANT SIMPLE_INTEGER  := 110; /* Stilling[HvisTur] indicates if H (white) or S (Black) to move */\n  MaxExtras CONSTANT SIMPLE_INTEGER  := 22; /* How many Extra PGN infos max (max 34) */\nTYPE STILLINGTYPE is ARRAY(121) OF SIMPLE_INTEGER; /* in PL/SQL is offset 11, logical: -10..HvisTur: A1-H8 = 11-88, HvidSort='H' | 'S' CAP=BLACK */\n\n--logical structure for a position :\n--    RECORD\n--      stilling :ARRAY(-1..11,-1..11] OF BRIK;\n--      hvistur  :BOOLEAN;\n--    END;\n--  where 1,1 -> 8,8  A1 -> H8 , so 11-88 is A1-H1\n--  surrounded with a double edge ('.'). \n--\n--------------------------------\nSkakBrainEvalDefCompilation CONSTANT varchar2(8) := '17';\n-- naming according to danish names:\n  ValueT  CONSTANT SIMPLE_INTEGER  := 475; --rook: danish: T\u00e5rn\n  ValueR  CONSTANT SIMPLE_INTEGER  := 480; --rook (castling possible) danish: t\u00e5rn (Rokade)\n  ValueM  CONSTANT SIMPLE_INTEGER  :=9999; --king (castling possible) danish: Konge (Majest\u00e6t)\n  ValueK  CONSTANT SIMPLE_INTEGER  :=9980; --king danish: Konge\n  ValueD  CONSTANT SIMPLE_INTEGER  := 880; --Queen danish: Dronning\n  ValueL  CONSTANT SIMPLE_INTEGER  := 300; --Bishop danish: L\u00f8ber\n  Value_S CONSTANT SIMPLE_INTEGER  := 280; --knight danish: Springer\n  ValueB  CONSTANT SIMPLE_INTEGER  := 100; --pawn danish: Bonde\n  ValueE  CONSTANT SIMPLE_INTEGER  := 100; --pawn (en-passant) danish: bonde (En-passant) \n-- special: the pieces will internally change names to implicit register castling and en-passant.\n--               If capitalized it is a black piece else a white piece.\n--               The advantage is simpler move-generation (like if rook og king is never moved \n--               then no need to check backwards moves, but king can go two to sides).\n--               As bonus, a  position will be exact without need for ekstra castling/enpassant infos.\n\n  pdSz  CONSTANT SIMPLE_INTEGER  := 3978;\nTYPE pdType is varray(3978) of SIMPLE_INTEGER;--3978 needed for two-dimensional array ('B'..'t', 11..88)\n-- pl/sql specifics:\n-- arrays index is always 1..n and always needs to allocate members using extend. \n-- PLS_INTEGER is 32 bit integer (signed) \n-- SIMPLE_INTEGER is 32 bit integer with NOT NULL constraint\n-- SIMPLE_INTEGER gives twice the speed if pl/SQL is compiled, not interpreted.\n-- SIMPLE_INTEGER NEEDS to be initialized with value!\n--\n--TYPE ysy IS RECORD (a CHAR, b SIMPLE_INTEGER);\n  Evals SIMPLE_INTEGER := 0;/* for current/last engine call */\n  OpenGame BOOLEAN;\t\t/* calculated by preprocessor \t*/\n  EndGame    BOOLEAN;\t\t/* calculated by preprocessor \t*/\n\n  pd  pdType:= pdType(); --pointer allocates a liste with 0 elements\n                         --pointer allocates a liste with 40 elements:\n  pdw pdType:= pdType(); --pdType(0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0) ;\n  pdb pdType:= pdType(); -- pointer is null\n\n  ToFile   BOOLEAN;\n  Depth    SIMPLE_INTEGER:= 0;\n  matr     SIMPLE_INTEGER:= 0;\n  posi     SIMPLE_INTEGER:= 0;\n  wbonus   SIMPLE_INTEGER:= 0;\n  bbonus   SIMPLE_INTEGER:= 0; \n  /* see Eval here, for testing only */\n  \n  KingAir         BOOLEAN := TRUE; -- safety strategy, make escape-space for king, if risk of mat on first row. Default TRUE\n  defendersWeight SIMPLE_INTEGER := 5;-- default=5     motivate to make hole for king when few 1-line defenders and behind wall of 3 pawns. Only used when KingAir=TRUE.\n  Follow          BOOLEAN := TRUE; -- mating strategy, make king follow opponent king.  Default TRUE\n  PieceClear      BOOLEAN := FALSE;-- Clear some new calcs for king, default FALSE\n  PieceClearEarly BOOLEAN := TRUE;-- Clear some new calcs for king at early point, default TRUE\n  PieceDecr       BOOLEAN := FALSE;-- decrement all positional data with 50, default FALSE\n  PawnOfficer     BOOLEAN := TRUE; -- if in front then prefer exchange of officers, else pawns. default TRUE\n  \nFUNCTION pdN(brik_n SIMPLE_INTEGER, felt SIMPLE_INTEGER) RETURN SIMPLE_INTEGER;\n\nFUNCTION pdX(brik CHAR,           felt SIMPLE_INTEGER) RETURN SIMPLE_INTEGER;\n\nPROCEDURE Initialize;\n/* allocation and initializations, call on startup */\n/* Is called one time for each engine call */\n\nPROCEDURE PreProcess;\n/* sets the pd array to default positional values */\n/* Is called one time for each engine call */\n\nPROCEDURE PreProcessor(stilling STILLINGTYPE);\n/* adjusts the pd-array+OpenGame+EngGame according to the actual position. */\n/* Is called one time for each engine call */\n\nFUNCTION Eval(stilling STILLINGTYPE, Activity SIMPLE_INTEGER,\n              Black BOOLEAN, alpha SIMPLE_INTEGER, beta SIMPLE_INTEGER) RETURN SIMPLE_INTEGER;\n/* evaluates the actual postion using pd and position. */\n/* Is called thousands of times for each engine call! */\n\nEND;\n/",
      "description": "Chess position evaluation module",
      "type": "package_spec_and_body",
      "dependencies": [
        "pl_pig_chess_data",
        "pl_pig_chess_engine"
      ],
      "owner": "Chess Engine Team",
      "version": "1.0",
      "last_modified": "2024-03-15",
      "purpose": "Evaluates chess positions, calculates material balance, and positional factors"
    }
  ],
  "total_documents": 7,
  "creation_date": "2024-11-18T11:45:11.648044"
}